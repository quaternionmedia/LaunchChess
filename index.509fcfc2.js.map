{"mappings":"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","sources":["<anon>","node_modules/mithril/render/vnode.js","node_modules/mithril/render/trust.js","node_modules/mithril/render/fragment.js","node_modules/mithril/render/hyperscriptVnode.js","node_modules/mithril/promise/polyfill.js","node_modules/mithril/render.js","node_modules/mithril/render/render.js","node_modules/mithril/api/mount-redraw.js","node_modules/mithril/request/request.js","node_modules/mithril/pathname/build.js","node_modules/mithril/querystring/build.js","node_modules/mithril/util/assign.js","node_modules/mithril/util/hasOwn.js","node_modules/mithril/route.js","node_modules/mithril/mount-redraw.js","node_modules/mithril/api/router.js","node_modules/mithril/render/hyperscript.js","node_modules/mithril/promise/promise.js","node_modules/mithril/pathname/parse.js","node_modules/mithril/querystring/parse.js","node_modules/mithril/pathname/compileTemplate.js","node_modules/mithril/util/censor.js","node_modules/mithril/stream/stream.js","node_modules/webmidi/dist/cjs/webmidi.cjs.min.js","node_modules/webmidi/node_modules/djipevents/src/djipevents.js","node_modules/webmidi/src/Enumerations.js","node_modules/webmidi/src/Note.js","node_modules/webmidi/src/Utilities.js","node_modules/webmidi/src/OutputChannel.js","node_modules/webmidi/src/Output.js","node_modules/webmidi/src/Forwarder.js","node_modules/webmidi/src/InputChannel.js","node_modules/webmidi/src/Message.js","node_modules/webmidi/src/Input.js","node_modules/webmidi/src/WebMidi.js","node_modules/process/browser.js","src/index.js","node_modules/mithril/index.js","node_modules/mithril/hyperscript.js","node_modules/mithril/request.js","src/Menu.js","src/Toolbar.js","node_modules/alertifyjs/build/alertify.js","node_modules/construct-ui/lib/esm/components/switch/index.js","node_modules/tslib/tslib.es6.js","node_modules/construct-ui/lib/esm/_shared/classes.js","node_modules/construct-ui/lib/esm/components/base-control/index.js","node_modules/classnames/index.js","node_modules/@parcel/runtime-js/lib/runtime-16a92c8fc1ad7155.js","src/LaunchGame.js","node_modules/chess.js/dist/esm/chess.js","node_modules/chess.js/src/chess.ts","src/Launchpad.js","src/ChessMaths.js","src/Actions.js","src/utils.js","node_modules/javascript-astar/astar.js","src/User.js","src/Auth.ts","node_modules/@bity/oauth2-auth-code-pkce/index.js","src/ndJsonStream.ts","node_modules/mithril/stream.js","src/ndjson.js","node_modules/can-ndjson-stream/can-ndjson-stream.js","node_modules/can-namespace/can-namespace.js","node_modules/regenerator-runtime/runtime.js","src/config.js","src/Login.js","src/Games.js","node_modules/chessground/dist/chessground.js","node_modules/chessground/src/chessground.ts","node_modules/chessground/dist/api.js","node_modules/chessground/src/api.ts","node_modules/chessground/dist/board.js","node_modules/chessground/src/board.ts","node_modules/chessground/dist/util.js","node_modules/chessground/src/util.ts","node_modules/chessground/dist/types.js","node_modules/chessground/src/types.ts","node_modules/chessground/dist/premove.js","node_modules/chessground/src/premove.ts","node_modules/chessground/dist/fen.js","node_modules/chessground/src/fen.ts","node_modules/chessground/dist/config.js","node_modules/chessground/src/config.ts","node_modules/chessground/dist/anim.js","node_modules/chessground/src/anim.ts","node_modules/chessground/dist/drag.js","node_modules/chessground/src/drag.ts","node_modules/chessground/dist/draw.js","node_modules/chessground/src/draw.ts","node_modules/chessground/dist/explosion.js","node_modules/chessground/src/explosion.ts","node_modules/chessground/dist/state.js","node_modules/chessground/src/state.ts","node_modules/chessground/dist/wrap.js","node_modules/chessground/src/wrap.ts","node_modules/chessground/dist/svg.js","node_modules/chessground/src/svg.ts","node_modules/chessground/dist/events.js","node_modules/chessground/src/events.ts","node_modules/chessground/dist/drop.js","node_modules/chessground/src/drop.ts","node_modules/chessground/dist/render.js","node_modules/chessground/src/render.ts","node_modules/chessground/dist/autoPieces.js","node_modules/chessground/src/autoPieces.ts","node_modules/chessground/dist/sync.js","node_modules/chessground/src/sync.ts","src/Board.js","src/Profile.js","src/Connector.js","node_modules/construct-ui/lib/esm/components/button/index.js","node_modules/construct-ui/lib/esm/components/icon/Icon.js","node_modules/construct-ui/lib/esm/components/icon/generated/IconContents.js","node_modules/construct-ui/lib/esm/components/spinner/index.js","node_modules/construct-ui/lib/esm/_shared/utils.js","src/Color.js","src/Home.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire7a03\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire7a03\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8JOml\", function(module, exports) {\n\"use strict\";\nfunction $65c99708a69e8e0e$var$Vnode(tag, key, attrs, children, text, dom) {\n    return {\n        tag: tag,\n        key: key,\n        attrs: attrs,\n        children: children,\n        text: text,\n        dom: dom,\n        domSize: undefined,\n        state: undefined,\n        events: undefined,\n        instance: undefined\n    };\n}\n$65c99708a69e8e0e$var$Vnode.normalize = function(node) {\n    if (Array.isArray(node)) return $65c99708a69e8e0e$var$Vnode(\"[\", undefined, undefined, $65c99708a69e8e0e$var$Vnode.normalizeChildren(node), undefined, undefined);\n    if (node == null || typeof node === \"boolean\") return null;\n    if (typeof node === \"object\") return node;\n    return $65c99708a69e8e0e$var$Vnode(\"#\", undefined, undefined, String(node), undefined, undefined);\n};\n$65c99708a69e8e0e$var$Vnode.normalizeChildren = function(input) {\n    var children = [];\n    if (input.length) {\n        var isKeyed = input[0] != null && input[0].key != null;\n        // Note: this is a *very* perf-sensitive check.\n        // Fun fact: merging the loop like this is somehow faster than splitting\n        // it, noticeably so.\n        for(var i = 1; i < input.length; i++){\n            if ((input[i] != null && input[i].key != null) !== isKeyed) throw new TypeError(isKeyed && (input[i] != null || typeof input[i] === \"boolean\") ? \"In fragments, vnodes must either all have keys or none have keys. You may wish to consider using an explicit keyed empty fragment, m.fragment({key: ...}), instead of a hole.\" : \"In fragments, vnodes must either all have keys or none have keys.\");\n        }\n        for(var i = 0; i < input.length; i++)children[i] = $65c99708a69e8e0e$var$Vnode.normalize(input[i]);\n    }\n    return children;\n};\nmodule.exports = $65c99708a69e8e0e$var$Vnode;\n\n});\n\nparcelRegister(\"gQsxe\", function(module, exports) {\n\"use strict\";\n\nvar $8JOml = parcelRequire(\"8JOml\");\nmodule.exports = function(html) {\n    if (html == null) html = \"\";\n    return $8JOml(\"<\", undefined, undefined, html, undefined, undefined);\n};\n\n});\n\nparcelRegister(\"pcZwJ\", function(module, exports) {\n\"use strict\";\n\nvar $8JOml = parcelRequire(\"8JOml\");\n\nvar $jPPUy = parcelRequire(\"jPPUy\");\nmodule.exports = function() {\n    var vnode = $jPPUy.apply(0, arguments);\n    vnode.tag = \"[\";\n    vnode.children = $8JOml.normalizeChildren(vnode.children);\n    return vnode;\n};\n\n});\nparcelRegister(\"jPPUy\", function(module, exports) {\n\"use strict\";\n\nvar $8JOml = parcelRequire(\"8JOml\");\n// Call via `hyperscriptVnode.apply(startOffset, arguments)`\n//\n// The reason I do it this way, forwarding the arguments and passing the start\n// offset in `this`, is so I don't have to create a temporary array in a\n// performance-critical path.\n//\n// In native ES6, I'd instead add a final `...args` parameter to the\n// `hyperscript` and `fragment` factories and define this as\n// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But\n// ES5 (what Mithril.js requires thanks to IE support) doesn't give me that luxury,\n// and engines aren't nearly intelligent enough to do either of these:\n//\n// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it's passed to\n//    another function only to be indexed.\n// 2. Elide an `arguments` allocation when it's passed to any function other\n//    than `Function.prototype.apply` or `Reflect.apply`.\n//\n// In ES6, it'd probably look closer to this (I'd need to profile it, though):\n// module.exports = function(attrs, ...children) {\n//     if (attrs == null || typeof attrs === \"object\" && attrs.tag == null && !Array.isArray(attrs)) {\n//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]\n//     } else {\n//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]\n//         attrs = undefined\n//     }\n//\n//     if (attrs == null) attrs = {}\n//     return Vnode(\"\", attrs.key, attrs, children)\n// }\nmodule.exports = function() {\n    var attrs = arguments[this], start = this + 1, children;\n    if (attrs == null) attrs = {};\n    else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n        attrs = {};\n        start = this;\n    }\n    if (arguments.length === start + 1) {\n        children = arguments[start];\n        if (!Array.isArray(children)) children = [\n            children\n        ];\n    } else {\n        children = [];\n        while(start < arguments.length)children.push(arguments[start++]);\n    }\n    return $8JOml(\"\", attrs.key, attrs, children);\n};\n\n});\n\n\nparcelRegister(\"c0EvV\", function(module, exports) {\n\"use strict\";\n/** @constructor */ var $8be4e955ae324471$var$PromisePolyfill = function(executor) {\n    if (!(this instanceof $8be4e955ae324471$var$PromisePolyfill)) throw new Error(\"Promise must be called with 'new'.\");\n    if (typeof executor !== \"function\") throw new TypeError(\"executor must be a function.\");\n    var self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false);\n    var instance = self._instance = {\n        resolvers: resolvers,\n        rejectors: rejectors\n    };\n    var callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout;\n    function handler(list, shouldAbsorb) {\n        return function execute(value) {\n            var then;\n            try {\n                if (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\n                    if (value === self) throw new TypeError(\"Promise can't be resolved with itself.\");\n                    executeOnce(then.bind(value));\n                } else callAsync(function() {\n                    if (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value);\n                    for(var i = 0; i < list.length; i++)list[i](value);\n                    resolvers.length = 0, rejectors.length = 0;\n                    instance.state = shouldAbsorb;\n                    instance.retry = function() {\n                        execute(value);\n                    };\n                });\n            } catch (e) {\n                rejectCurrent(e);\n            }\n        };\n    }\n    function executeOnce(then) {\n        var runs = 0;\n        function run(fn) {\n            return function(value) {\n                if (runs++ > 0) return;\n                fn(value);\n            };\n        }\n        var onerror = run(rejectCurrent);\n        try {\n            then(run(resolveCurrent), onerror);\n        } catch (e) {\n            onerror(e);\n        }\n    }\n    executeOnce(executor);\n};\n$8be4e955ae324471$var$PromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\n    var self = this, instance = self._instance;\n    function handle(callback, list, next, state) {\n        list.push(function(value) {\n            if (typeof callback !== \"function\") next(value);\n            else try {\n                resolveNext(callback(value));\n            } catch (e) {\n                if (rejectNext) rejectNext(e);\n            }\n        });\n        if (typeof instance.retry === \"function\" && state === instance.state) instance.retry();\n    }\n    var resolveNext, rejectNext;\n    var promise = new $8be4e955ae324471$var$PromisePolyfill(function(resolve, reject) {\n        resolveNext = resolve, rejectNext = reject;\n    });\n    handle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false);\n    return promise;\n};\n$8be4e955ae324471$var$PromisePolyfill.prototype.catch = function(onRejection) {\n    return this.then(null, onRejection);\n};\n$8be4e955ae324471$var$PromisePolyfill.prototype.finally = function(callback) {\n    return this.then(function(value) {\n        return $8be4e955ae324471$var$PromisePolyfill.resolve(callback()).then(function() {\n            return value;\n        });\n    }, function(reason) {\n        return $8be4e955ae324471$var$PromisePolyfill.resolve(callback()).then(function() {\n            return $8be4e955ae324471$var$PromisePolyfill.reject(reason);\n        });\n    });\n};\n$8be4e955ae324471$var$PromisePolyfill.resolve = function(value) {\n    if (value instanceof $8be4e955ae324471$var$PromisePolyfill) return value;\n    return new $8be4e955ae324471$var$PromisePolyfill(function(resolve) {\n        resolve(value);\n    });\n};\n$8be4e955ae324471$var$PromisePolyfill.reject = function(value) {\n    return new $8be4e955ae324471$var$PromisePolyfill(function(resolve, reject) {\n        reject(value);\n    });\n};\n$8be4e955ae324471$var$PromisePolyfill.all = function(list) {\n    return new $8be4e955ae324471$var$PromisePolyfill(function(resolve, reject) {\n        var total = list.length, count = 0, values = [];\n        if (list.length === 0) resolve([]);\n        else for(var i = 0; i < list.length; i++)(function(i) {\n            function consume(value) {\n                count++;\n                values[i] = value;\n                if (count === total) resolve(values);\n            }\n            if (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") list[i].then(consume, reject);\n            else consume(list[i]);\n        })(i);\n    });\n};\n$8be4e955ae324471$var$PromisePolyfill.race = function(list) {\n    return new $8be4e955ae324471$var$PromisePolyfill(function(resolve, reject) {\n        for(var i = 0; i < list.length; i++)list[i].then(resolve, reject);\n    });\n};\nmodule.exports = $8be4e955ae324471$var$PromisePolyfill;\n\n});\n\nparcelRegister(\"03gNt\", function(module, exports) {\n\"use strict\";\n\nmodule.exports = (parcelRequire(\"fJQVn\"))(typeof window !== \"undefined\" ? window : null);\n\n});\nparcelRegister(\"fJQVn\", function(module, exports) {\n\"use strict\";\n\nvar $8JOml = parcelRequire(\"8JOml\");\nmodule.exports = function($window) {\n    var $doc = $window && $window.document;\n    var currentRedraw;\n    var nameSpace = {\n        svg: \"http://www.w3.org/2000/svg\",\n        math: \"http://www.w3.org/1998/Math/MathML\"\n    };\n    function getNameSpace(vnode) {\n        return vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag];\n    }\n    //sanity check to discourage people from doing `vnode.state = ...`\n    function checkState(vnode, original) {\n        if (vnode.state !== original) throw new Error(\"'vnode.state' must not be modified.\");\n    }\n    //Note: the hook is passed as the `this` argument to allow proxying the\n    //arguments without requiring a full array allocation to do so. It also\n    //takes advantage of the fact the current `vnode` is the first argument in\n    //all lifecycle methods.\n    function callHook(vnode) {\n        var original = vnode.state;\n        try {\n            return this.apply(original, arguments);\n        } finally{\n            checkState(vnode, original);\n        }\n    }\n    // IE11 (at least) throws an UnspecifiedError when accessing document.activeElement when\n    // inside an iframe. Catch and swallow this error, and heavy-handidly return null.\n    function activeElement() {\n        try {\n            return $doc.activeElement;\n        } catch (e) {\n            return null;\n        }\n    }\n    //create\n    function createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\n        for(var i = start; i < end; i++){\n            var vnode = vnodes[i];\n            if (vnode != null) createNode(parent, vnode, hooks, ns, nextSibling);\n        }\n    }\n    function createNode(parent, vnode, hooks, ns, nextSibling) {\n        var tag = vnode.tag;\n        if (typeof tag === \"string\") {\n            vnode.state = {};\n            if (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks);\n            switch(tag){\n                case \"#\":\n                    createText(parent, vnode, nextSibling);\n                    break;\n                case \"<\":\n                    createHTML(parent, vnode, ns, nextSibling);\n                    break;\n                case \"[\":\n                    createFragment(parent, vnode, hooks, ns, nextSibling);\n                    break;\n                default:\n                    createElement(parent, vnode, hooks, ns, nextSibling);\n            }\n        } else createComponent(parent, vnode, hooks, ns, nextSibling);\n    }\n    function createText(parent, vnode, nextSibling) {\n        vnode.dom = $doc.createTextNode(vnode.children);\n        insertNode(parent, vnode.dom, nextSibling);\n    }\n    var possibleParents = {\n        caption: \"table\",\n        thead: \"table\",\n        tbody: \"table\",\n        tfoot: \"table\",\n        tr: \"tbody\",\n        th: \"tr\",\n        td: \"tr\",\n        colgroup: \"table\",\n        col: \"colgroup\"\n    };\n    function createHTML(parent, vnode, ns, nextSibling) {\n        var match = vnode.children.match(/^\\s*?<(\\w+)/im) || [];\n        // not using the proper parent makes the child element(s) vanish.\n        //     var div = document.createElement(\"div\")\n        //     div.innerHTML = \"<td>i</td><td>j</td>\"\n        //     console.log(div.innerHTML)\n        // --> \"ij\", no <td> in sight.\n        var temp = $doc.createElement(possibleParents[match[1]] || \"div\");\n        if (ns === \"http://www.w3.org/2000/svg\") {\n            temp.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\">' + vnode.children + \"</svg>\";\n            temp = temp.firstChild;\n        } else temp.innerHTML = vnode.children;\n        vnode.dom = temp.firstChild;\n        vnode.domSize = temp.childNodes.length;\n        // Capture nodes to remove, so we don't confuse them.\n        vnode.instance = [];\n        var fragment = $doc.createDocumentFragment();\n        var child;\n        while(child = temp.firstChild){\n            vnode.instance.push(child);\n            fragment.appendChild(child);\n        }\n        insertNode(parent, fragment, nextSibling);\n    }\n    function createFragment(parent, vnode, hooks, ns, nextSibling) {\n        var fragment = $doc.createDocumentFragment();\n        if (vnode.children != null) {\n            var children = vnode.children;\n            createNodes(fragment, children, 0, children.length, hooks, null, ns);\n        }\n        vnode.dom = fragment.firstChild;\n        vnode.domSize = fragment.childNodes.length;\n        insertNode(parent, fragment, nextSibling);\n    }\n    function createElement(parent, vnode, hooks, ns, nextSibling) {\n        var tag = vnode.tag;\n        var attrs = vnode.attrs;\n        var is = attrs && attrs.is;\n        ns = getNameSpace(vnode) || ns;\n        var element = ns ? is ? $doc.createElementNS(ns, tag, {\n            is: is\n        }) : $doc.createElementNS(ns, tag) : is ? $doc.createElement(tag, {\n            is: is\n        }) : $doc.createElement(tag);\n        vnode.dom = element;\n        if (attrs != null) setAttrs(vnode, attrs, ns);\n        insertNode(parent, element, nextSibling);\n        if (!maybeSetContentEditable(vnode)) {\n            if (vnode.children != null) {\n                var children = vnode.children;\n                createNodes(element, children, 0, children.length, hooks, null, ns);\n                if (vnode.tag === \"select\" && attrs != null) setLateSelectAttrs(vnode, attrs);\n            }\n        }\n    }\n    function initComponent(vnode, hooks) {\n        var sentinel;\n        if (typeof vnode.tag.view === \"function\") {\n            vnode.state = Object.create(vnode.tag);\n            sentinel = vnode.state.view;\n            if (sentinel.$$reentrantLock$$ != null) return;\n            sentinel.$$reentrantLock$$ = true;\n        } else {\n            vnode.state = void 0;\n            sentinel = vnode.tag;\n            if (sentinel.$$reentrantLock$$ != null) return;\n            sentinel.$$reentrantLock$$ = true;\n            vnode.state = vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\" ? new vnode.tag(vnode) : vnode.tag(vnode);\n        }\n        initLifecycle(vnode.state, vnode, hooks);\n        if (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks);\n        vnode.instance = $8JOml.normalize(callHook.call(vnode.state.view, vnode));\n        if (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\");\n        sentinel.$$reentrantLock$$ = null;\n    }\n    function createComponent(parent, vnode, hooks, ns, nextSibling) {\n        initComponent(vnode, hooks);\n        if (vnode.instance != null) {\n            createNode(parent, vnode.instance, hooks, ns, nextSibling);\n            vnode.dom = vnode.instance.dom;\n            vnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0;\n        } else vnode.domSize = 0;\n    }\n    //update\n    /**\n\t * @param {Element|Fragment} parent - the parent element\n\t * @param {Vnode[] | null} old - the list of vnodes of the last `render()` call for\n\t *                               this part of the tree\n\t * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.\n\t * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)\n\t * @param {Element | null} nextSibling - the next DOM node if we're dealing with a\n\t *                                       fragment that is not the last item in its\n\t *                                       parent\n\t * @param {'svg' | 'math' | String | null} ns) - the current XML namespace, if any\n\t * @returns void\n\t */ // This function diffs and patches lists of vnodes, both keyed and unkeyed.\n    //\n    // We will:\n    //\n    // 1. describe its general structure\n    // 2. focus on the diff algorithm optimizations\n    // 3. discuss DOM node operations.\n    // ## Overview:\n    //\n    // The updateNodes() function:\n    // - deals with trivial cases\n    // - determines whether the lists are keyed or unkeyed based on the first non-null node\n    //   of each list.\n    // - diffs them and patches the DOM if needed (that's the brunt of the code)\n    // - manages the leftovers: after diffing, are there:\n    //   - old nodes left to remove?\n    // \t - new nodes to insert?\n    // \t deal with them!\n    //\n    // The lists are only iterated over once, with an exception for the nodes in `old` that\n    // are visited in the fourth part of the diff and in the `removeNodes` loop.\n    // ## Diffing\n    //\n    // Reading https://github.com/localvoid/ivi/blob/ddc09d06abaef45248e6133f7040d00d3c6be853/packages/ivi/src/vdom/implementation.ts#L617-L837\n    // may be good for context on longest increasing subsequence-based logic for moving nodes.\n    //\n    // In order to diff keyed lists, one has to\n    //\n    // 1) match nodes in both lists, per key, and update them accordingly\n    // 2) create the nodes present in the new list, but absent in the old one\n    // 3) remove the nodes present in the old list, but absent in the new one\n    // 4) figure out what nodes in 1) to move in order to minimize the DOM operations.\n    //\n    // To achieve 1) one can create a dictionary of keys => index (for the old list), then iterate\n    // over the new list and for each new vnode, find the corresponding vnode in the old list using\n    // the map.\n    // 2) is achieved in the same step: if a new node has no corresponding entry in the map, it is new\n    // and must be created.\n    // For the removals, we actually remove the nodes that have been updated from the old list.\n    // The nodes that remain in that list after 1) and 2) have been performed can be safely removed.\n    // The fourth step is a bit more complex and relies on the longest increasing subsequence (LIS)\n    // algorithm.\n    //\n    // the longest increasing subsequence is the list of nodes that can remain in place. Imagine going\n    // from `1,2,3,4,5` to `4,5,1,2,3` where the numbers are not necessarily the keys, but the indices\n    // corresponding to the keyed nodes in the old list (keyed nodes `e,d,c,b,a` => `b,a,e,d,c` would\n    //  match the above lists, for example).\n    //\n    // In there are two increasing subsequences: `4,5` and `1,2,3`, the latter being the longest. We\n    // can update those nodes without moving them, and only call `insertNode` on `4` and `5`.\n    //\n    // @localvoid adapted the algo to also support node deletions and insertions (the `lis` is actually\n    // the longest increasing subsequence *of old nodes still present in the new list*).\n    //\n    // It is a general algorithm that is fireproof in all circumstances, but it requires the allocation\n    // and the construction of a `key => oldIndex` map, and three arrays (one with `newIndex => oldIndex`,\n    // the `LIS` and a temporary one to create the LIS).\n    //\n    // So we cheat where we can: if the tails of the lists are identical, they are guaranteed to be part of\n    // the LIS and can be updated without moving them.\n    //\n    // If two nodes are swapped, they are guaranteed not to be part of the LIS, and must be moved (with\n    // the exception of the last node if the list is fully reversed).\n    //\n    // ## Finding the next sibling.\n    //\n    // `updateNode()` and `createNode()` expect a nextSibling parameter to perform DOM operations.\n    // When the list is being traversed top-down, at any index, the DOM nodes up to the previous\n    // vnode reflect the content of the new list, whereas the rest of the DOM nodes reflect the old\n    // list. The next sibling must be looked for in the old list using `getNextSibling(... oldStart + 1 ...)`.\n    //\n    // In the other scenarios (swaps, upwards traversal, map-based diff),\n    // the new vnodes list is traversed upwards. The DOM nodes at the bottom of the list reflect the\n    // bottom part of the new vnodes list, and we can use the `v.dom`  value of the previous node\n    // as the next sibling (cached in the `nextSibling` variable).\n    // ## DOM node moves\n    //\n    // In most scenarios `updateNode()` and `createNode()` perform the DOM operations. However,\n    // this is not the case if the node moved (second and fourth part of the diff algo). We move\n    // the old DOM nodes before updateNode runs because it enables us to use the cached `nextSibling`\n    // variable rather than fetching it using `getNextSibling()`.\n    //\n    // The fourth part of the diff currently inserts nodes unconditionally, leading to issues\n    // like #1791 and #1999. We need to be smarter about those situations where adjascent old\n    // nodes remain together in the new list in a way that isn't covered by parts one and\n    // three of the diff algo.\n    function updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {\n        if (old === vnodes || old == null && vnodes == null) return;\n        else if (old == null || old.length === 0) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns);\n        else if (vnodes == null || vnodes.length === 0) removeNodes(parent, old, 0, old.length);\n        else {\n            var isOldKeyed = old[0] != null && old[0].key != null;\n            var isKeyed = vnodes[0] != null && vnodes[0].key != null;\n            var start = 0, oldStart = 0;\n            if (!isOldKeyed) while(oldStart < old.length && old[oldStart] == null)oldStart++;\n            if (!isKeyed) while(start < vnodes.length && vnodes[start] == null)start++;\n            if (isOldKeyed !== isKeyed) {\n                removeNodes(parent, old, oldStart, old.length);\n                createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns);\n            } else if (!isKeyed) {\n                // Don't index past the end of either list (causes deopts).\n                var commonLength = old.length < vnodes.length ? old.length : vnodes.length;\n                // Rewind if necessary to the first non-null index on either side.\n                // We could alternatively either explicitly create or remove nodes when `start !== oldStart`\n                // but that would be optimizing for sparse lists which are more rare than dense ones.\n                start = start < oldStart ? start : oldStart;\n                for(; start < commonLength; start++){\n                    o = old[start];\n                    v = vnodes[start];\n                    if (o === v || o == null && v == null) continue;\n                    else if (o == null) createNode(parent, v, hooks, ns, getNextSibling(old, start + 1, nextSibling));\n                    else if (v == null) removeNode(parent, o);\n                    else updateNode(parent, o, v, hooks, getNextSibling(old, start + 1, nextSibling), ns);\n                }\n                if (old.length > commonLength) removeNodes(parent, old, start, old.length);\n                if (vnodes.length > commonLength) createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns);\n            } else {\n                // keyed diff\n                var oldEnd = old.length - 1, end = vnodes.length - 1, map, o, v, oe, ve, topSibling;\n                // bottom-up\n                while(oldEnd >= oldStart && end >= start){\n                    oe = old[oldEnd];\n                    ve = vnodes[end];\n                    if (oe.key !== ve.key) break;\n                    if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns);\n                    if (ve.dom != null) nextSibling = ve.dom;\n                    oldEnd--, end--;\n                }\n                // top-down\n                while(oldEnd >= oldStart && end >= start){\n                    o = old[oldStart];\n                    v = vnodes[start];\n                    if (o.key !== v.key) break;\n                    oldStart++, start++;\n                    if (o !== v) updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns);\n                }\n                // swaps and list reversals\n                while(oldEnd >= oldStart && end >= start){\n                    if (start === end) break;\n                    if (o.key !== ve.key || oe.key !== v.key) break;\n                    topSibling = getNextSibling(old, oldStart, nextSibling);\n                    moveNodes(parent, oe, topSibling);\n                    if (oe !== v) updateNode(parent, oe, v, hooks, topSibling, ns);\n                    if (++start <= --end) moveNodes(parent, o, nextSibling);\n                    if (o !== ve) updateNode(parent, o, ve, hooks, nextSibling, ns);\n                    if (ve.dom != null) nextSibling = ve.dom;\n                    oldStart++;\n                    oldEnd--;\n                    oe = old[oldEnd];\n                    ve = vnodes[end];\n                    o = old[oldStart];\n                    v = vnodes[start];\n                }\n                // bottom up once again\n                while(oldEnd >= oldStart && end >= start){\n                    if (oe.key !== ve.key) break;\n                    if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns);\n                    if (ve.dom != null) nextSibling = ve.dom;\n                    oldEnd--, end--;\n                    oe = old[oldEnd];\n                    ve = vnodes[end];\n                }\n                if (start > end) removeNodes(parent, old, oldStart, oldEnd + 1);\n                else if (oldStart > oldEnd) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns);\n                else {\n                    // inspired by ivi https://github.com/ivijs/ivi/ by Boris Kaul\n                    var originalNextSibling = nextSibling, vnodesLength = end - start + 1, oldIndices = new Array(vnodesLength), li = 0, i = 0, pos = 2147483647, matched = 0, map, lisIndices;\n                    for(i = 0; i < vnodesLength; i++)oldIndices[i] = -1;\n                    for(i = end; i >= start; i--){\n                        if (map == null) map = getKeyMap(old, oldStart, oldEnd + 1);\n                        ve = vnodes[i];\n                        var oldIndex = map[ve.key];\n                        if (oldIndex != null) {\n                            pos = oldIndex < pos ? oldIndex : -1 // becomes -1 if nodes were re-ordered\n                            ;\n                            oldIndices[i - start] = oldIndex;\n                            oe = old[oldIndex];\n                            old[oldIndex] = null;\n                            if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns);\n                            if (ve.dom != null) nextSibling = ve.dom;\n                            matched++;\n                        }\n                    }\n                    nextSibling = originalNextSibling;\n                    if (matched !== oldEnd - oldStart + 1) removeNodes(parent, old, oldStart, oldEnd + 1);\n                    if (matched === 0) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns);\n                    else {\n                        if (pos === -1) {\n                            // the indices of the indices of the items that are part of the\n                            // longest increasing subsequence in the oldIndices list\n                            lisIndices = makeLisIndices(oldIndices);\n                            li = lisIndices.length - 1;\n                            for(i = end; i >= start; i--){\n                                v = vnodes[i];\n                                if (oldIndices[i - start] === -1) createNode(parent, v, hooks, ns, nextSibling);\n                                else if (lisIndices[li] === i - start) li--;\n                                else moveNodes(parent, v, nextSibling);\n                                if (v.dom != null) nextSibling = vnodes[i].dom;\n                            }\n                        } else for(i = end; i >= start; i--){\n                            v = vnodes[i];\n                            if (oldIndices[i - start] === -1) createNode(parent, v, hooks, ns, nextSibling);\n                            if (v.dom != null) nextSibling = vnodes[i].dom;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function updateNode(parent, old, vnode, hooks, nextSibling, ns) {\n        var oldTag = old.tag, tag = vnode.tag;\n        if (oldTag === tag) {\n            vnode.state = old.state;\n            vnode.events = old.events;\n            if (shouldNotUpdate(vnode, old)) return;\n            if (typeof oldTag === \"string\") {\n                if (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks);\n                switch(oldTag){\n                    case \"#\":\n                        updateText(old, vnode);\n                        break;\n                    case \"<\":\n                        updateHTML(parent, old, vnode, ns, nextSibling);\n                        break;\n                    case \"[\":\n                        updateFragment(parent, old, vnode, hooks, nextSibling, ns);\n                        break;\n                    default:\n                        updateElement(old, vnode, hooks, ns);\n                }\n            } else updateComponent(parent, old, vnode, hooks, nextSibling, ns);\n        } else {\n            removeNode(parent, old);\n            createNode(parent, vnode, hooks, ns, nextSibling);\n        }\n    }\n    function updateText(old, vnode) {\n        if (old.children.toString() !== vnode.children.toString()) old.dom.nodeValue = vnode.children;\n        vnode.dom = old.dom;\n    }\n    function updateHTML(parent, old, vnode, ns, nextSibling) {\n        if (old.children !== vnode.children) {\n            removeHTML(parent, old);\n            createHTML(parent, vnode, ns, nextSibling);\n        } else {\n            vnode.dom = old.dom;\n            vnode.domSize = old.domSize;\n            vnode.instance = old.instance;\n        }\n    }\n    function updateFragment(parent, old, vnode, hooks, nextSibling, ns) {\n        updateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns);\n        var domSize = 0, children = vnode.children;\n        vnode.dom = null;\n        if (children != null) {\n            for(var i = 0; i < children.length; i++){\n                var child = children[i];\n                if (child != null && child.dom != null) {\n                    if (vnode.dom == null) vnode.dom = child.dom;\n                    domSize += child.domSize || 1;\n                }\n            }\n            if (domSize !== 1) vnode.domSize = domSize;\n        }\n    }\n    function updateElement(old, vnode, hooks, ns) {\n        var element = vnode.dom = old.dom;\n        ns = getNameSpace(vnode) || ns;\n        if (vnode.tag === \"textarea\") {\n            if (vnode.attrs == null) vnode.attrs = {};\n        }\n        updateAttrs(vnode, old.attrs, vnode.attrs, ns);\n        if (!maybeSetContentEditable(vnode)) updateNodes(element, old.children, vnode.children, hooks, null, ns);\n    }\n    function updateComponent(parent, old, vnode, hooks, nextSibling, ns) {\n        vnode.instance = $8JOml.normalize(callHook.call(vnode.state.view, vnode));\n        if (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\");\n        updateLifecycle(vnode.state, vnode, hooks);\n        if (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks);\n        if (vnode.instance != null) {\n            if (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling);\n            else updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns);\n            vnode.dom = vnode.instance.dom;\n            vnode.domSize = vnode.instance.domSize;\n        } else if (old.instance != null) {\n            removeNode(parent, old.instance);\n            vnode.dom = undefined;\n            vnode.domSize = 0;\n        } else {\n            vnode.dom = old.dom;\n            vnode.domSize = old.domSize;\n        }\n    }\n    function getKeyMap(vnodes, start, end) {\n        var map = Object.create(null);\n        for(; start < end; start++){\n            var vnode = vnodes[start];\n            if (vnode != null) {\n                var key = vnode.key;\n                if (key != null) map[key] = start;\n            }\n        }\n        return map;\n    }\n    // Lifted from ivi https://github.com/ivijs/ivi/\n    // takes a list of unique numbers (-1 is special and can\n    // occur multiple times) and returns an array with the indices\n    // of the items that are part of the longest increasing\n    // subsequence\n    var lisTemp = [];\n    function makeLisIndices(a) {\n        var result = [\n            0\n        ];\n        var u = 0, v = 0, i = 0;\n        var il = lisTemp.length = a.length;\n        for(var i = 0; i < il; i++)lisTemp[i] = a[i];\n        for(var i = 0; i < il; ++i){\n            if (a[i] === -1) continue;\n            var j = result[result.length - 1];\n            if (a[j] < a[i]) {\n                lisTemp[i] = j;\n                result.push(i);\n                continue;\n            }\n            u = 0;\n            v = result.length - 1;\n            while(u < v){\n                // Fast integer average without overflow.\n                // eslint-disable-next-line no-bitwise\n                var c = (u >>> 1) + (v >>> 1) + (u & v & 1);\n                if (a[result[c]] < a[i]) u = c + 1;\n                else v = c;\n            }\n            if (a[i] < a[result[u]]) {\n                if (u > 0) lisTemp[i] = result[u - 1];\n                result[u] = i;\n            }\n        }\n        u = result.length;\n        v = result[u - 1];\n        while(u-- > 0){\n            result[u] = v;\n            v = lisTemp[v];\n        }\n        lisTemp.length = 0;\n        return result;\n    }\n    function getNextSibling(vnodes, i, nextSibling) {\n        for(; i < vnodes.length; i++){\n            if (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom;\n        }\n        return nextSibling;\n    }\n    // This covers a really specific edge case:\n    // - Parent node is keyed and contains child\n    // - Child is removed, returns unresolved promise in `onbeforeremove`\n    // - Parent node is moved in keyed diff\n    // - Remaining children still need moved appropriately\n    //\n    // Ideally, I'd track removed nodes as well, but that introduces a lot more\n    // complexity and I'm not exactly interested in doing that.\n    function moveNodes(parent, vnode, nextSibling) {\n        var frag = $doc.createDocumentFragment();\n        moveChildToFrag(parent, frag, vnode);\n        insertNode(parent, frag, nextSibling);\n    }\n    function moveChildToFrag(parent, frag, vnode) {\n        // Dodge the recursion overhead in a few of the most common cases.\n        while(vnode.dom != null && vnode.dom.parentNode === parent){\n            if (typeof vnode.tag !== \"string\") {\n                vnode = vnode.instance;\n                if (vnode != null) continue;\n            } else if (vnode.tag === \"<\") for(var i = 0; i < vnode.instance.length; i++)frag.appendChild(vnode.instance[i]);\n            else if (vnode.tag !== \"[\") // Don't recurse for text nodes *or* elements, just fragments\n            frag.appendChild(vnode.dom);\n            else if (vnode.children.length === 1) {\n                vnode = vnode.children[0];\n                if (vnode != null) continue;\n            } else for(var i = 0; i < vnode.children.length; i++){\n                var child = vnode.children[i];\n                if (child != null) moveChildToFrag(parent, frag, child);\n            }\n            break;\n        }\n    }\n    function insertNode(parent, dom, nextSibling) {\n        if (nextSibling != null) parent.insertBefore(dom, nextSibling);\n        else parent.appendChild(dom);\n    }\n    function maybeSetContentEditable(vnode) {\n        if (vnode.attrs == null || vnode.attrs.contenteditable == null && // attribute\n        vnode.attrs.contentEditable == null // property\n        ) return false;\n        var children = vnode.children;\n        if (children != null && children.length === 1 && children[0].tag === \"<\") {\n            var content = children[0].children;\n            if (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content;\n        } else if (children != null && children.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted.\");\n        return true;\n    }\n    //remove\n    function removeNodes(parent, vnodes, start, end) {\n        for(var i = start; i < end; i++){\n            var vnode = vnodes[i];\n            if (vnode != null) removeNode(parent, vnode);\n        }\n    }\n    function removeNode(parent, vnode) {\n        var mask = 0;\n        var original = vnode.state;\n        var stateResult, attrsResult;\n        if (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeremove === \"function\") {\n            var result = callHook.call(vnode.state.onbeforeremove, vnode);\n            if (result != null && typeof result.then === \"function\") {\n                mask = 1;\n                stateResult = result;\n            }\n        }\n        if (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\n            var result = callHook.call(vnode.attrs.onbeforeremove, vnode);\n            if (result != null && typeof result.then === \"function\") {\n                // eslint-disable-next-line no-bitwise\n                mask |= 2;\n                attrsResult = result;\n            }\n        }\n        checkState(vnode, original);\n        // If we can, try to fast-path it and avoid all the overhead of awaiting\n        if (!mask) {\n            onremove(vnode);\n            removeChild(parent, vnode);\n        } else {\n            if (stateResult != null) {\n                var next = function() {\n                    // eslint-disable-next-line no-bitwise\n                    if (mask & 1) {\n                        mask &= 2;\n                        if (!mask) reallyRemove();\n                    }\n                };\n                stateResult.then(next, next);\n            }\n            if (attrsResult != null) {\n                var next = function() {\n                    // eslint-disable-next-line no-bitwise\n                    if (mask & 2) {\n                        mask &= 1;\n                        if (!mask) reallyRemove();\n                    }\n                };\n                attrsResult.then(next, next);\n            }\n        }\n        function reallyRemove() {\n            checkState(vnode, original);\n            onremove(vnode);\n            removeChild(parent, vnode);\n        }\n    }\n    function removeHTML(parent, vnode) {\n        for(var i = 0; i < vnode.instance.length; i++)parent.removeChild(vnode.instance[i]);\n    }\n    function removeChild(parent, vnode) {\n        // Dodge the recursion overhead in a few of the most common cases.\n        while(vnode.dom != null && vnode.dom.parentNode === parent){\n            if (typeof vnode.tag !== \"string\") {\n                vnode = vnode.instance;\n                if (vnode != null) continue;\n            } else if (vnode.tag === \"<\") removeHTML(parent, vnode);\n            else {\n                if (vnode.tag !== \"[\") {\n                    parent.removeChild(vnode.dom);\n                    if (!Array.isArray(vnode.children)) break;\n                }\n                if (vnode.children.length === 1) {\n                    vnode = vnode.children[0];\n                    if (vnode != null) continue;\n                } else for(var i = 0; i < vnode.children.length; i++){\n                    var child = vnode.children[i];\n                    if (child != null) removeChild(parent, child);\n                }\n            }\n            break;\n        }\n    }\n    function onremove(vnode) {\n        if (typeof vnode.tag !== \"string\" && typeof vnode.state.onremove === \"function\") callHook.call(vnode.state.onremove, vnode);\n        if (vnode.attrs && typeof vnode.attrs.onremove === \"function\") callHook.call(vnode.attrs.onremove, vnode);\n        if (typeof vnode.tag !== \"string\") {\n            if (vnode.instance != null) onremove(vnode.instance);\n        } else {\n            var children = vnode.children;\n            if (Array.isArray(children)) for(var i = 0; i < children.length; i++){\n                var child = children[i];\n                if (child != null) onremove(child);\n            }\n        }\n    }\n    //attrs\n    function setAttrs(vnode, attrs, ns) {\n        // If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n        //\n        // Also, the DOM does things to inputs based on the value, so it needs set first.\n        // See: https://github.com/MithrilJS/mithril.js/issues/2622\n        if (vnode.tag === \"input\" && attrs.type != null) vnode.dom.setAttribute(\"type\", attrs.type);\n        var isFileInput = attrs != null && vnode.tag === \"input\" && attrs.type === \"file\";\n        for(var key in attrs)setAttr(vnode, key, null, attrs[key], ns, isFileInput);\n    }\n    function setAttr(vnode, key, old, value, ns, isFileInput) {\n        if (key === \"key\" || key === \"is\" || value == null || isLifecycleMethod(key) || old === value && !isFormAttribute(vnode, key) && typeof value !== \"object\" || key === \"type\" && vnode.tag === \"input\") return;\n        if (key[0] === \"o\" && key[1] === \"n\") return updateEvent(vnode, key, value);\n        if (key.slice(0, 6) === \"xlink:\") vnode.dom.setAttributeNS(\"http://www.w3.org/1999/xlink\", key.slice(6), value);\n        else if (key === \"style\") updateStyle(vnode.dom, old, value);\n        else if (hasPropertyKey(vnode, key, ns)) {\n            if (key === \"value\") {\n                // Only do the coercion if we're actually going to check the value.\n                /* eslint-disable no-implicit-coercion */ //setting input[value] to same value by typing on focused element moves cursor to end in Chrome\n                //setting input[type=file][value] to same value causes an error to be generated if it's non-empty\n                if ((vnode.tag === \"input\" || vnode.tag === \"textarea\") && vnode.dom.value === \"\" + value && (isFileInput || vnode.dom === activeElement())) return;\n                //setting select[value] to same value while having select open blinks select dropdown in Chrome\n                if (vnode.tag === \"select\" && old !== null && vnode.dom.value === \"\" + value) return;\n                //setting option[value] to same value while having select open blinks select dropdown in Chrome\n                if (vnode.tag === \"option\" && old !== null && vnode.dom.value === \"\" + value) return;\n                //setting input[type=file][value] to different value is an error if it's non-empty\n                // Not ideal, but it at least works around the most common source of uncaught exceptions for now.\n                if (isFileInput && \"\" + value !== \"\") {\n                    console.error(\"`value` is read-only on file inputs!\");\n                    return;\n                }\n            /* eslint-enable no-implicit-coercion */ }\n            vnode.dom[key] = value;\n        } else if (typeof value === \"boolean\") {\n            if (value) vnode.dom.setAttribute(key, \"\");\n            else vnode.dom.removeAttribute(key);\n        } else vnode.dom.setAttribute(key === \"className\" ? \"class\" : key, value);\n    }\n    function removeAttr(vnode, key, old, ns) {\n        if (key === \"key\" || key === \"is\" || old == null || isLifecycleMethod(key)) return;\n        if (key[0] === \"o\" && key[1] === \"n\") updateEvent(vnode, key, undefined);\n        else if (key === \"style\") updateStyle(vnode.dom, old, null);\n        else if (hasPropertyKey(vnode, key, ns) && key !== \"className\" && key !== \"title\" // creates \"null\" as title\n         && !(key === \"value\" && (vnode.tag === \"option\" || vnode.tag === \"select\" && vnode.dom.selectedIndex === -1 && vnode.dom === activeElement())) && !(vnode.tag === \"input\" && key === \"type\")) vnode.dom[key] = null;\n        else {\n            var nsLastIndex = key.indexOf(\":\");\n            if (nsLastIndex !== -1) key = key.slice(nsLastIndex + 1);\n            if (old !== false) vnode.dom.removeAttribute(key === \"className\" ? \"class\" : key);\n        }\n    }\n    function setLateSelectAttrs(vnode, attrs) {\n        if (\"value\" in attrs) {\n            if (attrs.value === null) {\n                if (vnode.dom.selectedIndex !== -1) vnode.dom.value = null;\n            } else {\n                var normalized = \"\" + attrs.value // eslint-disable-line no-implicit-coercion\n                ;\n                if (vnode.dom.value !== normalized || vnode.dom.selectedIndex === -1) vnode.dom.value = normalized;\n            }\n        }\n        if (\"selectedIndex\" in attrs) setAttr(vnode, \"selectedIndex\", null, attrs.selectedIndex, undefined);\n    }\n    function updateAttrs(vnode, old, attrs, ns) {\n        if (old && old === attrs) console.warn(\"Don't reuse attrs object, use new object for every redraw, this will throw in next major\");\n        if (attrs != null) {\n            // If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n            //\n            // Also, the DOM does things to inputs based on the value, so it needs set first.\n            // See: https://github.com/MithrilJS/mithril.js/issues/2622\n            if (vnode.tag === \"input\" && attrs.type != null) vnode.dom.setAttribute(\"type\", attrs.type);\n            var isFileInput = vnode.tag === \"input\" && attrs.type === \"file\";\n            for(var key in attrs)setAttr(vnode, key, old && old[key], attrs[key], ns, isFileInput);\n        }\n        var val;\n        if (old != null) {\n            for(var key in old)if ((val = old[key]) != null && (attrs == null || attrs[key] == null)) removeAttr(vnode, key, val, ns);\n        }\n    }\n    function isFormAttribute(vnode, attr) {\n        return attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === activeElement() || vnode.tag === \"option\" && vnode.dom.parentNode === $doc.activeElement;\n    }\n    function isLifecycleMethod(attr) {\n        return attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\";\n    }\n    function hasPropertyKey(vnode, key, ns) {\n        // Filter out namespaced keys\n        return ns === undefined && // If it's a custom element, just keep it.\n        (vnode.tag.indexOf(\"-\") > -1 || vnode.attrs != null && vnode.attrs.is || // If it's a normal element, let's try to avoid a few browser bugs.\n        key !== \"href\" && key !== \"list\" && key !== \"form\" && key !== \"width\" && key !== \"height\" // && key !== \"type\"\n        ) && key in vnode.dom;\n    }\n    //style\n    var uppercaseRegex = /[A-Z]/g;\n    function toLowerCase(capital) {\n        return \"-\" + capital.toLowerCase();\n    }\n    function normalizeKey(key) {\n        return key[0] === \"-\" && key[1] === \"-\" ? key : key === \"cssFloat\" ? \"float\" : key.replace(uppercaseRegex, toLowerCase);\n    }\n    function updateStyle(element, old, style) {\n        if (old === style) ;\n        else if (style == null) // New style is missing, just clear it.\n        element.style.cssText = \"\";\n        else if (typeof style !== \"object\") // New style is a string, let engine deal with patching.\n        element.style.cssText = style;\n        else if (old == null || typeof old !== \"object\") {\n            // `old` is missing or a string, `style` is an object.\n            element.style.cssText = \"\";\n            // Add new style properties\n            for(var key in style){\n                var value = style[key];\n                if (value != null) element.style.setProperty(normalizeKey(key), String(value));\n            }\n        } else {\n            // Both old & new are (different) objects.\n            // Update style properties that have changed\n            for(var key in style){\n                var value = style[key];\n                if (value != null && (value = String(value)) !== String(old[key])) element.style.setProperty(normalizeKey(key), value);\n            }\n            // Remove style properties that no longer exist\n            for(var key in old)if (old[key] != null && style[key] == null) element.style.removeProperty(normalizeKey(key));\n        }\n    }\n    // Here's an explanation of how this works:\n    // 1. The event names are always (by design) prefixed by `on`.\n    // 2. The EventListener interface accepts either a function or an object\n    //    with a `handleEvent` method.\n    // 3. The object does not inherit from `Object.prototype`, to avoid\n    //    any potential interference with that (e.g. setters).\n    // 4. The event name is remapped to the handler before calling it.\n    // 5. In function-based event handlers, `ev.target === this`. We replicate\n    //    that below.\n    // 6. In function-based event handlers, `return false` prevents the default\n    //    action and stops event propagation. We replicate that below.\n    function EventDict() {\n        // Save this, so the current redraw is correctly tracked.\n        this._ = currentRedraw;\n    }\n    EventDict.prototype = Object.create(null);\n    EventDict.prototype.handleEvent = function(ev) {\n        var handler = this[\"on\" + ev.type];\n        var result;\n        if (typeof handler === \"function\") result = handler.call(ev.currentTarget, ev);\n        else if (typeof handler.handleEvent === \"function\") handler.handleEvent(ev);\n        if (this._ && ev.redraw !== false) (0, this._)();\n        if (result === false) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n    };\n    //event\n    function updateEvent(vnode, key, value) {\n        if (vnode.events != null) {\n            vnode.events._ = currentRedraw;\n            if (vnode.events[key] === value) return;\n            if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n                if (vnode.events[key] == null) vnode.dom.addEventListener(key.slice(2), vnode.events, false);\n                vnode.events[key] = value;\n            } else {\n                if (vnode.events[key] != null) vnode.dom.removeEventListener(key.slice(2), vnode.events, false);\n                vnode.events[key] = undefined;\n            }\n        } else if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n            vnode.events = new EventDict();\n            vnode.dom.addEventListener(key.slice(2), vnode.events, false);\n            vnode.events[key] = value;\n        }\n    }\n    //lifecycle\n    function initLifecycle(source, vnode, hooks) {\n        if (typeof source.oninit === \"function\") callHook.call(source.oninit, vnode);\n        if (typeof source.oncreate === \"function\") hooks.push(callHook.bind(source.oncreate, vnode));\n    }\n    function updateLifecycle(source, vnode, hooks) {\n        if (typeof source.onupdate === \"function\") hooks.push(callHook.bind(source.onupdate, vnode));\n    }\n    function shouldNotUpdate(vnode, old) {\n        do {\n            if (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") {\n                var force = callHook.call(vnode.attrs.onbeforeupdate, vnode, old);\n                if (force !== undefined && !force) break;\n            }\n            if (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeupdate === \"function\") {\n                var force = callHook.call(vnode.state.onbeforeupdate, vnode, old);\n                if (force !== undefined && !force) break;\n            }\n            return false;\n        }while (false); // eslint-disable-line no-constant-condition\n        vnode.dom = old.dom;\n        vnode.domSize = old.domSize;\n        vnode.instance = old.instance;\n        // One would think having the actual latest attributes would be ideal,\n        // but it doesn't let us properly diff based on our current internal\n        // representation. We have to save not only the old DOM info, but also\n        // the attributes used to create it, as we diff *that*, not against the\n        // DOM directly (with a few exceptions in `setAttr`). And, of course, we\n        // need to save the children and text as they are conceptually not\n        // unlike special \"attributes\" internally.\n        vnode.attrs = old.attrs;\n        vnode.children = old.children;\n        vnode.text = old.text;\n        return true;\n    }\n    var currentDOM;\n    return function(dom, vnodes, redraw) {\n        if (!dom) throw new TypeError(\"DOM element being rendered to does not exist.\");\n        if (currentDOM != null && dom.contains(currentDOM)) throw new TypeError(\"Node is currently being rendered to and thus is locked.\");\n        var prevRedraw = currentRedraw;\n        var prevDOM = currentDOM;\n        var hooks = [];\n        var active = activeElement();\n        var namespace = dom.namespaceURI;\n        currentDOM = dom;\n        currentRedraw = typeof redraw === \"function\" ? redraw : undefined;\n        try {\n            // First time rendering into a node clears it out\n            if (dom.vnodes == null) dom.textContent = \"\";\n            vnodes = $8JOml.normalizeChildren(Array.isArray(vnodes) ? vnodes : [\n                vnodes\n            ]);\n            updateNodes(dom, dom.vnodes, vnodes, hooks, null, namespace === \"http://www.w3.org/1999/xhtml\" ? undefined : namespace);\n            dom.vnodes = vnodes;\n            // `document.activeElement` can return null: https://html.spec.whatwg.org/multipage/interaction.html#dom-document-activeelement\n            if (active != null && activeElement() !== active && typeof active.focus === \"function\") active.focus();\n            for(var i = 0; i < hooks.length; i++)hooks[i]();\n        } finally{\n            currentRedraw = prevRedraw;\n            currentDOM = prevDOM;\n        }\n    };\n};\n\n});\n\n\nparcelRegister(\"fTDI2\", function(module, exports) {\n\"use strict\";\n\nvar $8JOml = parcelRequire(\"8JOml\");\nmodule.exports = function(render, schedule, console) {\n    var subscriptions = [];\n    var pending = false;\n    var offset = -1;\n    function sync() {\n        for(offset = 0; offset < subscriptions.length; offset += 2)try {\n            render(subscriptions[offset], $8JOml(subscriptions[offset + 1]), redraw);\n        } catch (e) {\n            console.error(e);\n        }\n        offset = -1;\n    }\n    function redraw() {\n        if (!pending) {\n            pending = true;\n            schedule(function() {\n                pending = false;\n                sync();\n            });\n        }\n    }\n    redraw.sync = sync;\n    function mount(root, component) {\n        if (component != null && component.view == null && typeof component !== \"function\") throw new TypeError(\"m.mount expects a component, not a vnode.\");\n        var index = subscriptions.indexOf(root);\n        if (index >= 0) {\n            subscriptions.splice(index, 2);\n            if (index <= offset) offset -= 2;\n            render(root, []);\n        }\n        if (component != null) {\n            subscriptions.push(root, component);\n            render(root, $8JOml(component), redraw);\n        }\n    }\n    return {\n        mount: mount,\n        redraw: redraw\n    };\n};\n\n});\n\nparcelRegister(\"6ePE9\", function(module, exports) {\n\"use strict\";\n\nvar $dVi4w = parcelRequire(\"dVi4w\");\n\nvar $iMmVV = parcelRequire(\"iMmVV\");\nmodule.exports = function($window, Promise, oncompletion) {\n    var callbackCount = 0;\n    function PromiseProxy(executor) {\n        return new Promise(executor);\n    }\n    // In case the global Promise is some userland library's where they rely on\n    // `foo instanceof this.constructor`, `this.constructor.resolve(value)`, or\n    // similar. Let's *not* break them.\n    PromiseProxy.prototype = Promise.prototype;\n    PromiseProxy.__proto__ = Promise // eslint-disable-line no-proto\n    ;\n    function makeRequest(factory) {\n        return function(url, args) {\n            if (typeof url !== \"string\") {\n                args = url;\n                url = url.url;\n            } else if (args == null) args = {};\n            var promise = new Promise(function(resolve, reject) {\n                factory($dVi4w(url, args.params), args, function(data) {\n                    if (typeof args.type === \"function\") {\n                        if (Array.isArray(data)) for(var i = 0; i < data.length; i++)data[i] = new args.type(data[i]);\n                        else data = new args.type(data);\n                    }\n                    resolve(data);\n                }, reject);\n            });\n            if (args.background === true) return promise;\n            var count = 0;\n            function complete() {\n                if (--count === 0 && typeof oncompletion === \"function\") oncompletion();\n            }\n            return wrap(promise);\n            function wrap(promise) {\n                var then = promise.then;\n                // Set the constructor, so engines know to not await or resolve\n                // this as a native promise. At the time of writing, this is\n                // only necessary for V8, but their behavior is the correct\n                // behavior per spec. See this spec issue for more details:\n                // https://github.com/tc39/ecma262/issues/1577. Also, see the\n                // corresponding comment in `request/tests/test-request.js` for\n                // a bit more background on the issue at hand.\n                promise.constructor = PromiseProxy;\n                promise.then = function() {\n                    count++;\n                    var next = then.apply(promise, arguments);\n                    next.then(complete, function(e) {\n                        complete();\n                        if (count === 0) throw e;\n                    });\n                    return wrap(next);\n                };\n                return promise;\n            }\n        };\n    }\n    function hasHeader(args, name) {\n        for(var key in args.headers){\n            if ($iMmVV.call(args.headers, key) && key.toLowerCase() === name) return true;\n        }\n        return false;\n    }\n    return {\n        request: makeRequest(function(url, args, resolve, reject) {\n            var method = args.method != null ? args.method.toUpperCase() : \"GET\";\n            var body = args.body;\n            var assumeJSON = (args.serialize == null || args.serialize === JSON.serialize) && !(body instanceof $window.FormData || body instanceof $window.URLSearchParams);\n            var responseType = args.responseType || (typeof args.extract === \"function\" ? \"\" : \"json\");\n            var xhr = new $window.XMLHttpRequest(), aborted = false, isTimeout = false;\n            var original = xhr, replacedAbort;\n            var abort = xhr.abort;\n            xhr.abort = function() {\n                aborted = true;\n                abort.call(this);\n            };\n            xhr.open(method, url, args.async !== false, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined);\n            if (assumeJSON && body != null && !hasHeader(args, \"content-type\")) xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n            if (typeof args.deserialize !== \"function\" && !hasHeader(args, \"accept\")) xhr.setRequestHeader(\"Accept\", \"application/json, text/*\");\n            if (args.withCredentials) xhr.withCredentials = args.withCredentials;\n            if (args.timeout) xhr.timeout = args.timeout;\n            xhr.responseType = responseType;\n            for(var key in args.headers)if ($iMmVV.call(args.headers, key)) xhr.setRequestHeader(key, args.headers[key]);\n            xhr.onreadystatechange = function(ev) {\n                // Don't throw errors on xhr.abort().\n                if (aborted) return;\n                if (ev.target.readyState === 4) try {\n                    var success = ev.target.status >= 200 && ev.target.status < 300 || ev.target.status === 304 || /^file:\\/\\//i.test(url);\n                    // When the response type isn't \"\" or \"text\",\n                    // `xhr.responseText` is the wrong thing to use.\n                    // Browsers do the right thing and throw here, and we\n                    // should honor that and do the right thing by\n                    // preferring `xhr.response` where possible/practical.\n                    var response = ev.target.response, message;\n                    if (responseType === \"json\") {\n                        // For IE and Edge, which don't implement\n                        // `responseType: \"json\"`.\n                        if (!ev.target.responseType && typeof args.extract !== \"function\") // Handle no-content which will not parse.\n                        try {\n                            response = JSON.parse(ev.target.responseText);\n                        } catch (e) {\n                            response = null;\n                        }\n                    } else if (!responseType || responseType === \"text\") // Only use this default if it's text. If a parsed\n                    // document is needed on old IE and friends (all\n                    // unsupported), the user should use a custom\n                    // `config` instead. They're already using this at\n                    // their own risk.\n                    {\n                        if (response == null) response = ev.target.responseText;\n                    }\n                    if (typeof args.extract === \"function\") {\n                        response = args.extract(ev.target, args);\n                        success = true;\n                    } else if (typeof args.deserialize === \"function\") response = args.deserialize(response);\n                    if (success) resolve(response);\n                    else {\n                        var completeErrorResponse = function() {\n                            try {\n                                message = ev.target.responseText;\n                            } catch (e) {\n                                message = response;\n                            }\n                            var error = new Error(message);\n                            error.code = ev.target.status;\n                            error.response = response;\n                            reject(error);\n                        };\n                        if (xhr.status === 0) // Use setTimeout to push this code block onto the event queue\n                        // This allows `xhr.ontimeout` to run in the case that there is a timeout\n                        // Without this setTimeout, `xhr.ontimeout` doesn't have a chance to reject\n                        // as `xhr.onreadystatechange` will run before it\n                        setTimeout(function() {\n                            if (isTimeout) return;\n                            completeErrorResponse();\n                        });\n                        else completeErrorResponse();\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            xhr.ontimeout = function(ev) {\n                isTimeout = true;\n                var error = new Error(\"Request timed out\");\n                error.code = ev.target.status;\n                reject(error);\n            };\n            if (typeof args.config === \"function\") {\n                xhr = args.config(xhr, args, url) || xhr;\n                // Propagate the `abort` to any replacement XHR as well.\n                if (xhr !== original) {\n                    replacedAbort = xhr.abort;\n                    xhr.abort = function() {\n                        aborted = true;\n                        replacedAbort.call(this);\n                    };\n                }\n            }\n            if (body == null) xhr.send();\n            else if (typeof args.serialize === \"function\") xhr.send(args.serialize(body));\n            else if (body instanceof $window.FormData || body instanceof $window.URLSearchParams) xhr.send(body);\n            else xhr.send(JSON.stringify(body));\n        }),\n        jsonp: makeRequest(function(url, args, resolve, reject) {\n            var callbackName = args.callbackName || \"_mithril_\" + Math.round(Math.random() * 1e16) + \"_\" + callbackCount++;\n            var script = $window.document.createElement(\"script\");\n            $window[callbackName] = function(data) {\n                delete $window[callbackName];\n                script.parentNode.removeChild(script);\n                resolve(data);\n            };\n            script.onerror = function() {\n                delete $window[callbackName];\n                script.parentNode.removeChild(script);\n                reject(new Error(\"JSONP request failed\"));\n            };\n            script.src = url + (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + encodeURIComponent(args.callbackKey || \"callback\") + \"=\" + encodeURIComponent(callbackName);\n            $window.document.documentElement.appendChild(script);\n        })\n    };\n};\n\n});\nparcelRegister(\"dVi4w\", function(module, exports) {\n\"use strict\";\n\nvar $4TqxV = parcelRequire(\"4TqxV\");\n\nvar $h7Myx = parcelRequire(\"h7Myx\");\n// Returns `path` from `template` + `params`\nmodule.exports = function(template, params) {\n    if (/:([^\\/\\.-]+)(\\.{3})?:/.test(template)) throw new SyntaxError(\"Template parameter names must be separated by either a '/', '-', or '.'.\");\n    if (params == null) return template;\n    var queryIndex = template.indexOf(\"?\");\n    var hashIndex = template.indexOf(\"#\");\n    var queryEnd = hashIndex < 0 ? template.length : hashIndex;\n    var pathEnd = queryIndex < 0 ? queryEnd : queryIndex;\n    var path = template.slice(0, pathEnd);\n    var query = {};\n    $h7Myx(query, params);\n    var resolved = path.replace(/:([^\\/\\.-]+)(\\.{3})?/g, function(m, key, variadic) {\n        delete query[key];\n        // If no such parameter exists, don't interpolate it.\n        if (params[key] == null) return m;\n        // Escape normal parameters, but not variadic ones.\n        return variadic ? params[key] : encodeURIComponent(String(params[key]));\n    });\n    // In case the template substitution adds new query/hash parameters.\n    var newQueryIndex = resolved.indexOf(\"?\");\n    var newHashIndex = resolved.indexOf(\"#\");\n    var newQueryEnd = newHashIndex < 0 ? resolved.length : newHashIndex;\n    var newPathEnd = newQueryIndex < 0 ? newQueryEnd : newQueryIndex;\n    var result = resolved.slice(0, newPathEnd);\n    if (queryIndex >= 0) result += template.slice(queryIndex, queryEnd);\n    if (newQueryIndex >= 0) result += (queryIndex < 0 ? \"?\" : \"&\") + resolved.slice(newQueryIndex, newQueryEnd);\n    var querystring = $4TqxV(query);\n    if (querystring) result += (queryIndex < 0 && newQueryIndex < 0 ? \"?\" : \"&\") + querystring;\n    if (hashIndex >= 0) result += template.slice(hashIndex);\n    if (newHashIndex >= 0) result += (hashIndex < 0 ? \"\" : \"&\") + resolved.slice(newHashIndex);\n    return result;\n};\n\n});\nparcelRegister(\"4TqxV\", function(module, exports) {\n\"use strict\";\nmodule.exports = function(object) {\n    if (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\";\n    var args = [];\n    for(var key in object)destructure(key, object[key]);\n    return args.join(\"&\");\n    function destructure(key, value) {\n        if (Array.isArray(value)) for(var i = 0; i < value.length; i++)destructure(key + \"[\" + i + \"]\", value[i]);\n        else if (Object.prototype.toString.call(value) === \"[object Object]\") for(var i in value)destructure(key + \"[\" + i + \"]\", value[i]);\n        else args.push(encodeURIComponent(key) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"));\n    }\n};\n\n});\n\nparcelRegister(\"h7Myx\", function(module, exports) {\n// This exists so I'm only saving it once.\n\"use strict\";\n\nvar $iMmVV = parcelRequire(\"iMmVV\");\nmodule.exports = Object.assign || function(target, source) {\n    for(var key in source)if ($iMmVV.call(source, key)) target[key] = source[key];\n};\n\n});\nparcelRegister(\"iMmVV\", function(module, exports) {\n// This exists so I'm only saving it once.\n\"use strict\";\nmodule.exports = ({}).hasOwnProperty;\n\n});\n\n\n\n\nparcelRegister(\"5NN5g\", function(module, exports) {\n\"use strict\";\n\nvar $gA8yJ = parcelRequire(\"gA8yJ\");\n\nmodule.exports = (parcelRequire(\"ePx9u\"))(typeof window !== \"undefined\" ? window : null, $gA8yJ);\n\n});\nparcelRegister(\"gA8yJ\", function(module, exports) {\n\"use strict\";\n\nvar $03gNt = parcelRequire(\"03gNt\");\n\nmodule.exports = (parcelRequire(\"fTDI2\"))($03gNt, typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : null, typeof console !== \"undefined\" ? console : null);\n\n});\n\nparcelRegister(\"ePx9u\", function(module, exports) {\n\"use strict\";\n\nvar $8JOml = parcelRequire(\"8JOml\");\n\nvar $fMiaA = parcelRequire(\"fMiaA\");\n\nvar $9JY0H = parcelRequire(\"9JY0H\");\n\nvar $dVi4w = parcelRequire(\"dVi4w\");\n\nvar $rLlma = parcelRequire(\"rLlma\");\n\nvar $7QD8F = parcelRequire(\"7QD8F\");\n\nvar $h7Myx = parcelRequire(\"h7Myx\");\n\nvar $g0xgq = parcelRequire(\"g0xgq\");\nvar $acbf8b64f436baf6$var$sentinel = {};\nfunction $acbf8b64f436baf6$var$decodeURIComponentSave(component) {\n    try {\n        return decodeURIComponent(component);\n    } catch (e) {\n        return component;\n    }\n}\nmodule.exports = function($window, mountRedraw) {\n    var callAsync = $window == null ? null : typeof $window.setImmediate === \"function\" ? $window.setImmediate : $window.setTimeout;\n    var p = $9JY0H.resolve();\n    var scheduled = false;\n    // state === 0: init\n    // state === 1: scheduled\n    // state === 2: done\n    var ready = false;\n    var state = 0;\n    var compiled, fallbackRoute;\n    var currentResolver = $acbf8b64f436baf6$var$sentinel, component, attrs, currentPath, lastUpdate;\n    var RouterRoot = {\n        onbeforeupdate: function() {\n            state = state ? 2 : 1;\n            return !(!state || $acbf8b64f436baf6$var$sentinel === currentResolver);\n        },\n        onremove: function() {\n            $window.removeEventListener(\"popstate\", fireAsync, false);\n            $window.removeEventListener(\"hashchange\", resolveRoute, false);\n        },\n        view: function() {\n            if (!state || $acbf8b64f436baf6$var$sentinel === currentResolver) return;\n            // Wrap in a fragment to preserve existing key semantics\n            var vnode = [\n                $8JOml(component, attrs.key, attrs)\n            ];\n            if (currentResolver) vnode = currentResolver.render(vnode[0]);\n            return vnode;\n        }\n    };\n    var SKIP = route.SKIP = {};\n    function resolveRoute() {\n        scheduled = false;\n        // Consider the pathname holistically. The prefix might even be invalid,\n        // but that's not our problem.\n        var prefix = $window.location.hash;\n        if (route.prefix[0] !== \"#\") {\n            prefix = $window.location.search + prefix;\n            if (route.prefix[0] !== \"?\") {\n                prefix = $window.location.pathname + prefix;\n                if (prefix[0] !== \"/\") prefix = \"/\" + prefix;\n            }\n        }\n        // This seemingly useless `.concat()` speeds up the tests quite a bit,\n        // since the representation is consistently a relatively poorly\n        // optimized cons string.\n        var path = prefix.concat().replace(/(?:%[a-f89][a-f0-9])+/gim, $acbf8b64f436baf6$var$decodeURIComponentSave).slice(route.prefix.length);\n        var data = $rLlma(path);\n        $h7Myx(data.params, $window.history.state);\n        function reject(e) {\n            console.error(e);\n            setPath(fallbackRoute, null, {\n                replace: true\n            });\n        }\n        loop(0);\n        function loop(i) {\n            // state === 0: init\n            // state === 1: scheduled\n            // state === 2: done\n            for(; i < compiled.length; i++)if (compiled[i].check(data)) {\n                var payload = compiled[i].component;\n                var matchedRoute = compiled[i].route;\n                var localComp = payload;\n                var update = lastUpdate = function(comp) {\n                    if (update !== lastUpdate) return;\n                    if (comp === SKIP) return loop(i + 1);\n                    component = comp != null && (typeof comp.view === \"function\" || typeof comp === \"function\") ? comp : \"div\";\n                    attrs = data.params, currentPath = path, lastUpdate = null;\n                    currentResolver = payload.render ? payload : null;\n                    if (state === 2) mountRedraw.redraw();\n                    else {\n                        state = 2;\n                        mountRedraw.redraw.sync();\n                    }\n                };\n                // There's no understating how much I *wish* I could\n                // use `async`/`await` here...\n                if (payload.view || typeof payload === \"function\") {\n                    payload = {};\n                    update(localComp);\n                } else if (payload.onmatch) p.then(function() {\n                    return payload.onmatch(data.params, path, matchedRoute);\n                }).then(update, path === fallbackRoute ? null : reject);\n                else update(\"div\");\n                return;\n            }\n            if (path === fallbackRoute) throw new Error(\"Could not resolve default route \" + fallbackRoute + \".\");\n            setPath(fallbackRoute, null, {\n                replace: true\n            });\n        }\n    }\n    // Set it unconditionally so `m.route.set` and `m.route.Link` both work,\n    // even if neither `pushState` nor `hashchange` are supported. It's\n    // cleared if `hashchange` is used, since that makes it automatically\n    // async.\n    function fireAsync() {\n        if (!scheduled) {\n            scheduled = true;\n            // TODO: just do `mountRedraw.redraw()` here and elide the timer\n            // dependency. Note that this will muck with tests a *lot*, so it's\n            // not as easy of a change as it sounds.\n            callAsync(resolveRoute);\n        }\n    }\n    function setPath(path, data, options) {\n        path = $dVi4w(path, data);\n        if (ready) {\n            fireAsync();\n            var state = options ? options.state : null;\n            var title = options ? options.title : null;\n            if (options && options.replace) $window.history.replaceState(state, title, route.prefix + path);\n            else $window.history.pushState(state, title, route.prefix + path);\n        } else $window.location.href = route.prefix + path;\n    }\n    function route(root, defaultRoute, routes) {\n        if (!root) throw new TypeError(\"DOM element being rendered to does not exist.\");\n        compiled = Object.keys(routes).map(function(route) {\n            if (route[0] !== \"/\") throw new SyntaxError(\"Routes must start with a '/'.\");\n            if (/:([^\\/\\.-]+)(\\.{3})?:/.test(route)) throw new SyntaxError(\"Route parameter names must be separated with either '/', '.', or '-'.\");\n            return {\n                route: route,\n                component: routes[route],\n                check: $7QD8F(route)\n            };\n        });\n        fallbackRoute = defaultRoute;\n        if (defaultRoute != null) {\n            var defaultData = $rLlma(defaultRoute);\n            if (!compiled.some(function(i) {\n                return i.check(defaultData);\n            })) throw new ReferenceError(\"Default route doesn't match any known routes.\");\n        }\n        if (typeof $window.history.pushState === \"function\") $window.addEventListener(\"popstate\", fireAsync, false);\n        else if (route.prefix[0] === \"#\") $window.addEventListener(\"hashchange\", resolveRoute, false);\n        ready = true;\n        mountRedraw.mount(root, RouterRoot);\n        resolveRoute();\n    }\n    route.set = function(path, data, options) {\n        if (lastUpdate != null) {\n            options = options || {};\n            options.replace = true;\n        }\n        lastUpdate = null;\n        setPath(path, data, options);\n    };\n    route.get = function() {\n        return currentPath;\n    };\n    route.prefix = \"#!\";\n    route.Link = {\n        view: function(vnode) {\n            // Omit the used parameters from the rendered element - they are\n            // internal. Also, censor the various lifecycle methods.\n            //\n            // We don't strip the other parameters because for convenience we\n            // let them be specified in the selector as well.\n            var child = $fMiaA(vnode.attrs.selector || \"a\", $g0xgq(vnode.attrs, [\n                \"options\",\n                \"params\",\n                \"selector\",\n                \"onclick\"\n            ]), vnode.children);\n            var options, onclick, href;\n            // Let's provide a *right* way to disable a route link, rather than\n            // letting people screw up accessibility on accident.\n            //\n            // The attribute is coerced so users don't get surprised over\n            // `disabled: 0` resulting in a button that's somehow routable\n            // despite being visibly disabled.\n            if (child.attrs.disabled = Boolean(child.attrs.disabled)) {\n                child.attrs.href = null;\n                child.attrs[\"aria-disabled\"] = \"true\";\n            // If you *really* do want add `onclick` on a disabled link, use\n            // an `oncreate` hook to add it.\n            } else {\n                options = vnode.attrs.options;\n                onclick = vnode.attrs.onclick;\n                // Easier to build it now to keep it isomorphic.\n                href = $dVi4w(child.attrs.href, vnode.attrs.params);\n                child.attrs.href = route.prefix + href;\n                child.attrs.onclick = function(e) {\n                    var result;\n                    if (typeof onclick === \"function\") result = onclick.call(e.currentTarget, e);\n                    else if (onclick == null || typeof onclick !== \"object\") ;\n                    else if (typeof onclick.handleEvent === \"function\") onclick.handleEvent(e);\n                    // Adapted from React Router's implementation:\n                    // https://github.com/ReactTraining/react-router/blob/520a0acd48ae1b066eb0b07d6d4d1790a1d02482/packages/react-router-dom/modules/Link.js\n                    //\n                    // Try to be flexible and intuitive in how we handle links.\n                    // Fun fact: links aren't as obvious to get right as you\n                    // would expect. There's a lot more valid ways to click a\n                    // link than this, and one might want to not simply click a\n                    // link, but right click or command-click it to copy the\n                    // link target, etc. Nope, this isn't just for blind people.\n                    if (// Skip if `onclick` prevented default\n                    result !== false && !e.defaultPrevented && // Ignore everything but left clicks\n                    (e.button === 0 || e.which === 0 || e.which === 1) && // Let the browser handle `target=_blank`, etc.\n                    (!e.currentTarget.target || e.currentTarget.target === \"_self\") && // No modifier keys\n                    !e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey) {\n                        e.preventDefault();\n                        e.redraw = false;\n                        route.set(href, null, options);\n                    }\n                };\n            }\n            return child;\n        }\n    };\n    route.param = function(key) {\n        return attrs && key != null ? attrs[key] : attrs;\n    };\n    return route;\n};\n\n});\nparcelRegister(\"fMiaA\", function(module, exports) {\n\"use strict\";\n\nvar $8JOml = parcelRequire(\"8JOml\");\n\nvar $jPPUy = parcelRequire(\"jPPUy\");\n\nvar $iMmVV = parcelRequire(\"iMmVV\");\nvar $b7c96ede0f95238b$var$selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g;\nvar $b7c96ede0f95238b$var$selectorCache = {};\nfunction $b7c96ede0f95238b$var$isEmpty(object) {\n    for(var key in object)if ($iMmVV.call(object, key)) return false;\n    return true;\n}\nfunction $b7c96ede0f95238b$var$compileSelector(selector) {\n    var match, tag = \"div\", classes = [], attrs = {};\n    while(match = $b7c96ede0f95238b$var$selectorParser.exec(selector)){\n        var type = match[1], value = match[2];\n        if (type === \"\" && value !== \"\") tag = value;\n        else if (type === \"#\") attrs.id = value;\n        else if (type === \".\") classes.push(value);\n        else if (match[3][0] === \"[\") {\n            var attrValue = match[6];\n            if (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\");\n            if (match[4] === \"class\") classes.push(attrValue);\n            else attrs[match[4]] = attrValue === \"\" ? attrValue : attrValue || true;\n        }\n    }\n    if (classes.length > 0) attrs.className = classes.join(\" \");\n    return $b7c96ede0f95238b$var$selectorCache[selector] = {\n        tag: tag,\n        attrs: attrs\n    };\n}\nfunction $b7c96ede0f95238b$var$execSelector(state, vnode) {\n    var attrs = vnode.attrs;\n    var hasClass = $iMmVV.call(attrs, \"class\");\n    var className = hasClass ? attrs.class : attrs.className;\n    vnode.tag = state.tag;\n    vnode.attrs = {};\n    if (!$b7c96ede0f95238b$var$isEmpty(state.attrs) && !$b7c96ede0f95238b$var$isEmpty(attrs)) {\n        var newAttrs = {};\n        for(var key in attrs)if ($iMmVV.call(attrs, key)) newAttrs[key] = attrs[key];\n        attrs = newAttrs;\n    }\n    for(var key in state.attrs)if ($iMmVV.call(state.attrs, key) && key !== \"className\" && !$iMmVV.call(attrs, key)) attrs[key] = state.attrs[key];\n    if (className != null || state.attrs.className != null) attrs.className = className != null ? state.attrs.className != null ? String(state.attrs.className) + \" \" + String(className) : className : state.attrs.className != null ? state.attrs.className : null;\n    if (hasClass) attrs.class = null;\n    for(var key in attrs)if ($iMmVV.call(attrs, key) && key !== \"key\") {\n        vnode.attrs = attrs;\n        break;\n    }\n    return vnode;\n}\nfunction $b7c96ede0f95238b$var$hyperscript(selector) {\n    if (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") throw Error(\"The selector must be either a string or a component.\");\n    var vnode = $jPPUy.apply(1, arguments);\n    if (typeof selector === \"string\") {\n        vnode.children = $8JOml.normalizeChildren(vnode.children);\n        if (selector !== \"[\") return $b7c96ede0f95238b$var$execSelector($b7c96ede0f95238b$var$selectorCache[selector] || $b7c96ede0f95238b$var$compileSelector(selector), vnode);\n    }\n    vnode.tag = selector;\n    return vnode;\n}\nmodule.exports = $b7c96ede0f95238b$var$hyperscript;\n\n});\n\nparcelRegister(\"9JY0H\", function(module, exports) {\n/* global window */ \"use strict\";\n\nvar $c0EvV = parcelRequire(\"c0EvV\");\nif (typeof window !== \"undefined\") {\n    if (typeof window.Promise === \"undefined\") window.Promise = $c0EvV;\n    else if (!window.Promise.prototype.finally) window.Promise.prototype.finally = $c0EvV.prototype.finally;\n    module.exports = window.Promise;\n} else if (typeof $parcel$global !== \"undefined\") {\n    if (typeof $parcel$global.Promise === \"undefined\") $parcel$global.Promise = $c0EvV;\n    else if (!$parcel$global.Promise.prototype.finally) $parcel$global.Promise.prototype.finally = $c0EvV.prototype.finally;\n    module.exports = $parcel$global.Promise;\n} else module.exports = $c0EvV;\n\n});\n\nparcelRegister(\"rLlma\", function(module, exports) {\n\"use strict\";\n\nvar $kRquH = parcelRequire(\"kRquH\");\n// Returns `{path, params}` from `url`\nmodule.exports = function(url) {\n    var queryIndex = url.indexOf(\"?\");\n    var hashIndex = url.indexOf(\"#\");\n    var queryEnd = hashIndex < 0 ? url.length : hashIndex;\n    var pathEnd = queryIndex < 0 ? queryEnd : queryIndex;\n    var path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\");\n    if (!path) path = \"/\";\n    else {\n        if (path[0] !== \"/\") path = \"/\" + path;\n        if (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1);\n    }\n    return {\n        path: path,\n        params: queryIndex < 0 ? {} : $kRquH(url.slice(queryIndex + 1, queryEnd))\n    };\n};\n\n});\nparcelRegister(\"kRquH\", function(module, exports) {\n\"use strict\";\nfunction $f2fd4f186228b319$var$decodeURIComponentSave(str) {\n    try {\n        return decodeURIComponent(str);\n    } catch (err) {\n        return str;\n    }\n}\nmodule.exports = function(string) {\n    if (string === \"\" || string == null) return {};\n    if (string.charAt(0) === \"?\") string = string.slice(1);\n    var entries = string.split(\"&\"), counters = {}, data = {};\n    for(var i = 0; i < entries.length; i++){\n        var entry = entries[i].split(\"=\");\n        var key = $f2fd4f186228b319$var$decodeURIComponentSave(entry[0]);\n        var value = entry.length === 2 ? $f2fd4f186228b319$var$decodeURIComponentSave(entry[1]) : \"\";\n        if (value === \"true\") value = true;\n        else if (value === \"false\") value = false;\n        var levels = key.split(/\\]\\[?|\\[/);\n        var cursor = data;\n        if (key.indexOf(\"[\") > -1) levels.pop();\n        for(var j = 0; j < levels.length; j++){\n            var level = levels[j], nextLevel = levels[j + 1];\n            var isNumber = nextLevel == \"\" || !isNaN(parseInt(nextLevel, 10));\n            if (level === \"\") {\n                var key = levels.slice(0, j).join();\n                if (counters[key] == null) counters[key] = Array.isArray(cursor) ? cursor.length : 0;\n                level = counters[key]++;\n            } else if (level === \"__proto__\") break;\n            if (j === levels.length - 1) cursor[level] = value;\n            else {\n                // Read own properties exclusively to disallow indirect\n                // prototype pollution\n                var desc = Object.getOwnPropertyDescriptor(cursor, level);\n                if (desc != null) desc = desc.value;\n                if (desc == null) cursor[level] = desc = isNumber ? [] : {};\n                cursor = desc;\n            }\n        }\n    }\n    return data;\n};\n\n});\n\n\nparcelRegister(\"7QD8F\", function(module, exports) {\n\"use strict\";\n\nvar $rLlma = parcelRequire(\"rLlma\");\n// Compiles a template into a function that takes a resolved path (without query\n// strings) and returns an object containing the template parameters with their\n// parsed values. This expects the input of the compiled template to be the\n// output of `parsePathname`. Note that it does *not* remove query parameters\n// specified in the template.\nmodule.exports = function(template) {\n    var templateData = $rLlma(template);\n    var templateKeys = Object.keys(templateData.params);\n    var keys = [];\n    var regexp = new RegExp(\"^\" + templateData.path.replace(// I escape literal text so people can use things like `:file.:ext` or\n    // `:lang-:locale` in routes. This is all merged into one pass so I\n    // don't also accidentally escape `-` and make it harder to detect it to\n    // ban it from template parameters.\n    /:([^\\/.-]+)(\\.{3}|\\.(?!\\.)|-)?|[\\\\^$*+.()|\\[\\]{}]/g, function(m, key, extra) {\n        if (key == null) return \"\\\\\" + m;\n        keys.push({\n            k: key,\n            r: extra === \"...\"\n        });\n        if (extra === \"...\") return \"(.*)\";\n        if (extra === \".\") return \"([^/]+)\\\\.\";\n        return \"([^/]+)\" + (extra || \"\");\n    }) + \"$\");\n    return function(data) {\n        // First, check the params. Usually, there isn't any, and it's just\n        // checking a static set.\n        for(var i = 0; i < templateKeys.length; i++){\n            if (templateData.params[templateKeys[i]] !== data.params[templateKeys[i]]) return false;\n        }\n        // If no interpolations exist, let's skip all the ceremony\n        if (!keys.length) return regexp.test(data.path);\n        var values = regexp.exec(data.path);\n        if (values == null) return false;\n        for(var i = 0; i < keys.length; i++)data.params[keys[i].k] = keys[i].r ? values[i + 1] : decodeURIComponent(values[i + 1]);\n        return true;\n    };\n};\n\n});\n\nparcelRegister(\"g0xgq\", function(module, exports) {\n\"use strict\";\n\nvar $iMmVV = parcelRequire(\"iMmVV\");\n// Words in RegExp literals are sometimes mangled incorrectly by the internal bundler, so use RegExp().\nvar $ba7672f68f21621e$var$magic = new RegExp(\"^(?:key|oninit|oncreate|onbeforeupdate|onupdate|onbeforeremove|onremove)$\");\nmodule.exports = function(attrs, extras) {\n    var result = {};\n    if (extras != null) {\n        for(var key in attrs)if ($iMmVV.call(attrs, key) && !$ba7672f68f21621e$var$magic.test(key) && extras.indexOf(key) < 0) result[key] = attrs[key];\n    } else {\n        for(var key in attrs)if ($iMmVV.call(attrs, key) && !$ba7672f68f21621e$var$magic.test(key)) result[key] = attrs[key];\n    }\n    return result;\n};\n\n});\n\n\n\nparcelRegister(\"f1bNS\", function(module, exports) {\n(function() {\n    \"use strict\";\n    /* eslint-enable */ Stream.SKIP = {};\n    Stream.lift = lift;\n    Stream.scan = scan;\n    Stream.merge = merge;\n    Stream.combine = combine;\n    Stream.scanMerge = scanMerge;\n    Stream[\"fantasy-land/of\"] = Stream;\n    var warnedHalt = false;\n    Object.defineProperty(Stream, \"HALT\", {\n        get: function() {\n            warnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n            warnedHalt = true;\n            return Stream.SKIP;\n        }\n    });\n    function Stream(value) {\n        var dependentStreams = [];\n        var dependentFns = [];\n        function stream(v) {\n            if (arguments.length && v !== Stream.SKIP) {\n                value = v;\n                if (open(stream)) {\n                    stream._changing();\n                    stream._state = \"active\";\n                    // Cloning the list to ensure it's still iterated in intended\n                    // order\n                    dependentStreams.slice().forEach(function(s, i) {\n                        if (open(s)) s(this[i](value));\n                    }, dependentFns.slice());\n                }\n            }\n            return value;\n        }\n        stream.constructor = Stream;\n        stream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n        stream._parents = [];\n        stream._changing = function() {\n            if (open(stream)) stream._state = \"changing\";\n            dependentStreams.forEach(function(s) {\n                s._changing();\n            });\n        };\n        stream._map = function(fn, ignoreInitial) {\n            var target = ignoreInitial ? Stream() : Stream(fn(value));\n            target._parents.push(stream);\n            dependentStreams.push(target);\n            dependentFns.push(fn);\n            return target;\n        };\n        stream.map = function(fn) {\n            return stream._map(fn, stream._state !== \"active\");\n        };\n        var end;\n        function createEnd() {\n            end = Stream();\n            end.map(function(value) {\n                if (value === true) {\n                    stream._parents.forEach(function(p) {\n                        p._unregisterChild(stream);\n                    });\n                    stream._state = \"ended\";\n                    stream._parents.length = dependentStreams.length = dependentFns.length = 0;\n                }\n                return value;\n            });\n            return end;\n        }\n        stream.toJSON = function() {\n            return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value;\n        };\n        stream[\"fantasy-land/map\"] = stream.map;\n        stream[\"fantasy-land/ap\"] = function(x) {\n            return combine(function(s1, s2) {\n                return s1()(s2());\n            }, [\n                x,\n                stream\n            ]);\n        };\n        stream._unregisterChild = function(child) {\n            var childIndex = dependentStreams.indexOf(child);\n            if (childIndex !== -1) {\n                dependentStreams.splice(childIndex, 1);\n                dependentFns.splice(childIndex, 1);\n            }\n        };\n        Object.defineProperty(stream, \"end\", {\n            get: function() {\n                return end || createEnd();\n            }\n        });\n        return stream;\n    }\n    function combine(fn, streams) {\n        var ready = streams.every(function(s) {\n            if (s.constructor !== Stream) throw new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream.\");\n            return s._state === \"active\";\n        });\n        var stream = ready ? Stream(fn.apply(null, streams.concat([\n            streams\n        ]))) : Stream();\n        var changed = [];\n        var mappers = streams.map(function(s) {\n            return s._map(function(value) {\n                changed.push(s);\n                if (ready || streams.every(function(s) {\n                    return s._state !== \"pending\";\n                })) {\n                    ready = true;\n                    stream(fn.apply(null, streams.concat([\n                        changed\n                    ])));\n                    changed = [];\n                }\n                return value;\n            }, true);\n        });\n        var endStream = stream.end.map(function(value) {\n            if (value === true) {\n                mappers.forEach(function(mapper) {\n                    mapper.end(true);\n                });\n                endStream.end(true);\n            }\n            return undefined;\n        });\n        return stream;\n    }\n    function merge(streams) {\n        return combine(function() {\n            return streams.map(function(s) {\n                return s();\n            });\n        }, streams);\n    }\n    function scan(fn, acc, origin) {\n        var stream = origin.map(function(v) {\n            var next = fn(acc, v);\n            if (next !== Stream.SKIP) acc = next;\n            return next;\n        });\n        stream(acc);\n        return stream;\n    }\n    function scanMerge(tuples, seed) {\n        var streams = tuples.map(function(tuple) {\n            return tuple[0];\n        });\n        var stream = combine(function() {\n            var changed = arguments[arguments.length - 1];\n            streams.forEach(function(stream, i) {\n                if (changed.indexOf(stream) > -1) seed = tuples[i][1](seed, stream());\n            });\n            return seed;\n        }, streams);\n        stream(seed);\n        return stream;\n    }\n    function lift() {\n        var fn = arguments[0];\n        var streams = Array.prototype.slice.call(arguments, 1);\n        return merge(streams).map(function(streams) {\n            return fn.apply(undefined, streams);\n        });\n    }\n    function open(s) {\n        return s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\";\n    }\n    module.exports = Stream;\n})();\n\n});\n\nparcelRegister(\"kWuxe\", function(module, exports) {\n/**\n * WEBMIDI.js v3.1.6\n * A JavaScript library to kickstart your MIDI projects\n * https://webmidijs.org\n * Build generated on June 4th, 2023.\n *\n * © Copyright 2015-2023, Jean-Philippe Côté.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */ \nvar $17tgv = parcelRequire(\"17tgv\");\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: !0\n});\nclass EventEmitter {\n    constructor(e = !1){\n        this.eventMap = {}, this.eventsSuspended = 1 == e;\n    }\n    addListener(e, t, n = {}) {\n        if (\"string\" == typeof e && e.length < 1 || e instanceof String && e.length < 1 || \"string\" != typeof e && !(e instanceof String) && e !== EventEmitter.ANY_EVENT) throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n        if (\"function\" != typeof t) throw new TypeError(\"The callback must be a function.\");\n        const r = new Listener(e, this, t, n);\n        return this.eventMap[e] || (this.eventMap[e] = []), n.prepend ? this.eventMap[e].unshift(r) : this.eventMap[e].push(r), r;\n    }\n    addOneTimeListener(e, t, n = {}) {\n        n.remaining = 1, this.addListener(e, t, n);\n    }\n    static get ANY_EVENT() {\n        return Symbol.for(\"Any event\");\n    }\n    hasListener(e, t) {\n        if (void 0 === e) return !!(this.eventMap[EventEmitter.ANY_EVENT] && this.eventMap[EventEmitter.ANY_EVENT].length > 0) || Object.entries(this.eventMap).some(([, e])=>e.length > 0);\n        if (this.eventMap[e] && this.eventMap[e].length > 0) {\n            if (t instanceof Listener) return this.eventMap[e].filter((e)=>e === t).length > 0;\n            if (\"function\" == typeof t) return this.eventMap[e].filter((e)=>e.callback === t).length > 0;\n            return null == t;\n        }\n        return !1;\n    }\n    get eventNames() {\n        return Object.keys(this.eventMap);\n    }\n    getListeners(e) {\n        return this.eventMap[e] || [];\n    }\n    suspendEvent(e) {\n        this.getListeners(e).forEach((e)=>{\n            e.suspended = !0;\n        });\n    }\n    unsuspendEvent(e) {\n        this.getListeners(e).forEach((e)=>{\n            e.suspended = !1;\n        });\n    }\n    getListenerCount(e) {\n        return this.getListeners(e).length;\n    }\n    emit(e, ...t) {\n        if (\"string\" != typeof e && !(e instanceof String)) throw new TypeError(\"The 'event' parameter must be a string.\");\n        if (this.eventsSuspended) return;\n        let n = [], r = this.eventMap[EventEmitter.ANY_EVENT] || [];\n        return this.eventMap[e] && (r = r.concat(this.eventMap[e])), r.forEach((e)=>{\n            if (e.suspended) return;\n            let r = [\n                ...t\n            ];\n            Array.isArray(e.arguments) && (r = r.concat(e.arguments)), e.remaining > 0 && (n.push(e.callback.apply(e.context, r)), e.count++), --e.remaining < 1 && e.remove();\n        }), n;\n    }\n    removeListener(e, t, n = {}) {\n        if (void 0 === e) return void (this.eventMap = {});\n        if (!this.eventMap[e]) return;\n        let r = this.eventMap[e].filter((e)=>t && e.callback !== t || n.remaining && n.remaining !== e.remaining || n.context && n.context !== e.context);\n        r.length ? this.eventMap[e] = r : delete this.eventMap[e];\n    }\n    async waitFor(e, t = {}) {\n        return t.duration = parseInt(t.duration), (isNaN(t.duration) || t.duration <= 0) && (t.duration = 1 / 0), new Promise((n, r)=>{\n            let i, s = this.addListener(e, ()=>{\n                clearTimeout(i), n();\n            }, {\n                remaining: 1\n            });\n            t.duration !== 1 / 0 && (i = setTimeout(()=>{\n                s.remove(), r(\"The duration expired before the event was emitted.\");\n            }, t.duration));\n        });\n    }\n    get eventCount() {\n        return Object.keys(this.eventMap).length;\n    }\n}\nclass Listener {\n    constructor(e, t, n, r = {}){\n        if (\"string\" != typeof e && !(e instanceof String) && e !== EventEmitter.ANY_EVENT) throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n        if (!t) throw new ReferenceError(\"The 'target' parameter is mandatory.\");\n        if (\"function\" != typeof n) throw new TypeError(\"The 'callback' must be a function.\");\n        void 0 === r.arguments || Array.isArray(r.arguments) || (r.arguments = [\n            r.arguments\n        ]), (r = Object.assign({\n            context: t,\n            remaining: 1 / 0,\n            arguments: void 0,\n            duration: 1 / 0\n        }, r)).duration !== 1 / 0 && setTimeout(()=>this.remove(), r.duration), this.arguments = r.arguments, this.callback = n, this.context = r.context, this.count = 0, this.event = e, this.remaining = parseInt(r.remaining) >= 1 ? parseInt(r.remaining) : 1 / 0, this.suspended = !1, this.target = t;\n    }\n    remove() {\n        this.target.removeListener(this.event, this.callback, {\n            context: this.context,\n            remaining: this.remaining\n        });\n    }\n}\n/**\n * The `Enumerations` class contains enumerations and arrays of elements used throughout the\n * library. All its properties are static and should be referenced using the class name. For\n * example: `Enumerations.CHANNEL_MESSAGES`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */ class Enumerations {\n    static get MIDI_CHANNEL_MESSAGES() {\n        return this.validation && console.warn(\"The MIDI_CHANNEL_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MESSAGES enum instead.\"), Enumerations.CHANNEL_MESSAGES;\n    }\n    static get CHANNEL_MESSAGES() {\n        return {\n            noteoff: 8,\n            noteon: 9,\n            keyaftertouch: 10,\n            controlchange: 11,\n            programchange: 12,\n            channelaftertouch: 13,\n            pitchbend: 14\n        };\n    }\n    static get CHANNEL_NUMBERS() {\n        return [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16\n        ];\n    }\n    static get MIDI_CHANNEL_NUMBERS() {\n        return this.validation && console.warn(\"The MIDI_CHANNEL_NUMBERS array has been deprecated. Use the Enumerations.CHANNEL_NUMBERS array instead.\"), [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16\n        ];\n    }\n    static get CHANNEL_MODE_MESSAGES() {\n        return {\n            allsoundoff: 120,\n            resetallcontrollers: 121,\n            localcontrol: 122,\n            allnotesoff: 123,\n            omnimodeoff: 124,\n            omnimodeon: 125,\n            monomodeon: 126,\n            polymodeon: 127\n        };\n    }\n    static get MIDI_CHANNEL_MODE_MESSAGES() {\n        return this.validation && console.warn(\"The MIDI_CHANNEL_MODE_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MODE_MESSAGES enum instead.\"), Enumerations.CHANNEL_MODE_MESSAGES;\n    }\n    static get MIDI_CONTROL_CHANGE_MESSAGES() {\n        return this.validation && console.warn(\"The MIDI_CONTROL_CHANGE_MESSAGES enum has been deprecated. Use the Enumerations.CONTROL_CHANGE_MESSAGES array instead.\"), {\n            bankselectcoarse: 0,\n            modulationwheelcoarse: 1,\n            breathcontrollercoarse: 2,\n            controller3: 3,\n            footcontrollercoarse: 4,\n            portamentotimecoarse: 5,\n            dataentrycoarse: 6,\n            volumecoarse: 7,\n            balancecoarse: 8,\n            controller9: 9,\n            pancoarse: 10,\n            expressioncoarse: 11,\n            effectcontrol1coarse: 12,\n            effectcontrol2coarse: 13,\n            controller14: 14,\n            controller15: 15,\n            generalpurposeslider1: 16,\n            generalpurposeslider2: 17,\n            generalpurposeslider3: 18,\n            generalpurposeslider4: 19,\n            controller20: 20,\n            controller21: 21,\n            controller22: 22,\n            controller23: 23,\n            controller24: 24,\n            controller25: 25,\n            controller26: 26,\n            controller27: 27,\n            controller28: 28,\n            controller29: 29,\n            controller30: 30,\n            controller31: 31,\n            bankselectfine: 32,\n            modulationwheelfine: 33,\n            breathcontrollerfine: 34,\n            controller35: 35,\n            footcontrollerfine: 36,\n            portamentotimefine: 37,\n            dataentryfine: 38,\n            volumefine: 39,\n            balancefine: 40,\n            controller41: 41,\n            panfine: 42,\n            expressionfine: 43,\n            effectcontrol1fine: 44,\n            effectcontrol2fine: 45,\n            controller46: 46,\n            controller47: 47,\n            controller48: 48,\n            controller49: 49,\n            controller50: 50,\n            controller51: 51,\n            controller52: 52,\n            controller53: 53,\n            controller54: 54,\n            controller55: 55,\n            controller56: 56,\n            controller57: 57,\n            controller58: 58,\n            controller59: 59,\n            controller60: 60,\n            controller61: 61,\n            controller62: 62,\n            controller63: 63,\n            holdpedal: 64,\n            portamento: 65,\n            sustenutopedal: 66,\n            softpedal: 67,\n            legatopedal: 68,\n            hold2pedal: 69,\n            soundvariation: 70,\n            resonance: 71,\n            soundreleasetime: 72,\n            soundattacktime: 73,\n            brightness: 74,\n            soundcontrol6: 75,\n            soundcontrol7: 76,\n            soundcontrol8: 77,\n            soundcontrol9: 78,\n            soundcontrol10: 79,\n            generalpurposebutton1: 80,\n            generalpurposebutton2: 81,\n            generalpurposebutton3: 82,\n            generalpurposebutton4: 83,\n            controller84: 84,\n            controller85: 85,\n            controller86: 86,\n            controller87: 87,\n            controller88: 88,\n            controller89: 89,\n            controller90: 90,\n            reverblevel: 91,\n            tremololevel: 92,\n            choruslevel: 93,\n            celestelevel: 94,\n            phaserlevel: 95,\n            databuttonincrement: 96,\n            databuttondecrement: 97,\n            nonregisteredparametercoarse: 98,\n            nonregisteredparameterfine: 99,\n            registeredparametercoarse: 100,\n            registeredparameterfine: 101,\n            controller102: 102,\n            controller103: 103,\n            controller104: 104,\n            controller105: 105,\n            controller106: 106,\n            controller107: 107,\n            controller108: 108,\n            controller109: 109,\n            controller110: 110,\n            controller111: 111,\n            controller112: 112,\n            controller113: 113,\n            controller114: 114,\n            controller115: 115,\n            controller116: 116,\n            controller117: 117,\n            controller118: 118,\n            controller119: 119,\n            allsoundoff: 120,\n            resetallcontrollers: 121,\n            localcontrol: 122,\n            allnotesoff: 123,\n            omnimodeoff: 124,\n            omnimodeon: 125,\n            monomodeon: 126,\n            polymodeon: 127\n        };\n    }\n    static get CONTROL_CHANGE_MESSAGES() {\n        return [\n            {\n                number: 0,\n                name: \"bankselectcoarse\",\n                description: \"Bank Select (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 1,\n                name: \"modulationwheelcoarse\",\n                description: \"Modulation Wheel (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 2,\n                name: \"breathcontrollercoarse\",\n                description: \"Breath Controller (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 3,\n                name: \"controller3\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 4,\n                name: \"footcontrollercoarse\",\n                description: \"Foot Controller (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 5,\n                name: \"portamentotimecoarse\",\n                description: \"Portamento Time (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 6,\n                name: \"dataentrycoarse\",\n                description: \"Data Entry (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 7,\n                name: \"volumecoarse\",\n                description: \"Channel Volume (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 8,\n                name: \"balancecoarse\",\n                description: \"Balance (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 9,\n                name: \"controller9\",\n                description: \"Controller 9 (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 10,\n                name: \"pancoarse\",\n                description: \"Pan (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 11,\n                name: \"expressioncoarse\",\n                description: \"Expression Controller (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 12,\n                name: \"effectcontrol1coarse\",\n                description: \"Effect Control 1 (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 13,\n                name: \"effectcontrol2coarse\",\n                description: \"Effect Control 2 (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 14,\n                name: \"controller14\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 15,\n                name: \"controller15\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 16,\n                name: \"generalpurposecontroller1\",\n                description: \"General Purpose Controller 1 (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 17,\n                name: \"generalpurposecontroller2\",\n                description: \"General Purpose Controller 2 (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 18,\n                name: \"generalpurposecontroller3\",\n                description: \"General Purpose Controller 3 (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 19,\n                name: \"generalpurposecontroller4\",\n                description: \"General Purpose Controller 4 (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 20,\n                name: \"controller20\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 21,\n                name: \"controller21\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 22,\n                name: \"controller22\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 23,\n                name: \"controller23\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 24,\n                name: \"controller24\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 25,\n                name: \"controller25\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 26,\n                name: \"controller26\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 27,\n                name: \"controller27\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 28,\n                name: \"controller28\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 29,\n                name: \"controller29\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 30,\n                name: \"controller30\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 31,\n                name: \"controller31\",\n                description: \"Undefined\",\n                position: \"msb\"\n            },\n            {\n                number: 32,\n                name: \"bankselectfine\",\n                description: \"Bank Select (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 33,\n                name: \"modulationwheelfine\",\n                description: \"Modulation Wheel (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 34,\n                name: \"breathcontrollerfine\",\n                description: \"Breath Controller (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 35,\n                name: \"controller35\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 36,\n                name: \"footcontrollerfine\",\n                description: \"Foot Controller (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 37,\n                name: \"portamentotimefine\",\n                description: \"Portamento Time (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 38,\n                name: \"dataentryfine\",\n                description: \"Data Entry (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 39,\n                name: \"channelvolumefine\",\n                description: \"Channel Volume (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 40,\n                name: \"balancefine\",\n                description: \"Balance (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 41,\n                name: \"controller41\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 42,\n                name: \"panfine\",\n                description: \"Pan (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 43,\n                name: \"expressionfine\",\n                description: \"Expression Controller (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 44,\n                name: \"effectcontrol1fine\",\n                description: \"Effect control 1 (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 45,\n                name: \"effectcontrol2fine\",\n                description: \"Effect control 2 (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 46,\n                name: \"controller46\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 47,\n                name: \"controller47\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 48,\n                name: \"controller48\",\n                description: \"General Purpose Controller 1 (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 49,\n                name: \"controller49\",\n                description: \"General Purpose Controller 2 (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 50,\n                name: \"controller50\",\n                description: \"General Purpose Controller 3 (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 51,\n                name: \"controller51\",\n                description: \"General Purpose Controller 4 (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 52,\n                name: \"controller52\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 53,\n                name: \"controller53\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 54,\n                name: \"controller54\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 55,\n                name: \"controller55\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 56,\n                name: \"controller56\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 57,\n                name: \"controller57\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 58,\n                name: \"controller58\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 59,\n                name: \"controller59\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 60,\n                name: \"controller60\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 61,\n                name: \"controller61\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 62,\n                name: \"controller62\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 63,\n                name: \"controller63\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 64,\n                name: \"damperpedal\",\n                description: \"Damper Pedal On/Off\"\n            },\n            {\n                number: 65,\n                name: \"portamento\",\n                description: \"Portamento On/Off\"\n            },\n            {\n                number: 66,\n                name: \"sostenuto\",\n                description: \"Sostenuto On/Off\"\n            },\n            {\n                number: 67,\n                name: \"softpedal\",\n                description: \"Soft Pedal On/Off\"\n            },\n            {\n                number: 68,\n                name: \"legatopedal\",\n                description: \"Legato Pedal On/Off\"\n            },\n            {\n                number: 69,\n                name: \"hold2\",\n                description: \"Hold 2 On/Off\"\n            },\n            {\n                number: 70,\n                name: \"soundvariation\",\n                description: \"Sound Variation\",\n                position: \"lsb\"\n            },\n            {\n                number: 71,\n                name: \"resonance\",\n                description: \"Resonance\",\n                position: \"lsb\"\n            },\n            {\n                number: 72,\n                name: \"releasetime\",\n                description: \"Release Time\",\n                position: \"lsb\"\n            },\n            {\n                number: 73,\n                name: \"attacktime\",\n                description: \"Attack Time\",\n                position: \"lsb\"\n            },\n            {\n                number: 74,\n                name: \"brightness\",\n                description: \"Brightness\",\n                position: \"lsb\"\n            },\n            {\n                number: 75,\n                name: \"decaytime\",\n                description: \"Decay Time\",\n                position: \"lsb\"\n            },\n            {\n                number: 76,\n                name: \"vibratorate\",\n                description: \"Vibrato Rate\",\n                position: \"lsb\"\n            },\n            {\n                number: 77,\n                name: \"vibratodepth\",\n                description: \"Vibrato Depth\",\n                position: \"lsb\"\n            },\n            {\n                number: 78,\n                name: \"vibratodelay\",\n                description: \"Vibrato Delay\",\n                position: \"lsb\"\n            },\n            {\n                number: 79,\n                name: \"controller79\",\n                description: \"Undefined\",\n                position: \"lsb\"\n            },\n            {\n                number: 80,\n                name: \"generalpurposecontroller5\",\n                description: \"General Purpose Controller 5\",\n                position: \"lsb\"\n            },\n            {\n                number: 81,\n                name: \"generalpurposecontroller6\",\n                description: \"General Purpose Controller 6\",\n                position: \"lsb\"\n            },\n            {\n                number: 82,\n                name: \"generalpurposecontroller7\",\n                description: \"General Purpose Controller 7\",\n                position: \"lsb\"\n            },\n            {\n                number: 83,\n                name: \"generalpurposecontroller8\",\n                description: \"General Purpose Controller 8\",\n                position: \"lsb\"\n            },\n            {\n                number: 84,\n                name: \"portamentocontrol\",\n                description: \"Portamento Control\",\n                position: \"lsb\"\n            },\n            {\n                number: 85,\n                name: \"controller85\",\n                description: \"Undefined\"\n            },\n            {\n                number: 86,\n                name: \"controller86\",\n                description: \"Undefined\"\n            },\n            {\n                number: 87,\n                name: \"controller87\",\n                description: \"Undefined\"\n            },\n            {\n                number: 88,\n                name: \"highresolutionvelocityprefix\",\n                description: \"High Resolution Velocity Prefix\",\n                position: \"lsb\"\n            },\n            {\n                number: 89,\n                name: \"controller89\",\n                description: \"Undefined\"\n            },\n            {\n                number: 90,\n                name: \"controller90\",\n                description: \"Undefined\"\n            },\n            {\n                number: 91,\n                name: \"effect1depth\",\n                description: \"Effects 1 Depth (Reverb Send Level)\"\n            },\n            {\n                number: 92,\n                name: \"effect2depth\",\n                description: \"Effects 2 Depth\"\n            },\n            {\n                number: 93,\n                name: \"effect3depth\",\n                description: \"Effects 3 Depth (Chorus Send Level)\"\n            },\n            {\n                number: 94,\n                name: \"effect4depth\",\n                description: \"Effects 4 Depth\"\n            },\n            {\n                number: 95,\n                name: \"effect5depth\",\n                description: \"Effects 5 Depth\"\n            },\n            {\n                number: 96,\n                name: \"dataincrement\",\n                description: \"Data Increment\"\n            },\n            {\n                number: 97,\n                name: \"datadecrement\",\n                description: \"Data Decrement\"\n            },\n            {\n                number: 98,\n                name: \"nonregisteredparameterfine\",\n                description: \"Non-Registered Parameter Number (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 99,\n                name: \"nonregisteredparametercoarse\",\n                description: \"Non-Registered Parameter Number (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 100,\n                name: \"registeredparameterfine\",\n                description: \"Registered Parameter Number (Fine)\",\n                position: \"lsb\"\n            },\n            {\n                number: 101,\n                name: \"registeredparametercoarse\",\n                description: \"Registered Parameter Number (Coarse)\",\n                position: \"msb\"\n            },\n            {\n                number: 102,\n                name: \"controller102\",\n                description: \"Undefined\"\n            },\n            {\n                number: 103,\n                name: \"controller103\",\n                description: \"Undefined\"\n            },\n            {\n                number: 104,\n                name: \"controller104\",\n                description: \"Undefined\"\n            },\n            {\n                number: 105,\n                name: \"controller105\",\n                description: \"Undefined\"\n            },\n            {\n                number: 106,\n                name: \"controller106\",\n                description: \"Undefined\"\n            },\n            {\n                number: 107,\n                name: \"controller107\",\n                description: \"Undefined\"\n            },\n            {\n                number: 108,\n                name: \"controller108\",\n                description: \"Undefined\"\n            },\n            {\n                number: 109,\n                name: \"controller109\",\n                description: \"Undefined\"\n            },\n            {\n                number: 110,\n                name: \"controller110\",\n                description: \"Undefined\"\n            },\n            {\n                number: 111,\n                name: \"controller111\",\n                description: \"Undefined\"\n            },\n            {\n                number: 112,\n                name: \"controller112\",\n                description: \"Undefined\"\n            },\n            {\n                number: 113,\n                name: \"controller113\",\n                description: \"Undefined\"\n            },\n            {\n                number: 114,\n                name: \"controller114\",\n                description: \"Undefined\"\n            },\n            {\n                number: 115,\n                name: \"controller115\",\n                description: \"Undefined\"\n            },\n            {\n                number: 116,\n                name: \"controller116\",\n                description: \"Undefined\"\n            },\n            {\n                number: 117,\n                name: \"controller117\",\n                description: \"Undefined\"\n            },\n            {\n                number: 118,\n                name: \"controller118\",\n                description: \"Undefined\"\n            },\n            {\n                number: 119,\n                name: \"controller119\",\n                description: \"Undefined\"\n            },\n            {\n                number: 120,\n                name: \"allsoundoff\",\n                description: \"All Sound Off\"\n            },\n            {\n                number: 121,\n                name: \"resetallcontrollers\",\n                description: \"Reset All Controllers\"\n            },\n            {\n                number: 122,\n                name: \"localcontrol\",\n                description: \"Local Control On/Off\"\n            },\n            {\n                number: 123,\n                name: \"allnotesoff\",\n                description: \"All Notes Off\"\n            },\n            {\n                number: 124,\n                name: \"omnimodeoff\",\n                description: \"Omni Mode Off\"\n            },\n            {\n                number: 125,\n                name: \"omnimodeon\",\n                description: \"Omni Mode On\"\n            },\n            {\n                number: 126,\n                name: \"monomodeon\",\n                description: \"Mono Mode On\"\n            },\n            {\n                number: 127,\n                name: \"polymodeon\",\n                description: \"Poly Mode On\"\n            }\n        ];\n    }\n    static get REGISTERED_PARAMETERS() {\n        return {\n            pitchbendrange: [\n                0,\n                0\n            ],\n            channelfinetuning: [\n                0,\n                1\n            ],\n            channelcoarsetuning: [\n                0,\n                2\n            ],\n            tuningprogram: [\n                0,\n                3\n            ],\n            tuningbank: [\n                0,\n                4\n            ],\n            modulationrange: [\n                0,\n                5\n            ],\n            azimuthangle: [\n                61,\n                0\n            ],\n            elevationangle: [\n                61,\n                1\n            ],\n            gain: [\n                61,\n                2\n            ],\n            distanceratio: [\n                61,\n                3\n            ],\n            maximumdistance: [\n                61,\n                4\n            ],\n            maximumdistancegain: [\n                61,\n                5\n            ],\n            referencedistanceratio: [\n                61,\n                6\n            ],\n            panspreadangle: [\n                61,\n                7\n            ],\n            rollangle: [\n                61,\n                8\n            ]\n        };\n    }\n    static get MIDI_REGISTERED_PARAMETERS() {\n        return this.validation && console.warn(\"The MIDI_REGISTERED_PARAMETERS enum has been deprecated. Use the Enumerations.REGISTERED_PARAMETERS enum instead.\"), Enumerations.MIDI_REGISTERED_PARAMETERS;\n    }\n    static get SYSTEM_MESSAGES() {\n        return {\n            sysex: 240,\n            timecode: 241,\n            songposition: 242,\n            songselect: 243,\n            tunerequest: 246,\n            tuningrequest: 246,\n            sysexend: 247,\n            clock: 248,\n            start: 250,\n            continue: 251,\n            stop: 252,\n            activesensing: 254,\n            reset: 255,\n            midimessage: 0,\n            unknownsystemmessage: -1\n        };\n    }\n    static get MIDI_SYSTEM_MESSAGES() {\n        return this.validation && console.warn(\"The MIDI_SYSTEM_MESSAGES enum has been deprecated. Use the Enumerations.SYSTEM_MESSAGES enum instead.\"), Enumerations.SYSTEM_MESSAGES;\n    }\n    static get CHANNEL_EVENTS() {\n        return [\n            \"noteoff\",\n            \"controlchange\",\n            \"noteon\",\n            \"keyaftertouch\",\n            \"programchange\",\n            \"channelaftertouch\",\n            \"pitchbend\",\n            \"allnotesoff\",\n            \"allsoundoff\",\n            \"localcontrol\",\n            \"monomode\",\n            \"omnimode\",\n            \"resetallcontrollers\",\n            \"nrpn\",\n            \"nrpn-dataentrycoarse\",\n            \"nrpn-dataentryfine\",\n            \"nrpn-dataincrement\",\n            \"nrpn-datadecrement\",\n            \"rpn\",\n            \"rpn-dataentrycoarse\",\n            \"rpn-dataentryfine\",\n            \"rpn-dataincrement\",\n            \"rpn-datadecrement\",\n            \"nrpn-databuttonincrement\",\n            \"nrpn-databuttondecrement\",\n            \"rpn-databuttonincrement\",\n            \"rpn-databuttondecrement\"\n        ];\n    }\n}\n/**\n * The `Note` class represents a single musical note such as `\"D3\"`, `\"G#4\"`, `\"F-1\"`, `\"Gb7\"`, etc.\n *\n * `Note` objects can be played back on a single channel by calling\n * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same\n * output, by calling [`Output.playNote()`]{@link Output#playNote}.\n *\n * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.\n * These can be changed by passing in the appropriate option. It is also possible to set a\n * system-wide default for attack and release velocities by using the\n * [`WebMidi.defaults`](WebMidi#defaults) property.\n *\n * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and\n * [`rawRelease`](#rawRelease) to both get and set the values.\n *\n * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped\n * when the duration has elapsed by sending a `\"noteoff\"` event. By default, the duration is set to\n * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a\n * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},\n * [`Output.stopNote()`]{@link Output#stopNote} or similar.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */ class Note {\n    constructor(e, t = {}){\n        this.duration = wm.defaults.note.duration, this.attack = wm.defaults.note.attack, this.release = wm.defaults.note.release, null != t.duration && (this.duration = t.duration), null != t.attack && (this.attack = t.attack), null != t.rawAttack && (this.attack = Utilities.from7bitToFloat(t.rawAttack)), null != t.release && (this.release = t.release), null != t.rawRelease && (this.release = Utilities.from7bitToFloat(t.rawRelease)), Number.isInteger(e) ? this.identifier = Utilities.toNoteIdentifier(e) : this.identifier = e;\n    }\n    get identifier() {\n        return this._name + (this._accidental || \"\") + this._octave;\n    }\n    set identifier(e) {\n        const t = Utilities.getNoteDetails(e);\n        if (wm.validation && !e) throw new Error(\"Invalid note identifier\");\n        this._name = t.name, this._accidental = t.accidental, this._octave = t.octave;\n    }\n    get name() {\n        return this._name;\n    }\n    set name(e) {\n        if (wm.validation && (e = e.toUpperCase(), ![\n            \"C\",\n            \"D\",\n            \"E\",\n            \"F\",\n            \"G\",\n            \"A\",\n            \"B\"\n        ].includes(e))) throw new Error(\"Invalid name value\");\n        this._name = e;\n    }\n    get accidental() {\n        return this._accidental;\n    }\n    set accidental(e) {\n        if (wm.validation && (e = e.toLowerCase(), ![\n            \"#\",\n            \"##\",\n            \"b\",\n            \"bb\"\n        ].includes(e))) throw new Error(\"Invalid accidental value\");\n        this._accidental = e;\n    }\n    get octave() {\n        return this._octave;\n    }\n    set octave(e) {\n        if (wm.validation && (e = parseInt(e), isNaN(e))) throw new Error(\"Invalid octave value\");\n        this._octave = e;\n    }\n    get duration() {\n        return this._duration;\n    }\n    set duration(e) {\n        if (wm.validation && (e = parseFloat(e), isNaN(e) || null === e || e < 0)) throw new RangeError(\"Invalid duration value.\");\n        this._duration = e;\n    }\n    get attack() {\n        return this._attack;\n    }\n    set attack(e) {\n        if (wm.validation && (e = parseFloat(e), isNaN(e) || !(e >= 0 && e <= 1))) throw new RangeError(\"Invalid attack value.\");\n        this._attack = e;\n    }\n    get release() {\n        return this._release;\n    }\n    set release(e) {\n        if (wm.validation && (e = parseFloat(e), isNaN(e) || !(e >= 0 && e <= 1))) throw new RangeError(\"Invalid release value.\");\n        this._release = e;\n    }\n    get rawAttack() {\n        return Utilities.fromFloatTo7Bit(this._attack);\n    }\n    set rawAttack(e) {\n        this._attack = Utilities.from7bitToFloat(e);\n    }\n    get rawRelease() {\n        return Utilities.fromFloatTo7Bit(this._release);\n    }\n    set rawRelease(e) {\n        this._release = Utilities.from7bitToFloat(e);\n    }\n    get number() {\n        return Utilities.toNoteNumber(this.identifier);\n    }\n    getOffsetNumber(e = 0, t = 0) {\n        return wm.validation && (e = parseInt(e) || 0, t = parseInt(t) || 0), Math.min(Math.max(this.number + 12 * e + t, 0), 127);\n    }\n}\n/**\n * The `Utilities` class contains general-purpose utility methods. All methods are static and\n * should be called using the class name. For example: `Utilities.getNoteDetails(\"C4\")`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */ class Utilities {\n    /**\n   * Returns a MIDI note number matching the identifier passed in the form of a string. The\n   * identifier must include the octave number. The identifier also optionally include a sharp (#),\n   * a double sharp (##), a flat (b) or a double flat (bb) symbol. For example, these are all valid\n   * identifiers: C5, G4, D#-1, F0, Gb7, Eb-1, Abb4, B##6, etc.\n   *\n   * When converting note identifiers to numbers, C4 is considered to be middle C (MIDI note number\n   * 60) as per the scientific pitch notation standard.\n   *\n   * The resulting note number can be offset by using the `octaveOffset` parameter.\n   *\n   * @param identifier {string} The identifier in the form of a letter, followed by an optional \"#\",\n   * \"##\", \"b\" or \"bb\" followed by the octave number. For exemple: C5, G4, D#-1, F0, Gb7, Eb-1,\n   * Abb4, B##6, etc.\n   *\n   * @param {number} [octaveOffset=0] A integer to offset the octave by.\n   *\n   * @returns {number} The MIDI note number (an integer between 0 and 127).\n   *\n   * @throws RangeError Invalid 'octaveOffset' value\n   *\n   * @throws TypeError Invalid note identifier\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   * @static\n   */ static toNoteNumber(e, t = 0) {\n        if (t = null == t ? 0 : parseInt(t), isNaN(t)) throw new RangeError(\"Invalid 'octaveOffset' value\");\n        \"string\" != typeof e && (e = \"\");\n        const n = this.getNoteDetails(e);\n        if (!n) throw new TypeError(\"Invalid note identifier\");\n        let r = 12 * (n.octave + 1 + t);\n        if (r += ({\n            C: 0,\n            D: 2,\n            E: 4,\n            F: 5,\n            G: 7,\n            A: 9,\n            B: 11\n        })[n.name], n.accidental && (n.accidental.startsWith(\"b\") ? r -= n.accidental.length : r += n.accidental.length), r < 0 || r > 127) throw new RangeError(\"Invalid octaveOffset value\");\n        return r;\n    }\n    static getNoteDetails(e) {\n        Number.isInteger(e) && (e = this.toNoteIdentifier(e));\n        const t = e.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)$/i);\n        if (!t) throw new TypeError(\"Invalid note identifier\");\n        const n = t[1].toUpperCase(), r = parseInt(t[3]);\n        let i = t[2].toLowerCase();\n        i = \"\" === i ? void 0 : i;\n        return {\n            accidental: i,\n            identifier: n + (i || \"\") + r,\n            name: n,\n            octave: r\n        };\n    }\n    static sanitizeChannels(e) {\n        let t;\n        if (wm.validation) {\n            if (\"all\" === e) t = [\n                \"all\"\n            ];\n            else if (\"none\" === e) return [];\n        }\n        return t = Array.isArray(e) ? e : [\n            e\n        ], t.indexOf(\"all\") > -1 && (t = Enumerations.MIDI_CHANNEL_NUMBERS), t.map(function(e) {\n            return parseInt(e);\n        }).filter(function(e) {\n            return e >= 1 && e <= 16;\n        });\n    }\n    static toTimestamp(e) {\n        let t = !1;\n        const n = parseFloat(e);\n        return !isNaN(n) && (\"string\" == typeof e && \"+\" === e.substring(0, 1) ? n >= 0 && (t = wm.time + n) : n >= 0 && (t = n), t);\n    }\n    static guessNoteNumber(e, t) {\n        t = parseInt(t) || 0;\n        let n = !1;\n        if (Number.isInteger(e) && e >= 0 && e <= 127) n = parseInt(e);\n        else if (parseInt(e) >= 0 && parseInt(e) <= 127) n = parseInt(e);\n        else if (\"string\" == typeof e || e instanceof String) try {\n            n = this.toNoteNumber(e.trim(), t);\n        } catch (e) {\n            return !1;\n        }\n        return n;\n    }\n    static toNoteIdentifier(e, t) {\n        if (e = parseInt(e), isNaN(e) || e < 0 || e > 127) throw new RangeError(\"Invalid note number\");\n        if (t = null == t ? 0 : parseInt(t), isNaN(t)) throw new RangeError(\"Invalid octaveOffset value\");\n        const n = Math.floor(e / 12 - 1) + t;\n        return [\n            \"C\",\n            \"C#\",\n            \"D\",\n            \"D#\",\n            \"E\",\n            \"F\",\n            \"F#\",\n            \"G\",\n            \"G#\",\n            \"A\",\n            \"A#\",\n            \"B\"\n        ][e % 12] + n.toString();\n    }\n    static buildNote(e, t = {}) {\n        if (t.octaveOffset = parseInt(t.octaveOffset) || 0, e instanceof Note) return e;\n        let n = this.guessNoteNumber(e, t.octaveOffset);\n        if (!1 === n) throw new TypeError(`The input could not be parsed as a note (${e})`);\n        return t.octaveOffset = void 0, new Note(n, t);\n    }\n    static buildNoteArray(e, t = {}) {\n        let n = [];\n        return Array.isArray(e) || (e = [\n            e\n        ]), e.forEach((e)=>{\n            n.push(this.buildNote(e, t));\n        }), n;\n    }\n    static from7bitToFloat(e) {\n        return e === 1 / 0 && (e = 127), e = parseInt(e) || 0, Math.min(Math.max(e / 127, 0), 1);\n    }\n    static fromFloatTo7Bit(e) {\n        return e === 1 / 0 && (e = 1), e = parseFloat(e) || 0, Math.min(Math.max(Math.round(127 * e), 0), 127);\n    }\n    static fromMsbLsbToFloat(e, t = 0) {\n        wm.validation && (e = Math.min(Math.max(parseInt(e) || 0, 0), 127), t = Math.min(Math.max(parseInt(t) || 0, 0), 127));\n        const n = ((e << 7) + t) / 16383;\n        return Math.min(Math.max(n, 0), 1);\n    }\n    static fromFloatToMsbLsb(e) {\n        wm.validation && (e = Math.min(Math.max(parseFloat(e) || 0, 0), 1));\n        const t = Math.round(16383 * e);\n        return {\n            msb: t >> 7,\n            lsb: 127 & t\n        };\n    }\n    static offsetNumber(e, t = 0, n = 0) {\n        if (wm.validation) {\n            if (e = parseInt(e), isNaN(e)) throw new Error(\"Invalid note number\");\n            t = parseInt(t) || 0, n = parseInt(n) || 0;\n        }\n        return Math.min(Math.max(e + 12 * t + n, 0), 127);\n    }\n    static getPropertyByValue(e, t) {\n        return Object.keys(e).find((n)=>e[n] === t);\n    }\n    static getCcNameByNumber(e) {\n        if (!wm.validation || (e = parseInt(e)) >= 0 && e <= 127) return Enumerations.CONTROL_CHANGE_MESSAGES[e].name;\n    }\n    static getCcNumberByName(e) {\n        let t = Enumerations.CONTROL_CHANGE_MESSAGES.find((t)=>t.name === e);\n        return t ? t.number : Enumerations.MIDI_CONTROL_CHANGE_MESSAGES[e];\n    }\n    static getChannelModeByNumber(e) {\n        if (!(e >= 120 && e <= 127)) return !1;\n        for(let t in Enumerations.CHANNEL_MODE_MESSAGES)if (Enumerations.CHANNEL_MODE_MESSAGES.hasOwnProperty(t) && e === Enumerations.CHANNEL_MODE_MESSAGES[t]) return t;\n        return !1;\n    }\n    static get isNode() {\n        return \"undefined\" != typeof $17tgv && null != $17tgv.versions && null != $17tgv.versions.node;\n    }\n    static get isBrowser() {\n        return \"undefined\" != typeof window && void 0 !== window.document;\n    }\n}\n/**\n * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are\n * provided by an [`Output`](Output) port which, itself, is made available by a device. The\n * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `OutputChannel` objects can be found inside the parent output's\n * [`channels`]{@link Output#channels} property.\n *\n * @param {Output} output The [`Output`](Output) this channel belongs to.\n * @param {number} number The MIDI channel number (`1` - `16`).\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */ class OutputChannel extends EventEmitter {\n    constructor(e, t){\n        super(), this._output = e, this._number = t, this._octaveOffset = 0;\n    }\n    destroy() {\n        this._output = null, this._number = null, this._octaveOffset = 0, this.removeListener();\n    }\n    send(e, t = {\n        time: 0\n    }) {\n        return this.output.send(e, t), this;\n    }\n    sendKeyAftertouch(e, t, n = {}) {\n        if (wm.validation) {\n            if (n.useRawValue && (n.rawValue = n.useRawValue), isNaN(parseFloat(t))) throw new RangeError(\"Invalid key aftertouch value.\");\n            if (n.rawValue) {\n                if (!(t >= 0 && t <= 127 && Number.isInteger(t))) throw new RangeError(\"Key aftertouch raw value must be an integer between 0 and 127.\");\n            } else if (!(t >= 0 && t <= 1)) throw new RangeError(\"Key aftertouch value must be a float between 0 and 1.\");\n        }\n        n.rawValue || (t = Utilities.fromFloatTo7Bit(t));\n        const r = wm.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n        return Array.isArray(e) || (e = [\n            e\n        ]), Utilities.buildNoteArray(e).forEach((e)=>{\n            this.send([\n                (Enumerations.CHANNEL_MESSAGES.keyaftertouch << 4) + (this.number - 1),\n                e.getOffsetNumber(r),\n                t\n            ], {\n                time: Utilities.toTimestamp(n.time)\n            });\n        }), this;\n    }\n    /**\n   * Sends a MIDI **control change** message to the channel at the scheduled time. The control\n   * change message to send can be specified numerically (`0` to `127`) or by using one of the\n   * following common names:\n   *\n   * | Number | Name                          |\n   * |--------|-------------------------------|\n   * | 0      |`bankselectcoarse`             |\n   * | 1      |`modulationwheelcoarse`        |\n   * | 2      |`breathcontrollercoarse`       |\n   * | 4      |`footcontrollercoarse`         |\n   * | 5      |`portamentotimecoarse`         |\n   * | 6      |`dataentrycoarse`              |\n   * | 7      |`volumecoarse`                 |\n   * | 8      |`balancecoarse`                |\n   * | 10     |`pancoarse`                    |\n   * | 11     |`expressioncoarse`             |\n   * | 12     |`effectcontrol1coarse`         |\n   * | 13     |`effectcontrol2coarse`         |\n   * | 18     |`generalpurposeslider3`        |\n   * | 19     |`generalpurposeslider4`        |\n   * | 32     |`bankselectfine`               |\n   * | 33     |`modulationwheelfine`          |\n   * | 34     |`breathcontrollerfine`         |\n   * | 36     |`footcontrollerfine`           |\n   * | 37     |`portamentotimefine`           |\n   * | 38     |`dataentryfine`                |\n   * | 39     |`volumefine`                   |\n   * | 40     |`balancefine`                  |\n   * | 42     |`panfine`                      |\n   * | 43     |`expressionfine`               |\n   * | 44     |`effectcontrol1fine`           |\n   * | 45     |`effectcontrol2fine`           |\n   * | 64     |`holdpedal`                    |\n   * | 65     |`portamento`                   |\n   * | 66     |`sustenutopedal`               |\n   * | 67     |`softpedal`                    |\n   * | 68     |`legatopedal`                  |\n   * | 69     |`hold2pedal`                   |\n   * | 70     |`soundvariation`               |\n   * | 71     |`resonance`                    |\n   * | 72     |`soundreleasetime`             |\n   * | 73     |`soundattacktime`              |\n   * | 74     |`brightness`                   |\n   * | 75     |`soundcontrol6`                |\n   * | 76     |`soundcontrol7`                |\n   * | 77     |`soundcontrol8`                |\n   * | 78     |`soundcontrol9`                |\n   * | 79     |`soundcontrol10`               |\n   * | 80     |`generalpurposebutton1`        |\n   * | 81     |`generalpurposebutton2`        |\n   * | 82     |`generalpurposebutton3`        |\n   * | 83     |`generalpurposebutton4`        |\n   * | 91     |`reverblevel`                  |\n   * | 92     |`tremololevel`                 |\n   * | 93     |`choruslevel`                  |\n   * | 94     |`celestelevel`                 |\n   * | 95     |`phaserlevel`                  |\n   * | 96     |`dataincrement`                |\n   * | 97     |`datadecrement`                |\n   * | 98     |`nonregisteredparametercoarse` |\n   * | 99     |`nonregisteredparameterfine`   |\n   * | 100    |`registeredparametercoarse`    |\n   * | 101    |`registeredparameterfine`      |\n   * | 120    |`allsoundoff`                  |\n   * | 121    |`resetallcontrollers`          |\n   * | 122    |`localcontrol`                 |\n   * | 123    |`allnotesoff`                  |\n   * | 124    |`omnimodeoff`                  |\n   * | 125    |`omnimodeon`                   |\n   * | 126    |`monomodeon`                   |\n   * | 127    |`polymodeon`                   |\n   *\n   * As you can see above, not all control change message have a matching name. This does not mean\n   * you cannot use the others. It simply means you will need to use their number\n   * (`0` to `127`) instead of their name. While you can still use them, numbers `120` to `127` are\n   * usually reserved for *channel mode* messages. See\n   * [`sendChannelMode()`]{@link OutputChannel#sendChannelMode} method for more info.\n   *\n   * To view a detailed list of all available **control change** messages, please consult \"Table 3 -\n   * Control Change Messages\" from the [MIDI Messages](\n   * https://www.midi.org/specifications/item/table-3-control-change-messages-data-bytes-2)\n   * specification.\n   *\n   * **Note**: messages #0-31 (MSB) are paired with messages #32-63 (LSB). For example, message #1\n   * (`modulationwheelcoarse`) can be accompanied by a second control change message for\n   * `modulationwheelfine` to achieve a greater level of precision. if you want to specify both MSB\n   * and LSB for messages between `0` and `31`, you can do so by passing a 2-value array as the\n   * second parameter.\n   *\n   * @param {number|string} controller The MIDI controller name or number (`0` - `127`).\n   *\n   * @param {number|number[]} value The value to send (0-127). You can also use a two-position array\n   * for controllers 0 to 31. In this scenario, the first value will be sent as usual and the second\n   * value will be sent to the matching LSB controller (which is obtained by adding 32 to the first\n   * controller)\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 127.\n   * @throws {RangeError} Invalid controller name.\n   * @throws {TypeError} The value array must have a length of 2.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   */ sendControlChange(e, t, n = {}) {\n        if (\"string\" == typeof e && (e = Utilities.getCcNumberByName(e)), Array.isArray(t) || (t = [\n            t\n        ]), wm.validation) {\n            if (void 0 === e) throw new TypeError(\"Control change must be identified with a valid name or an integer between 0 and 127.\");\n            if (!Number.isInteger(e) || !(e >= 0 && e <= 127)) throw new TypeError(\"Control change number must be an integer between 0 and 127.\");\n            if (2 === (t = t.map((e)=>{\n                const t = Math.min(Math.max(parseInt(e), 0), 127);\n                if (isNaN(t)) throw new TypeError(\"Values must be integers between 0 and 127\");\n                return t;\n            })).length && e >= 32) throw new TypeError(\"To use a value array, the controller must be between 0 and 31\");\n        }\n        return t.forEach((r, i)=>{\n            this.send([\n                (Enumerations.CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1),\n                e + 32 * i,\n                t[i]\n            ], {\n                time: Utilities.toTimestamp(n.time)\n            });\n        }), this;\n    }\n    _selectNonRegisteredParameter(e, t = {}) {\n        return this.sendControlChange(99, e[0], t), this.sendControlChange(98, e[1], t), this;\n    }\n    _deselectRegisteredParameter(e = {}) {\n        return this.sendControlChange(101, 127, e), this.sendControlChange(100, 127, e), this;\n    }\n    _deselectNonRegisteredParameter(e = {}) {\n        return this.sendControlChange(101, 127, e), this.sendControlChange(100, 127, e), this;\n    }\n    _selectRegisteredParameter(e, t = {}) {\n        return this.sendControlChange(101, e[0], t), this.sendControlChange(100, e[1], t), this;\n    }\n    _setCurrentParameter(e, t = {}) {\n        return e = [].concat(e), this.sendControlChange(6, e[0], t), e.length < 2 || this.sendControlChange(38, e[1], t), this;\n    }\n    sendRpnDecrement(e, t = {}) {\n        if (Array.isArray(e) || (e = Enumerations.REGISTERED_PARAMETERS[e]), wm.validation) {\n            if (void 0 === e) throw new TypeError(\"The specified registered parameter is invalid.\");\n            let t = !1;\n            if (Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach((n)=>{\n                Enumerations.REGISTERED_PARAMETERS[n][0] === e[0] && Enumerations.REGISTERED_PARAMETERS[n][1] === e[1] && (t = !0);\n            }), !t) throw new TypeError(\"The specified registered parameter is invalid.\");\n        }\n        return this._selectRegisteredParameter(e, t), this.sendControlChange(97, 0, t), this._deselectRegisteredParameter(t), this;\n    }\n    sendRpnIncrement(e, t = {}) {\n        if (Array.isArray(e) || (e = Enumerations.REGISTERED_PARAMETERS[e]), wm.validation) {\n            if (void 0 === e) throw new TypeError(\"The specified registered parameter is invalid.\");\n            let t = !1;\n            if (Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach((n)=>{\n                Enumerations.REGISTERED_PARAMETERS[n][0] === e[0] && Enumerations.REGISTERED_PARAMETERS[n][1] === e[1] && (t = !0);\n            }), !t) throw new TypeError(\"The specified registered parameter is invalid.\");\n        }\n        return this._selectRegisteredParameter(e, t), this.sendControlChange(96, 0, t), this._deselectRegisteredParameter(t), this;\n    }\n    playNote(e, t = {}) {\n        this.sendNoteOn(e, t);\n        const n = Array.isArray(e) ? e : [\n            e\n        ];\n        for (let e of n)if (parseInt(e.duration) > 0) {\n            const n = {\n                time: (Utilities.toTimestamp(t.time) || wm.time) + parseInt(e.duration),\n                release: e.release,\n                rawRelease: e.rawRelease\n            };\n            this.sendNoteOff(e, n);\n        } else if (parseInt(t.duration) > 0) {\n            const n = {\n                time: (Utilities.toTimestamp(t.time) || wm.time) + parseInt(t.duration),\n                release: t.release,\n                rawRelease: t.rawRelease\n            };\n            this.sendNoteOff(e, n);\n        }\n        return this;\n    }\n    sendNoteOff(e, t = {}) {\n        if (wm.validation) {\n            if (null != t.rawRelease && !(t.rawRelease >= 0 && t.rawRelease <= 127)) throw new RangeError(\"The 'rawRelease' option must be an integer between 0 and 127\");\n            if (null != t.release && !(t.release >= 0 && t.release <= 1)) throw new RangeError(\"The 'release' option must be an number between 0 and 1\");\n            t.rawVelocity && (t.rawRelease = t.velocity, console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.\")), t.velocity && (t.release = t.velocity, console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\"));\n        }\n        let n = 64;\n        null != t.rawRelease ? n = t.rawRelease : isNaN(t.release) || (n = Math.round(127 * t.release));\n        const r = wm.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n        return Utilities.buildNoteArray(e, {\n            rawRelease: parseInt(n)\n        }).forEach((e)=>{\n            this.send([\n                (Enumerations.CHANNEL_MESSAGES.noteoff << 4) + (this.number - 1),\n                e.getOffsetNumber(r),\n                e.rawRelease\n            ], {\n                time: Utilities.toTimestamp(t.time)\n            });\n        }), this;\n    }\n    stopNote(e, t = {}) {\n        return this.sendNoteOff(e, t);\n    }\n    sendNoteOn(e, t = {}) {\n        if (wm.validation) {\n            if (null != t.rawAttack && !(t.rawAttack >= 0 && t.rawAttack <= 127)) throw new RangeError(\"The 'rawAttack' option must be an integer between 0 and 127\");\n            if (null != t.attack && !(t.attack >= 0 && t.attack <= 1)) throw new RangeError(\"The 'attack' option must be an number between 0 and 1\");\n            t.rawVelocity && (t.rawAttack = t.velocity, t.rawRelease = t.release, console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.\")), t.velocity && (t.attack = t.velocity, console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\"));\n        }\n        let n = 64;\n        null != t.rawAttack ? n = t.rawAttack : isNaN(t.attack) || (n = Math.round(127 * t.attack));\n        const r = wm.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n        return Utilities.buildNoteArray(e, {\n            rawAttack: n\n        }).forEach((e)=>{\n            this.send([\n                (Enumerations.CHANNEL_MESSAGES.noteon << 4) + (this.number - 1),\n                e.getOffsetNumber(r),\n                e.rawAttack\n            ], {\n                time: Utilities.toTimestamp(t.time)\n            });\n        }), this;\n    }\n    sendChannelMode(e, t = 0, n = {}) {\n        if (\"string\" == typeof e && (e = Enumerations.CHANNEL_MODE_MESSAGES[e]), wm.validation) {\n            if (void 0 === e) throw new TypeError(\"Invalid channel mode message name or number.\");\n            if (isNaN(e) || !(e >= 120 && e <= 127)) throw new TypeError(\"Invalid channel mode message number.\");\n            if (isNaN(parseInt(t)) || t < 0 || t > 127) throw new RangeError(\"Value must be an integer between 0 and 127.\");\n        }\n        return this.send([\n            (Enumerations.CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1),\n            e,\n            t\n        ], {\n            time: Utilities.toTimestamp(n.time)\n        }), this;\n    }\n    sendOmniMode(e, t = {}) {\n        return void 0 === e || e ? this.sendChannelMode(\"omnimodeon\", 0, t) : this.sendChannelMode(\"omnimodeoff\", 0, t), this;\n    }\n    sendChannelAftertouch(e, t = {}) {\n        if (wm.validation) {\n            if (isNaN(parseFloat(e))) throw new RangeError(\"Invalid channel aftertouch value.\");\n            if (t.rawValue) {\n                if (!(e >= 0 && e <= 127 && Number.isInteger(e))) throw new RangeError(\"Channel aftertouch raw value must be an integer between 0 and 127.\");\n            } else if (!(e >= 0 && e <= 1)) throw new RangeError(\"Channel aftertouch value must be a float between 0 and 1.\");\n        }\n        return this.send([\n            (Enumerations.CHANNEL_MESSAGES.channelaftertouch << 4) + (this.number - 1),\n            Math.round(127 * e)\n        ], {\n            time: Utilities.toTimestamp(t.time)\n        }), this;\n    }\n    sendMasterTuning(e, t = {}) {\n        if (e = parseFloat(e) || 0, wm.validation && !(e > -65 && e < 64)) throw new RangeError(\"The value must be a decimal number larger than -65 and smaller than 64.\");\n        let n = Math.floor(e) + 64, r = e - Math.floor(e);\n        r = Math.round((r + 1) / 2 * 16383);\n        let i = r >> 7 & 127, s = 127 & r;\n        return this.sendRpnValue(\"channelcoarsetuning\", n, t), this.sendRpnValue(\"channelfinetuning\", [\n            i,\n            s\n        ], t), this;\n    }\n    sendModulationRange(e, t, n = {}) {\n        if (wm.validation) {\n            if (!Number.isInteger(e) || !(e >= 0 && e <= 127)) throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n            if (!(null == t || Number.isInteger(t) && t >= 0 && t <= 127)) throw new RangeError(\"If specified, the cents value must be an integer between 0 and 127.\");\n        }\n        return t >= 0 && t <= 127 || (t = 0), this.sendRpnValue(\"modulationrange\", [\n            e,\n            t\n        ], n), this;\n    }\n    sendNrpnValue(e, t, n = {}) {\n        if (t = [].concat(t), wm.validation) {\n            if (!Array.isArray(e) || !Number.isInteger(e[0]) || !Number.isInteger(e[1])) throw new TypeError(\"The specified NRPN is invalid.\");\n            if (!(e[0] >= 0 && e[0] <= 127)) throw new RangeError(\"The first byte of the NRPN must be between 0 and 127.\");\n            if (!(e[1] >= 0 && e[1] <= 127)) throw new RangeError(\"The second byte of the NRPN must be between 0 and 127.\");\n            t.forEach((e)=>{\n                if (!(e >= 0 && e <= 127)) throw new RangeError(\"The data bytes of the NRPN must be between 0 and 127.\");\n            });\n        }\n        return this._selectNonRegisteredParameter(e, n), this._setCurrentParameter(t, n), this._deselectNonRegisteredParameter(n), this;\n    }\n    sendPitchBend(e, t = {}) {\n        if (wm.validation) {\n            if (t.rawValue && Array.isArray(e)) {\n                if (!(e[0] >= 0 && e[0] <= 127)) throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n                if (!(e[1] >= 0 && e[1] <= 127)) throw new RangeError(\"The pitch bend LSB must be an integer between 0 and 127.\");\n            } else if (t.rawValue && !Array.isArray(e)) {\n                if (!(e >= 0 && e <= 127)) throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n            } else {\n                if (isNaN(e) || null === e) throw new RangeError(\"Invalid pitch bend value.\");\n                if (!(e >= -1 && e <= 1)) throw new RangeError(\"The pitch bend value must be a float between -1 and 1.\");\n            }\n        }\n        let n = 0, r = 0;\n        if (t.rawValue && Array.isArray(e)) n = e[0], r = e[1];\n        else if (t.rawValue && !Array.isArray(e)) n = e;\n        else {\n            const t = Utilities.fromFloatToMsbLsb((e + 1) / 2);\n            n = t.msb, r = t.lsb;\n        }\n        return this.send([\n            (Enumerations.CHANNEL_MESSAGES.pitchbend << 4) + (this.number - 1),\n            r,\n            n\n        ], {\n            time: Utilities.toTimestamp(t.time)\n        }), this;\n    }\n    sendPitchBendRange(e, t, n = {}) {\n        if (wm.validation) {\n            if (!Number.isInteger(e) || !(e >= 0 && e <= 127)) throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n            if (!Number.isInteger(t) || !(t >= 0 && t <= 127)) throw new RangeError(\"The cents value must be an integer between 0 and 127.\");\n        }\n        return this.sendRpnValue(\"pitchbendrange\", [\n            e,\n            t\n        ], n), this;\n    }\n    sendProgramChange(e, t = {}) {\n        if (e = parseInt(e) || 0, wm.validation && !(e >= 0 && e <= 127)) throw new RangeError(\"The program number must be between 0 and 127.\");\n        return this.send([\n            (Enumerations.CHANNEL_MESSAGES.programchange << 4) + (this.number - 1),\n            e\n        ], {\n            time: Utilities.toTimestamp(t.time)\n        }), this;\n    }\n    sendRpnValue(e, t, n = {}) {\n        if (Array.isArray(e) || (e = Enumerations.REGISTERED_PARAMETERS[e]), wm.validation) {\n            if (!Number.isInteger(e[0]) || !Number.isInteger(e[1])) throw new TypeError(\"The specified NRPN is invalid.\");\n            if (!(e[0] >= 0 && e[0] <= 127)) throw new RangeError(\"The first byte of the RPN must be between 0 and 127.\");\n            if (!(e[1] >= 0 && e[1] <= 127)) throw new RangeError(\"The second byte of the RPN must be between 0 and 127.\");\n            [].concat(t).forEach((e)=>{\n                if (!(e >= 0 && e <= 127)) throw new RangeError(\"The data bytes of the RPN must be between 0 and 127.\");\n            });\n        }\n        return this._selectRegisteredParameter(e, n), this._setCurrentParameter(t, n), this._deselectRegisteredParameter(n), this;\n    }\n    sendTuningBank(e, t = {}) {\n        if (wm.validation && (!Number.isInteger(e) || !(e >= 0 && e <= 127))) throw new RangeError(\"The tuning bank number must be between 0 and 127.\");\n        return this.sendRpnValue(\"tuningbank\", e, t), this;\n    }\n    sendTuningProgram(e, t = {}) {\n        if (wm.validation && (!Number.isInteger(e) || !(e >= 0 && e <= 127))) throw new RangeError(\"The tuning program number must be between 0 and 127.\");\n        return this.sendRpnValue(\"tuningprogram\", e, t), this;\n    }\n    sendLocalControl(e, t = {}) {\n        return e ? this.sendChannelMode(\"localcontrol\", 127, t) : this.sendChannelMode(\"localcontrol\", 0, t);\n    }\n    sendAllNotesOff(e = {}) {\n        return this.sendChannelMode(\"allnotesoff\", 0, e);\n    }\n    sendAllSoundOff(e = {}) {\n        return this.sendChannelMode(\"allsoundoff\", 0, e);\n    }\n    sendResetAllControllers(e = {}) {\n        return this.sendChannelMode(\"resetallcontrollers\", 0, e);\n    }\n    sendPolyphonicMode(e, t = {}) {\n        return \"mono\" === e ? this.sendChannelMode(\"monomodeon\", 0, t) : this.sendChannelMode(\"polymodeon\", 0, t);\n    }\n    get octaveOffset() {\n        return this._octaveOffset;\n    }\n    set octaveOffset(e) {\n        if (this.validation && (e = parseInt(e), isNaN(e))) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n        this._octaveOffset = e;\n    }\n    get output() {\n        return this._output;\n    }\n    get number() {\n        return this._number;\n    }\n}\n/**\n * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).\n * A port is made available by a MIDI device. A MIDI device can advertise several input and output\n * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)\n * property.\n *\n * The `Output` object is automatically instantiated by the library according to the host's MIDI\n * subsystem and should not be directly instantiated.\n *\n * You can access all available `Output` objects by referring to the\n * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as\n * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or\n * [`WebMidi.getOutputById()`](WebMidi#getOutputById).\n *\n * @fires Output#opened\n * @fires Output#disconnected\n * @fires Output#closed\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */ class Output extends EventEmitter {\n    constructor(e){\n        super(), this._midiOutput = e, this._octaveOffset = 0, this.channels = [];\n        for(let e = 1; e <= 16; e++)this.channels[e] = new OutputChannel(this, e);\n        this._midiOutput.onstatechange = this._onStateChange.bind(this);\n    }\n    async destroy() {\n        this.removeListener(), this.channels.forEach((e)=>e.destroy()), this.channels = [], this._midiOutput && (this._midiOutput.onstatechange = null), await this.close(), this._midiOutput = null;\n    }\n    _onStateChange(e) {\n        let t = {\n            timestamp: wm.time\n        };\n        \"open\" === e.port.connection ? (t.type = \"opened\", t.target = this, t.port = t.target, this.emit(\"opened\", t)) : \"closed\" === e.port.connection && \"connected\" === e.port.state ? (t.type = \"closed\", t.target = this, t.port = t.target, this.emit(\"closed\", t)) : \"closed\" === e.port.connection && \"disconnected\" === e.port.state ? (t.type = \"disconnected\", t.port = {\n            connection: e.port.connection,\n            id: e.port.id,\n            manufacturer: e.port.manufacturer,\n            name: e.port.name,\n            state: e.port.state,\n            type: e.port.type\n        }, this.emit(\"disconnected\", t)) : \"pending\" === e.port.connection && \"disconnected\" === e.port.state || console.warn(\"This statechange event was not caught:\", e.port.connection, e.port.state);\n    }\n    async open() {\n        try {\n            return await this._midiOutput.open(), Promise.resolve(this);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    async close() {\n        this._midiOutput ? await this._midiOutput.close() : await Promise.resolve();\n    }\n    /**\n   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be\n   * sent immediately. The message should be an array of 8 bit unsigned integers (0-225), a\n   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}\n   * object or a [`Message`](Message) object.\n   *\n   * It is usually not necessary to use this method directly as you can use one of the simpler\n   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),\n   * [`sendControlChange()`](#sendControlChange), etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param message {number[]|Uint8Array|Message} An array of 8bit unsigned integers, a `Uint8Array`\n   * object (not available in Node.js) containing the message bytes or a `Message` object.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   */ send(e, t = {\n        time: 0\n    }, n = 0) {\n        if (e instanceof Message && (e = Utilities.isNode ? e.data : e.rawData), e instanceof Uint8Array && Utilities.isNode && (e = Array.from(e)), wm.validation) {\n            if (Array.isArray(e) || e instanceof Uint8Array || (e = [\n                e\n            ], Array.isArray(t) && (e = e.concat(t)), t = isNaN(n) ? {\n                time: 0\n            } : {\n                time: n\n            }), !(parseInt(e[0]) >= 128 && parseInt(e[0]) <= 255)) throw new RangeError(\"The first byte (status) must be an integer between 128 and 255.\");\n            e.slice(1).forEach((e)=>{\n                if (!((e = parseInt(e)) >= 0 && e <= 255)) throw new RangeError(\"Data bytes must be integers between 0 and 255.\");\n            }), t || (t = {\n                time: 0\n            });\n        }\n        return this._midiOutput.send(e, Utilities.toTimestamp(t.time)), this;\n    }\n    sendSysex(e, t = [], n = {}) {\n        if (e = [].concat(e), t instanceof Uint8Array) {\n            const r = new Uint8Array(1 + e.length + t.length + 1);\n            r[0] = Enumerations.SYSTEM_MESSAGES.sysex, r.set(Uint8Array.from(e), 1), r.set(t, 1 + e.length), r[r.length - 1] = Enumerations.SYSTEM_MESSAGES.sysexend, this.send(r, {\n                time: n.time\n            });\n        } else {\n            const r = e.concat(t, Enumerations.SYSTEM_MESSAGES.sysexend);\n            this.send([\n                Enumerations.SYSTEM_MESSAGES.sysex\n            ].concat(r), {\n                time: n.time\n            });\n        }\n        return this;\n    }\n    clear() {\n        return this._midiOutput.clear ? this._midiOutput.clear() : wm.validation && console.warn(\"The 'clear()' method has not yet been implemented in your environment.\"), this;\n    }\n    sendTimecodeQuarterFrame(e, t = {}) {\n        if (wm.validation && (e = parseInt(e), isNaN(e) || !(e >= 0 && e <= 127))) throw new RangeError(\"The value must be an integer between 0 and 127.\");\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.timecode,\n            e\n        ], {\n            time: t.time\n        }), this;\n    }\n    sendSongPosition(e = 0, t = {}) {\n        var n = (e = Math.floor(e) || 0) >> 7 & 127, r = 127 & e;\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.songposition,\n            n,\n            r\n        ], {\n            time: t.time\n        }), this;\n    }\n    sendSongSelect(e = 0, t = {}) {\n        if (wm.validation && (e = parseInt(e), isNaN(e) || !(e >= 0 && e <= 127))) throw new RangeError(\"The program value must be between 0 and 127\");\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.songselect,\n            e\n        ], {\n            time: t.time\n        }), this;\n    }\n    sendTuneRequest(e = {}) {\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.tunerequest\n        ], {\n            time: e.time\n        }), this;\n    }\n    sendClock(e = {}) {\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.clock\n        ], {\n            time: e.time\n        }), this;\n    }\n    sendStart(e = {}) {\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.start\n        ], {\n            time: e.time\n        }), this;\n    }\n    sendContinue(e = {}) {\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.continue\n        ], {\n            time: e.time\n        }), this;\n    }\n    sendStop(e = {}) {\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.stop\n        ], {\n            time: e.time\n        }), this;\n    }\n    sendActiveSensing(e = {}) {\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.activesensing\n        ], {\n            time: e.time\n        }), this;\n    }\n    sendReset(e = {}) {\n        return this.send([\n            Enumerations.SYSTEM_MESSAGES.reset\n        ], {\n            time: e.time\n        }), this;\n    }\n    sendTuningRequest(e = {}) {\n        return wm.validation && console.warn(\"The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead.\"), this.sendTuneRequest(e);\n    }\n    sendKeyAftertouch(e, t, n = {}) {\n        return null == n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(n.channels).forEach((r)=>{\n            this.channels[r].sendKeyAftertouch(e, t, n);\n        }), this;\n    }\n    sendControlChange(e, t, n = {}, r = {}) {\n        if (wm.validation && (Array.isArray(n) || Number.isInteger(n) || \"all\" === n)) {\n            const e = n;\n            (n = r).channels = e, \"all\" === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(n.channels).forEach((r)=>{\n            this.channels[r].sendControlChange(e, t, n);\n        }), this;\n    }\n    sendPitchBendRange(e = 0, t = 0, n = {}) {\n        return null == n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(n.channels).forEach((r)=>{\n            this.channels[r].sendPitchBendRange(e, t, n);\n        }), this;\n    }\n    setPitchBendRange(e = 0, t = 0, n = \"all\", r = {}) {\n        return wm.validation && (console.warn(\"The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead.\"), r.channels = n, \"all\" === r.channels && (r.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendPitchBendRange(e, t, r);\n    }\n    sendRpnValue(e, t, n = {}) {\n        return null == n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(n.channels).forEach((r)=>{\n            this.channels[r].sendRpnValue(e, t, n);\n        }), this;\n    }\n    setRegisteredParameter(e, t = [], n = \"all\", r = {}) {\n        return wm.validation && (console.warn(\"The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead.\"), r.channels = n, \"all\" === r.channels && (r.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendRpnValue(e, t, r);\n    }\n    sendChannelAftertouch(e, t = {}, n = {}) {\n        if (wm.validation && (Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendChannelAftertouch(e, t);\n        }), this;\n    }\n    sendPitchBend(e, t = {}, n = {}) {\n        if (wm.validation && (Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendPitchBend(e, t);\n        }), this;\n    }\n    sendProgramChange(e = 0, t = {}, n = {}) {\n        if (wm.validation && (Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendProgramChange(e, t);\n        }), this;\n    }\n    sendModulationRange(e, t, n = {}) {\n        return null == n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(n.channels).forEach((r)=>{\n            this.channels[r].sendModulationRange(e, t, n);\n        }), this;\n    }\n    setModulationRange(e = 0, t = 0, n = \"all\", r = {}) {\n        return wm.validation && (console.warn(\"The setModulationRange() method is deprecated. Use sendModulationRange() instead.\"), r.channels = n, \"all\" === r.channels && (r.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendModulationRange(e, t, r);\n    }\n    sendMasterTuning(e, t = {}) {\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendMasterTuning(e, t);\n        }), this;\n    }\n    setMasterTuning(e, t = {}, n = {}) {\n        return wm.validation && (console.warn(\"The setMasterTuning() method is deprecated. Use sendMasterTuning() instead.\"), n.channels = t, \"all\" === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendMasterTuning(e, n);\n    }\n    sendTuningProgram(e, t = {}) {\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendTuningProgram(e, t);\n        }), this;\n    }\n    setTuningProgram(e, t = \"all\", n = {}) {\n        return wm.validation && (console.warn(\"The setTuningProgram() method is deprecated. Use sendTuningProgram() instead.\"), n.channels = t, \"all\" === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendTuningProgram(e, n);\n    }\n    sendTuningBank(e = 0, t = {}) {\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendTuningBank(e, t);\n        }), this;\n    }\n    setTuningBank(e, t = \"all\", n = {}) {\n        return wm.validation && (console.warn(\"The setTuningBank() method is deprecated. Use sendTuningBank() instead.\"), n.channels = t, \"all\" === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendTuningBank(e, n);\n    }\n    sendChannelMode(e, t = 0, n = {}, r = {}) {\n        if (wm.validation && (Array.isArray(n) || Number.isInteger(n) || \"all\" === n)) {\n            const e = n;\n            (n = r).channels = e, \"all\" === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(n.channels).forEach((r)=>{\n            this.channels[r].sendChannelMode(e, t, n);\n        }), this;\n    }\n    sendAllSoundOff(e = {}) {\n        return null == e.channels && (e.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(e.channels).forEach((t)=>{\n            this.channels[t].sendAllSoundOff(e);\n        }), this;\n    }\n    sendAllNotesOff(e = {}) {\n        return null == e.channels && (e.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(e.channels).forEach((t)=>{\n            this.channels[t].sendAllNotesOff(e);\n        }), this;\n    }\n    sendResetAllControllers(e = {}, t = {}) {\n        if (wm.validation && (Array.isArray(e) || Number.isInteger(e) || \"all\" === e)) {\n            const n = e;\n            (e = t).channels = n, \"all\" === e.channels && (e.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == e.channels && (e.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(e.channels).forEach((t)=>{\n            this.channels[t].sendResetAllControllers(e);\n        }), this;\n    }\n    sendPolyphonicMode(e, t = {}, n = {}) {\n        if (wm.validation && (Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendPolyphonicMode(e, t);\n        }), this;\n    }\n    sendLocalControl(e, t = {}, n = {}) {\n        if (wm.validation && (Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendLocalControl(e, t);\n        }), this;\n    }\n    sendOmniMode(e, t = {}, n = {}) {\n        if (wm.validation && (Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendOmniMode(e, t);\n        }), this;\n    }\n    sendNrpnValue(e, t, n = {}) {\n        return null == n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(n.channels).forEach((r)=>{\n            this.channels[r].sendNrpnValue(e, t, n);\n        }), this;\n    }\n    setNonRegisteredParameter(e, t = [], n = \"all\", r = {}) {\n        return wm.validation && (console.warn(\"The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead.\"), r.channels = n, \"all\" === r.channels && (r.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendNrpnValue(e, t, r);\n    }\n    sendRpnIncrement(e, t = {}) {\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendRpnIncrement(e, t);\n        }), this;\n    }\n    incrementRegisteredParameter(e, t = \"all\", n = {}) {\n        return wm.validation && (console.warn(\"The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead.\"), n.channels = t, \"all\" === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendRpnIncrement(e, n);\n    }\n    sendRpnDecrement(e, t = {}) {\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendRpnDecrement(e, t);\n        }), this;\n    }\n    decrementRegisteredParameter(e, t = \"all\", n = {}) {\n        return wm.validation && (console.warn(\"The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead.\"), n.channels = t, \"all\" === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS)), this.sendRpnDecrement(e, n);\n    }\n    sendNoteOff(e, t = {}, n = {}) {\n        if (wm.validation && (Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendNoteOff(e, t);\n        }), this;\n    }\n    stopNote(e, t) {\n        return this.sendNoteOff(e, t);\n    }\n    playNote(e, t = {}, n = {}) {\n        if (wm.validation && (t.rawVelocity && console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' instead.\"), t.velocity && console.warn(\"The 'velocity' option is deprecated. Use 'velocity' instead.\"), Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].playNote(e, t);\n        }), this;\n    }\n    sendNoteOn(e, t = {}, n = {}) {\n        if (wm.validation && (Array.isArray(t) || Number.isInteger(t) || \"all\" === t)) {\n            const e = t;\n            (t = n).channels = e, \"all\" === t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n        }\n        return null == t.channels && (t.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(t.channels).forEach((n)=>{\n            this.channels[n].sendNoteOn(e, t);\n        }), this;\n    }\n    get name() {\n        return this._midiOutput.name;\n    }\n    get id() {\n        return this._midiOutput.id;\n    }\n    get connection() {\n        return this._midiOutput.connection;\n    }\n    get manufacturer() {\n        return this._midiOutput.manufacturer;\n    }\n    get state() {\n        return this._midiOutput.state;\n    }\n    get type() {\n        return this._midiOutput.type;\n    }\n    get octaveOffset() {\n        return this._octaveOffset;\n    }\n    set octaveOffset(e) {\n        if (this.validation && (e = parseInt(e), isNaN(e))) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n        this._octaveOffset = e;\n    }\n}\n/**\n * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you\n * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object\n * to all the outputs listed in its [`destinations`](#destinations) property.\n *\n * If specific channels or message types have been defined in the [`channels`](#channels) or\n * [`types`](#types) properties, only messages matching the channels/types will be forwarded.\n *\n * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as\n * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */ class Forwarder {\n    constructor(e = [], t = {}){\n        this.destinations = [], this.types = [\n            ...Object.keys(Enumerations.SYSTEM_MESSAGES),\n            ...Object.keys(Enumerations.CHANNEL_MESSAGES)\n        ], this.channels = Enumerations.MIDI_CHANNEL_NUMBERS, this.suspended = !1, Array.isArray(e) || (e = [\n            e\n        ]), t.types && !Array.isArray(t.types) && (t.types = [\n            t.types\n        ]), t.channels && !Array.isArray(t.channels) && (t.channels = [\n            t.channels\n        ]), wm.validation && (e.forEach((e)=>{\n            if (!(e instanceof Output)) throw new TypeError(\"Destinations must be of type 'Output'.\");\n        }), void 0 !== t.types && t.types.forEach((e)=>{\n            if (!Enumerations.SYSTEM_MESSAGES.hasOwnProperty(e) && !Enumerations.CHANNEL_MESSAGES.hasOwnProperty(e)) throw new TypeError(\"Type must be a valid message type.\");\n        }), void 0 !== t.channels && t.channels.forEach((e)=>{\n            if (!Enumerations.MIDI_CHANNEL_NUMBERS.includes(e)) throw new TypeError(\"MIDI channel must be between 1 and 16.\");\n        })), this.destinations = e, t.types && (this.types = t.types), t.channels && (this.channels = t.channels);\n    }\n    forward(e) {\n        this.suspended || this.types.includes(e.type) && (e.channel && !this.channels.includes(e.channel) || this.destinations.forEach((t)=>{\n            (!wm.validation || t instanceof Output) && t.send(e);\n        }));\n    }\n}\n/**\n * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input\n * device. This object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)\n * property.\n *\n * @fires InputChannel#midimessage\n * @fires InputChannel#unknownmessage\n *\n * @fires InputChannel#noteoff\n * @fires InputChannel#noteon\n * @fires InputChannel#keyaftertouch\n * @fires InputChannel#programchange\n * @fires InputChannel#channelaftertouch\n * @fires InputChannel#pitchbend\n *\n * @fires InputChannel#allnotesoff\n * @fires InputChannel#allsoundoff\n * @fires InputChannel#localcontrol\n * @fires InputChannel#monomode\n * @fires InputChannel#omnimode\n * @fires InputChannel#resetallcontrollers\n *\n * @fires InputChannel#event:nrpn\n * @fires InputChannel#event:nrpn-dataentrycoarse\n * @fires InputChannel#event:nrpn-dataentryfine\n * @fires InputChannel#event:nrpn-dataincrement\n * @fires InputChannel#event:nrpn-datadecrement\n * @fires InputChannel#event:rpn\n * @fires InputChannel#event:rpn-dataentrycoarse\n * @fires InputChannel#event:rpn-dataentryfine\n * @fires InputChannel#event:rpn-dataincrement\n * @fires InputChannel#event:rpn-datadecrement\n *\n * @fires InputChannel#controlchange\n * @fires InputChannel#event:controlchange-controllerxxx\n * @fires InputChannel#event:controlchange-bankselectcoarse\n * @fires InputChannel#event:controlchange-modulationwheelcoarse\n * @fires InputChannel#event:controlchange-breathcontrollercoarse\n * @fires InputChannel#event:controlchange-footcontrollercoarse\n * @fires InputChannel#event:controlchange-portamentotimecoarse\n * @fires InputChannel#event:controlchange-dataentrycoarse\n * @fires InputChannel#event:controlchange-volumecoarse\n * @fires InputChannel#event:controlchange-balancecoarse\n * @fires InputChannel#event:controlchange-pancoarse\n * @fires InputChannel#event:controlchange-expressioncoarse\n * @fires InputChannel#event:controlchange-effectcontrol1coarse\n * @fires InputChannel#event:controlchange-effectcontrol2coarse\n * @fires InputChannel#event:controlchange-generalpurposecontroller1\n * @fires InputChannel#event:controlchange-generalpurposecontroller2\n * @fires InputChannel#event:controlchange-generalpurposecontroller3\n * @fires InputChannel#event:controlchange-generalpurposecontroller4\n * @fires InputChannel#event:controlchange-bankselectfine\n * @fires InputChannel#event:controlchange-modulationwheelfine\n * @fires InputChannel#event:controlchange-breathcontrollerfine\n * @fires InputChannel#event:controlchange-footcontrollerfine\n * @fires InputChannel#event:controlchange-portamentotimefine\n * @fires InputChannel#event:controlchange-dataentryfine\n * @fires InputChannel#event:controlchange-channelvolumefine\n * @fires InputChannel#event:controlchange-balancefine\n * @fires InputChannel#event:controlchange-panfine\n * @fires InputChannel#event:controlchange-expressionfine\n * @fires InputChannel#event:controlchange-effectcontrol1fine\n * @fires InputChannel#event:controlchange-effectcontrol2fine\n * @fires InputChannel#event:controlchange-damperpedal\n * @fires InputChannel#event:controlchange-portamento\n * @fires InputChannel#event:controlchange-sostenuto\n * @fires InputChannel#event:controlchange-softpedal\n * @fires InputChannel#event:controlchange-legatopedal\n * @fires InputChannel#event:controlchange-hold2\n * @fires InputChannel#event:controlchange-soundvariation\n * @fires InputChannel#event:controlchange-resonance\n * @fires InputChannel#event:controlchange-releasetime\n * @fires InputChannel#event:controlchange-attacktime\n * @fires InputChannel#event:controlchange-brightness\n * @fires InputChannel#event:controlchange-decaytime\n * @fires InputChannel#event:controlchange-vibratorate\n * @fires InputChannel#event:controlchange-vibratodepth\n * @fires InputChannel#event:controlchange-vibratodelay\n * @fires InputChannel#event:controlchange-generalpurposecontroller5\n * @fires InputChannel#event:controlchange-generalpurposecontroller6\n * @fires InputChannel#event:controlchange-generalpurposecontroller7\n * @fires InputChannel#event:controlchange-generalpurposecontroller8\n * @fires InputChannel#event:controlchange-portamentocontrol\n * @fires InputChannel#event:controlchange-highresolutionvelocityprefix\n * @fires InputChannel#event:controlchange-effect1depth\n * @fires InputChannel#event:controlchange-effect2depth\n * @fires InputChannel#event:controlchange-effect3depth\n * @fires InputChannel#event:controlchange-effect4depth\n * @fires InputChannel#event:controlchange-effect5depth\n * @fires InputChannel#event:controlchange-dataincrement\n * @fires InputChannel#event:controlchange-datadecrement\n * @fires InputChannel#event:controlchange-nonregisteredparameterfine\n * @fires InputChannel#event:controlchange-nonregisteredparametercoarse\n * @fires InputChannel#event:controlchange-registeredparameterfine\n * @fires InputChannel#event:controlchange-registeredparametercoarse\n * @fires InputChannel#event:controlchange-allsoundoff\n * @fires InputChannel#event:controlchange-resetallcontrollers\n * @fires InputChannel#event:controlchange-localcontrol\n * @fires InputChannel#event:controlchange-allnotesoff\n * @fires InputChannel#event:controlchange-omnimodeoff\n * @fires InputChannel#event:controlchange-omnimodeon\n * @fires InputChannel#event:controlchange-monomodeon\n * @fires InputChannel#event:controlchange-polymodeon\n * @fires InputChannel#event:\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */ class InputChannel extends EventEmitter {\n    constructor(e, t){\n        super(), this._input = e, this._number = t, this._octaveOffset = 0, this._nrpnBuffer = [], this._rpnBuffer = [], this.parameterNumberEventsEnabled = !0, this.notesState = new Array(128).fill(!1);\n    }\n    destroy() {\n        this._input = null, this._number = null, this._octaveOffset = 0, this._nrpnBuffer = [], this.notesState = new Array(128).fill(!1), this.parameterNumberEventsEnabled = !1, this.removeListener();\n    }\n    _processMidiMessageEvent(e) {\n        const t = Object.assign({}, e);\n        t.port = this.input, t.target = this, t.type = \"midimessage\", this.emit(t.type, t), this._parseEventForStandardMessages(t);\n    }\n    _parseEventForStandardMessages(e) {\n        const t = Object.assign({}, e);\n        t.type = t.message.type || \"unknownmessage\";\n        const n = e.message.dataBytes[0], r = e.message.dataBytes[1];\n        if (\"noteoff\" === t.type || \"noteon\" === t.type && 0 === r) this.notesState[n] = !1, t.type = \"noteoff\", t.note = new Note(Utilities.offsetNumber(n, this.octaveOffset + this.input.octaveOffset + wm.octaveOffset), {\n            rawAttack: 0,\n            rawRelease: r\n        }), t.value = Utilities.from7bitToFloat(r), t.rawValue = r, t.velocity = t.note.release, t.rawVelocity = t.note.rawRelease;\n        else if (\"noteon\" === t.type) this.notesState[n] = !0, t.note = new Note(Utilities.offsetNumber(n, this.octaveOffset + this.input.octaveOffset + wm.octaveOffset), {\n            rawAttack: r\n        }), t.value = Utilities.from7bitToFloat(r), t.rawValue = r, t.velocity = t.note.attack, t.rawVelocity = t.note.rawAttack;\n        else if (\"keyaftertouch\" === t.type) t.note = new Note(Utilities.offsetNumber(n, this.octaveOffset + this.input.octaveOffset + wm.octaveOffset)), t.value = Utilities.from7bitToFloat(r), t.rawValue = r, t.identifier = t.note.identifier, t.key = t.note.number, t.rawKey = n;\n        else if (\"controlchange\" === t.type) {\n            t.controller = {\n                number: n,\n                name: Enumerations.CONTROL_CHANGE_MESSAGES[n].name,\n                description: Enumerations.CONTROL_CHANGE_MESSAGES[n].description,\n                position: Enumerations.CONTROL_CHANGE_MESSAGES[n].position\n            }, t.subtype = t.controller.name || \"controller\" + n, t.value = Utilities.from7bitToFloat(r), t.rawValue = r;\n            const e = Object.assign({}, t);\n            e.type = `${t.type}-controller${n}`, delete e.subtype, this.emit(e.type, e);\n            const i = Object.assign({}, t);\n            i.type = t.type + \"-\" + Enumerations.CONTROL_CHANGE_MESSAGES[n].name, delete i.subtype, 0 !== i.type.indexOf(\"controller\") && this.emit(i.type, i), t.message.dataBytes[0] >= 120 && this._parseChannelModeMessage(t), this.parameterNumberEventsEnabled && this._isRpnOrNrpnController(t.message.dataBytes[0]) && this._parseEventForParameterNumber(t);\n        } else \"programchange\" === t.type ? (t.value = n, t.rawValue = t.value) : \"channelaftertouch\" === t.type ? (t.value = Utilities.from7bitToFloat(n), t.rawValue = n) : \"pitchbend\" === t.type ? (t.value = ((r << 7) + n - 8192) / 8192, t.rawValue = (r << 7) + n) : t.type = \"unknownmessage\";\n        this.emit(t.type, t);\n    }\n    _parseChannelModeMessage(e) {\n        const t = Object.assign({}, e);\n        t.type = t.controller.name, \"localcontrol\" === t.type && (t.value = 127 === t.message.data[2], t.rawValue = t.message.data[2]), \"omnimodeon\" === t.type ? (t.type = \"omnimode\", t.value = !0, t.rawValue = t.message.data[2]) : \"omnimodeoff\" === t.type && (t.type = \"omnimode\", t.value = !1, t.rawValue = t.message.data[2]), \"monomodeon\" === t.type ? (t.type = \"monomode\", t.value = !0, t.rawValue = t.message.data[2]) : \"polymodeon\" === t.type && (t.type = \"monomode\", t.value = !1, t.rawValue = t.message.data[2]), this.emit(t.type, t);\n    }\n    _parseEventForParameterNumber(e) {\n        const t = e.message.dataBytes[0], n = e.message.dataBytes[1];\n        99 === t || 101 === t ? (this._nrpnBuffer = [], this._rpnBuffer = [], 99 === t ? this._nrpnBuffer = [\n            e.message\n        ] : 127 !== n && (this._rpnBuffer = [\n            e.message\n        ])) : 98 === t || 100 === t ? 98 === t ? (this._rpnBuffer = [], 1 === this._nrpnBuffer.length ? this._nrpnBuffer.push(e.message) : this._nrpnBuffer = []) : (this._nrpnBuffer = [], 1 === this._rpnBuffer.length && 127 !== n ? this._rpnBuffer.push(e.message) : this._rpnBuffer = []) : 6 !== t && 38 !== t && 96 !== t && 97 !== t || (2 === this._rpnBuffer.length ? this._dispatchParameterNumberEvent(\"rpn\", this._rpnBuffer[0].dataBytes[1], this._rpnBuffer[1].dataBytes[1], e) : 2 === this._nrpnBuffer.length ? this._dispatchParameterNumberEvent(\"nrpn\", this._nrpnBuffer[0].dataBytes[1], this._nrpnBuffer[1].dataBytes[1], e) : (this._nrpnBuffer = [], this._rpnBuffer = []));\n    }\n    _isRpnOrNrpnController(e) {\n        return 6 === e || 38 === e || 96 === e || 97 === e || 98 === e || 99 === e || 100 === e || 101 === e;\n    }\n    _dispatchParameterNumberEvent(e, t, n, r) {\n        e = \"nrpn\" === e ? \"nrpn\" : \"rpn\";\n        const i = {\n            target: r.target,\n            timestamp: r.timestamp,\n            message: r.message,\n            parameterMsb: t,\n            parameterLsb: n,\n            value: Utilities.from7bitToFloat(r.message.dataBytes[1]),\n            rawValue: r.message.dataBytes[1]\n        };\n        i.parameter = \"rpn\" === e ? Object.keys(Enumerations.REGISTERED_PARAMETERS).find((e)=>Enumerations.REGISTERED_PARAMETERS[e][0] === t && Enumerations.REGISTERED_PARAMETERS[e][1] === n) : (t << 7) + n;\n        const s = Enumerations.CONTROL_CHANGE_MESSAGES[r.message.dataBytes[0]].name;\n        i.type = `${e}-${s}`, this.emit(i.type, i);\n        const a = Object.assign({}, i);\n        \"nrpn-dataincrement\" === a.type ? a.type = \"nrpn-databuttonincrement\" : \"nrpn-datadecrement\" === a.type ? a.type = \"nrpn-databuttondecrement\" : \"rpn-dataincrement\" === a.type ? a.type = \"rpn-databuttonincrement\" : \"rpn-datadecrement\" === a.type && (a.type = \"rpn-databuttondecrement\"), this.emit(a.type, a), i.type = e, i.subtype = s, this.emit(i.type, i);\n    }\n    getChannelModeByNumber(e) {\n        return wm.validation && (console.warn(\"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"), e = Math.floor(e)), Utilities.getChannelModeByNumber(e);\n    }\n    getCcNameByNumber(e) {\n        if (wm.validation && (console.warn(\"The 'getCcNameByNumber()' method has been moved to the 'Utilities' class.\"), !((e = parseInt(e)) >= 0 && e <= 127))) throw new RangeError(\"Invalid control change number.\");\n        return Utilities.getCcNameByNumber(e);\n    }\n    getNoteState(e) {\n        e instanceof Note && (e = e.identifier);\n        const t = Utilities.guessNoteNumber(e, wm.octaveOffset + this.input.octaveOffset + this.octaveOffset);\n        return this.notesState[t];\n    }\n    get octaveOffset() {\n        return this._octaveOffset;\n    }\n    set octaveOffset(e) {\n        if (this.validation && (e = parseInt(e), isNaN(e))) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n        this._octaveOffset = e;\n    }\n    get input() {\n        return this._input;\n    }\n    get number() {\n        return this._number;\n    }\n    get nrpnEventsEnabled() {\n        return this.parameterNumberEventsEnabled;\n    }\n    set nrpnEventsEnabled(e) {\n        this.validation && (e = !!e), this.parameterNumberEventsEnabled = e;\n    }\n}\n/**\n * The `Message` class represents a single MIDI message. It has several properties that make it\n * easy to make sense of the binary data it contains.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */ class Message {\n    constructor(e){\n        this.rawData = e, this.data = Array.from(this.rawData), this.statusByte = this.rawData[0], this.rawDataBytes = this.rawData.slice(1), this.dataBytes = this.data.slice(1), this.isChannelMessage = !1, this.isSystemMessage = !1, this.command = void 0, this.channel = void 0, this.manufacturerId = void 0, this.type = void 0, this.statusByte < 240 ? (this.isChannelMessage = !0, this.command = this.statusByte >> 4, this.channel = 1 + (15 & this.statusByte)) : (this.isSystemMessage = !0, this.command = this.statusByte), this.isChannelMessage ? this.type = Utilities.getPropertyByValue(Enumerations.CHANNEL_MESSAGES, this.command) : this.isSystemMessage && (this.type = Utilities.getPropertyByValue(Enumerations.SYSTEM_MESSAGES, this.command)), this.statusByte === Enumerations.SYSTEM_MESSAGES.sysex && (0 === this.dataBytes[0] ? (this.manufacturerId = this.dataBytes.slice(0, 3), this.dataBytes = this.dataBytes.slice(3, this.rawDataBytes.length - 1), this.rawDataBytes = this.rawDataBytes.slice(3, this.rawDataBytes.length - 1)) : (this.manufacturerId = [\n            this.dataBytes[0]\n        ], this.dataBytes = this.dataBytes.slice(1, this.dataBytes.length - 1), this.rawDataBytes = this.rawDataBytes.slice(1, this.rawDataBytes.length - 1)));\n    }\n}\n/**\n * The `Input` class represents a single MIDI input port. This object is automatically instantiated\n * by the library according to the host's MIDI subsystem and does not need to be directly\n * instantiated. Instead, you can access all `Input` objects by referring to the\n * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as\n * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and\n * [`WebMidi.getInputById()`](WebMidi#getInputById).\n *\n * Note that a single MIDI device may expose several inputs and/or outputs.\n *\n * **Important**: the `Input` class does not directly fire channel-specific MIDI messages\n * (such as [`noteon`](InputChannel#event:noteon) or\n * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)\n * object does that. However, you can still use the\n * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple\n * [`InputChannel`](InputChannel) objects at once.\n *\n * @fires Input#opened\n * @fires Input#disconnected\n * @fires Input#closed\n * @fires Input#midimessage\n *\n * @fires Input#sysex\n * @fires Input#timecode\n * @fires Input#songposition\n * @fires Input#songselect\n * @fires Input#tunerequest\n * @fires Input#clock\n * @fires Input#start\n * @fires Input#continue\n * @fires Input#stop\n * @fires Input#activesensing\n * @fires Input#reset\n *\n * @fires Input#unknownmidimessage\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */ class Input extends EventEmitter {\n    constructor(e){\n        super(), this._midiInput = e, this._octaveOffset = 0, this.channels = [];\n        for(let e = 1; e <= 16; e++)this.channels[e] = new InputChannel(this, e);\n        this._forwarders = [], this._midiInput.onstatechange = this._onStateChange.bind(this), this._midiInput.onmidimessage = this._onMidiMessage.bind(this);\n    }\n    async destroy() {\n        this.removeListener(), this.channels.forEach((e)=>e.destroy()), this.channels = [], this._forwarders = [], this._midiInput && (this._midiInput.onstatechange = null, this._midiInput.onmidimessage = null), await this.close(), this._midiInput = null;\n    }\n    _onStateChange(e) {\n        let t = {\n            timestamp: wm.time,\n            target: this,\n            port: this\n        };\n        \"open\" === e.port.connection ? (t.type = \"opened\", this.emit(\"opened\", t)) : \"closed\" === e.port.connection && \"connected\" === e.port.state ? (t.type = \"closed\", this.emit(\"closed\", t)) : \"closed\" === e.port.connection && \"disconnected\" === e.port.state ? (t.type = \"disconnected\", t.port = {\n            connection: e.port.connection,\n            id: e.port.id,\n            manufacturer: e.port.manufacturer,\n            name: e.port.name,\n            state: e.port.state,\n            type: e.port.type\n        }, this.emit(\"disconnected\", t)) : \"pending\" === e.port.connection && \"disconnected\" === e.port.state || console.warn(\"This statechange event was not caught: \", e.port.connection, e.port.state);\n    }\n    _onMidiMessage(e) {\n        const t = new Message(e.data), n = {\n            port: this,\n            target: this,\n            message: t,\n            timestamp: e.timeStamp,\n            type: \"midimessage\",\n            data: t.data,\n            rawData: t.data,\n            statusByte: t.data[0],\n            dataBytes: t.dataBytes\n        };\n        this.emit(\"midimessage\", n), t.isSystemMessage ? this._parseEvent(n) : t.isChannelMessage && this.channels[t.channel]._processMidiMessageEvent(n), this._forwarders.forEach((e)=>e.forward(t));\n    }\n    _parseEvent(e) {\n        const t = Object.assign({}, e);\n        t.type = t.message.type || \"unknownmidimessage\", \"songselect\" === t.type && (t.song = e.data[1] + 1, t.value = e.data[1], t.rawValue = t.value), this.emit(t.type, t);\n    }\n    async open() {\n        try {\n            await this._midiInput.open();\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return Promise.resolve(this);\n    }\n    async close() {\n        if (!this._midiInput) return Promise.resolve(this);\n        try {\n            await this._midiInput.close();\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return Promise.resolve(this);\n    }\n    getChannelModeByNumber() {\n        wm.validation && console.warn(\"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\");\n    }\n    addListener(e, t, n = {}) {\n        if (wm.validation && \"function\" == typeof n) {\n            let e = null != t ? [].concat(t) : void 0;\n            t = n, n = {\n                channels: e\n            };\n        }\n        if (Enumerations.CHANNEL_EVENTS.includes(e)) {\n            void 0 === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS);\n            let r = [];\n            return Utilities.sanitizeChannels(n.channels).forEach((i)=>{\n                r.push(this.channels[i].addListener(e, t, n));\n            }), r;\n        }\n        return super.addListener(e, t, n);\n    }\n    addOneTimeListener(e, t, n = {}) {\n        return n.remaining = 1, this.addListener(e, t, n);\n    }\n    on(e, t, n, r) {\n        return this.addListener(e, t, n, r);\n    }\n    hasListener(e, t, n = {}) {\n        if (wm.validation && \"function\" == typeof n) {\n            let e = [].concat(t);\n            t = n, n = {\n                channels: e\n            };\n        }\n        return Enumerations.CHANNEL_EVENTS.includes(e) ? (void 0 === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), Utilities.sanitizeChannels(n.channels).every((n)=>this.channels[n].hasListener(e, t))) : super.hasListener(e, t);\n    }\n    removeListener(e, t, n = {}) {\n        if (wm.validation && \"function\" == typeof n) {\n            let e = [].concat(t);\n            t = n, n = {\n                channels: e\n            };\n        }\n        if (void 0 === n.channels && (n.channels = Enumerations.MIDI_CHANNEL_NUMBERS), null == e) return Utilities.sanitizeChannels(n.channels).forEach((e)=>{\n            this.channels[e] && this.channels[e].removeListener();\n        }), super.removeListener();\n        Enumerations.CHANNEL_EVENTS.includes(e) ? Utilities.sanitizeChannels(n.channels).forEach((r)=>{\n            this.channels[r].removeListener(e, t, n);\n        }) : super.removeListener(e, t, n);\n    }\n    addForwarder(e, t = {}) {\n        let n;\n        return n = e instanceof Forwarder ? e : new Forwarder(e, t), this._forwarders.push(n), n;\n    }\n    removeForwarder(e) {\n        this._forwarders = this._forwarders.filter((t)=>t !== e);\n    }\n    hasForwarder(e) {\n        return this._forwarders.includes(e);\n    }\n    get name() {\n        return this._midiInput.name;\n    }\n    get id() {\n        return this._midiInput.id;\n    }\n    get connection() {\n        return this._midiInput.connection;\n    }\n    get manufacturer() {\n        return this._midiInput.manufacturer;\n    }\n    get octaveOffset() {\n        return this._octaveOffset;\n    }\n    set octaveOffset(e) {\n        if (this.validation && (e = parseInt(e), isNaN(e))) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n        this._octaveOffset = e;\n    }\n    get state() {\n        return this._midiInput.state;\n    }\n    get type() {\n        return this._midiInput.type;\n    }\n    get nrpnEventsEnabled() {\n        return wm.validation && console.warn(\"The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class.\"), !1;\n    }\n}\nif (Utilities.isNode) {\n    try {\n        window.navigator;\n    } catch (err) {\n        let jzz;\n        eval('jzz = require(\"jzz\")'), $parcel$global.navigator = jzz;\n    }\n    try {\n        performance;\n    } catch (err) {\n        let performance1;\n        eval('performance = require(\"perf_hooks\").performance'), $parcel$global.performance = performance1;\n    }\n}\n/**\n * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it\n * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.\n *\n * When using the WebMidi.js library, you should know that the `WebMidi` class has already been\n * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should\n * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6\n * module) version, you get an already-instantiated object when you import the module.\n *\n * @fires WebMidi#connected\n * @fires WebMidi#disabled\n * @fires WebMidi#disconnected\n * @fires WebMidi#enabled\n * @fires WebMidi#error\n * @fires WebMidi#midiaccessgranted\n * @fires WebMidi#portschanged\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */ class WebMidi extends EventEmitter {\n    constructor(){\n        super(), this.defaults = {\n            note: {\n                attack: Utilities.from7bitToFloat(64),\n                release: Utilities.from7bitToFloat(64),\n                duration: 1 / 0\n            }\n        }, this.interface = null, this.validation = !0, this._inputs = [], this._disconnectedInputs = [], this._outputs = [], this._disconnectedOutputs = [], this._stateChangeQueue = [], this._octaveOffset = 0;\n    }\n    async enable(e = {}, t = !1) {\n        if (this.validation = !1 !== e.validation, this.validation && (\"function\" == typeof e && (e = {\n            callback: e,\n            sysex: t\n        }), t && (e.sysex = !0)), this.enabled) return \"function\" == typeof e.callback && e.callback(), Promise.resolve();\n        const n = {\n            timestamp: this.time,\n            target: this,\n            type: \"error\",\n            error: void 0\n        }, r = {\n            timestamp: this.time,\n            target: this,\n            type: \"midiaccessgranted\"\n        }, i = {\n            timestamp: this.time,\n            target: this,\n            type: \"enabled\"\n        };\n        try {\n            \"function\" == typeof e.requestMIDIAccessFunction ? this.interface = await e.requestMIDIAccessFunction({\n                sysex: e.sysex,\n                software: e.software\n            }) : this.interface = await navigator.requestMIDIAccess({\n                sysex: e.sysex,\n                software: e.software\n            });\n        } catch (t) {\n            return n.error = t, this.emit(\"error\", n), \"function\" == typeof e.callback && e.callback(t), Promise.reject(t);\n        }\n        this.emit(\"midiaccessgranted\", r), this.interface.onstatechange = this._onInterfaceStateChange.bind(this);\n        try {\n            await this._updateInputsAndOutputs();\n        } catch (t) {\n            return n.error = t, this.emit(\"error\", n), \"function\" == typeof e.callback && e.callback(t), Promise.reject(t);\n        }\n        return this.emit(\"enabled\", i), \"function\" == typeof e.callback && e.callback(), Promise.resolve(this);\n    }\n    async disable() {\n        return this.interface && (this.interface.onstatechange = void 0), this._destroyInputsAndOutputs().then(()=>{\n            navigator && \"function\" == typeof navigator.close && navigator.close(), this.interface = null;\n            let e = {\n                timestamp: this.time,\n                target: this,\n                type: \"disabled\"\n            };\n            this.emit(\"disabled\", e), this.removeListener();\n        });\n    }\n    getInputById(e, t = {\n        disconnected: !1\n    }) {\n        if (this.validation) {\n            if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n            if (!e) return;\n        }\n        if (t.disconnected) {\n            for(let t = 0; t < this._disconnectedInputs.length; t++)if (this._disconnectedInputs[t].id === e.toString()) return this._disconnectedInputs[t];\n        } else for(let t = 0; t < this.inputs.length; t++)if (this.inputs[t].id === e.toString()) return this.inputs[t];\n    }\n    getInputByName(e, t = {\n        disconnected: !1\n    }) {\n        if (this.validation) {\n            if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n            if (!e) return;\n            e = e.toString();\n        }\n        if (t.disconnected) {\n            for(let t = 0; t < this._disconnectedInputs.length; t++)if (~this._disconnectedInputs[t].name.indexOf(e)) return this._disconnectedInputs[t];\n        } else for(let t = 0; t < this.inputs.length; t++)if (~this.inputs[t].name.indexOf(e)) return this.inputs[t];\n    }\n    getOutputByName(e, t = {\n        disconnected: !1\n    }) {\n        if (this.validation) {\n            if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n            if (!e) return;\n            e = e.toString();\n        }\n        if (t.disconnected) {\n            for(let t = 0; t < this._disconnectedOutputs.length; t++)if (~this._disconnectedOutputs[t].name.indexOf(e)) return this._disconnectedOutputs[t];\n        } else for(let t = 0; t < this.outputs.length; t++)if (~this.outputs[t].name.indexOf(e)) return this.outputs[t];\n    }\n    getOutputById(e, t = {\n        disconnected: !1\n    }) {\n        if (this.validation) {\n            if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n            if (!e) return;\n        }\n        if (t.disconnected) {\n            for(let t = 0; t < this._disconnectedOutputs.length; t++)if (this._disconnectedOutputs[t].id === e.toString()) return this._disconnectedOutputs[t];\n        } else for(let t = 0; t < this.outputs.length; t++)if (this.outputs[t].id === e.toString()) return this.outputs[t];\n    }\n    noteNameToNumber(e) {\n        return this.validation && console.warn(\"The noteNameToNumber() method is deprecated. Use Utilities.toNoteNumber() instead.\"), Utilities.toNoteNumber(e, this.octaveOffset);\n    }\n    getOctave(e) {\n        return this.validation && (console.warn(\"The getOctave()is deprecated. Use Utilities.getNoteDetails() instead\"), e = parseInt(e)), !isNaN(e) && e >= 0 && e <= 127 && Utilities.getNoteDetails(Utilities.offsetNumber(e, this.octaveOffset)).octave;\n    }\n    sanitizeChannels(e) {\n        return this.validation && console.warn(\"The sanitizeChannels() method has been moved to the utilities class.\"), Utilities.sanitizeChannels(e);\n    }\n    toMIDIChannels(e) {\n        return this.validation && console.warn(\"The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead.\"), Utilities.sanitizeChannels(e);\n    }\n    guessNoteNumber(e) {\n        return this.validation && console.warn(\"The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead.\"), Utilities.guessNoteNumber(e, this.octaveOffset);\n    }\n    getValidNoteArray(e, t = {}) {\n        return this.validation && console.warn(\"The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()\"), Utilities.buildNoteArray(e, t);\n    }\n    convertToTimestamp(e) {\n        return this.validation && console.warn(\"The convertToTimestamp() method has been moved to Utilities.toTimestamp().\"), Utilities.toTimestamp(e);\n    }\n    async _destroyInputsAndOutputs() {\n        let e = [];\n        return this.inputs.forEach((t)=>e.push(t.destroy())), this.outputs.forEach((t)=>e.push(t.destroy())), Promise.all(e).then(()=>{\n            this._inputs = [], this._outputs = [];\n        });\n    }\n    _onInterfaceStateChange(e) {\n        this._updateInputsAndOutputs();\n        let t = {\n            timestamp: e.timeStamp,\n            type: e.port.state,\n            target: this\n        };\n        if (\"connected\" === e.port.state && \"open\" === e.port.connection) {\n            \"output\" === e.port.type ? t.port = this.getOutputById(e.port.id) : \"input\" === e.port.type && (t.port = this.getInputById(e.port.id)), this.emit(e.port.state, t);\n            const n = Object.assign({}, t);\n            n.type = \"portschanged\", this.emit(n.type, n);\n        } else if (\"disconnected\" === e.port.state && \"pending\" === e.port.connection) {\n            \"input\" === e.port.type ? t.port = this.getInputById(e.port.id, {\n                disconnected: !0\n            }) : \"output\" === e.port.type && (t.port = this.getOutputById(e.port.id, {\n                disconnected: !0\n            })), this.emit(e.port.state, t);\n            const n = Object.assign({}, t);\n            n.type = \"portschanged\", this.emit(n.type, n);\n        }\n    }\n    async _updateInputsAndOutputs() {\n        return Promise.all([\n            this._updateInputs(),\n            this._updateOutputs()\n        ]);\n    }\n    async _updateInputs() {\n        if (!this.interface) return;\n        for(let e = this._inputs.length - 1; e >= 0; e--){\n            const t = this._inputs[e];\n            Array.from(this.interface.inputs.values()).find((e)=>e === t._midiInput) || (this._disconnectedInputs.push(t), this._inputs.splice(e, 1));\n        }\n        let e = [];\n        return this.interface.inputs.forEach((t)=>{\n            if (!this._inputs.find((e)=>e._midiInput === t)) {\n                let n = this._disconnectedInputs.find((e)=>e._midiInput === t);\n                n || (n = new Input(t)), this._inputs.push(n), e.push(n.open());\n            }\n        }), Promise.all(e);\n    }\n    async _updateOutputs() {\n        if (!this.interface) return;\n        for(let e = this._outputs.length - 1; e >= 0; e--){\n            const t = this._outputs[e];\n            Array.from(this.interface.outputs.values()).find((e)=>e === t._midiOutput) || (this._disconnectedOutputs.push(t), this._outputs.splice(e, 1));\n        }\n        let e = [];\n        return this.interface.outputs.forEach((t)=>{\n            if (!this._outputs.find((e)=>e._midiOutput === t)) {\n                let n = this._disconnectedOutputs.find((e)=>e._midiOutput === t);\n                n || (n = new Output(t)), this._outputs.push(n), e.push(n.open());\n            }\n        }), Promise.all(e);\n    }\n    get enabled() {\n        return null !== this.interface;\n    }\n    get inputs() {\n        return this._inputs;\n    }\n    get isNode() {\n        return this.validation && console.warn(\"WebMidi.isNode has been deprecated. Use Utilities.isNode instead.\"), Utilities.isNode;\n    }\n    get isBrowser() {\n        return this.validation && console.warn(\"WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead.\"), Utilities.isBrowser;\n    }\n    get octaveOffset() {\n        return this._octaveOffset;\n    }\n    set octaveOffset(e) {\n        if (this.validation && (e = parseInt(e), isNaN(e))) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n        this._octaveOffset = e;\n    }\n    get outputs() {\n        return this._outputs;\n    }\n    get supported() {\n        return \"undefined\" != typeof navigator && navigator.requestMIDIAccess;\n    }\n    get sysexEnabled() {\n        return !(!this.interface || !this.interface.sysexEnabled);\n    }\n    get time() {\n        return performance.now();\n    }\n    get version() {\n        return \"3.1.6\";\n    }\n    get flavour() {\n        return \"cjs\";\n    }\n    get CHANNEL_EVENTS() {\n        return this.validation && console.warn(\"The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS.\"), Enumerations.CHANNEL_EVENTS;\n    }\n    get MIDI_SYSTEM_MESSAGES() {\n        return this.validation && console.warn(\"The MIDI_SYSTEM_MESSAGES enum has been moved to Enumerations.SYSTEM_MESSAGES.\"), Enumerations.SYSTEM_MESSAGES;\n    }\n    get MIDI_CHANNEL_MODE_MESSAGES() {\n        return this.validation && console.warn(\"The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to Enumerations.CHANNEL_MODE_MESSAGES.\"), Enumerations.CHANNEL_MODE_MESSAGES;\n    }\n    get MIDI_CONTROL_CHANGE_MESSAGES() {\n        return this.validation && console.warn(\"The MIDI_CONTROL_CHANGE_MESSAGES enum has been replaced by the Enumerations.CONTROL_CHANGE_MESSAGES array.\"), Enumerations.MIDI_CONTROL_CHANGE_MESSAGES;\n    }\n    get MIDI_REGISTERED_PARAMETER() {\n        return this.validation && console.warn(\"The MIDI_REGISTERED_PARAMETER enum has been moved to Enumerations.REGISTERED_PARAMETERS.\"), Enumerations.REGISTERED_PARAMETERS;\n    }\n    get NOTES() {\n        return this.validation && console.warn(\"The NOTES enum has been deprecated.\"), [\n            \"C\",\n            \"C#\",\n            \"D\",\n            \"D#\",\n            \"E\",\n            \"F\",\n            \"F#\",\n            \"G\",\n            \"G#\",\n            \"A\",\n            \"A#\",\n            \"B\"\n        ];\n    }\n}\nconst wm = new WebMidi;\nwm.constructor = null, exports.Enumerations = Enumerations, exports.Forwarder = Forwarder, exports.Input = Input, exports.InputChannel = InputChannel, exports.Message = Message, exports.Note = Note, exports.Output = Output, exports.OutputChannel = OutputChannel, exports.Utilities = Utilities, exports.WebMidi = wm;\n\n});\nparcelRegister(\"17tgv\", function(module, exports) {\n// shim for using process in browser\nvar $0d0d255e14f785b6$var$process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $0d0d255e14f785b6$var$cachedSetTimeout;\nvar $0d0d255e14f785b6$var$cachedClearTimeout;\nfunction $0d0d255e14f785b6$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $0d0d255e14f785b6$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $0d0d255e14f785b6$var$cachedSetTimeout = setTimeout;\n        else $0d0d255e14f785b6$var$cachedSetTimeout = $0d0d255e14f785b6$var$defaultSetTimout;\n    } catch (e) {\n        $0d0d255e14f785b6$var$cachedSetTimeout = $0d0d255e14f785b6$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $0d0d255e14f785b6$var$cachedClearTimeout = clearTimeout;\n        else $0d0d255e14f785b6$var$cachedClearTimeout = $0d0d255e14f785b6$var$defaultClearTimeout;\n    } catch (e) {\n        $0d0d255e14f785b6$var$cachedClearTimeout = $0d0d255e14f785b6$var$defaultClearTimeout;\n    }\n})();\nfunction $0d0d255e14f785b6$var$runTimeout(fun) {\n    if ($0d0d255e14f785b6$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($0d0d255e14f785b6$var$cachedSetTimeout === $0d0d255e14f785b6$var$defaultSetTimout || !$0d0d255e14f785b6$var$cachedSetTimeout) && setTimeout) {\n        $0d0d255e14f785b6$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $0d0d255e14f785b6$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $0d0d255e14f785b6$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $0d0d255e14f785b6$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $0d0d255e14f785b6$var$runClearTimeout(marker) {\n    if ($0d0d255e14f785b6$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($0d0d255e14f785b6$var$cachedClearTimeout === $0d0d255e14f785b6$var$defaultClearTimeout || !$0d0d255e14f785b6$var$cachedClearTimeout) && clearTimeout) {\n        $0d0d255e14f785b6$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $0d0d255e14f785b6$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $0d0d255e14f785b6$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $0d0d255e14f785b6$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $0d0d255e14f785b6$var$queue = [];\nvar $0d0d255e14f785b6$var$draining = false;\nvar $0d0d255e14f785b6$var$currentQueue;\nvar $0d0d255e14f785b6$var$queueIndex = -1;\nfunction $0d0d255e14f785b6$var$cleanUpNextTick() {\n    if (!$0d0d255e14f785b6$var$draining || !$0d0d255e14f785b6$var$currentQueue) return;\n    $0d0d255e14f785b6$var$draining = false;\n    if ($0d0d255e14f785b6$var$currentQueue.length) $0d0d255e14f785b6$var$queue = $0d0d255e14f785b6$var$currentQueue.concat($0d0d255e14f785b6$var$queue);\n    else $0d0d255e14f785b6$var$queueIndex = -1;\n    if ($0d0d255e14f785b6$var$queue.length) $0d0d255e14f785b6$var$drainQueue();\n}\nfunction $0d0d255e14f785b6$var$drainQueue() {\n    if ($0d0d255e14f785b6$var$draining) return;\n    var timeout = $0d0d255e14f785b6$var$runTimeout($0d0d255e14f785b6$var$cleanUpNextTick);\n    $0d0d255e14f785b6$var$draining = true;\n    var len = $0d0d255e14f785b6$var$queue.length;\n    while(len){\n        $0d0d255e14f785b6$var$currentQueue = $0d0d255e14f785b6$var$queue;\n        $0d0d255e14f785b6$var$queue = [];\n        while(++$0d0d255e14f785b6$var$queueIndex < len)if ($0d0d255e14f785b6$var$currentQueue) $0d0d255e14f785b6$var$currentQueue[$0d0d255e14f785b6$var$queueIndex].run();\n        $0d0d255e14f785b6$var$queueIndex = -1;\n        len = $0d0d255e14f785b6$var$queue.length;\n    }\n    $0d0d255e14f785b6$var$currentQueue = null;\n    $0d0d255e14f785b6$var$draining = false;\n    $0d0d255e14f785b6$var$runClearTimeout(timeout);\n}\n$0d0d255e14f785b6$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $0d0d255e14f785b6$var$queue.push(new $0d0d255e14f785b6$var$Item(fun, args));\n    if ($0d0d255e14f785b6$var$queue.length === 1 && !$0d0d255e14f785b6$var$draining) $0d0d255e14f785b6$var$runTimeout($0d0d255e14f785b6$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $0d0d255e14f785b6$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$0d0d255e14f785b6$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$0d0d255e14f785b6$var$process.title = \"browser\";\n$0d0d255e14f785b6$var$process.browser = true;\n$0d0d255e14f785b6$var$process.env = {};\n$0d0d255e14f785b6$var$process.argv = [];\n$0d0d255e14f785b6$var$process.version = \"\"; // empty string to avoid regexp issues\n$0d0d255e14f785b6$var$process.versions = {};\nfunction $0d0d255e14f785b6$var$noop() {}\n$0d0d255e14f785b6$var$process.on = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.addListener = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.once = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.off = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.removeListener = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.removeAllListeners = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.emit = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.prependListener = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.prependOnceListener = $0d0d255e14f785b6$var$noop;\n$0d0d255e14f785b6$var$process.listeners = function(name) {\n    return [];\n};\n$0d0d255e14f785b6$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$0d0d255e14f785b6$var$process.cwd = function() {\n    return \"/\";\n};\n$0d0d255e14f785b6$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$0d0d255e14f785b6$var$process.umask = function() {\n    return 0;\n};\n\n});\n\n\nvar $231519b62b676521$exports = {};\n\"use strict\";\nvar $a520a033728d73e4$exports = {};\n\"use strict\";\n\nvar $fMiaA = parcelRequire(\"fMiaA\");\n\n$fMiaA.trust = (parcelRequire(\"gQsxe\"));\n\n$fMiaA.fragment = (parcelRequire(\"pcZwJ\"));\n$a520a033728d73e4$exports = $fMiaA;\n\n\nvar $de539031959a0ca1$exports = {};\n\"use strict\";\n\nvar $9JY0H = parcelRequire(\"9JY0H\");\n\nvar $gA8yJ = parcelRequire(\"gA8yJ\");\n\n$de539031959a0ca1$exports = (parcelRequire(\"6ePE9\"))(typeof window !== \"undefined\" ? window : null, $9JY0H, $gA8yJ.redraw);\n\n\n\nvar $gA8yJ = parcelRequire(\"gA8yJ\");\nvar $231519b62b676521$var$m = function m() {\n    return $a520a033728d73e4$exports.apply(this, arguments);\n};\n$231519b62b676521$var$m.m = $a520a033728d73e4$exports;\n$231519b62b676521$var$m.trust = $a520a033728d73e4$exports.trust;\n$231519b62b676521$var$m.fragment = $a520a033728d73e4$exports.fragment;\n$231519b62b676521$var$m.Fragment = \"[\";\n$231519b62b676521$var$m.mount = $gA8yJ.mount;\n\n$231519b62b676521$var$m.route = (parcelRequire(\"5NN5g\"));\n\n$231519b62b676521$var$m.render = (parcelRequire(\"03gNt\"));\n$231519b62b676521$var$m.redraw = $gA8yJ.redraw;\n$231519b62b676521$var$m.request = $de539031959a0ca1$exports.request;\n$231519b62b676521$var$m.jsonp = $de539031959a0ca1$exports.jsonp;\n\n$231519b62b676521$var$m.parseQueryString = (parcelRequire(\"kRquH\"));\n\n$231519b62b676521$var$m.buildQueryString = (parcelRequire(\"4TqxV\"));\n\n$231519b62b676521$var$m.parsePathname = (parcelRequire(\"rLlma\"));\n\n$231519b62b676521$var$m.buildPathname = (parcelRequire(\"dVi4w\"));\n\n$231519b62b676521$var$m.vnode = (parcelRequire(\"8JOml\"));\n\n$231519b62b676521$var$m.PromisePolyfill = (parcelRequire(\"c0EvV\"));\n\n$231519b62b676521$var$m.censor = (parcelRequire(\"g0xgq\"));\n$231519b62b676521$exports = $231519b62b676521$var$m;\n\n\n\n\nvar $3895aa91744b6895$exports = {};\n/**\r\n * alertifyjs 1.13.1 http://alertifyjs.com\r\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\r\n * Copyright 2019 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \r\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>*/ (function(window1) {\n    \"use strict\";\n    var NOT_DISABLED_NOT_RESET = \":not(:disabled):not(.ajs-reset)\";\n    /**\r\n     * Keys enum\r\n     * @type {Object}\r\n     */ var keys = {\n        ENTER: 13,\n        ESC: 27,\n        F1: 112,\n        F12: 123,\n        LEFT: 37,\n        RIGHT: 39,\n        TAB: 9\n    };\n    /**\r\n     * Default options \r\n     * @type {Object}\r\n     */ var defaults = {\n        autoReset: true,\n        basic: false,\n        closable: true,\n        closableByDimmer: true,\n        invokeOnCloseOff: false,\n        frameless: false,\n        defaultFocusOff: false,\n        maintainFocus: true,\n        maximizable: true,\n        modal: true,\n        movable: true,\n        moveBounded: false,\n        overflow: true,\n        padding: true,\n        pinnable: true,\n        pinned: true,\n        preventBodyShift: false,\n        resizable: true,\n        startMaximized: false,\n        transition: \"pulse\",\n        transitionOff: false,\n        tabbable: [\n            \"button\",\n            \"[href]\",\n            \"input\",\n            \"select\",\n            \"textarea\",\n            '[tabindex]:not([tabindex^=\"-\"])' + NOT_DISABLED_NOT_RESET\n        ].join(NOT_DISABLED_NOT_RESET + \",\"),\n        notifier: {\n            delay: 5,\n            position: \"bottom-right\",\n            closeButton: false,\n            classes: {\n                base: \"alertify-notifier\",\n                prefix: \"ajs-\",\n                message: \"ajs-message\",\n                top: \"ajs-top\",\n                right: \"ajs-right\",\n                bottom: \"ajs-bottom\",\n                left: \"ajs-left\",\n                center: \"ajs-center\",\n                visible: \"ajs-visible\",\n                hidden: \"ajs-hidden\",\n                close: \"ajs-close\"\n            }\n        },\n        glossary: {\n            title: \"AlertifyJS\",\n            ok: \"OK\",\n            cancel: \"Cancel\",\n            acccpt: \"Accept\",\n            deny: \"Deny\",\n            confirm: \"Confirm\",\n            decline: \"Decline\",\n            close: \"Close\",\n            maximize: \"Maximize\",\n            restore: \"Restore\"\n        },\n        theme: {\n            input: \"ajs-input\",\n            ok: \"ajs-ok\",\n            cancel: \"ajs-cancel\"\n        },\n        hooks: {\n            preinit: function() {},\n            postinit: function() {}\n        }\n    };\n    //holds open dialogs instances\n    var openDialogs = [];\n    /**\r\n     * [Helper]  Adds the specified class(es) to the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */ function addClass(element, classNames) {\n        element.className += \" \" + classNames;\n    }\n    /**\r\n     * [Helper]  Removes the specified class(es) from the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */ function removeClass(element, classNames) {\n        var original = element.className.split(\" \");\n        var toBeRemoved = classNames.split(\" \");\n        for(var x = 0; x < toBeRemoved.length; x += 1){\n            var index = original.indexOf(toBeRemoved[x]);\n            if (index > -1) original.splice(index, 1);\n        }\n        element.className = original.join(\" \");\n    }\n    /**\r\n     * [Helper]  Checks if the document is RTL\r\n     *\r\n     * @return {Boolean} True if the document is RTL, false otherwise.\r\n     */ function isRightToLeft() {\n        return window1.getComputedStyle(document.body).direction === \"rtl\";\n    }\n    /**\r\n     * [Helper]  Get the document current scrollTop\r\n     *\r\n     * @return {Number} current document scrollTop value\r\n     */ function getScrollTop() {\n        return document.documentElement && document.documentElement.scrollTop || document.body.scrollTop;\n    }\n    /**\r\n     * [Helper]  Get the document current scrollLeft\r\n     *\r\n     * @return {Number} current document scrollLeft value\r\n     */ function getScrollLeft() {\n        return document.documentElement && document.documentElement.scrollLeft || document.body.scrollLeft;\n    }\n    /**\r\n    * Helper: clear contents\r\n    *\r\n    */ function clearContents(element) {\n        while(element.lastChild)element.removeChild(element.lastChild);\n    }\n    /**\r\n     * Extends a given prototype by merging properties from base into sub.\r\n     *\r\n     * @sub {Object} sub The prototype being overwritten.\r\n     * @base {Object} base The prototype being written.\r\n     *\r\n     * @return {Object} The extended prototype.\r\n     */ function copy(src) {\n        if (null === src) return src;\n        var cpy;\n        if (Array.isArray(src)) {\n            cpy = [];\n            for(var x = 0; x < src.length; x += 1)cpy.push(copy(src[x]));\n            return cpy;\n        }\n        if (src instanceof Date) return new Date(src.getTime());\n        if (src instanceof RegExp) {\n            cpy = new RegExp(src.source);\n            cpy.global = src.global;\n            cpy.ignoreCase = src.ignoreCase;\n            cpy.multiline = src.multiline;\n            cpy.lastIndex = src.lastIndex;\n            return cpy;\n        }\n        if (typeof src === \"object\") {\n            cpy = {};\n            // copy dialog pototype over definition.\n            for(var prop in src)if (src.hasOwnProperty(prop)) cpy[prop] = copy(src[prop]);\n            return cpy;\n        }\n        return src;\n    }\n    /**\r\n      * Helper: destruct the dialog\r\n      *\r\n      */ function destruct(instance, initialize) {\n        if (instance.elements) {\n            //delete the dom and it's references.\n            var root = instance.elements.root;\n            root.parentNode.removeChild(root);\n            delete instance.elements;\n            //copy back initial settings.\n            instance.settings = copy(instance.__settings);\n            //re-reference init function.\n            instance.__init = initialize;\n            //delete __internal variable to allow re-initialization.\n            delete instance.__internal;\n        }\n    }\n    /**\r\n     * Test to check if passive event listeners are supported.\r\n     */ var IsPassiveSupported = false;\n    try {\n        var options = Object.defineProperty({}, \"passive\", {\n            get: function() {\n                IsPassiveSupported = true;\n            }\n        });\n        window1.addEventListener(\"test\", options, options);\n        window1.removeEventListener(\"test\", options, options);\n    } catch (e) {}\n    /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to register the listenr on.\r\n     * @param {string} event The event type to listen for.\r\n     * @param {Function} handler The function to handle the event.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */ var on = function(el, event, fn, useCapture, passive) {\n        el.addEventListener(event, fn, IsPassiveSupported ? {\n            capture: useCapture,\n            passive: passive\n        } : useCapture === true);\n    };\n    /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to unregister the listenr from.\r\n     * @param {string} event The event type to remove.\r\n     * @param {Function} fn The event handler to remove.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */ var off = function(el, event, fn, useCapture, passive) {\n        el.removeEventListener(event, fn, IsPassiveSupported ? {\n            capture: useCapture,\n            passive: passive\n        } : useCapture === true);\n    };\n    /**\r\n     * Prevent default event from firing\r\n     *\r\n     * @param  {Event} event Event object\r\n     * @return {undefined}\r\n\r\n    function prevent ( event ) {\r\n        if ( event ) {\r\n            if ( event.preventDefault ) {\r\n                event.preventDefault();\r\n            } else {\r\n                event.returnValue = false;\r\n            }\r\n        }\r\n    }\r\n    */ var transition = function() {\n        var t, type;\n        var supported = false;\n        var transitions = {\n            \"animation\": \"animationend\",\n            \"OAnimation\": \"oAnimationEnd oanimationend\",\n            \"msAnimation\": \"MSAnimationEnd\",\n            \"MozAnimation\": \"animationend\",\n            \"WebkitAnimation\": \"webkitAnimationEnd\"\n        };\n        for(t in transitions)if (document.documentElement.style[t] !== undefined) {\n            type = transitions[t];\n            supported = true;\n            break;\n        }\n        return {\n            type: type,\n            supported: supported\n        };\n    }();\n    /**\r\n    * Creates event handler delegate that sends the instance as last argument.\r\n    * \r\n    * @return {Function}    a function wrapper which sends the instance as last argument.\r\n    */ function delegate(context, method) {\n        return function() {\n            if (arguments.length > 0) {\n                var args = [];\n                for(var x = 0; x < arguments.length; x += 1)args.push(arguments[x]);\n                args.push(context);\n                return method.apply(context, args);\n            }\n            return method.apply(context, [\n                null,\n                context\n            ]);\n        };\n    }\n    /**\r\n    * Helper for creating a dialog close event.\r\n    * \r\n    * @return {object}\r\n    */ function createCloseEvent(index, button) {\n        return {\n            index: index,\n            button: button,\n            cancel: false\n        };\n    }\n    /**\r\n    * Helper for dispatching events.\r\n    *\r\n    * @param  {string} evenType The type of the event to disptach.\r\n    * @param  {object} instance The dialog instance disptaching the event.\r\n    *\r\n    * @return   {any}   The result of the invoked function.\r\n    */ function dispatchEvent(eventType, instance) {\n        if (typeof instance.get(eventType) === \"function\") return instance.get(eventType).call(instance);\n    }\n    /**\r\n     * Super class for all dialogs\r\n     *\r\n     * @return {Object}\t\tbase dialog prototype\r\n     */ var dialog = function() {\n        var usedKeys = [], //dummy variable, used to trigger dom reflow.\n        reflow = null, //holds body tab index in case it has any.\n        tabindex = false, //condition for detecting safari\n        isSafari = window1.navigator.userAgent.indexOf(\"Safari\") > -1 && window1.navigator.userAgent.indexOf(\"Chrome\") < 0, //dialog building blocks\n        templates = {\n            dimmer: '<div class=\"ajs-dimmer\"></div>',\n            /*tab index required to fire click event before body focus*/ modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\n            dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\n            reset: '<button class=\"ajs-reset\"></button>',\n            commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\n            header: '<div class=\"ajs-header\"></div>',\n            body: '<div class=\"ajs-body\"></div>',\n            content: '<div class=\"ajs-content\"></div>',\n            footer: '<div class=\"ajs-footer\"></div>',\n            buttons: {\n                primary: '<div class=\"ajs-primary ajs-buttons\"></div>',\n                auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>'\n            },\n            button: '<button class=\"ajs-button\"></button>',\n            resizeHandle: '<div class=\"ajs-handle\"></div>'\n        }, //common class names\n        classes = {\n            animationIn: \"ajs-in\",\n            animationOut: \"ajs-out\",\n            base: \"alertify\",\n            basic: \"ajs-basic\",\n            capture: \"ajs-capture\",\n            closable: \"ajs-closable\",\n            fixed: \"ajs-fixed\",\n            frameless: \"ajs-frameless\",\n            hidden: \"ajs-hidden\",\n            maximize: \"ajs-maximize\",\n            maximized: \"ajs-maximized\",\n            maximizable: \"ajs-maximizable\",\n            modeless: \"ajs-modeless\",\n            movable: \"ajs-movable\",\n            noSelection: \"ajs-no-selection\",\n            noOverflow: \"ajs-no-overflow\",\n            noPadding: \"ajs-no-padding\",\n            pin: \"ajs-pin\",\n            pinnable: \"ajs-pinnable\",\n            prefix: \"ajs-\",\n            resizable: \"ajs-resizable\",\n            restore: \"ajs-restore\",\n            shake: \"ajs-shake\",\n            unpinned: \"ajs-unpinned\",\n            noTransition: \"ajs-no-transition\"\n        };\n        /**\r\n         * Helper: initializes the dialog instance\r\n         * \r\n         * @return\t{Number}\tThe total count of currently open modals.\r\n         */ function initialize(instance) {\n            if (!instance.__internal) {\n                //invoke preinit global hook\n                alertify.defaults.hooks.preinit(instance);\n                //no need to expose init after this.\n                delete instance.__init;\n                //keep a copy of initial dialog settings\n                if (!instance.__settings) instance.__settings = copy(instance.settings);\n                //get dialog buttons/focus setup\n                var setup;\n                if (typeof instance.setup === \"function\") {\n                    setup = instance.setup();\n                    setup.options = setup.options || {};\n                    setup.focus = setup.focus || {};\n                } else setup = {\n                    buttons: [],\n                    focus: {\n                        element: null,\n                        select: false\n                    },\n                    options: {}\n                };\n                //initialize hooks object.\n                if (typeof instance.hooks !== \"object\") instance.hooks = {};\n                //copy buttons defintion\n                var buttonsDefinition = [];\n                if (Array.isArray(setup.buttons)) for(var b = 0; b < setup.buttons.length; b += 1){\n                    var ref = setup.buttons[b], cpy = {};\n                    for(var i in ref)if (ref.hasOwnProperty(i)) cpy[i] = ref[i];\n                    buttonsDefinition.push(cpy);\n                }\n                var internal = instance.__internal = {\n                    /**\r\n                     * Flag holding the open state of the dialog\r\n                     * \r\n                     * @type {Boolean}\r\n                     */ isOpen: false,\n                    /**\r\n                     * Active element is the element that will receive focus after\r\n                     * closing the dialog. It defaults as the body tag, but gets updated\r\n                     * to the last focused element before the dialog was opened.\r\n                     *\r\n                     * @type {Node}\r\n                     */ activeElement: document.body,\n                    timerIn: undefined,\n                    timerOut: undefined,\n                    buttons: buttonsDefinition,\n                    focus: setup.focus,\n                    options: {\n                        title: undefined,\n                        modal: undefined,\n                        basic: undefined,\n                        frameless: undefined,\n                        defaultFocusOff: undefined,\n                        pinned: undefined,\n                        movable: undefined,\n                        moveBounded: undefined,\n                        resizable: undefined,\n                        autoReset: undefined,\n                        closable: undefined,\n                        closableByDimmer: undefined,\n                        invokeOnCloseOff: undefined,\n                        maximizable: undefined,\n                        startMaximized: undefined,\n                        pinnable: undefined,\n                        transition: undefined,\n                        transitionOff: undefined,\n                        padding: undefined,\n                        overflow: undefined,\n                        onshow: undefined,\n                        onclosing: undefined,\n                        onclose: undefined,\n                        onfocus: undefined,\n                        onmove: undefined,\n                        onmoved: undefined,\n                        onresize: undefined,\n                        onresized: undefined,\n                        onmaximize: undefined,\n                        onmaximized: undefined,\n                        onrestore: undefined,\n                        onrestored: undefined\n                    },\n                    resetHandler: undefined,\n                    beginMoveHandler: undefined,\n                    beginResizeHandler: undefined,\n                    bringToFrontHandler: undefined,\n                    modalClickHandler: undefined,\n                    buttonsClickHandler: undefined,\n                    commandsClickHandler: undefined,\n                    transitionInHandler: undefined,\n                    transitionOutHandler: undefined,\n                    destroy: undefined\n                };\n                var elements = {};\n                //root node\n                elements.root = document.createElement(\"div\");\n                //prevent FOUC in case of async styles loading.\n                elements.root.style.display = \"none\";\n                elements.root.className = classes.base + \" \" + classes.hidden + \" \";\n                elements.root.innerHTML = templates.dimmer + templates.modal;\n                //dimmer\n                elements.dimmer = elements.root.firstChild;\n                //dialog\n                elements.modal = elements.root.lastChild;\n                elements.modal.innerHTML = templates.dialog;\n                elements.dialog = elements.modal.firstChild;\n                elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\n                //reset links\n                elements.reset = [];\n                elements.reset.push(elements.dialog.firstChild);\n                elements.reset.push(elements.dialog.lastChild);\n                //commands\n                elements.commands = {};\n                elements.commands.container = elements.reset[0].nextSibling;\n                elements.commands.pin = elements.commands.container.firstChild;\n                elements.commands.maximize = elements.commands.pin.nextSibling;\n                elements.commands.close = elements.commands.maximize.nextSibling;\n                //header\n                elements.header = elements.commands.container.nextSibling;\n                //body\n                elements.body = elements.header.nextSibling;\n                elements.body.innerHTML = templates.content;\n                elements.content = elements.body.firstChild;\n                //footer\n                elements.footer = elements.body.nextSibling;\n                elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\n                //resize handle\n                elements.resizeHandle = elements.footer.nextSibling;\n                //buttons\n                elements.buttons = {};\n                elements.buttons.auxiliary = elements.footer.firstChild;\n                elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\n                elements.buttons.primary.innerHTML = templates.button;\n                elements.buttonTemplate = elements.buttons.primary.firstChild;\n                //remove button template\n                elements.buttons.primary.removeChild(elements.buttonTemplate);\n                for(var x = 0; x < instance.__internal.buttons.length; x += 1){\n                    var button = instance.__internal.buttons[x];\n                    // add to the list of used keys.\n                    if (usedKeys.indexOf(button.key) < 0) usedKeys.push(button.key);\n                    button.element = elements.buttonTemplate.cloneNode();\n                    button.element.innerHTML = button.text;\n                    if (typeof button.className === \"string\" && button.className !== \"\") addClass(button.element, button.className);\n                    for(var key in button.attrs)if (key !== \"className\" && button.attrs.hasOwnProperty(key)) button.element.setAttribute(key, button.attrs[key]);\n                    if (button.scope === \"auxiliary\") elements.buttons.auxiliary.appendChild(button.element);\n                    else elements.buttons.primary.appendChild(button.element);\n                }\n                //make elements pubic\n                instance.elements = elements;\n                //save event handlers delegates\n                internal.resetHandler = delegate(instance, onReset);\n                internal.beginMoveHandler = delegate(instance, beginMove);\n                internal.beginResizeHandler = delegate(instance, beginResize);\n                internal.bringToFrontHandler = delegate(instance, bringToFront);\n                internal.modalClickHandler = delegate(instance, modalClickHandler);\n                internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\n                internal.commandsClickHandler = delegate(instance, commandsClickHandler);\n                internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\n                internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\n                //settings\n                for(var opKey in internal.options){\n                    if (setup.options[opKey] !== undefined) // if found in user options\n                    instance.set(opKey, setup.options[opKey]);\n                    else if (alertify.defaults.hasOwnProperty(opKey)) // else if found in defaults options\n                    instance.set(opKey, alertify.defaults[opKey]);\n                    else if (opKey === \"title\") // else if title key, use alertify.defaults.glossary\n                    instance.set(opKey, alertify.defaults.glossary[opKey]);\n                }\n                // allow dom customization\n                if (typeof instance.build === \"function\") instance.build();\n                //invoke postinit global hook\n                alertify.defaults.hooks.postinit(instance);\n            }\n            //add to the end of the DOM tree.\n            document.body.appendChild(instance.elements.root);\n        }\n        /**\r\n         * Helper: maintains scroll position\r\n         *\r\n         */ var scrollX, scrollY;\n        function saveScrollPosition() {\n            scrollX = getScrollLeft();\n            scrollY = getScrollTop();\n        }\n        function restoreScrollPosition() {\n            window1.scrollTo(scrollX, scrollY);\n        }\n        /**\r\n         * Helper: adds/removes no-overflow class from body\r\n         *\r\n         */ function ensureNoOverflow() {\n            var requiresNoOverflow = 0;\n            for(var x = 0; x < openDialogs.length; x += 1){\n                var instance = openDialogs[x];\n                if (instance.isModal() || instance.isMaximized()) requiresNoOverflow += 1;\n            }\n            if (requiresNoOverflow === 0 && document.body.className.indexOf(classes.noOverflow) >= 0) {\n                //last open modal or last maximized one\n                removeClass(document.body, classes.noOverflow);\n                preventBodyShift(false);\n            } else if (requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0) {\n                //first open modal or first maximized one\n                preventBodyShift(true);\n                addClass(document.body, classes.noOverflow);\n            }\n        }\n        var top = \"\", topScroll = 0;\n        /**\r\n         * Helper: prevents body shift.\r\n         *\r\n         */ function preventBodyShift(add) {\n            if (alertify.defaults.preventBodyShift) {\n                if (add && document.documentElement.scrollHeight > document.documentElement.clientHeight) {\n                    topScroll = scrollY;\n                    top = window1.getComputedStyle(document.body).top;\n                    addClass(document.body, classes.fixed);\n                    document.body.style.top = -scrollY + \"px\";\n                } else if (!add) {\n                    scrollY = topScroll;\n                    document.body.style.top = top;\n                    removeClass(document.body, classes.fixed);\n                    restoreScrollPosition();\n                }\n            }\n        }\n        /**\r\n         * Sets the name of the transition used to show/hide the dialog\r\n         * \r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         */ function updateTransition(instance, value, oldValue) {\n            if (typeof oldValue === \"string\") removeClass(instance.elements.root, classes.prefix + oldValue);\n            addClass(instance.elements.root, classes.prefix + value);\n            reflow = instance.elements.root.offsetWidth;\n        }\n        /**\r\n         * Toggles the dialog no transition \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateTransitionOff(instance) {\n            if (instance.get(\"transitionOff\")) // add class\n            addClass(instance.elements.root, classes.noTransition);\n            else // remove class\n            removeClass(instance.elements.root, classes.noTransition);\n        }\n        /**\r\n         * Toggles the dialog display mode\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateDisplayMode(instance) {\n            if (instance.get(\"modal\")) {\n                //make modal\n                removeClass(instance.elements.root, classes.modeless);\n                //only if open\n                if (instance.isOpen()) {\n                    unbindModelessEvents(instance);\n                    //in case a pinned modless dialog was made modal while open.\n                    updateAbsPositionFix(instance);\n                    ensureNoOverflow();\n                }\n            } else {\n                //make modelss\n                addClass(instance.elements.root, classes.modeless);\n                //only if open\n                if (instance.isOpen()) {\n                    bindModelessEvents(instance);\n                    //in case pin/unpin was called while a modal is open\n                    updateAbsPositionFix(instance);\n                    ensureNoOverflow();\n                }\n            }\n        }\n        /**\r\n         * Toggles the dialog basic view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateBasicMode(instance) {\n            if (instance.get(\"basic\")) // add class\n            addClass(instance.elements.root, classes.basic);\n            else // remove class\n            removeClass(instance.elements.root, classes.basic);\n        }\n        /**\r\n         * Toggles the dialog frameless view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateFramelessMode(instance) {\n            if (instance.get(\"frameless\")) // add class\n            addClass(instance.elements.root, classes.frameless);\n            else // remove class\n            removeClass(instance.elements.root, classes.frameless);\n        }\n        /**\r\n         * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\r\n         *\r\n         * @param {Event} event Focus event\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function bringToFront(event, instance) {\n            // Do not bring to front if preceeded by an open modal\n            var index = openDialogs.indexOf(instance);\n            for(var x = index + 1; x < openDialogs.length; x += 1){\n                if (openDialogs[x].isModal()) return;\n            }\n            // Bring to front by making it the last child.\n            if (document.body.lastChild !== instance.elements.root) {\n                document.body.appendChild(instance.elements.root);\n                //also make sure its at the end of the list\n                openDialogs.splice(openDialogs.indexOf(instance), 1);\n                openDialogs.push(instance);\n                setFocus(instance);\n            }\n            return false;\n        }\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{undefined}\t\r\n         */ function optionUpdated(instance, option, oldValue, newValue) {\n            switch(option){\n                case \"title\":\n                    instance.setHeader(newValue);\n                    break;\n                case \"modal\":\n                    updateDisplayMode(instance);\n                    break;\n                case \"basic\":\n                    updateBasicMode(instance);\n                    break;\n                case \"frameless\":\n                    updateFramelessMode(instance);\n                    break;\n                case \"pinned\":\n                    updatePinned(instance);\n                    break;\n                case \"closable\":\n                    updateClosable(instance);\n                    break;\n                case \"maximizable\":\n                    updateMaximizable(instance);\n                    break;\n                case \"pinnable\":\n                    updatePinnable(instance);\n                    break;\n                case \"movable\":\n                    updateMovable(instance);\n                    break;\n                case \"resizable\":\n                    updateResizable(instance);\n                    break;\n                case \"padding\":\n                    if (newValue) removeClass(instance.elements.root, classes.noPadding);\n                    else if (instance.elements.root.className.indexOf(classes.noPadding) < 0) addClass(instance.elements.root, classes.noPadding);\n                    break;\n                case \"overflow\":\n                    if (newValue) removeClass(instance.elements.root, classes.noOverflow);\n                    else if (instance.elements.root.className.indexOf(classes.noOverflow) < 0) addClass(instance.elements.root, classes.noOverflow);\n                    break;\n                case \"transition\":\n                    updateTransition(instance, newValue, oldValue);\n                    break;\n                case \"transitionOff\":\n                    updateTransitionOff(instance);\n                    break;\n            }\n            // internal on option updated event\n            if (typeof instance.hooks.onupdate === \"function\") instance.hooks.onupdate.call(instance, option, oldValue, newValue);\n        }\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Object} obj The object to set/get a value on/from.\r\n         * @param {Function} callback The callback function to call if the key was found.\r\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\r\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{Object} result object \r\n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\r\n         *\t\tGET: \r\n         *\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t- value: the property value.\r\n         *\t\tSET:\r\n         *\t\t- items: a list of key value pairs of the properties being set.\r\n         *\t\t\t\teach contains:\r\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t\t\t\t- key: the property key.\r\n         *\t\t\t\t\t- value: the property value.\r\n         */ function update(instance, obj, callback, key, value) {\n            var result = {\n                op: undefined,\n                items: []\n            };\n            if (typeof value === \"undefined\" && typeof key === \"string\") {\n                //get\n                result.op = \"get\";\n                if (obj.hasOwnProperty(key)) {\n                    result.found = true;\n                    result.value = obj[key];\n                } else {\n                    result.found = false;\n                    result.value = undefined;\n                }\n            } else {\n                var old;\n                //set\n                result.op = \"set\";\n                if (typeof key === \"object\") {\n                    //set multiple\n                    var args = key;\n                    for(var prop in args)if (obj.hasOwnProperty(prop)) {\n                        if (obj[prop] !== args[prop]) {\n                            old = obj[prop];\n                            obj[prop] = args[prop];\n                            callback.call(instance, prop, old, args[prop]);\n                        }\n                        result.items.push({\n                            \"key\": prop,\n                            \"value\": args[prop],\n                            \"found\": true\n                        });\n                    } else result.items.push({\n                        \"key\": prop,\n                        \"value\": args[prop],\n                        \"found\": false\n                    });\n                } else if (typeof key === \"string\") {\n                    //set single\n                    if (obj.hasOwnProperty(key)) {\n                        if (obj[key] !== value) {\n                            old = obj[key];\n                            obj[key] = value;\n                            callback.call(instance, key, old, value);\n                        }\n                        result.items.push({\n                            \"key\": key,\n                            \"value\": value,\n                            \"found\": true\n                        });\n                    } else result.items.push({\n                        \"key\": key,\n                        \"value\": value,\n                        \"found\": false\n                    });\n                } else //invalid params\n                throw new Error(\"args must be a string or object\");\n            }\n            return result;\n        }\n        /**\r\n         * Triggers a close event.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */ function triggerClose(instance) {\n            var found;\n            triggerCallback(instance, function(button) {\n                return found = instance.get(\"invokeOnCloseOff\") !== true && button.invokeOnClose === true;\n            });\n            //none of the buttons registered as onclose callback\n            //close the dialog\n            if (!found && instance.isOpen()) instance.close();\n        }\n        /**\r\n         * Dialogs commands event handler, attached to the dialog commands element.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */ function commandsClickHandler(event, instance) {\n            var target = event.srcElement || event.target;\n            switch(target){\n                case instance.elements.commands.pin:\n                    if (!instance.isPinned()) pin(instance);\n                    else unpin(instance);\n                    break;\n                case instance.elements.commands.maximize:\n                    if (!instance.isMaximized()) maximize(instance);\n                    else restore(instance);\n                    break;\n                case instance.elements.commands.close:\n                    triggerClose(instance);\n                    break;\n            }\n            return false;\n        }\n        /**\r\n         * Helper: pins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dialog instance.\r\n         * \r\n         * @return {undefined}\r\n         */ function pin(instance) {\n            //pin the dialog\n            instance.set(\"pinned\", true);\n        }\n        /**\r\n         * Helper: unpins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */ function unpin(instance) {\n            //unpin the dialog \n            instance.set(\"pinned\", false);\n        }\n        /**\r\n         * Helper: enlarges the dialog to fill the entire screen.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */ function maximize(instance) {\n            // allow custom `onmaximize` method\n            dispatchEvent(\"onmaximize\", instance);\n            //maximize the dialog \n            addClass(instance.elements.root, classes.maximized);\n            if (instance.isOpen()) ensureNoOverflow();\n            // allow custom `onmaximized` method\n            dispatchEvent(\"onmaximized\", instance);\n        }\n        /**\r\n         * Helper: returns the dialog to its former size.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */ function restore(instance) {\n            // allow custom `onrestore` method\n            dispatchEvent(\"onrestore\", instance);\n            //maximize the dialog \n            removeClass(instance.elements.root, classes.maximized);\n            if (instance.isOpen()) ensureNoOverflow();\n            // allow custom `onrestored` method\n            dispatchEvent(\"onrestored\", instance);\n        }\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */ function updatePinnable(instance) {\n            if (instance.get(\"pinnable\")) // add class\n            addClass(instance.elements.root, classes.pinnable);\n            else // remove class\n            removeClass(instance.elements.root, classes.pinnable);\n        }\n        /**\r\n         * Helper: Fixes the absolutly positioned modal div position.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function addAbsPositionFix(instance) {\n            var scrollLeft = getScrollLeft();\n            instance.elements.modal.style.marginTop = getScrollTop() + \"px\";\n            instance.elements.modal.style.marginLeft = scrollLeft + \"px\";\n            instance.elements.modal.style.marginRight = -scrollLeft + \"px\";\n        }\n        /**\r\n         * Helper: Removes the absolutly positioned modal div position fix.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function removeAbsPositionFix(instance) {\n            var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\n            var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\n            instance.elements.modal.style.marginTop = \"\";\n            instance.elements.modal.style.marginLeft = \"\";\n            instance.elements.modal.style.marginRight = \"\";\n            if (instance.isOpen()) {\n                var top = 0, left = 0;\n                if (instance.elements.dialog.style.top !== \"\") top = parseInt(instance.elements.dialog.style.top, 10);\n                instance.elements.dialog.style.top = top + (marginTop - getScrollTop()) + \"px\";\n                if (instance.elements.dialog.style.left !== \"\") left = parseInt(instance.elements.dialog.style.left, 10);\n                instance.elements.dialog.style.left = left + (marginLeft - getScrollLeft()) + \"px\";\n            }\n        }\n        /**\r\n         * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateAbsPositionFix(instance) {\n            // if modeless and unpinned add fix\n            if (!instance.get(\"modal\") && !instance.get(\"pinned\")) addAbsPositionFix(instance);\n            else removeAbsPositionFix(instance);\n        }\n        /**\r\n         * Toggles the dialog position lock | modeless only.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to make it modal, false otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */ function updatePinned(instance) {\n            if (instance.get(\"pinned\")) {\n                removeClass(instance.elements.root, classes.unpinned);\n                if (instance.isOpen()) removeAbsPositionFix(instance);\n            } else {\n                addClass(instance.elements.root, classes.unpinned);\n                if (instance.isOpen() && !instance.isModal()) addAbsPositionFix(instance);\n            }\n        }\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateMaximizable(instance) {\n            if (instance.get(\"maximizable\")) // add class\n            addClass(instance.elements.root, classes.maximizable);\n            else // remove class\n            removeClass(instance.elements.root, classes.maximizable);\n        }\n        /**\r\n         * Show or hide the close box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateClosable(instance) {\n            if (instance.get(\"closable\")) {\n                // add class\n                addClass(instance.elements.root, classes.closable);\n                bindClosableEvents(instance);\n            } else {\n                // remove class\n                removeClass(instance.elements.root, classes.closable);\n                unbindClosableEvents(instance);\n            }\n        }\n        var cancelClick = false, modalClickHandlerTS = 0 // stores last click timestamp to prevent executing the handler twice on double click.\n        ;\n        /**\r\n         * Helper: closes the modal dialog when clicking the modal\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function modalClickHandler(event, instance) {\n            if (event.timeStamp - modalClickHandlerTS > 200 && (modalClickHandlerTS = event.timeStamp) && !cancelClick) {\n                var target = event.srcElement || event.target;\n                if (instance.get(\"closableByDimmer\") === true && target === instance.elements.modal) triggerClose(instance);\n            }\n            cancelClick = false;\n        }\n        // stores last call timestamp to prevent triggering the callback twice.\n        var callbackTS = 0;\n        // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\n        var cancelKeyup = false;\n        /** \r\n         * Helper: triggers a button callback\r\n         *\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * @param {Function}\tCallback to check which button triggered the event.\r\n         *\r\n         * @return {undefined}\r\n         */ function triggerCallback(instance, check) {\n            if (Date.now() - callbackTS > 200 && (callbackTS = Date.now())) for(var idx = 0; idx < instance.__internal.buttons.length; idx += 1){\n                var button = instance.__internal.buttons[idx];\n                if (!button.element.disabled && check(button)) {\n                    var closeEvent = createCloseEvent(idx, button);\n                    if (typeof instance.callback === \"function\") instance.callback.apply(instance, [\n                        closeEvent\n                    ]);\n                    //close the dialog only if not canceled.\n                    if (closeEvent.cancel === false) instance.close();\n                    break;\n                }\n            }\n        }\n        /**\r\n         * Clicks event handler, attached to the dialog footer.\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */ function buttonsClickHandler(event, instance) {\n            var target = event.srcElement || event.target;\n            triggerCallback(instance, function(button) {\n                // if this button caused the click, cancel keyup event\n                return button.element === target && (cancelKeyup = true);\n            });\n        }\n        /**\r\n         * Keyup event handler, attached to the document.body\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */ function keyupHandler(event) {\n            //hitting enter while button has focus will trigger keyup too.\n            //ignore if handled by clickHandler\n            if (cancelKeyup) {\n                cancelKeyup = false;\n                return;\n            }\n            var instance = openDialogs[openDialogs.length - 1];\n            var keyCode = event.keyCode;\n            if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get(\"closable\") === true) {\n                triggerClose(instance);\n                return false;\n            } else if (usedKeys.indexOf(keyCode) > -1) {\n                triggerCallback(instance, function(button) {\n                    return button.key === keyCode;\n                });\n                return false;\n            }\n        }\n        /**\r\n        * Keydown event handler, attached to the document.body\r\n        *\r\n        * @param {Event}\t\tDOM event object.\r\n        * @param {Object}\t\tThe dilog instance.\r\n        * \r\n        * @return {undefined}\r\n        */ function keydownHandler(event) {\n            var instance = openDialogs[openDialogs.length - 1];\n            var keyCode = event.keyCode;\n            if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\n                var buttons = instance.__internal.buttons;\n                for(var x = 0; x < buttons.length; x += 1)if (document.activeElement === buttons[x].element) switch(keyCode){\n                    case keys.LEFT:\n                        buttons[(x || buttons.length) - 1].element.focus();\n                        return;\n                    case keys.RIGHT:\n                        buttons[(x + 1) % buttons.length].element.focus();\n                        return;\n                }\n            } else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\n                event.preventDefault();\n                event.stopPropagation();\n                triggerCallback(instance, function(button) {\n                    return button.key === keyCode;\n                });\n                return false;\n            }\n        }\n        /**\r\n         * Sets focus to proper dialog element\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\r\n         *\r\n         * @return {undefined}\r\n         */ function setFocus(instance, resetTarget) {\n            // reset target has already been determined.\n            if (resetTarget) resetTarget.focus();\n            else {\n                // current instance focus settings\n                var focus = instance.__internal.focus;\n                // the focus element.\n                var element = focus.element;\n                switch(typeof focus.element){\n                    // a number means a button index\n                    case \"number\":\n                        if (instance.__internal.buttons.length > focus.element) {\n                            //in basic view, skip focusing the buttons.\n                            if (instance.get(\"basic\") === true) element = instance.elements.reset[0];\n                            else element = instance.__internal.buttons[focus.element].element;\n                        }\n                        break;\n                    // a string means querySelector to select from dialog body contents.\n                    case \"string\":\n                        element = instance.elements.body.querySelector(focus.element);\n                        break;\n                    // a function should return the focus element.\n                    case \"function\":\n                        element = focus.element.call(instance);\n                        break;\n                }\n                // if no focus element, default to first reset element.\n                if (instance.get(\"defaultFocusOff\") === true || (typeof element === \"undefined\" || element === null) && instance.__internal.buttons.length === 0) element = instance.elements.reset[0];\n                // focus\n                if (element && element.focus) {\n                    element.focus();\n                    // if selectable\n                    if (focus.select && element.select) element.select();\n                }\n            }\n        }\n        /**\r\n         * Focus event handler, attached to document.body and dialogs own reset links.\r\n         * handles the focus for modal dialogs only.\r\n         *\r\n         * @param {Event} event DOM focus event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function onReset(event, instance) {\n            // should work on last modal if triggered from document.body \n            if (!instance) {\n                for(var x = openDialogs.length - 1; x > -1; x -= 1)if (openDialogs[x].isModal()) {\n                    instance = openDialogs[x];\n                    break;\n                }\n            }\n            if (instance) // if modal\n            {\n                if (instance.isModal()) {\n                    // determine reset target to enable forward/backward tab cycle.\n                    var firstReset = instance.elements.reset[0], lastReset = instance.elements.reset[1], lastFocusedElement = event.relatedTarget, within = instance.elements.root.contains(lastFocusedElement), target = event.srcElement || event.target, resetTarget;\n                    //if the previous focused element element was outside the modal do nthing\n                    if (/*first show */ target === firstReset && !within || /*focus cycle */ target === lastReset && lastFocusedElement === firstReset) return;\n                    else if (target === lastReset || target === document.body) resetTarget = firstReset;\n                    else if (target === firstReset && lastFocusedElement === lastReset) resetTarget = findTabbable(instance);\n                    else if (target === firstReset && within) resetTarget = findTabbable(instance, true);\n                    // focus\n                    setFocus(instance, resetTarget);\n                }\n            }\n        }\n        function findTabbable(instance, last) {\n            var tabbables = [].slice.call(instance.elements.dialog.querySelectorAll(defaults.tabbable));\n            if (last) tabbables.reverse();\n            for(var x = 0; x < tabbables.length; x += 1){\n                var tabbable = tabbables[x];\n                //check if visible\n                if (!!(tabbable.offsetParent || tabbable.offsetWidth || tabbable.offsetHeight || tabbable.getClientRects().length)) return tabbable;\n            }\n        }\n        function recycleTab(event) {\n            var instance = openDialogs[openDialogs.length - 1];\n            if (instance && event.shiftKey && event.keyCode === keys.TAB) instance.elements.reset[1].focus();\n        }\n        /**\r\n         * Transition in transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function handleTransitionInEvent(event, instance) {\n            // clear the timer\n            clearTimeout(instance.__internal.timerIn);\n            // once transition is complete, set focus\n            setFocus(instance);\n            // allow handling key up after transition ended.\n            cancelKeyup = false;\n            // allow custom `onfocus` method\n            dispatchEvent(\"onfocus\", instance);\n            // unbind the event\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\n            removeClass(instance.elements.root, classes.animationIn);\n        }\n        /**\r\n         * Transition out transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function handleTransitionOutEvent(event, instance) {\n            // clear the timer\n            clearTimeout(instance.__internal.timerOut);\n            // unbind the event\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\n            // reset move updates\n            resetMove(instance);\n            // reset resize updates\n            resetResize(instance);\n            // restore if maximized\n            if (instance.isMaximized() && !instance.get(\"startMaximized\")) restore(instance);\n            //destory the instance\n            if (typeof instance.__internal.destroy === \"function\") instance.__internal.destroy.apply(instance);\n        }\n        /* Controls moving a dialog around */ //holde the current moving instance\n        var movable = null, //holds the current X offset when move starts\n        offsetX = 0, //holds the current Y offset when move starts\n        offsetY = 0, xProp = \"pageX\", yProp = \"pageY\", bounds = null, refreshTop = false, moveDelegate = null;\n        /**\r\n         * Helper: sets the element top/left coordinates\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */ function moveElement(event, element) {\n            var left = event[xProp] - offsetX, top = event[yProp] - offsetY;\n            if (refreshTop) top -= document.body.scrollTop;\n            element.style.left = left + \"px\";\n            element.style.top = top + \"px\";\n        }\n        /**\r\n         * Helper: sets the element top/left coordinates within screen bounds\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */ function moveElementBounded(event, element) {\n            var left = event[xProp] - offsetX, top = event[yProp] - offsetY;\n            if (refreshTop) top -= document.body.scrollTop;\n            element.style.left = Math.min(bounds.maxLeft, Math.max(bounds.minLeft, left)) + \"px\";\n            if (refreshTop) element.style.top = Math.min(bounds.maxTop, Math.max(bounds.minTop, top)) + \"px\";\n            else element.style.top = Math.max(bounds.minTop, top) + \"px\";\n        }\n        /**\r\n         * Triggers the start of a move event, attached to the header element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */ function beginMove(event, instance) {\n            if (resizable === null && !instance.isMaximized() && instance.get(\"movable\")) {\n                var eventSrc, left = 0, top = 0;\n                if (event.type === \"touchstart\") {\n                    event.preventDefault();\n                    eventSrc = event.targetTouches[0];\n                    xProp = \"clientX\";\n                    yProp = \"clientY\";\n                } else if (event.button === 0) eventSrc = event;\n                if (eventSrc) {\n                    var element = instance.elements.dialog;\n                    addClass(element, classes.capture);\n                    if (element.style.left) left = parseInt(element.style.left, 10);\n                    if (element.style.top) top = parseInt(element.style.top, 10);\n                    offsetX = eventSrc[xProp] - left;\n                    offsetY = eventSrc[yProp] - top;\n                    if (instance.isModal()) offsetY += instance.elements.modal.scrollTop;\n                    else if (instance.isPinned()) offsetY -= document.body.scrollTop;\n                    if (instance.get(\"moveBounded\")) {\n                        var current = element, offsetLeft = -left, offsetTop = -top;\n                        //calc offset\n                        do {\n                            offsetLeft += current.offsetLeft;\n                            offsetTop += current.offsetTop;\n                        }while (current = current.offsetParent);\n                        bounds = {\n                            maxLeft: offsetLeft,\n                            minLeft: -offsetLeft,\n                            maxTop: document.documentElement.clientHeight - element.clientHeight - offsetTop,\n                            minTop: -offsetTop\n                        };\n                        moveDelegate = moveElementBounded;\n                    } else {\n                        bounds = null;\n                        moveDelegate = moveElement;\n                    }\n                    // allow custom `onmove` method\n                    dispatchEvent(\"onmove\", instance);\n                    refreshTop = !instance.isModal() && instance.isPinned();\n                    movable = instance;\n                    moveDelegate(eventSrc, element);\n                    addClass(document.body, classes.noSelection);\n                    return false;\n                }\n            }\n        }\n        /**\r\n         * The actual move handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */ function move(event) {\n            if (movable) {\n                var eventSrc;\n                if (event.type === \"touchmove\") {\n                    event.preventDefault();\n                    eventSrc = event.targetTouches[0];\n                } else if (event.button === 0) eventSrc = event;\n                if (eventSrc) moveDelegate(eventSrc, movable.elements.dialog);\n            }\n        }\n        /**\r\n         * Triggers the end of a move event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */ function endMove() {\n            if (movable) {\n                var instance = movable;\n                movable = bounds = null;\n                removeClass(document.body, classes.noSelection);\n                removeClass(instance.elements.dialog, classes.capture);\n                // allow custom `onmoved` method\n                dispatchEvent(\"onmoved\", instance);\n            }\n        }\n        /**\r\n         * Resets any changes made by moving the element to its original state,\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function resetMove(instance) {\n            movable = null;\n            var element = instance.elements.dialog;\n            element.style.left = element.style.top = \"\";\n        }\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateMovable(instance) {\n            if (instance.get(\"movable\")) {\n                // add class\n                addClass(instance.elements.root, classes.movable);\n                if (instance.isOpen()) bindMovableEvents(instance);\n            } else {\n                //reset\n                resetMove(instance);\n                // remove class\n                removeClass(instance.elements.root, classes.movable);\n                if (instance.isOpen()) unbindMovableEvents(instance);\n            }\n        }\n        /* Controls moving a dialog around */ //holde the current instance being resized\t\t\n        var resizable = null, //holds the staring left offset when resize starts.\n        startingLeft = Number.Nan, //holds the staring width when resize starts.\n        startingWidth = 0, //holds the initial width when resized for the first time.\n        minWidth = 0, //holds the offset of the resize handle.\n        handleOffset = 0;\n        /**\r\n         * Helper: sets the element width/height and updates left coordinate if neccessary.\r\n         *\r\n         * @param {Event} event\tDOM mousemove event object.\r\n         * @param {Node} element The element being moved.\r\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\r\n         * \r\n         * @return {undefined}\r\n         */ function resizeElement(event, element, pageRelative) {\n            //calculate offsets from 0,0\n            var current = element;\n            var offsetLeft = 0;\n            var offsetTop = 0;\n            do {\n                offsetLeft += current.offsetLeft;\n                offsetTop += current.offsetTop;\n            }while (current = current.offsetParent);\n            // determine X,Y coordinates.\n            var X, Y;\n            if (pageRelative === true) {\n                X = event.pageX;\n                Y = event.pageY;\n            } else {\n                X = event.clientX;\n                Y = event.clientY;\n            }\n            // rtl handling\n            var isRTL = isRightToLeft();\n            if (isRTL) {\n                // reverse X \n                X = document.body.offsetWidth - X;\n                // if has a starting left, calculate offsetRight\n                if (!isNaN(startingLeft)) offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\n            }\n            // set width/height\n            element.style.height = Y - offsetTop + handleOffset + \"px\";\n            element.style.width = X - offsetLeft + handleOffset + \"px\";\n            // if the element being resized has a starting left, maintain it.\n            // the dialog is centered, divide by half the offset to maintain the margins.\n            if (!isNaN(startingLeft)) {\n                var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\n                if (isRTL) //negate the diff, why?\n                //when growing it should decrease left\n                //when shrinking it should increase left\n                diff *= -1;\n                if (element.offsetWidth > startingWidth) //growing\n                element.style.left = startingLeft + diff + \"px\";\n                else if (element.offsetWidth >= minWidth) //shrinking\n                element.style.left = startingLeft - diff + \"px\";\n            }\n        }\n        /**\r\n         * Triggers the start of a resize event, attached to the resize handle element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */ function beginResize(event, instance) {\n            if (!instance.isMaximized()) {\n                var eventSrc;\n                if (event.type === \"touchstart\") {\n                    event.preventDefault();\n                    eventSrc = event.targetTouches[0];\n                } else if (event.button === 0) eventSrc = event;\n                if (eventSrc) {\n                    // allow custom `onresize` method\n                    dispatchEvent(\"onresize\", instance);\n                    resizable = instance;\n                    handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\n                    var element = instance.elements.dialog;\n                    addClass(element, classes.capture);\n                    startingLeft = parseInt(element.style.left, 10);\n                    element.style.height = element.offsetHeight + \"px\";\n                    element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + \"px\";\n                    element.style.width = (startingWidth = element.offsetWidth) + \"px\";\n                    if (element.style.maxWidth !== \"none\") element.style.minWidth = (minWidth = element.offsetWidth) + \"px\";\n                    element.style.maxWidth = \"none\";\n                    addClass(document.body, classes.noSelection);\n                    return false;\n                }\n            }\n        }\n        /**\r\n         * The actual resize handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */ function resize(event) {\n            if (resizable) {\n                var eventSrc;\n                if (event.type === \"touchmove\") {\n                    event.preventDefault();\n                    eventSrc = event.targetTouches[0];\n                } else if (event.button === 0) eventSrc = event;\n                if (eventSrc) resizeElement(eventSrc, resizable.elements.dialog, !resizable.get(\"modal\") && !resizable.get(\"pinned\"));\n            }\n        }\n        /**\r\n         * Triggers the end of a resize event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */ function endResize() {\n            if (resizable) {\n                var instance = resizable;\n                resizable = null;\n                removeClass(document.body, classes.noSelection);\n                removeClass(instance.elements.dialog, classes.capture);\n                cancelClick = true;\n                // allow custom `onresized` method\n                dispatchEvent(\"onresized\", instance);\n            }\n        }\n        /**\r\n         * Resets any changes made by resizing the element to its original state.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function resetResize(instance) {\n            resizable = null;\n            var element = instance.elements.dialog;\n            if (element.style.maxWidth === \"none\") {\n                //clear inline styles.\n                element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = \"\";\n                //reset variables.\n                startingLeft = Number.Nan;\n                startingWidth = minWidth = handleOffset = 0;\n            }\n        }\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */ function updateResizable(instance) {\n            if (instance.get(\"resizable\")) {\n                // add class\n                addClass(instance.elements.root, classes.resizable);\n                if (instance.isOpen()) bindResizableEvents(instance);\n            } else {\n                //reset\n                resetResize(instance);\n                // remove class\n                removeClass(instance.elements.root, classes.resizable);\n                if (instance.isOpen()) unbindResizableEvents(instance);\n            }\n        }\n        /**\r\n         * Reset move/resize on window resize.\r\n         *\r\n         * @param {Event} event\twindow resize event object.\r\n         *\r\n         * @return {undefined}\r\n         */ function windowResize() {\n            for(var x = 0; x < openDialogs.length; x += 1){\n                var instance = openDialogs[x];\n                if (instance.get(\"autoReset\")) {\n                    resetMove(instance);\n                    resetResize(instance);\n                }\n            }\n        }\n        /**\r\n         * Bind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function bindEvents(instance) {\n            // if first dialog, hook global handlers\n            if (openDialogs.length === 1) {\n                //global\n                on(window1, \"resize\", windowResize);\n                on(document.body, \"keyup\", keyupHandler);\n                on(document.body, \"keydown\", keydownHandler);\n                on(document.body, \"focus\", onReset);\n                //move\n                on(document.documentElement, \"mousemove\", move);\n                on(document.documentElement, \"touchmove\", move, false, false);\n                on(document.documentElement, \"mouseup\", endMove);\n                on(document.documentElement, \"touchend\", endMove);\n                //resize\n                on(document.documentElement, \"mousemove\", resize);\n                on(document.documentElement, \"touchmove\", resize, false, false);\n                on(document.documentElement, \"mouseup\", endResize);\n                on(document.documentElement, \"touchend\", endResize);\n            }\n            // common events\n            on(instance.elements.commands.container, \"click\", instance.__internal.commandsClickHandler);\n            on(instance.elements.footer, \"click\", instance.__internal.buttonsClickHandler);\n            on(instance.elements.reset[0], \"focusin\", instance.__internal.resetHandler);\n            on(instance.elements.reset[0], \"keydown\", recycleTab);\n            on(instance.elements.reset[1], \"focusin\", instance.__internal.resetHandler);\n            //prevent handling key up when dialog is being opened by a key stroke.\n            cancelKeyup = true;\n            // hook in transition handler\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\n            // modelss only events\n            if (!instance.get(\"modal\")) bindModelessEvents(instance);\n            // resizable\n            if (instance.get(\"resizable\")) bindResizableEvents(instance);\n            // movable\n            if (instance.get(\"movable\")) bindMovableEvents(instance);\n        }\n        /**\r\n         * Unbind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function unbindEvents(instance) {\n            // if last dialog, remove global handlers\n            if (openDialogs.length === 1) {\n                //global\n                off(window1, \"resize\", windowResize);\n                off(document.body, \"keyup\", keyupHandler);\n                off(document.body, \"keydown\", keydownHandler);\n                off(document.body, \"focus\", onReset);\n                //move\n                off(document.documentElement, \"mousemove\", move);\n                off(document.documentElement, \"mouseup\", endMove);\n                //resize\n                off(document.documentElement, \"mousemove\", resize);\n                off(document.documentElement, \"mouseup\", endResize);\n            }\n            // common events\n            off(instance.elements.commands.container, \"click\", instance.__internal.commandsClickHandler);\n            off(instance.elements.footer, \"click\", instance.__internal.buttonsClickHandler);\n            off(instance.elements.reset[0], \"focusin\", instance.__internal.resetHandler);\n            off(instance.elements.reset[0], \"keydown\", recycleTab);\n            off(instance.elements.reset[1], \"focusin\", instance.__internal.resetHandler);\n            // hook out transition handler\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\n            // modelss only events\n            if (!instance.get(\"modal\")) unbindModelessEvents(instance);\n            // movable\n            if (instance.get(\"movable\")) unbindMovableEvents(instance);\n            // resizable\n            if (instance.get(\"resizable\")) unbindResizableEvents(instance);\n        }\n        /**\r\n         * Bind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function bindModelessEvents(instance) {\n            on(instance.elements.dialog, \"focus\", instance.__internal.bringToFrontHandler, true);\n        }\n        /**\r\n         * Unbind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function unbindModelessEvents(instance) {\n            off(instance.elements.dialog, \"focus\", instance.__internal.bringToFrontHandler, true);\n        }\n        /**\r\n         * Bind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function bindMovableEvents(instance) {\n            on(instance.elements.header, \"mousedown\", instance.__internal.beginMoveHandler);\n            on(instance.elements.header, \"touchstart\", instance.__internal.beginMoveHandler, false, false);\n        }\n        /**\r\n         * Unbind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function unbindMovableEvents(instance) {\n            off(instance.elements.header, \"mousedown\", instance.__internal.beginMoveHandler);\n            off(instance.elements.header, \"touchstart\", instance.__internal.beginMoveHandler, false, false);\n        }\n        /**\r\n         * Bind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function bindResizableEvents(instance) {\n            on(instance.elements.resizeHandle, \"mousedown\", instance.__internal.beginResizeHandler);\n            on(instance.elements.resizeHandle, \"touchstart\", instance.__internal.beginResizeHandler, false, false);\n        }\n        /**\r\n         * Unbind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function unbindResizableEvents(instance) {\n            off(instance.elements.resizeHandle, \"mousedown\", instance.__internal.beginResizeHandler);\n            off(instance.elements.resizeHandle, \"touchstart\", instance.__internal.beginResizeHandler, false, false);\n        }\n        /**\r\n         * Bind closable events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function bindClosableEvents(instance) {\n            on(instance.elements.modal, \"click\", instance.__internal.modalClickHandler);\n        }\n        /**\r\n         * Unbind closable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */ function unbindClosableEvents(instance) {\n            off(instance.elements.modal, \"click\", instance.__internal.modalClickHandler);\n        }\n        // dialog API\n        return {\n            __init: initialize,\n            /**\r\n             * Check if dialog is currently open\r\n             *\r\n             * @return {Boolean}\r\n             */ isOpen: function() {\n                return this.__internal.isOpen;\n            },\n            isModal: function() {\n                return this.elements.root.className.indexOf(classes.modeless) < 0;\n            },\n            isMaximized: function() {\n                return this.elements.root.className.indexOf(classes.maximized) > -1;\n            },\n            isPinned: function() {\n                return this.elements.root.className.indexOf(classes.unpinned) < 0;\n            },\n            maximize: function() {\n                if (!this.isMaximized()) maximize(this);\n                return this;\n            },\n            restore: function() {\n                if (this.isMaximized()) restore(this);\n                return this;\n            },\n            pin: function() {\n                if (!this.isPinned()) pin(this);\n                return this;\n            },\n            unpin: function() {\n                if (this.isPinned()) unpin(this);\n                return this;\n            },\n            bringToFront: function() {\n                bringToFront(null, this);\n                return this;\n            },\n            /**\r\n             * Move the dialog to a specific x/y coordinates\r\n             *\r\n             * @param {Number} x    The new dialog x coordinate in pixels.\r\n             * @param {Number} y    The new dialog y coordinate in pixels.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */ moveTo: function(x, y) {\n                if (!isNaN(x) && !isNaN(y)) {\n                    // allow custom `onmove` method\n                    dispatchEvent(\"onmove\", this);\n                    var element = this.elements.dialog, current = element, offsetLeft = 0, offsetTop = 0;\n                    //subtract existing left,top\n                    if (element.style.left) offsetLeft -= parseInt(element.style.left, 10);\n                    if (element.style.top) offsetTop -= parseInt(element.style.top, 10);\n                    //calc offset\n                    do {\n                        offsetLeft += current.offsetLeft;\n                        offsetTop += current.offsetTop;\n                    }while (current = current.offsetParent);\n                    //calc left, top\n                    var left = x - offsetLeft;\n                    var top = y - offsetTop;\n                    //// rtl handling\n                    if (isRightToLeft()) left *= -1;\n                    element.style.left = left + \"px\";\n                    element.style.top = top + \"px\";\n                    // allow custom `onmoved` method\n                    dispatchEvent(\"onmoved\", this);\n                }\n                return this;\n            },\n            /**\r\n             * Resize the dialog to a specific width/height (the dialog must be 'resizable').\r\n             * The dialog can be resized to:\r\n             *  A minimum width equal to the initial display width\r\n             *  A minimum height equal to the sum of header/footer heights.\r\n             *\r\n             *\r\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\r\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */ resizeTo: function(width, height) {\n                var w = parseFloat(width), h = parseFloat(height), regex = /(\\d*\\.\\d+|\\d+)%/;\n                if (!isNaN(w) && !isNaN(h) && this.get(\"resizable\") === true) {\n                    // allow custom `onresize` method\n                    dispatchEvent(\"onresize\", this);\n                    if ((\"\" + width).match(regex)) w = w / 100 * document.documentElement.clientWidth;\n                    if ((\"\" + height).match(regex)) h = h / 100 * document.documentElement.clientHeight;\n                    var element = this.elements.dialog;\n                    if (element.style.maxWidth !== \"none\") element.style.minWidth = (minWidth = element.offsetWidth) + \"px\";\n                    element.style.maxWidth = \"none\";\n                    element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + \"px\";\n                    element.style.width = w + \"px\";\n                    element.style.height = h + \"px\";\n                    // allow custom `onresized` method\n                    dispatchEvent(\"onresized\", this);\n                }\n                return this;\n            },\n            /**\r\n             * Gets or Sets dialog settings/options \r\n             *\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */ setting: function(key, value) {\n                var self = this;\n                var result = update(this, this.__internal.options, function(k, o, n) {\n                    optionUpdated(self, k, o, n);\n                }, key, value);\n                if (result.op === \"get\") {\n                    if (result.found) return result.value;\n                    else if (typeof this.settings !== \"undefined\") return update(this, this.settings, this.settingUpdated || function() {}, key, value).value;\n                    else return undefined;\n                } else if (result.op === \"set\") {\n                    if (result.items.length > 0) {\n                        var callback = this.settingUpdated || function() {};\n                        for(var x = 0; x < result.items.length; x += 1){\n                            var item = result.items[x];\n                            if (!item.found && typeof this.settings !== \"undefined\") update(this, this.settings, callback, item.key, item.value);\n                        }\n                    }\n                    return this;\n                }\n            },\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */ set: function(key, value) {\n                this.setting(key, value);\n                return this;\n            },\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */ get: function(key) {\n                return this.setting(key);\n            },\n            /**\r\n            * Sets dialog header\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */ setHeader: function(content) {\n                if (typeof content === \"string\") {\n                    clearContents(this.elements.header);\n                    this.elements.header.innerHTML = content;\n                } else if (content instanceof window1.HTMLElement && this.elements.header.firstChild !== content) {\n                    clearContents(this.elements.header);\n                    this.elements.header.appendChild(content);\n                }\n                return this;\n            },\n            /**\r\n            * Sets dialog contents\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */ setContent: function(content) {\n                if (typeof content === \"string\") {\n                    clearContents(this.elements.content);\n                    this.elements.content.innerHTML = content;\n                } else if (content instanceof window1.HTMLElement && this.elements.content.firstChild !== content) {\n                    clearContents(this.elements.content);\n                    this.elements.content.appendChild(content);\n                }\n                return this;\n            },\n            /**\r\n             * Show the dialog as modal\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */ showModal: function(className) {\n                return this.show(true, className);\n            },\n            /**\r\n             * Show the dialog\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */ show: function(modal, className) {\n                // ensure initialization\n                initialize(this);\n                if (!this.__internal.isOpen) {\n                    // add to open dialogs\n                    this.__internal.isOpen = true;\n                    openDialogs.push(this);\n                    // save last focused element\n                    if (alertify.defaults.maintainFocus) this.__internal.activeElement = document.activeElement;\n                    // set tabindex attribute on body element this allows script to give it focusable\n                    if (!document.body.hasAttribute(\"tabindex\")) document.body.setAttribute(\"tabindex\", tabindex = \"0\");\n                    //allow custom dom manipulation updates before showing the dialog.\n                    if (typeof this.prepare === \"function\") this.prepare();\n                    bindEvents(this);\n                    if (modal !== undefined) this.set(\"modal\", modal);\n                    //save scroll to prevent document jump\n                    saveScrollPosition();\n                    ensureNoOverflow();\n                    // allow custom dialog class on show\n                    if (typeof className === \"string\" && className !== \"\") {\n                        this.__internal.className = className;\n                        addClass(this.elements.root, className);\n                    }\n                    // maximize if start maximized\n                    if (this.get(\"startMaximized\")) this.maximize();\n                    else if (this.isMaximized()) restore(this);\n                    updateAbsPositionFix(this);\n                    this.elements.root.removeAttribute(\"style\");\n                    removeClass(this.elements.root, classes.animationOut);\n                    addClass(this.elements.root, classes.animationIn);\n                    // set 1s fallback in case transition event doesn't fire\n                    clearTimeout(this.__internal.timerIn);\n                    this.__internal.timerIn = setTimeout(this.__internal.transitionInHandler, transition.supported ? 1000 : 100);\n                    if (isSafari) {\n                        // force desktop safari reflow\n                        var root = this.elements.root;\n                        root.style.display = \"none\";\n                        setTimeout(function() {\n                            root.style.display = \"block\";\n                        }, 0);\n                    }\n                    //reflow\n                    reflow = this.elements.root.offsetWidth;\n                    // show dialog\n                    removeClass(this.elements.root, classes.hidden);\n                    //restore scroll to prevent document jump\n                    restoreScrollPosition();\n                    // internal on show event\n                    if (typeof this.hooks.onshow === \"function\") this.hooks.onshow.call(this);\n                    // allow custom `onshow` method\n                    dispatchEvent(\"onshow\", this);\n                } else {\n                    // reset move updates\n                    resetMove(this);\n                    // reset resize updates\n                    resetResize(this);\n                    // shake the dialog to indicate its already open\n                    addClass(this.elements.dialog, classes.shake);\n                    var self = this;\n                    setTimeout(function() {\n                        removeClass(self.elements.dialog, classes.shake);\n                    }, 200);\n                }\n                return this;\n            },\n            /**\r\n             * Close the dialog\r\n             *\r\n             * @return {Object} The dialog instance\r\n             */ close: function() {\n                if (this.__internal.isOpen) // custom `onclosing` event\n                {\n                    if (dispatchEvent(\"onclosing\", this) !== false) {\n                        unbindEvents(this);\n                        removeClass(this.elements.root, classes.animationIn);\n                        addClass(this.elements.root, classes.animationOut);\n                        // set 1s fallback in case transition event doesn't fire\n                        clearTimeout(this.__internal.timerOut);\n                        this.__internal.timerOut = setTimeout(this.__internal.transitionOutHandler, transition.supported ? 1000 : 100);\n                        // hide dialog\n                        addClass(this.elements.root, classes.hidden);\n                        //reflow\n                        reflow = this.elements.modal.offsetWidth;\n                        // return focus to the last active element\n                        if (alertify.defaults.maintainFocus && this.__internal.activeElement) {\n                            this.__internal.activeElement.focus();\n                            this.__internal.activeElement = null;\n                        }\n                        // remove custom dialog class on hide\n                        if (typeof this.__internal.className !== \"undefined\" && this.__internal.className !== \"\") removeClass(this.elements.root, this.__internal.className);\n                        // internal on close event\n                        if (typeof this.hooks.onclose === \"function\") this.hooks.onclose.call(this);\n                        // allow custom `onclose` method\n                        dispatchEvent(\"onclose\", this);\n                        //remove from open dialogs\n                        openDialogs.splice(openDialogs.indexOf(this), 1);\n                        this.__internal.isOpen = false;\n                        ensureNoOverflow();\n                    }\n                }\n                // last dialog and tab index was set by us, remove it.\n                if (!openDialogs.length && tabindex === \"0\") document.body.removeAttribute(\"tabindex\");\n                return this;\n            },\n            /**\r\n             * Close all open dialogs except this.\r\n             *\r\n             * @return {undefined}\r\n             */ closeOthers: function() {\n                alertify.closeAll(this);\n                return this;\n            },\n            /**\r\n             * Destroys this dialog instance\r\n             *\r\n             * @return {undefined}\r\n             */ destroy: function() {\n                if (this.__internal) {\n                    if (this.__internal.isOpen) {\n                        //mark dialog for destruction, this will be called on tranistionOut event.\n                        this.__internal.destroy = function() {\n                            destruct(this, initialize);\n                        };\n                        //close the dialog to unbind all events.\n                        this.close();\n                    } else if (!this.__internal.destroy) destruct(this, initialize);\n                }\n                return this;\n            }\n        };\n    }();\n    var notifier = function() {\n        var reflow, element, openInstances = [], classes = defaults.notifier.classes, baseClass = classes.base;\n        /**\r\n         * Helper: initializes the notifier instance\r\n         *\r\n         */ function initialize(instance) {\n            if (!instance.__internal) {\n                instance.__internal = {\n                    position: alertify.defaults.notifier.position,\n                    delay: alertify.defaults.notifier.delay\n                };\n                element = document.createElement(\"DIV\");\n                var transitionOff = \"transitionOff\" in defaults.notifier ? defaults.notifier.transitionOff : defaults.transitionOff;\n                if (transitionOff) baseClass = classes.base + \" ajs-no-transition\";\n                updatePosition(instance);\n            }\n            //add to DOM tree.\n            if (element.parentNode !== document.body) document.body.appendChild(element);\n        }\n        function pushInstance(instance) {\n            instance.__internal.pushed = true;\n            openInstances.push(instance);\n        }\n        function popInstance(instance) {\n            openInstances.splice(openInstances.indexOf(instance), 1);\n            instance.__internal.pushed = false;\n        }\n        /**\r\n         * Helper: update the notifier instance position\r\n         *\r\n         */ function updatePosition(instance) {\n            element.className = baseClass;\n            switch(instance.__internal.position){\n                case \"top-right\":\n                    addClass(element, classes.top + \" \" + classes.right);\n                    break;\n                case \"top-left\":\n                    addClass(element, classes.top + \" \" + classes.left);\n                    break;\n                case \"top-center\":\n                    addClass(element, classes.top + \" \" + classes.center);\n                    break;\n                case \"bottom-left\":\n                    addClass(element, classes.bottom + \" \" + classes.left);\n                    break;\n                case \"bottom-center\":\n                    addClass(element, classes.bottom + \" \" + classes.center);\n                    break;\n                default:\n                case \"bottom-right\":\n                    addClass(element, classes.bottom + \" \" + classes.right);\n                    break;\n            }\n        }\n        /**\r\n        * creates a new notification message\r\n        *\r\n        * @param  {DOMElement} message\tThe notifier message element\r\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\r\n        *\r\n        * @return {undefined}\r\n        */ function create(div, callback) {\n            function clickDelegate(event, instance) {\n                if (!instance.__internal.closeButton || event.target.getAttribute(\"data-close\") === \"true\") instance.dismiss(true);\n            }\n            function transitionDone(event, instance) {\n                // unbind event\n                off(instance.element, transition.type, transitionDone);\n                // remove the message\n                element.removeChild(instance.element);\n            }\n            function initialize(instance) {\n                if (!instance.__internal) {\n                    instance.__internal = {\n                        pushed: false,\n                        delay: undefined,\n                        timer: undefined,\n                        clickHandler: undefined,\n                        transitionEndHandler: undefined,\n                        transitionTimeout: undefined\n                    };\n                    instance.__internal.clickHandler = delegate(instance, clickDelegate);\n                    instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\n                }\n                return instance;\n            }\n            function clearTimers(instance) {\n                clearTimeout(instance.__internal.timer);\n                clearTimeout(instance.__internal.transitionTimeout);\n            }\n            return initialize({\n                /* notification DOM element*/ element: div,\n                /*\r\n                 * Pushes a notification message\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */ push: function(_content, _wait) {\n                    if (!this.__internal.pushed) {\n                        pushInstance(this);\n                        clearTimers(this);\n                        var content, wait;\n                        switch(arguments.length){\n                            case 0:\n                                wait = this.__internal.delay;\n                                break;\n                            case 1:\n                                if (typeof _content === \"number\") wait = _content;\n                                else {\n                                    content = _content;\n                                    wait = this.__internal.delay;\n                                }\n                                break;\n                            case 2:\n                                content = _content;\n                                wait = _wait;\n                                break;\n                        }\n                        this.__internal.closeButton = alertify.defaults.notifier.closeButton;\n                        // set contents\n                        if (typeof content !== \"undefined\") this.setContent(content);\n                        // append or insert\n                        if (notifier.__internal.position.indexOf(\"top\") < 0) element.appendChild(this.element);\n                        else element.insertBefore(this.element, element.firstChild);\n                        reflow = this.element.offsetWidth;\n                        addClass(this.element, classes.visible);\n                        // attach click event\n                        on(this.element, \"click\", this.__internal.clickHandler);\n                        return this.delay(wait);\n                    }\n                    return this;\n                },\n                /*\r\n                 * {Function} callback function to be invoked before dismissing the notification message.\r\n                 * Remarks: A return value === 'false' will cancel the dismissal\r\n                 *\r\n                 */ ondismiss: function() {},\n                /*\r\n                 * {Function} callback function to be invoked when the message is dismissed.\r\n                 *\r\n                 */ callback: callback,\n                /*\r\n                 * Dismisses the notification message\r\n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\r\n                 *\r\n                 */ dismiss: function(clicked) {\n                    if (this.__internal.pushed) {\n                        clearTimers(this);\n                        if (!(typeof this.ondismiss === \"function\" && this.ondismiss.call(this) === false)) {\n                            //detach click event\n                            off(this.element, \"click\", this.__internal.clickHandler);\n                            // ensure element exists\n                            if (typeof this.element !== \"undefined\" && this.element.parentNode === element) {\n                                //transition end or fallback\n                                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\n                                removeClass(this.element, classes.visible);\n                                // custom callback on dismiss\n                                if (typeof this.callback === \"function\") this.callback.call(this, clicked);\n                            }\n                            popInstance(this);\n                        }\n                    }\n                    return this;\n                },\n                /*\r\n                 * Delays the notification message dismissal\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */ delay: function(wait) {\n                    clearTimers(this);\n                    this.__internal.delay = typeof wait !== \"undefined\" && !isNaN(+wait) ? +wait : notifier.__internal.delay;\n                    if (this.__internal.delay > 0) {\n                        var self = this;\n                        this.__internal.timer = setTimeout(function() {\n                            self.dismiss();\n                        }, this.__internal.delay * 1000);\n                    }\n                    return this;\n                },\n                /*\r\n                 * Sets the notification message contents\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 *\r\n                 */ setContent: function(content) {\n                    if (typeof content === \"string\") {\n                        clearContents(this.element);\n                        this.element.innerHTML = content;\n                    } else if (content instanceof window1.HTMLElement && this.element.firstChild !== content) {\n                        clearContents(this.element);\n                        this.element.appendChild(content);\n                    }\n                    if (this.__internal.closeButton) {\n                        var close = document.createElement(\"span\");\n                        addClass(close, classes.close);\n                        close.setAttribute(\"data-close\", true);\n                        this.element.appendChild(close);\n                    }\n                    return this;\n                },\n                /*\r\n                 * Dismisses all open notifications except this.\r\n                 *\r\n                 */ dismissOthers: function() {\n                    notifier.dismissAll(this);\n                    return this;\n                }\n            });\n        }\n        //notifier api\n        return {\n            /**\r\n             * Gets or Sets notifier settings.\r\n             *\r\n             * @param {string} key The setting name\r\n             * @param {Variant} value The setting value.\r\n             *\r\n             * @return {Object}\tif the called as a setter, return the notifier instance.\r\n             */ setting: function(key, value) {\n                //ensure init\n                initialize(this);\n                if (typeof value === \"undefined\") //get\n                return this.__internal[key];\n                else //set\n                switch(key){\n                    case \"position\":\n                        this.__internal.position = value;\n                        updatePosition(this);\n                        break;\n                    case \"delay\":\n                        this.__internal.delay = value;\n                        break;\n                }\n                return this;\n            },\n            /**\r\n             * [Alias] Sets dialog settings/options\r\n             */ set: function(key, value) {\n                this.setting(key, value);\n                return this;\n            },\n            /**\r\n             * [Alias] Gets dialog settings/options\r\n             */ get: function(key) {\n                return this.setting(key);\n            },\n            /**\r\n             * Creates a new notification message\r\n             *\r\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\r\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\r\n             *\r\n             * @return {undefined}\r\n             */ create: function(type, callback) {\n                //ensure notifier init\n                initialize(this);\n                //create new notification message\n                var div = document.createElement(\"div\");\n                div.className = classes.message + (typeof type === \"string\" && type !== \"\" ? \" \" + classes.prefix + type : \"\");\n                return create(div, callback);\n            },\n            /**\r\n             * Dismisses all open notifications.\r\n             *\r\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\r\n             *\r\n             */ dismissAll: function(except) {\n                var clone = openInstances.slice(0);\n                for(var x = 0; x < clone.length; x += 1){\n                    var instance = clone[x];\n                    if (except === undefined || except !== instance) instance.dismiss();\n                }\n            }\n        };\n    }();\n    /**\r\n     * Alertify public API\r\n     * This contains everything that is exposed through the alertify object.\r\n     *\r\n     * @return {Object}\r\n     */ function Alertify() {\n        // holds a references of created dialogs\n        var dialogs = {};\n        /**\r\n         * Extends a given prototype by merging properties from base into sub.\r\n         *\r\n         * @sub {Object} sub The prototype being overwritten.\r\n         * @base {Object} base The prototype being written.\r\n         *\r\n         * @return {Object} The extended prototype.\r\n         */ function extend(sub, base) {\n            // copy dialog pototype over definition.\n            for(var prop in base)if (base.hasOwnProperty(prop)) sub[prop] = base[prop];\n            return sub;\n        }\n        /**\r\n        * Helper: returns a dialog instance from saved dialogs.\r\n        * and initializes the dialog if its not already initialized.\r\n        *\r\n        * @name {String} name The dialog name.\r\n        *\r\n        * @return {Object} The dialog instance.\r\n        */ function get_dialog(name) {\n            var dialog = dialogs[name].dialog;\n            //initialize the dialog if its not already initialized.\n            if (dialog && typeof dialog.__init === \"function\") dialog.__init(dialog);\n            return dialog;\n        }\n        /**\r\n         * Helper:  registers a new dialog definition.\r\n         *\r\n         * @name {String} name The dialog name.\r\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\r\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\r\n         * @base {String} base the name of another dialog to inherit from.\r\n         *\r\n         * @return {Object} The dialog definition.\r\n         */ function register(name, Factory, transient, base) {\n            var definition = {\n                dialog: null,\n                factory: Factory\n            };\n            //if this is based on an existing dialog, create a new definition\n            //by applying the new protoype over the existing one.\n            if (base !== undefined) definition.factory = function() {\n                return extend(new dialogs[base].factory(), new Factory());\n            };\n            if (!transient) //create a new definition based on dialog\n            definition.dialog = extend(new definition.factory(), dialog);\n            return dialogs[name] = definition;\n        }\n        return {\n            /**\r\n             * Alertify defaults\r\n             * \r\n             * @type {Object}\r\n             */ defaults: defaults,\n            /**\r\n             * Dialogs factory \r\n             *\r\n             * @param {string}      Dialog name.\r\n             * @param {Function}    A Dialog factory function.\r\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\r\n             * @param {String}      The name of the base type to inherit from.\r\n             */ dialog: function(name, Factory, transient, base) {\n                // get request, create a new instance and return it.\n                if (typeof Factory !== \"function\") return get_dialog(name);\n                if (this.hasOwnProperty(name)) throw new Error(\"alertify.dialog: name already exists\");\n                // register the dialog\n                var definition = register(name, Factory, transient, base);\n                if (transient) // make it public\n                this[name] = function() {\n                    //if passed with no params, consider it a get request\n                    if (arguments.length === 0) return definition.dialog;\n                    else {\n                        var instance = extend(new definition.factory(), dialog);\n                        //ensure init\n                        if (instance && typeof instance.__init === \"function\") instance.__init(instance);\n                        instance[\"main\"].apply(instance, arguments);\n                        return instance[\"show\"].apply(instance);\n                    }\n                };\n                else // make it public\n                this[name] = function() {\n                    //ensure init\n                    if (definition.dialog && typeof definition.dialog.__init === \"function\") definition.dialog.__init(definition.dialog);\n                    //if passed with no params, consider it a get request\n                    if (arguments.length === 0) return definition.dialog;\n                    else {\n                        var dialog = definition.dialog;\n                        dialog[\"main\"].apply(definition.dialog, arguments);\n                        return dialog[\"show\"].apply(definition.dialog);\n                    }\n                };\n            },\n            /**\r\n             * Close all open dialogs.\r\n             *\r\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\r\n             *\r\n             * @return {undefined}\r\n             */ closeAll: function(except) {\n                var clone = openDialogs.slice(0);\n                for(var x = 0; x < clone.length; x += 1){\n                    var instance = clone[x];\n                    if (except === undefined || except !== instance) instance.close();\n                }\n            },\n            /**\r\n             * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\r\n             *\r\n             * @param {string} name The dialog name.\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */ setting: function(name, key, value) {\n                if (name === \"notifier\") return notifier.setting(key, value);\n                var dialog = get_dialog(name);\n                if (dialog) return dialog.setting(key, value);\n            },\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */ set: function(name, key, value) {\n                return this.setting(name, key, value);\n            },\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */ get: function(name, key) {\n                return this.setting(name, key);\n            },\n            /**\r\n             * Creates a new notification message.\r\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\r\n             * This allows for custom look and feel for various types of notifications.\r\n             *\r\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\r\n             * @param  {String}                 [type='']\t\t\t\tType of log message\r\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */ notify: function(message, type, wait, callback) {\n                return notifier.create(type, callback).push(message, wait);\n            },\n            /**\r\n             * Creates a new notification message.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */ message: function(message, wait, callback) {\n                return notifier.create(null, callback).push(message, wait);\n            },\n            /**\r\n             * Creates a new notification message of type 'success'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */ success: function(message, wait, callback) {\n                return notifier.create(\"success\", callback).push(message, wait);\n            },\n            /**\r\n             * Creates a new notification message of type 'error'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */ error: function(message, wait, callback) {\n                return notifier.create(\"error\", callback).push(message, wait);\n            },\n            /**\r\n             * Creates a new notification message of type 'warning'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */ warning: function(message, wait, callback) {\n                return notifier.create(\"warning\", callback).push(message, wait);\n            },\n            /**\r\n             * Dismisses all open notifications\r\n             *\r\n             * @return {undefined}\r\n             */ dismissAll: function() {\n                notifier.dismissAll();\n            }\n        };\n    }\n    var alertify = new Alertify();\n    /**\r\n    * Alert dialog definition\r\n    *\r\n    * invoked by:\r\n    *\talertify.alert(message);\r\n    *\talertify.alert(title, message);\r\n    *\talertify.alert(message, onok);\r\n    *\talertify.alert(title, message, onok);\r\n     */ alertify.dialog(\"alert\", function() {\n        return {\n            main: function(_title, _message, _onok) {\n                var title, message, onok;\n                switch(arguments.length){\n                    case 1:\n                        message = _title;\n                        break;\n                    case 2:\n                        if (typeof _message === \"function\") {\n                            message = _title;\n                            onok = _message;\n                        } else {\n                            title = _title;\n                            message = _message;\n                        }\n                        break;\n                    case 3:\n                        title = _title;\n                        message = _message;\n                        onok = _onok;\n                        break;\n                }\n                this.set(\"title\", title);\n                this.set(\"message\", message);\n                this.set(\"onok\", onok);\n                return this;\n            },\n            setup: function() {\n                return {\n                    buttons: [\n                        {\n                            text: alertify.defaults.glossary.ok,\n                            key: keys.ESC,\n                            invokeOnClose: true,\n                            className: alertify.defaults.theme.ok\n                        }\n                    ],\n                    focus: {\n                        element: 0,\n                        select: false\n                    },\n                    options: {\n                        maximizable: false,\n                        resizable: false\n                    }\n                };\n            },\n            build: function() {\n            // nothing\n            },\n            prepare: function() {\n            //nothing\n            },\n            setMessage: function(message) {\n                this.setContent(message);\n            },\n            settings: {\n                message: undefined,\n                onok: undefined,\n                label: undefined\n            },\n            settingUpdated: function(key, oldValue, newValue) {\n                switch(key){\n                    case \"message\":\n                        this.setMessage(newValue);\n                        break;\n                    case \"label\":\n                        if (this.__internal.buttons[0].element) this.__internal.buttons[0].element.innerHTML = newValue;\n                        break;\n                }\n            },\n            callback: function(closeEvent) {\n                if (typeof this.get(\"onok\") === \"function\") {\n                    var returnValue = this.get(\"onok\").call(this, closeEvent);\n                    if (typeof returnValue !== \"undefined\") closeEvent.cancel = !returnValue;\n                }\n            }\n        };\n    });\n    /**\r\n     * Confirm dialog object\r\n     *\r\n     *\talertify.confirm(message);\r\n     *\talertify.confirm(message, onok);\r\n     *\talertify.confirm(message, onok, oncancel);\r\n     *\talertify.confirm(title, message, onok, oncancel);\r\n     */ alertify.dialog(\"confirm\", function() {\n        var autoConfirm = {\n            timer: null,\n            index: null,\n            text: null,\n            duration: null,\n            task: function(event, self) {\n                if (self.isOpen()) {\n                    self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + \" (&#8207;\" + autoConfirm.duration + \"&#8207;) \";\n                    autoConfirm.duration -= 1;\n                    if (autoConfirm.duration === -1) {\n                        clearAutoConfirm(self);\n                        var button = self.__internal.buttons[autoConfirm.index];\n                        var closeEvent = createCloseEvent(autoConfirm.index, button);\n                        if (typeof self.callback === \"function\") self.callback.apply(self, [\n                            closeEvent\n                        ]);\n                        //close the dialog.\n                        if (closeEvent.close !== false) self.close();\n                    }\n                } else clearAutoConfirm(self);\n            }\n        };\n        function clearAutoConfirm(self) {\n            if (autoConfirm.timer !== null) {\n                clearInterval(autoConfirm.timer);\n                autoConfirm.timer = null;\n                self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\n            }\n        }\n        function startAutoConfirm(self, index, duration) {\n            clearAutoConfirm(self);\n            autoConfirm.duration = duration;\n            autoConfirm.index = index;\n            autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\n            autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\n            autoConfirm.task(null, self);\n        }\n        return {\n            main: function(_title, _message, _onok, _oncancel) {\n                var title, message, onok, oncancel;\n                switch(arguments.length){\n                    case 1:\n                        message = _title;\n                        break;\n                    case 2:\n                        message = _title;\n                        onok = _message;\n                        break;\n                    case 3:\n                        message = _title;\n                        onok = _message;\n                        oncancel = _onok;\n                        break;\n                    case 4:\n                        title = _title;\n                        message = _message;\n                        onok = _onok;\n                        oncancel = _oncancel;\n                        break;\n                }\n                this.set(\"title\", title);\n                this.set(\"message\", message);\n                this.set(\"onok\", onok);\n                this.set(\"oncancel\", oncancel);\n                return this;\n            },\n            setup: function() {\n                return {\n                    buttons: [\n                        {\n                            text: alertify.defaults.glossary.ok,\n                            key: keys.ENTER,\n                            className: alertify.defaults.theme.ok\n                        },\n                        {\n                            text: alertify.defaults.glossary.cancel,\n                            key: keys.ESC,\n                            invokeOnClose: true,\n                            className: alertify.defaults.theme.cancel\n                        }\n                    ],\n                    focus: {\n                        element: 0,\n                        select: false\n                    },\n                    options: {\n                        maximizable: false,\n                        resizable: false\n                    }\n                };\n            },\n            build: function() {\n            //nothing\n            },\n            prepare: function() {\n            //nothing\n            },\n            setMessage: function(message) {\n                this.setContent(message);\n            },\n            settings: {\n                message: null,\n                labels: null,\n                onok: null,\n                oncancel: null,\n                defaultFocus: null,\n                reverseButtons: null\n            },\n            settingUpdated: function(key, oldValue, newValue) {\n                switch(key){\n                    case \"message\":\n                        this.setMessage(newValue);\n                        break;\n                    case \"labels\":\n                        if (\"ok\" in newValue && this.__internal.buttons[0].element) {\n                            this.__internal.buttons[0].text = newValue.ok;\n                            this.__internal.buttons[0].element.innerHTML = newValue.ok;\n                        }\n                        if (\"cancel\" in newValue && this.__internal.buttons[1].element) {\n                            this.__internal.buttons[1].text = newValue.cancel;\n                            this.__internal.buttons[1].element.innerHTML = newValue.cancel;\n                        }\n                        break;\n                    case \"reverseButtons\":\n                        if (newValue === true) this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\n                        else this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\n                        break;\n                    case \"defaultFocus\":\n                        this.__internal.focus.element = newValue === \"ok\" ? 0 : 1;\n                        break;\n                }\n            },\n            callback: function(closeEvent) {\n                clearAutoConfirm(this);\n                var returnValue;\n                switch(closeEvent.index){\n                    case 0:\n                        if (typeof this.get(\"onok\") === \"function\") {\n                            returnValue = this.get(\"onok\").call(this, closeEvent);\n                            if (typeof returnValue !== \"undefined\") closeEvent.cancel = !returnValue;\n                        }\n                        break;\n                    case 1:\n                        if (typeof this.get(\"oncancel\") === \"function\") {\n                            returnValue = this.get(\"oncancel\").call(this, closeEvent);\n                            if (typeof returnValue !== \"undefined\") closeEvent.cancel = !returnValue;\n                        }\n                        break;\n                }\n            },\n            autoOk: function(duration) {\n                startAutoConfirm(this, 0, duration);\n                return this;\n            },\n            autoCancel: function(duration) {\n                startAutoConfirm(this, 1, duration);\n                return this;\n            }\n        };\n    });\n    /**\r\n     * Prompt dialog object\r\n     *\r\n     * invoked by:\r\n     *\talertify.prompt(message);\r\n     *\talertify.prompt(message, value);\r\n     *\talertify.prompt(message, value, onok);\r\n     *\talertify.prompt(message, value, onok, oncancel);\r\n     *\talertify.prompt(title, message, value, onok, oncancel);\r\n     */ alertify.dialog(\"prompt\", function() {\n        var input = document.createElement(\"INPUT\");\n        var p = document.createElement(\"P\");\n        return {\n            main: function(_title, _message, _value, _onok, _oncancel) {\n                var title, message, value, onok, oncancel;\n                switch(arguments.length){\n                    case 1:\n                        message = _title;\n                        break;\n                    case 2:\n                        message = _title;\n                        value = _message;\n                        break;\n                    case 3:\n                        message = _title;\n                        value = _message;\n                        onok = _value;\n                        break;\n                    case 4:\n                        message = _title;\n                        value = _message;\n                        onok = _value;\n                        oncancel = _onok;\n                        break;\n                    case 5:\n                        title = _title;\n                        message = _message;\n                        value = _value;\n                        onok = _onok;\n                        oncancel = _oncancel;\n                        break;\n                }\n                this.set(\"title\", title);\n                this.set(\"message\", message);\n                this.set(\"value\", value);\n                this.set(\"onok\", onok);\n                this.set(\"oncancel\", oncancel);\n                return this;\n            },\n            setup: function() {\n                return {\n                    buttons: [\n                        {\n                            text: alertify.defaults.glossary.ok,\n                            key: keys.ENTER,\n                            className: alertify.defaults.theme.ok\n                        },\n                        {\n                            text: alertify.defaults.glossary.cancel,\n                            key: keys.ESC,\n                            invokeOnClose: true,\n                            className: alertify.defaults.theme.cancel\n                        }\n                    ],\n                    focus: {\n                        element: input,\n                        select: true\n                    },\n                    options: {\n                        maximizable: false,\n                        resizable: false\n                    }\n                };\n            },\n            build: function() {\n                input.className = alertify.defaults.theme.input;\n                input.setAttribute(\"type\", \"text\");\n                input.value = this.get(\"value\");\n                this.elements.content.appendChild(p);\n                this.elements.content.appendChild(input);\n            },\n            prepare: function() {\n            //nothing\n            },\n            setMessage: function(message) {\n                if (typeof message === \"string\") {\n                    clearContents(p);\n                    p.innerHTML = message;\n                } else if (message instanceof window1.HTMLElement && p.firstChild !== message) {\n                    clearContents(p);\n                    p.appendChild(message);\n                }\n            },\n            settings: {\n                message: undefined,\n                labels: undefined,\n                onok: undefined,\n                oncancel: undefined,\n                value: \"\",\n                type: \"text\",\n                reverseButtons: undefined\n            },\n            settingUpdated: function(key, oldValue, newValue) {\n                switch(key){\n                    case \"message\":\n                        this.setMessage(newValue);\n                        break;\n                    case \"value\":\n                        input.value = newValue;\n                        break;\n                    case \"type\":\n                        switch(newValue){\n                            case \"text\":\n                            case \"color\":\n                            case \"date\":\n                            case \"datetime-local\":\n                            case \"email\":\n                            case \"month\":\n                            case \"number\":\n                            case \"password\":\n                            case \"search\":\n                            case \"tel\":\n                            case \"time\":\n                            case \"week\":\n                                input.type = newValue;\n                                break;\n                            default:\n                                input.type = \"text\";\n                                break;\n                        }\n                        break;\n                    case \"labels\":\n                        if (newValue.ok && this.__internal.buttons[0].element) this.__internal.buttons[0].element.innerHTML = newValue.ok;\n                        if (newValue.cancel && this.__internal.buttons[1].element) this.__internal.buttons[1].element.innerHTML = newValue.cancel;\n                        break;\n                    case \"reverseButtons\":\n                        if (newValue === true) this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\n                        else this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\n                        break;\n                }\n            },\n            callback: function(closeEvent) {\n                var returnValue;\n                switch(closeEvent.index){\n                    case 0:\n                        this.settings.value = input.value;\n                        if (typeof this.get(\"onok\") === \"function\") {\n                            returnValue = this.get(\"onok\").call(this, closeEvent, this.settings.value);\n                            if (typeof returnValue !== \"undefined\") closeEvent.cancel = !returnValue;\n                        }\n                        break;\n                    case 1:\n                        if (typeof this.get(\"oncancel\") === \"function\") {\n                            returnValue = this.get(\"oncancel\").call(this, closeEvent);\n                            if (typeof returnValue !== \"undefined\") closeEvent.cancel = !returnValue;\n                        }\n                        if (!closeEvent.cancel) input.value = this.settings.value;\n                        break;\n                }\n            }\n        };\n    });\n    // CommonJS\n    if (typeof $3895aa91744b6895$exports === \"object\") $3895aa91744b6895$exports = alertify;\n    else if (typeof define === \"function\" && define.amd) define([], function() {\n        return alertify;\n    });\n    else if (!window1.alertify) window1.alertify = alertify;\n})(typeof window !== \"undefined\" ? window : $3895aa91744b6895$exports);\n\n\n\nconst $ef84d931ff2e086e$export$b131c49b26d3f427 = (state)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".status\", {\n        class: state.connected ? \"connected\" : \"disconnected\",\n        title: state.connected ? \"connected\" : \"disconnected\"\n    }, \"\");\nconst $ef84d931ff2e086e$export$f4a3eee8e2b83eb0 = (state)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"p.turn\", {\n        class: state.chess.turn(),\n        title: state.chess.turn() == \"w\" ? \"white's turn\" : \"black's turn\"\n    }, state.chess.turn());\nconst $ef84d931ff2e086e$export$fece60e3d5e7dfdb = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: state.connected ? \"disconnect\" : \"connect\",\n        onclick: (e)=>{\n            if (state.connected) {\n                console.log(\"disconnecting\");\n                actions.disconnect();\n            } else {\n                console.log(\"connecting\");\n                actions.connect();\n            }\n        }\n    }, state.connected ? \"power_off\" : \"power\");\nconst $ef84d931ff2e086e$export$d9c8f749b6c1c3da = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: \"flip board\",\n        onclick: (e)=>{\n            actions.flipBoard();\n        }\n    }, \"wifi_protected_setup\");\nconst $ef84d931ff2e086e$export$1c2b660b9d689dfc = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: state.influence ? \"hide influence\" : \"show influence\",\n        onclick: (e)=>{\n            actions.toggleInfluence();\n        }\n    }, \"compare_arrows\");\nconst $ef84d931ff2e086e$export$2bbe6b4c555f9803 = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: \"takeback\",\n        onclick: (e)=>{\n            actions.takeback();\n        }\n    }, \"arrow_left\");\nconst $ef84d931ff2e086e$export$a083a1058128fafe = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: \"does nothing\",\n        onclick: (e)=>{}\n    }, \"arrow_right\");\nconst $ef84d931ff2e086e$export$324fa128a6a8d5eb = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: state.grid ? \"hide grid\" : \"show grid\",\n        onclick: (e)=>{\n            state.grid = !state.grid;\n            actions.lightBoard();\n        }\n    }, state.grid ? \"grid_off\" : \"grid_on\");\nconst $ef84d931ff2e086e$export$72b8a1821a6af290 = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: state.pieces ? \"hide pieces\" : \"show pieces\",\n        onclick: (e)=>actions.togglePieces()\n    }, (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"img.svgicon\", {\n        src: \"static/Chess_tile_ql.svg\"\n    }));\nconst $ef84d931ff2e086e$export$46e774049323b8a5 = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: \"increace history\",\n        onclick: actions.incrementHistory\n    }, \"history\");\nconst $ef84d931ff2e086e$export$99e4fe05899c2070 = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n        title: \"decreace history\",\n        onclick: (e)=>{\n            actions.decrementHistory();\n        }\n    }, \"history_toggle_off\");\nconst $ef84d931ff2e086e$export$e7e20814fadcf6e = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i\", {\n        onclick: (e)=>{\n            (0, $3895aa91744b6895$exports.confirm)(\"New game?\", (yes)=>{\n                actions.newGame();\n            }, (no)=>{\n                console.log(\"cancelling\");\n            });\n        }\n    }, \"start new game\");\nconst $ef84d931ff2e086e$export$390d11d353c16e49 = (state, actions)=>[\n        $ef84d931ff2e086e$export$46e774049323b8a5(state, actions),\n        $ef84d931ff2e086e$export$99e4fe05899c2070(state, actions),\n        $ef84d931ff2e086e$export$2bbe6b4c555f9803(state, actions),\n        $ef84d931ff2e086e$export$a083a1058128fafe(state, actions),\n        $ef84d931ff2e086e$export$d9c8f749b6c1c3da(state, actions),\n        $ef84d931ff2e086e$export$324fa128a6a8d5eb(state, actions),\n        $ef84d931ff2e086e$export$72b8a1821a6af290(state, actions),\n        $ef84d931ff2e086e$export$1c2b660b9d689dfc(state, actions),\n        $ef84d931ff2e086e$export$f4a3eee8e2b83eb0(state)\n    ];\nconst $ef84d931ff2e086e$export$4c260019440d418f = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"span.toolbar\", {}, [\n        // StatusIcon(state),\n        // ConnectToggle(state, actions),\n        ...$ef84d931ff2e086e$export$390d11d353c16e49(state, actions)\n    ]);\nconst $ef84d931ff2e086e$export$69d4e78a69e95731 = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".toolbar\", {}, [\n        ...$ef84d931ff2e086e$export$390d11d353c16e49(state, actions)\n    ]);\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var $17f1b9f8ce16014e$var$extendStatics = function(d, b) {\n    $17f1b9f8ce16014e$var$extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return $17f1b9f8ce16014e$var$extendStatics(d, b);\n};\nfunction $17f1b9f8ce16014e$export$a8ba968b8961cb8a(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    $17f1b9f8ce16014e$var$extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar $17f1b9f8ce16014e$export$18ce0697a983be9b = function() {\n    $17f1b9f8ce16014e$export$18ce0697a983be9b = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $17f1b9f8ce16014e$export$18ce0697a983be9b.apply(this, arguments);\n};\nfunction $17f1b9f8ce16014e$export$3c9a16f847548506(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") {\n        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction $17f1b9f8ce16014e$export$29e00dfd3077644b(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction $17f1b9f8ce16014e$export$d5ad3fd78186038f(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction $17f1b9f8ce16014e$export$3a84e1ae4e97e9b0(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n}\nfunction $17f1b9f8ce16014e$export$d831c04e792af3d(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    return useValue ? value : void 0;\n}\nfunction $17f1b9f8ce16014e$export$6a2a36740a146cb8(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\nfunction $17f1b9f8ce16014e$export$d1a06452d3489bc7(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n}\nfunction $17f1b9f8ce16014e$export$f1db080c865becb9(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction $17f1b9f8ce16014e$export$1050f835b63b671e(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction $17f1b9f8ce16014e$export$67ebef60e6f28a6(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar $17f1b9f8ce16014e$export$45d3717a4c69092e = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction $17f1b9f8ce16014e$export$f33643c0debef087(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) $17f1b9f8ce16014e$export$45d3717a4c69092e(o, m, p);\n}\nfunction $17f1b9f8ce16014e$export$19a8beecd37a4c45(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction $17f1b9f8ce16014e$export$8d051b38c9118094(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction $17f1b9f8ce16014e$export$afc72e2116322959() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat($17f1b9f8ce16014e$export$8d051b38c9118094(arguments[i]));\n    return ar;\n}\nfunction $17f1b9f8ce16014e$export$6388937ca91ccae8() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction $17f1b9f8ce16014e$export$1216008129fb82ed(to, from, pack) {\n    if (pack || arguments.length === 2) {\n        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction $17f1b9f8ce16014e$export$10c90e4f7922046c(v) {\n    return this instanceof $17f1b9f8ce16014e$export$10c90e4f7922046c ? (this.v = v, this) : new $17f1b9f8ce16014e$export$10c90e4f7922046c(v);\n}\nfunction $17f1b9f8ce16014e$export$e427f37a30a4de9b(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $17f1b9f8ce16014e$export$10c90e4f7922046c ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction $17f1b9f8ce16014e$export$bbd80228419bb833(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: $17f1b9f8ce16014e$export$10c90e4f7922046c(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction $17f1b9f8ce16014e$export$e3b29a3d6162315f(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof $17f1b9f8ce16014e$export$19a8beecd37a4c45 === \"function\" ? $17f1b9f8ce16014e$export$19a8beecd37a4c45(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction $17f1b9f8ce16014e$export$4fb47efe1390b86f(cooked, raw) {\n    if (Object.defineProperty) Object.defineProperty(cooked, \"raw\", {\n        value: raw\n    });\n    else cooked.raw = raw;\n    return cooked;\n}\nvar $17f1b9f8ce16014e$var$__setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nfunction $17f1b9f8ce16014e$export$c21735bcef00d192(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) $17f1b9f8ce16014e$export$45d3717a4c69092e(result, mod, k);\n    }\n    $17f1b9f8ce16014e$var$__setModuleDefault(result, mod);\n    return result;\n}\nfunction $17f1b9f8ce16014e$export$da59b14a69baef04(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction $17f1b9f8ce16014e$export$d5dcaf168c640c35(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction $17f1b9f8ce16014e$export$d40a35129aaff81f(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction $17f1b9f8ce16014e$export$81fdc39f203e4e04(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction $17f1b9f8ce16014e$export$88ac25d8e944e405(env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        env.stack.push({\n            value: value,\n            dispose: dispose,\n            async: async\n        });\n    } else if (async) env.stack.push({\n        async: true\n    });\n    return value;\n}\nvar $17f1b9f8ce16014e$var$_SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction $17f1b9f8ce16014e$export$8f076105dc360e92(env) {\n    function fail(e) {\n        env.error = env.hasError ? new $17f1b9f8ce16014e$var$_SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n    }\n    function next() {\n        while(env.stack.length){\n            var rec = env.stack.pop();\n            try {\n                var result = rec.dispose && rec.dispose.call(rec.value);\n                if (rec.async) return Promise.resolve(result).then(next, function(e) {\n                    fail(e);\n                    return next();\n                });\n            } catch (e) {\n                fail(e);\n            }\n        }\n        if (env.hasError) throw env.error;\n    }\n    return next();\n}\nvar $17f1b9f8ce16014e$export$2e2bcd8739ae039 = {\n    __extends: $17f1b9f8ce16014e$export$a8ba968b8961cb8a,\n    __assign: $17f1b9f8ce16014e$export$18ce0697a983be9b,\n    __rest: $17f1b9f8ce16014e$export$3c9a16f847548506,\n    __decorate: $17f1b9f8ce16014e$export$29e00dfd3077644b,\n    __param: $17f1b9f8ce16014e$export$d5ad3fd78186038f,\n    __metadata: $17f1b9f8ce16014e$export$f1db080c865becb9,\n    __awaiter: $17f1b9f8ce16014e$export$1050f835b63b671e,\n    __generator: $17f1b9f8ce16014e$export$67ebef60e6f28a6,\n    __createBinding: $17f1b9f8ce16014e$export$45d3717a4c69092e,\n    __exportStar: $17f1b9f8ce16014e$export$f33643c0debef087,\n    __values: $17f1b9f8ce16014e$export$19a8beecd37a4c45,\n    __read: $17f1b9f8ce16014e$export$8d051b38c9118094,\n    __spread: $17f1b9f8ce16014e$export$afc72e2116322959,\n    __spreadArrays: $17f1b9f8ce16014e$export$6388937ca91ccae8,\n    __spreadArray: $17f1b9f8ce16014e$export$1216008129fb82ed,\n    __await: $17f1b9f8ce16014e$export$10c90e4f7922046c,\n    __asyncGenerator: $17f1b9f8ce16014e$export$e427f37a30a4de9b,\n    __asyncDelegator: $17f1b9f8ce16014e$export$bbd80228419bb833,\n    __asyncValues: $17f1b9f8ce16014e$export$e3b29a3d6162315f,\n    __makeTemplateObject: $17f1b9f8ce16014e$export$4fb47efe1390b86f,\n    __importStar: $17f1b9f8ce16014e$export$c21735bcef00d192,\n    __importDefault: $17f1b9f8ce16014e$export$da59b14a69baef04,\n    __classPrivateFieldGet: $17f1b9f8ce16014e$export$d5dcaf168c640c35,\n    __classPrivateFieldSet: $17f1b9f8ce16014e$export$d40a35129aaff81f,\n    __classPrivateFieldIn: $17f1b9f8ce16014e$export$81fdc39f203e4e04,\n    __addDisposableResource: $17f1b9f8ce16014e$export$88ac25d8e944e405,\n    __disposeResources: $17f1b9f8ce16014e$export$8f076105dc360e92\n};\n\n\n\nvar $e4aeb149e284da0d$export$4dbe3495bda74f11 = {\n    // Modifiers\n    XS: \"cui-xs\",\n    SM: \"cui-sm\",\n    LG: \"cui-lg\",\n    XL: \"cui-xl\",\n    PRIMARY: \"cui-primary\",\n    NEGATIVE: \"cui-negative\",\n    POSITIVE: \"cui-positive\",\n    WARNING: \"cui-warning\",\n    ACTIVE: \"cui-active\",\n    DISABLED: \"cui-disabled\",\n    LOADING: \"cui-loading\",\n    BASIC: \"cui-basic\",\n    OUTLINED: \"cui-outlined\",\n    ROUNDED: \"cui-rounded\",\n    READONLY: \"cui-readonly\",\n    SELECTED: \"cui-selected\",\n    INTERACTIVE: \"cui-interactive\",\n    ELEVATION: \"cui-elevation\",\n    HIDDEN: \"cui-hidden\",\n    // Headings\n    H1: \"cui-h1\",\n    H2: \"cui-h2\",\n    H3: \"cui-h3\",\n    H4: \"cui-h4\",\n    H5: \"cui-h5\",\n    H6: \"cui-h6\",\n    // Utility\n    ALIGN: \"cui-align\",\n    ALIGN_RIGHT: \"cui-align-right\",\n    ALIGN_LEFT: \"cui-align-left\",\n    FLUID: \"cui-fluid\",\n    TEXT_MUTED: \"cui-text-muted\",\n    TEXT_DISABLED: \"cui-text-disabled\",\n    FOCUS_DISABLED: \"cui-focus-disabled\",\n    COMPACT: \"cui-compact\",\n    // Component\n    BREADCRUMB: \"cui-breadcrumb\",\n    BREADCRUMB_ITEM: \"cui-breadcrumb-item\",\n    BREADCRUMB_SEPERATOR: \"cui-breadcrumb-seperator\",\n    BUTTON: \"cui-button\",\n    BUTTON_LABEL: \"cui-button-label\",\n    BUTTON_SUBLABEL: \"cui-button-sublabel\",\n    BUTTON_GROUP: \"cui-button-group\",\n    BUTTON_ICON: \"cui-button-icon\",\n    CARD: \"cui-card\",\n    CARD_INTERACTIVE: \"cui-card-interactive\",\n    CALLOUT: \"cui-callout\",\n    CALLOUT_HEADER: \"cui-callout-header\",\n    CALLOUT_CONTENT: \"cui-callout-content\",\n    CALLOUT_ICON: \"cui-callout-icon\",\n    CALLOUT_DISMISS_ICON: \"cui-callout-dismiss\",\n    CHECKBOX: \"cui-checkbox\",\n    COLLAPSE: \"cui-collapse\",\n    COLLAPSE_BODY: \"cui-collapse-body\",\n    CONTEXT_MENU: \"cui-context-menu\",\n    CONTROL: \"cui-control\",\n    CONTROL_INDICATOR: \"cui-control-indicator\",\n    CONTROL_GROUP: \"cui-control-group\",\n    CUSTOM_SELECT: \"cui-custom-select\",\n    CUSTOM_SELECT_TRIGGER: \"cui-custom-select-trigger\",\n    CUSTOM_SELECT_INPUT: \"cui-custom-select-input\",\n    CUSTOM_SELECT_HIDDEN: \"cui-custom-select-hidden\",\n    DIALOG: \"cui-dialog\",\n    DIALOG_CLOSE_BUTTON: \"cui-dialog-close-button\",\n    DIALOG_CONTENT: \"cui-dialog-content\",\n    DIALOG_HEADER: \"cui-dialog-header\",\n    DIALOG_BODY: \"cui-dialog-body\",\n    DIALOG_FOOTER: \"cui-dialog-footer\",\n    DRAWER: \"cui-drawer\",\n    DRAWER_CONTENT: \"cui-drawer-content\",\n    EMPTY_STATE: \"cui-empty-state\",\n    EMPTY_STATE_ICON: \"cui-empty-state-icon\",\n    EMPTY_STATE_CONTENT: \"cui-empty-state-content\",\n    EMPTY_STATE_HEADER: \"cui-empty-state-header\",\n    EMPTY_STATE_FILL: \"cui-empty-state-fill\",\n    FORM: \"cui-form\",\n    FORM_GROUP: \"cui-form-group\",\n    FORM_LABEL: \"cui-form-label\",\n    GRID: \"cui-grid\",\n    COL: \"cui-col\",\n    INPUT_FILE: \"cui-input-file\",\n    INPUT_FILE_CONTENT: \"cui-input-file-content\",\n    INPUT_FILE_TEXT: \"cui-input-file-text\",\n    INPUT_FILE_BUTTON: \"cui-input-file-button\",\n    ICON: \"cui-icon\",\n    ICON_ACTION: \"cui-icon-action\",\n    INPUT: \"cui-input\",\n    INPUT_GROUP: \"cui-input-group\",\n    INPUT_POPOVER: \"cui-input-popover\",\n    INPUT_POPOVER_CONTENT: \"cui-input-popover-content\",\n    INPUT_SELECT: \"cui-input-select\",\n    LIST: \"cui-list\",\n    LIST_ITEM: \"cui-list-item\",\n    LIST_ITEM_LABEL: \"cui-list-item-label\",\n    LIST_ITEM_CONTENT_LEFT: \"cui-list-item-content-left\",\n    LIST_ITEM_CONTENT_RIGHT: \"cui-list-item-content-right\",\n    MENU: \"cui-menu\",\n    MENU_ITEM: \"cui-menu-item\",\n    MENU_DIVIDER: \"cui-menu-divider\",\n    MENU_HEADING: \"cui-menu-heading\",\n    OVERLAY: \"cui-overlay\",\n    OVERLAY_CONTENT: \"cui-overlay-content\",\n    OVERLAY_BACKDROP: \"cui-overlay-backdrop\",\n    OVERLAY_OPEN: \"cui-overlay-open\",\n    OVERLAY_INLINE: \"cui-overlay-inline\",\n    OVERLAY_SCROLL_CONTAINER: \"cui-overlay-scroll-container\",\n    POPOVER: \"cui-popover\",\n    POPOVER_OPEN: \"cui-popover-open\",\n    POPOVER_CONTENT: \"cui-popover-content\",\n    POPOVER_ARROW: \"cui-popover-arrow\",\n    POPOVER_TRIGGER_ACTIVE: \"cui-popover-trigger-active\",\n    POPOVER_BACKDROP: \"cui-popover-backdrop\",\n    POPOVER_DISSMISS: \"cui-popover-dismiss\",\n    POPOVER_MENU: \"cui-popover-menu\",\n    PORTAL: \"cui-portal\",\n    QUERY_LIST: \"cui-query-list\",\n    QUERY_LIST_CHECKMARK: \"cui-query-list-checkmark\",\n    QUERY_LIST_EMPTY: \"cui-query-list-empty\",\n    QUERY_LIST_INITIAL: \"cui-query-list-initial\",\n    QUERY_LIST_MESSAGE: \"cui-query-list-message\",\n    RADIO: \"cui-radio\",\n    RADIO_GROUP: \"cui-radio-group\",\n    SELECT: \"cui-select\",\n    SELECT_ARROW: \"cui-select-arrow\",\n    SELECT_LIST: \"cui-select-list\",\n    SPINNER: \"cui-spinner\",\n    SPINNER_CONTENT: \"cui-spinner-content\",\n    SPINNER_ICON: \"cui-spinner-icon\",\n    SPINNER_MESSAGE: \"cui-spinner-message\",\n    SPINNER_FILL: \"cui-spinner-fill\",\n    SPINNER_ACTIVE: \"cui-spinner-active\",\n    SPINNER_BG: \"cui-spinner-bg\",\n    SWITCH: \"cui-switch\",\n    TABLE: \"cui-table\",\n    TABLE_BORDERED: \"cui-table-bordered\",\n    TABLE_STRIPED: \"cui-table-striped\",\n    TABLE_INTERACTIVE: \"cui-table-interactive\",\n    TAG: \"cui-tag\",\n    TAG_REMOVABLE: \"cui-tag-removable\",\n    TAG_INPUT: \"cui-tag-input\",\n    TAG_INPUT_VALUES: \"cui-tag-input-values\",\n    TABS: \"cui-tabs\",\n    TABS_BORDERED: \"cui-tabs-bordered\",\n    TABS_ITEM: \"cui-tabs-item\",\n    TEXT_AREA: \"cui-text-area\",\n    TOAST: \"cui-toast\",\n    TOAST_MESSAGE: \"cui-toast-message\",\n    TOASTER: \"cui-toaster\",\n    TOASTER_INLINE: \"cui-toaster-inline\",\n    TOOLTIP: \"cui-tooltip\",\n    TREE: \"cui-tree\",\n    TREE_NODE: \"cui-tree-node\",\n    TREE_NODE_LIST: \"cui-tree-node-list\",\n    TREE_NODE_CONTENT: \"cui-tree-node-content\",\n    TREE_NODE_CARET: \"cui-tree-node-caret\",\n    TREE_NODE_CARET_OPEN: \"cui-tree-node-caret-open\",\n    TREE_NODE_CARET_CLOSED: \"cui-tree-node-caret-closed\",\n    TREE_NODE_CARET_NONE: \"cui-tree-node-caret-none\",\n    TREE_NODE_SELECTED: \"cui-tree-node-selected\",\n    TREE_NODE_EXPANDED: \"cui-tree-node-expanded\",\n    TREE_NODE_LABEL: \"cui-tree-node-label\",\n    TREE_NODE_CONTENT_RIGHT: \"cui-tree-node-content-right\",\n    TREE_NODE_CONTENT_LEFT: \"cui-tree-node-content-left\"\n};\n\n\n\nvar $fcc1f848a67e05c0$exports = {};\n/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/ /* global define */ (function() {\n    \"use strict\";\n    var hasOwn = {}.hasOwnProperty;\n    var nativeCodeString = \"[native code]\";\n    function classNames() {\n        var classes = [];\n        for(var i = 0; i < arguments.length; i++){\n            var arg = arguments[i];\n            if (!arg) continue;\n            var argType = typeof arg;\n            if (argType === \"string\" || argType === \"number\") classes.push(arg);\n            else if (Array.isArray(arg)) {\n                if (arg.length) {\n                    var inner = classNames.apply(null, arg);\n                    if (inner) classes.push(inner);\n                }\n            } else if (argType === \"object\") {\n                if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes(\"[native code]\")) {\n                    classes.push(arg.toString());\n                    continue;\n                }\n                for(var key in arg)if (hasOwn.call(arg, key) && arg[key]) classes.push(key);\n            }\n        }\n        return classes.join(\" \");\n    }\n    if (0, $fcc1f848a67e05c0$exports) {\n        classNames.default = classNames;\n        $fcc1f848a67e05c0$exports = classNames;\n    } else if (typeof define === \"function\" && typeof define.amd === \"object\" && define.amd) // register as 'classnames', consistent with npm package name\n    define(\"classnames\", [], function() {\n        return classNames;\n    });\n    else window.classNames = classNames;\n})();\n\n\n\n\nvar $efcb3a78c45dc171$export$ef524c8d8e02fd08 = /** @class */ function() {\n    function BaseControl() {}\n    BaseControl.prototype.view = function(_a) {\n        var attrs = _a.attrs;\n        var className = attrs.class, _b = attrs.containerAttrs, containerAttrs = _b === void 0 ? {} : _b, intent = attrs.intent, label = attrs.label, size = attrs.size, type = attrs.type, typeClass = attrs.typeClass, style = attrs.style, htmlAttrs = (0, $17f1b9f8ce16014e$export$3c9a16f847548506)(attrs, [\n            \"class\",\n            \"containerAttrs\",\n            \"intent\",\n            \"label\",\n            \"size\",\n            \"type\",\n            \"typeClass\",\n            \"style\"\n        ]);\n        var classes = (0, (/*@__PURE__*/$parcel$interopDefault($fcc1f848a67e05c0$exports)))((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).CONTROL, typeClass, htmlAttrs.disabled && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).DISABLED, intent && \"cui-\".concat(intent), size && \"cui-\".concat(size), className);\n        var content = [\n            (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"input\", (0, $17f1b9f8ce16014e$export$18ce0697a983be9b)((0, $17f1b9f8ce16014e$export$18ce0697a983be9b)({}, htmlAttrs), {\n                disabled: htmlAttrs.disabled || htmlAttrs.readonly,\n                type: type\n            })),\n            (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"span.\".concat((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).CONTROL_INDICATOR)),\n            label\n        ];\n        return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"label\", (0, $17f1b9f8ce16014e$export$18ce0697a983be9b)({\n            class: classes,\n            style: style\n        }, containerAttrs), content);\n    };\n    return BaseControl;\n}();\n\n\nvar $1c56324fc02e153f$export$b5d5cf8927ab7262 = /** @class */ function() {\n    function Switch() {}\n    Switch.prototype.view = function(_a) {\n        var attrs = _a.attrs;\n        return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $efcb3a78c45dc171$export$ef524c8d8e02fd08), (0, $17f1b9f8ce16014e$export$18ce0697a983be9b)((0, $17f1b9f8ce16014e$export$18ce0697a983be9b)({}, attrs), {\n            type: \"checkbox\",\n            typeClass: (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SWITCH\n        }));\n    };\n    return Switch;\n}();\n\n\nvar $09c7c301f2267c48$exports = {};\n$09c7c301f2267c48$exports = new URL(\"logo.4474c526.svg\", import.meta.url).toString();\n\n\nconst $3f934752a4447ac8$export$a6c7ac8248d6e38a = ()=>({\n        view: (vnode)=>{\n            return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".menu-item\", [\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.Link, vnode.attrs, vnode.children)\n            ]);\n        }\n    });\nconst $3f934752a4447ac8$export$b2e089eb3692b073 = (state)=>[\n        (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))($3f934752a4447ac8$export$a6c7ac8248d6e38a, {\n            href: \"/connect\",\n            id: \"connectButton\"\n        }, (0, $ef84d931ff2e086e$export$b131c49b26d3f427)(state)),\n        (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))($3f934752a4447ac8$export$a6c7ac8248d6e38a, {\n            href: \"/otb\",\n            id: \"otbButton\"\n        }, \"Local\"),\n        (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))($3f934752a4447ac8$export$a6c7ac8248d6e38a, {\n            href: \"/games\",\n            id: \"gamesButton\"\n        }, \"Online\"),\n        (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $1c56324fc02e153f$export$b5d5cf8927ab7262), {\n            checked: state.theme,\n            onclick: (e)=>{\n                console.log(\"switched\", e);\n                if (state.theme) {\n                    document.body.className = document.body.className.replace(\"dark\", \"\");\n                    state.theme = null;\n                } else {\n                    state.theme = \"dark\";\n                    document.body.className += state.theme;\n                }\n            }\n        }),\n        // ,\n        state.user.username ? (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))($3f934752a4447ac8$export$a6c7ac8248d6e38a, {\n            href: \"/profile\"\n        }, state.user.username) : (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))($3f934752a4447ac8$export$a6c7ac8248d6e38a, {\n            href: \"/login\",\n            id: \"loginButton\"\n        }, \"Login\")\n    ];\nconst $3f934752a4447ac8$export$d9b273488cd8ce6f = (state)=>[\n        (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))($3f934752a4447ac8$export$a6c7ac8248d6e38a, {\n            href: \"/\"\n        }, (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"img.logo#logo\", {\n            src: \"logo.svg\"\n        })),\n        $3f934752a4447ac8$export$b2e089eb3692b073(state)\n    ];\nconst $3f934752a4447ac8$export$c84671f46d6a1ca = (state)=>({\n        view: (vnode)=>{\n            return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"main.layout\", {}, [\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"nav.menu\", {}, $3f934752a4447ac8$export$d9b273488cd8ce6f(state)),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"section#main\", vnode.attrs)\n            ]);\n        }\n    });\n\n\n\n/**\n * @license\n * Copyright (c) 2023, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */ const $6eb582f9081eb7e5$export$29814851e0aa981f = \"w\";\nconst $6eb582f9081eb7e5$export$7a91b0fde7ec420f = \"b\";\nconst $6eb582f9081eb7e5$export$4c32fd1f222ff2b0 = \"p\";\nconst $6eb582f9081eb7e5$export$ce32bc8c2a29bae6 = \"n\";\nconst $6eb582f9081eb7e5$export$54a167f801c5dba3 = \"b\";\nconst $6eb582f9081eb7e5$export$68d4c913908dc245 = \"r\";\nconst $6eb582f9081eb7e5$export$36a8946792f13ec9 = \"q\";\nconst $6eb582f9081eb7e5$export$42387107bb0d6206 = \"k\";\nconst $6eb582f9081eb7e5$export$1264a6620073cfaa = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\nconst $6eb582f9081eb7e5$var$EMPTY = -1;\nconst $6eb582f9081eb7e5$var$FLAGS = {\n    NORMAL: \"n\",\n    CAPTURE: \"c\",\n    BIG_PAWN: \"b\",\n    EP_CAPTURE: \"e\",\n    PROMOTION: \"p\",\n    KSIDE_CASTLE: \"k\",\n    QSIDE_CASTLE: \"q\"\n};\nconst $6eb582f9081eb7e5$export$5fc67852ab417150 = [\n    \"a8\",\n    \"b8\",\n    \"c8\",\n    \"d8\",\n    \"e8\",\n    \"f8\",\n    \"g8\",\n    \"h8\",\n    \"a7\",\n    \"b7\",\n    \"c7\",\n    \"d7\",\n    \"e7\",\n    \"f7\",\n    \"g7\",\n    \"h7\",\n    \"a6\",\n    \"b6\",\n    \"c6\",\n    \"d6\",\n    \"e6\",\n    \"f6\",\n    \"g6\",\n    \"h6\",\n    \"a5\",\n    \"b5\",\n    \"c5\",\n    \"d5\",\n    \"e5\",\n    \"f5\",\n    \"g5\",\n    \"h5\",\n    \"a4\",\n    \"b4\",\n    \"c4\",\n    \"d4\",\n    \"e4\",\n    \"f4\",\n    \"g4\",\n    \"h4\",\n    \"a3\",\n    \"b3\",\n    \"c3\",\n    \"d3\",\n    \"e3\",\n    \"f3\",\n    \"g3\",\n    \"h3\",\n    \"a2\",\n    \"b2\",\n    \"c2\",\n    \"d2\",\n    \"e2\",\n    \"f2\",\n    \"g2\",\n    \"h2\",\n    \"a1\",\n    \"b1\",\n    \"c1\",\n    \"d1\",\n    \"e1\",\n    \"f1\",\n    \"g1\",\n    \"h1\"\n];\nconst $6eb582f9081eb7e5$var$BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n};\n/*\n * NOTES ABOUT 0x88 MOVE GENERATION ALGORITHM\n * ----------------------------------------------------------------------------\n * From https://github.com/jhlywa/chess.js/issues/230\n *\n * A lot of people are confused when they first see the internal representation\n * of chess.js. It uses the 0x88 Move Generation Algorithm which internally\n * stores the board as an 8x16 array. This is purely for efficiency but has a\n * couple of interesting benefits:\n *\n * 1. 0x88 offers a very inexpensive \"off the board\" check. Bitwise AND (&) any\n *    square with 0x88, if the result is non-zero then the square is off the\n *    board. For example, assuming a knight square A8 (0 in 0x88 notation),\n *    there are 8 possible directions in which the knight can move. These\n *    directions are relative to the 8x16 board and are stored in the\n *    PIECE_OFFSETS map. One possible move is A8 - 18 (up one square, and two\n *    squares to the left - which is off the board). 0 - 18 = -18 & 0x88 = 0x88\n *    (because of two-complement representation of -18). The non-zero result\n *    means the square is off the board and the move is illegal. Take the\n *    opposite move (from A8 to C7), 0 + 18 = 18 & 0x88 = 0. A result of zero\n *    means the square is on the board.\n *\n * 2. The relative distance (or difference) between two squares on a 8x16 board\n *    is unique and can be used to inexpensively determine if a piece on a\n *    square can attack any other arbitrary square. For example, let's see if a\n *    pawn on E7 can attack E2. The difference between E7 (20) - E2 (100) is\n *    -80. We add 119 to make the ATTACKS array index non-negative (because the\n *    worst case difference is A8 - H1 = -119). The ATTACKS array contains a\n *    bitmask of pieces that can attack from that distance and direction.\n *    ATTACKS[-80 + 119=39] gives us 24 or 0b11000 in binary. Look at the\n *    PIECE_MASKS map to determine the mask for a given piece type. In our pawn\n *    example, we would check to see if 24 & 0x1 is non-zero, which it is\n *    not. So, naturally, a pawn on E7 can't attack a piece on E2. However, a\n *    rook can since 24 & 0x8 is non-zero. The only thing left to check is that\n *    there are no blocking pieces between E7 and E2. That's where the RAYS\n *    array comes in. It provides an offset (in this case 16) to add to E7 (20)\n *    to check for blocking pieces. E7 (20) + 16 = E6 (36) + 16 = E5 (52) etc.\n */ // prettier-ignore\n// eslint-disable-next-line\nconst $6eb582f9081eb7e5$var$Ox88 = {\n    a8: 0,\n    b8: 1,\n    c8: 2,\n    d8: 3,\n    e8: 4,\n    f8: 5,\n    g8: 6,\n    h8: 7,\n    a7: 16,\n    b7: 17,\n    c7: 18,\n    d7: 19,\n    e7: 20,\n    f7: 21,\n    g7: 22,\n    h7: 23,\n    a6: 32,\n    b6: 33,\n    c6: 34,\n    d6: 35,\n    e6: 36,\n    f6: 37,\n    g6: 38,\n    h6: 39,\n    a5: 48,\n    b5: 49,\n    c5: 50,\n    d5: 51,\n    e5: 52,\n    f5: 53,\n    g5: 54,\n    h5: 55,\n    a4: 64,\n    b4: 65,\n    c4: 66,\n    d4: 67,\n    e4: 68,\n    f4: 69,\n    g4: 70,\n    h4: 71,\n    a3: 80,\n    b3: 81,\n    c3: 82,\n    d3: 83,\n    e3: 84,\n    f3: 85,\n    g3: 86,\n    h3: 87,\n    a2: 96,\n    b2: 97,\n    c2: 98,\n    d2: 99,\n    e2: 100,\n    f2: 101,\n    g2: 102,\n    h2: 103,\n    a1: 112,\n    b1: 113,\n    c1: 114,\n    d1: 115,\n    e1: 116,\n    f1: 117,\n    g1: 118,\n    h1: 119\n};\nconst $6eb582f9081eb7e5$var$PAWN_OFFSETS = {\n    b: [\n        16,\n        32,\n        17,\n        15\n    ],\n    w: [\n        -16,\n        -32,\n        -17,\n        -15\n    ]\n};\nconst $6eb582f9081eb7e5$var$PIECE_OFFSETS = {\n    n: [\n        -18,\n        -33,\n        -31,\n        -14,\n        18,\n        33,\n        31,\n        14\n    ],\n    b: [\n        -17,\n        -15,\n        17,\n        15\n    ],\n    r: [\n        -16,\n        1,\n        16,\n        -1\n    ],\n    q: [\n        -17,\n        -16,\n        -15,\n        1,\n        17,\n        16,\n        15,\n        -1\n    ],\n    k: [\n        -17,\n        -16,\n        -15,\n        1,\n        17,\n        16,\n        15,\n        -1\n    ]\n};\n// prettier-ignore\nconst $6eb582f9081eb7e5$var$ATTACKS = [\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    24,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    24,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    24,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    24,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    24,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    2,\n    24,\n    2,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    53,\n    56,\n    53,\n    2,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    56,\n    0,\n    56,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    53,\n    56,\n    53,\n    2,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    2,\n    24,\n    2,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    24,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    24,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    24,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    24,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20,\n    0,\n    0,\n    20,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    24,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    20\n];\n// prettier-ignore\nconst $6eb582f9081eb7e5$var$RAYS = [\n    17,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    16,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    15,\n    0,\n    0,\n    17,\n    0,\n    0,\n    0,\n    0,\n    0,\n    16,\n    0,\n    0,\n    0,\n    0,\n    0,\n    15,\n    0,\n    0,\n    0,\n    0,\n    17,\n    0,\n    0,\n    0,\n    0,\n    16,\n    0,\n    0,\n    0,\n    0,\n    15,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    17,\n    0,\n    0,\n    0,\n    16,\n    0,\n    0,\n    0,\n    15,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    17,\n    0,\n    0,\n    16,\n    0,\n    0,\n    15,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    17,\n    0,\n    16,\n    0,\n    15,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    17,\n    16,\n    15,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -15,\n    -16,\n    -17,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -15,\n    0,\n    -16,\n    0,\n    -17,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -15,\n    0,\n    0,\n    -16,\n    0,\n    0,\n    -17,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -15,\n    0,\n    0,\n    0,\n    -16,\n    0,\n    0,\n    0,\n    -17,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -15,\n    0,\n    0,\n    0,\n    0,\n    -16,\n    0,\n    0,\n    0,\n    0,\n    -17,\n    0,\n    0,\n    0,\n    0,\n    -15,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -16,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -17,\n    0,\n    0,\n    -15,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -16,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -17\n];\nconst $6eb582f9081eb7e5$var$PIECE_MASKS = {\n    p: 0x1,\n    n: 0x2,\n    b: 0x4,\n    r: 0x8,\n    q: 0x10,\n    k: 0x20\n};\nconst $6eb582f9081eb7e5$var$SYMBOLS = \"pnbrqkPNBRQK\";\nconst $6eb582f9081eb7e5$var$PROMOTIONS = [\n    $6eb582f9081eb7e5$export$ce32bc8c2a29bae6,\n    $6eb582f9081eb7e5$export$54a167f801c5dba3,\n    $6eb582f9081eb7e5$export$68d4c913908dc245,\n    $6eb582f9081eb7e5$export$36a8946792f13ec9\n];\nconst $6eb582f9081eb7e5$var$RANK_1 = 7;\nconst $6eb582f9081eb7e5$var$RANK_2 = 6;\n/*\n * const RANK_3 = 5\n * const RANK_4 = 4\n * const RANK_5 = 3\n * const RANK_6 = 2\n */ const $6eb582f9081eb7e5$var$RANK_7 = 1;\nconst $6eb582f9081eb7e5$var$RANK_8 = 0;\nconst $6eb582f9081eb7e5$var$SIDES = {\n    [$6eb582f9081eb7e5$export$42387107bb0d6206]: $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE,\n    [$6eb582f9081eb7e5$export$36a8946792f13ec9]: $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE\n};\nconst $6eb582f9081eb7e5$var$ROOKS = {\n    w: [\n        {\n            square: $6eb582f9081eb7e5$var$Ox88.a1,\n            flag: $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE\n        },\n        {\n            square: $6eb582f9081eb7e5$var$Ox88.h1,\n            flag: $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE\n        }\n    ],\n    b: [\n        {\n            square: $6eb582f9081eb7e5$var$Ox88.a8,\n            flag: $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE\n        },\n        {\n            square: $6eb582f9081eb7e5$var$Ox88.h8,\n            flag: $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE\n        }\n    ]\n};\nconst $6eb582f9081eb7e5$var$SECOND_RANK = {\n    b: $6eb582f9081eb7e5$var$RANK_7,\n    w: $6eb582f9081eb7e5$var$RANK_2\n};\nconst $6eb582f9081eb7e5$var$TERMINATION_MARKERS = [\n    \"1-0\",\n    \"0-1\",\n    \"1/2-1/2\",\n    \"*\"\n];\n// Extracts the zero-based rank of an 0x88 square.\nfunction $6eb582f9081eb7e5$var$rank(square) {\n    return square >> 4;\n}\n// Extracts the zero-based file of an 0x88 square.\nfunction $6eb582f9081eb7e5$var$file(square) {\n    return square & 0xf;\n}\nfunction $6eb582f9081eb7e5$var$isDigit(c) {\n    return \"0123456789\".indexOf(c) !== -1;\n}\n// Converts a 0x88 square to algebraic notation.\nfunction $6eb582f9081eb7e5$var$algebraic(square) {\n    const f = $6eb582f9081eb7e5$var$file(square);\n    const r = $6eb582f9081eb7e5$var$rank(square);\n    return \"abcdefgh\".substring(f, f + 1) + \"87654321\".substring(r, r + 1);\n}\nfunction $6eb582f9081eb7e5$var$swapColor(color) {\n    return color === $6eb582f9081eb7e5$export$29814851e0aa981f ? $6eb582f9081eb7e5$export$7a91b0fde7ec420f : $6eb582f9081eb7e5$export$29814851e0aa981f;\n}\nfunction $6eb582f9081eb7e5$export$d9e02ca3a6185312(fen) {\n    // 1st criterion: 6 space-seperated fields?\n    const tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) return {\n        ok: false,\n        error: \"Invalid FEN: must contain six space-delimited fields\"\n    };\n    // 2nd criterion: move number field is a integer value > 0?\n    const moveNumber = parseInt(tokens[5], 10);\n    if (isNaN(moveNumber) || moveNumber <= 0) return {\n        ok: false,\n        error: \"Invalid FEN: move number must be a positive integer\"\n    };\n    // 3rd criterion: half move counter is an integer >= 0?\n    const halfMoves = parseInt(tokens[4], 10);\n    if (isNaN(halfMoves) || halfMoves < 0) return {\n        ok: false,\n        error: \"Invalid FEN: half move counter number must be a non-negative integer\"\n    };\n    // 4th criterion: 4th field is a valid e.p.-string?\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) return {\n        ok: false,\n        error: \"Invalid FEN: en-passant square is invalid\"\n    };\n    // 5th criterion: 3th field is a valid castle-string?\n    if (/[^kKqQ-]/.test(tokens[2])) return {\n        ok: false,\n        error: \"Invalid FEN: castling availability is invalid\"\n    };\n    // 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)?\n    if (!/^(w|b)$/.test(tokens[1])) return {\n        ok: false,\n        error: \"Invalid FEN: side-to-move is invalid\"\n    };\n    // 7th criterion: 1st field contains 8 rows?\n    const rows = tokens[0].split(\"/\");\n    if (rows.length !== 8) return {\n        ok: false,\n        error: \"Invalid FEN: piece data does not contain 8 '/'-delimited rows\"\n    };\n    // 8th criterion: every row is valid?\n    for(let i = 0; i < rows.length; i++){\n        // check for right sum of fields AND not two numbers in succession\n        let sumFields = 0;\n        let previousWasNumber = false;\n        for(let k = 0; k < rows[i].length; k++)if ($6eb582f9081eb7e5$var$isDigit(rows[i][k])) {\n            if (previousWasNumber) return {\n                ok: false,\n                error: \"Invalid FEN: piece data is invalid (consecutive number)\"\n            };\n            sumFields += parseInt(rows[i][k], 10);\n            previousWasNumber = true;\n        } else {\n            if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) return {\n                ok: false,\n                error: \"Invalid FEN: piece data is invalid (invalid piece)\"\n            };\n            sumFields += 1;\n            previousWasNumber = false;\n        }\n        if (sumFields !== 8) return {\n            ok: false,\n            error: \"Invalid FEN: piece data is invalid (too many squares in rank)\"\n        };\n    }\n    if (tokens[3][1] == \"3\" && tokens[1] == \"w\" || tokens[3][1] == \"6\" && tokens[1] == \"b\") return {\n        ok: false,\n        error: \"Invalid FEN: illegal en-passant square\"\n    };\n    const kings = [\n        {\n            color: \"white\",\n            regex: /K/g\n        },\n        {\n            color: \"black\",\n            regex: /k/g\n        }\n    ];\n    for (const { color: color, regex: regex } of kings){\n        if (!regex.test(tokens[0])) return {\n            ok: false,\n            error: `Invalid FEN: missing ${color} king`\n        };\n        if ((tokens[0].match(regex) || []).length > 1) return {\n            ok: false,\n            error: `Invalid FEN: too many ${color} kings`\n        };\n    }\n    return {\n        ok: true\n    };\n}\n// this function is used to uniquely identify ambiguous moves\nfunction $6eb582f9081eb7e5$var$getDisambiguator(move, moves) {\n    const from = move.from;\n    const to = move.to;\n    const piece = move.piece;\n    let ambiguities = 0;\n    let sameRank = 0;\n    let sameFile = 0;\n    for(let i = 0, len = moves.length; i < len; i++){\n        const ambigFrom = moves[i].from;\n        const ambigTo = moves[i].to;\n        const ambigPiece = moves[i].piece;\n        /*\n         * if a move of the same piece type ends on the same to square, we'll need\n         * to add a disambiguator to the algebraic notation\n         */ if (piece === ambigPiece && from !== ambigFrom && to === ambigTo) {\n            ambiguities++;\n            if ($6eb582f9081eb7e5$var$rank(from) === $6eb582f9081eb7e5$var$rank(ambigFrom)) sameRank++;\n            if ($6eb582f9081eb7e5$var$file(from) === $6eb582f9081eb7e5$var$file(ambigFrom)) sameFile++;\n        }\n    }\n    if (ambiguities > 0) {\n        if (sameRank > 0 && sameFile > 0) /*\n             * if there exists a similar moving piece on the same rank and file as\n             * the move in question, use the square as the disambiguator\n             */ return $6eb582f9081eb7e5$var$algebraic(from);\n        else if (sameFile > 0) /*\n             * if the moving piece rests on the same file, use the rank symbol as the\n             * disambiguator\n             */ return $6eb582f9081eb7e5$var$algebraic(from).charAt(1);\n        else // else use the file symbol\n        return $6eb582f9081eb7e5$var$algebraic(from).charAt(0);\n    }\n    return \"\";\n}\nfunction $6eb582f9081eb7e5$var$addMove(moves, color, from, to, piece, captured, flags = $6eb582f9081eb7e5$var$BITS.NORMAL) {\n    const r = $6eb582f9081eb7e5$var$rank(to);\n    if (piece === $6eb582f9081eb7e5$export$4c32fd1f222ff2b0 && (r === $6eb582f9081eb7e5$var$RANK_1 || r === $6eb582f9081eb7e5$var$RANK_8)) for(let i = 0; i < $6eb582f9081eb7e5$var$PROMOTIONS.length; i++){\n        const promotion = $6eb582f9081eb7e5$var$PROMOTIONS[i];\n        moves.push({\n            color: color,\n            from: from,\n            to: to,\n            piece: piece,\n            captured: captured,\n            promotion: promotion,\n            flags: flags | $6eb582f9081eb7e5$var$BITS.PROMOTION\n        });\n    }\n    else moves.push({\n        color: color,\n        from: from,\n        to: to,\n        piece: piece,\n        captured: captured,\n        flags: flags\n    });\n}\nfunction $6eb582f9081eb7e5$var$inferPieceType(san) {\n    let pieceType = san.charAt(0);\n    if (pieceType >= \"a\" && pieceType <= \"h\") {\n        const matches = san.match(/[a-h]\\d.*[a-h]\\d/);\n        if (matches) return undefined;\n        return $6eb582f9081eb7e5$export$4c32fd1f222ff2b0;\n    }\n    pieceType = pieceType.toLowerCase();\n    if (pieceType === \"o\") return $6eb582f9081eb7e5$export$42387107bb0d6206;\n    return pieceType;\n}\n// parses all of the decorators out of a SAN string\nfunction $6eb582f9081eb7e5$var$strippedSan(move) {\n    return move.replace(/=/, \"\").replace(/[+#]?[?!]*$/, \"\");\n}\nclass $6eb582f9081eb7e5$export$a4d6ea685c300d39 {\n    _board = new Array(128);\n    _turn = $6eb582f9081eb7e5$export$29814851e0aa981f;\n    _header = {};\n    _kings = {\n        w: $6eb582f9081eb7e5$var$EMPTY,\n        b: $6eb582f9081eb7e5$var$EMPTY\n    };\n    _epSquare = -1;\n    _halfMoves = 0;\n    _moveNumber = 0;\n    _history = [];\n    _comments = {};\n    _castling = {\n        w: 0,\n        b: 0\n    };\n    constructor(fen = $6eb582f9081eb7e5$export$1264a6620073cfaa){\n        this.load(fen);\n    }\n    clear(keepHeaders = false) {\n        this._board = new Array(128);\n        this._kings = {\n            w: $6eb582f9081eb7e5$var$EMPTY,\n            b: $6eb582f9081eb7e5$var$EMPTY\n        };\n        this._turn = $6eb582f9081eb7e5$export$29814851e0aa981f;\n        this._castling = {\n            w: 0,\n            b: 0\n        };\n        this._epSquare = $6eb582f9081eb7e5$var$EMPTY;\n        this._halfMoves = 0;\n        this._moveNumber = 1;\n        this._history = [];\n        this._comments = {};\n        this._header = keepHeaders ? this._header : {};\n        this._updateSetup(this.fen());\n    }\n    removeHeader(key) {\n        if (key in this._header) delete this._header[key];\n    }\n    load(fen, keepHeaders = false) {\n        let tokens = fen.split(/\\s+/);\n        // append commonly omitted fen tokens\n        if (tokens.length >= 2 && tokens.length < 6) {\n            const adjustments = [\n                \"-\",\n                \"-\",\n                \"0\",\n                \"1\"\n            ];\n            fen = tokens.concat(adjustments.slice(-(6 - tokens.length))).join(\" \");\n        }\n        tokens = fen.split(/\\s+/);\n        const { ok: ok, error: error } = $6eb582f9081eb7e5$export$d9e02ca3a6185312(fen);\n        if (!ok) throw new Error(error);\n        const position = tokens[0];\n        let square = 0;\n        this.clear(keepHeaders);\n        for(let i = 0; i < position.length; i++){\n            const piece = position.charAt(i);\n            if (piece === \"/\") square += 8;\n            else if ($6eb582f9081eb7e5$var$isDigit(piece)) square += parseInt(piece, 10);\n            else {\n                const color = piece < \"a\" ? $6eb582f9081eb7e5$export$29814851e0aa981f : $6eb582f9081eb7e5$export$7a91b0fde7ec420f;\n                this.put({\n                    type: piece.toLowerCase(),\n                    color: color\n                }, $6eb582f9081eb7e5$var$algebraic(square));\n                square++;\n            }\n        }\n        this._turn = tokens[1];\n        if (tokens[2].indexOf(\"K\") > -1) this._castling.w |= $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE;\n        if (tokens[2].indexOf(\"Q\") > -1) this._castling.w |= $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE;\n        if (tokens[2].indexOf(\"k\") > -1) this._castling.b |= $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE;\n        if (tokens[2].indexOf(\"q\") > -1) this._castling.b |= $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE;\n        this._epSquare = tokens[3] === \"-\" ? $6eb582f9081eb7e5$var$EMPTY : $6eb582f9081eb7e5$var$Ox88[tokens[3]];\n        this._halfMoves = parseInt(tokens[4], 10);\n        this._moveNumber = parseInt(tokens[5], 10);\n        this._updateSetup(this.fen());\n    }\n    fen() {\n        let empty = 0;\n        let fen = \"\";\n        for(let i = $6eb582f9081eb7e5$var$Ox88.a8; i <= $6eb582f9081eb7e5$var$Ox88.h1; i++){\n            if (this._board[i]) {\n                if (empty > 0) {\n                    fen += empty;\n                    empty = 0;\n                }\n                const { color: color, type: piece } = this._board[i];\n                fen += color === $6eb582f9081eb7e5$export$29814851e0aa981f ? piece.toUpperCase() : piece.toLowerCase();\n            } else empty++;\n            if (i + 1 & 0x88) {\n                if (empty > 0) fen += empty;\n                if (i !== $6eb582f9081eb7e5$var$Ox88.h1) fen += \"/\";\n                empty = 0;\n                i += 8;\n            }\n        }\n        let castling = \"\";\n        if (this._castling[$6eb582f9081eb7e5$export$29814851e0aa981f] & $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE) castling += \"K\";\n        if (this._castling[$6eb582f9081eb7e5$export$29814851e0aa981f] & $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE) castling += \"Q\";\n        if (this._castling[$6eb582f9081eb7e5$export$7a91b0fde7ec420f] & $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE) castling += \"k\";\n        if (this._castling[$6eb582f9081eb7e5$export$7a91b0fde7ec420f] & $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE) castling += \"q\";\n        // do we have an empty castling flag?\n        castling = castling || \"-\";\n        let epSquare = \"-\";\n        /*\n         * only print the ep square if en passant is a valid move (pawn is present\n         * and ep capture is not pinned)\n         */ if (this._epSquare !== $6eb582f9081eb7e5$var$EMPTY) {\n            const bigPawnSquare = this._epSquare + (this._turn === $6eb582f9081eb7e5$export$29814851e0aa981f ? 16 : -16);\n            const squares = [\n                bigPawnSquare + 1,\n                bigPawnSquare - 1\n            ];\n            for (const square of squares){\n                // is the square off the board?\n                if (square & 0x88) continue;\n                const color = this._turn;\n                // is there a pawn that can capture the epSquare?\n                if (this._board[square]?.color === color && this._board[square]?.type === $6eb582f9081eb7e5$export$4c32fd1f222ff2b0) {\n                    // if the pawn makes an ep capture, does it leave it's king in check?\n                    this._makeMove({\n                        color: color,\n                        from: square,\n                        to: this._epSquare,\n                        piece: $6eb582f9081eb7e5$export$4c32fd1f222ff2b0,\n                        captured: $6eb582f9081eb7e5$export$4c32fd1f222ff2b0,\n                        flags: $6eb582f9081eb7e5$var$BITS.EP_CAPTURE\n                    });\n                    const isLegal = !this._isKingAttacked(color);\n                    this._undoMove();\n                    // if ep is legal, break and set the ep square in the FEN output\n                    if (isLegal) {\n                        epSquare = $6eb582f9081eb7e5$var$algebraic(this._epSquare);\n                        break;\n                    }\n                }\n            }\n        }\n        return [\n            fen,\n            this._turn,\n            castling,\n            epSquare,\n            this._halfMoves,\n            this._moveNumber\n        ].join(\" \");\n    }\n    /*\n     * Called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object. If the FEN\n     * is equal to the default position, the SetUp and FEN are deleted the setup\n     * is only updated if history.length is zero, ie moves haven't been made.\n     */ _updateSetup(fen) {\n        if (this._history.length > 0) return;\n        if (fen !== $6eb582f9081eb7e5$export$1264a6620073cfaa) {\n            this._header[\"SetUp\"] = \"1\";\n            this._header[\"FEN\"] = fen;\n        } else {\n            delete this._header[\"SetUp\"];\n            delete this._header[\"FEN\"];\n        }\n    }\n    reset() {\n        this.load($6eb582f9081eb7e5$export$1264a6620073cfaa);\n    }\n    get(square) {\n        return this._board[$6eb582f9081eb7e5$var$Ox88[square]] || false;\n    }\n    put({ type: type, color: color }, square) {\n        // check for piece\n        if ($6eb582f9081eb7e5$var$SYMBOLS.indexOf(type.toLowerCase()) === -1) return false;\n        // check for valid square\n        if (!(square in $6eb582f9081eb7e5$var$Ox88)) return false;\n        const sq = $6eb582f9081eb7e5$var$Ox88[square];\n        // don't let the user place more than one king\n        if (type == $6eb582f9081eb7e5$export$42387107bb0d6206 && !(this._kings[color] == $6eb582f9081eb7e5$var$EMPTY || this._kings[color] == sq)) return false;\n        this._board[sq] = {\n            type: type,\n            color: color\n        };\n        if (type === $6eb582f9081eb7e5$export$42387107bb0d6206) this._kings[color] = sq;\n        this._updateCastlingRights();\n        this._updateEnPassantSquare();\n        this._updateSetup(this.fen());\n        return true;\n    }\n    remove(square) {\n        const piece = this.get(square);\n        delete this._board[$6eb582f9081eb7e5$var$Ox88[square]];\n        if (piece && piece.type === $6eb582f9081eb7e5$export$42387107bb0d6206) this._kings[piece.color] = $6eb582f9081eb7e5$var$EMPTY;\n        this._updateCastlingRights();\n        this._updateEnPassantSquare();\n        this._updateSetup(this.fen());\n        return piece;\n    }\n    _updateCastlingRights() {\n        const whiteKingInPlace = this._board[$6eb582f9081eb7e5$var$Ox88.e1]?.type === $6eb582f9081eb7e5$export$42387107bb0d6206 && this._board[$6eb582f9081eb7e5$var$Ox88.e1]?.color === $6eb582f9081eb7e5$export$29814851e0aa981f;\n        const blackKingInPlace = this._board[$6eb582f9081eb7e5$var$Ox88.e8]?.type === $6eb582f9081eb7e5$export$42387107bb0d6206 && this._board[$6eb582f9081eb7e5$var$Ox88.e8]?.color === $6eb582f9081eb7e5$export$7a91b0fde7ec420f;\n        if (!whiteKingInPlace || this._board[$6eb582f9081eb7e5$var$Ox88.a1]?.type !== $6eb582f9081eb7e5$export$68d4c913908dc245 || this._board[$6eb582f9081eb7e5$var$Ox88.a1]?.color !== $6eb582f9081eb7e5$export$29814851e0aa981f) this._castling.w &= ~$6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE;\n        if (!whiteKingInPlace || this._board[$6eb582f9081eb7e5$var$Ox88.h1]?.type !== $6eb582f9081eb7e5$export$68d4c913908dc245 || this._board[$6eb582f9081eb7e5$var$Ox88.h1]?.color !== $6eb582f9081eb7e5$export$29814851e0aa981f) this._castling.w &= ~$6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE;\n        if (!blackKingInPlace || this._board[$6eb582f9081eb7e5$var$Ox88.a8]?.type !== $6eb582f9081eb7e5$export$68d4c913908dc245 || this._board[$6eb582f9081eb7e5$var$Ox88.a8]?.color !== $6eb582f9081eb7e5$export$7a91b0fde7ec420f) this._castling.b &= ~$6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE;\n        if (!blackKingInPlace || this._board[$6eb582f9081eb7e5$var$Ox88.h8]?.type !== $6eb582f9081eb7e5$export$68d4c913908dc245 || this._board[$6eb582f9081eb7e5$var$Ox88.h8]?.color !== $6eb582f9081eb7e5$export$7a91b0fde7ec420f) this._castling.b &= ~$6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE;\n    }\n    _updateEnPassantSquare() {\n        if (this._epSquare === $6eb582f9081eb7e5$var$EMPTY) return;\n        const startSquare = this._epSquare + (this._turn === $6eb582f9081eb7e5$export$29814851e0aa981f ? -16 : 16);\n        const currentSquare = this._epSquare + (this._turn === $6eb582f9081eb7e5$export$29814851e0aa981f ? 16 : -16);\n        const attackers = [\n            currentSquare + 1,\n            currentSquare - 1\n        ];\n        if (this._board[startSquare] !== null || this._board[this._epSquare] !== null || this._board[currentSquare]?.color !== $6eb582f9081eb7e5$var$swapColor(this._turn) || this._board[currentSquare]?.type !== $6eb582f9081eb7e5$export$4c32fd1f222ff2b0) {\n            this._epSquare = $6eb582f9081eb7e5$var$EMPTY;\n            return;\n        }\n        const canCapture = (square)=>!(square & 0x88) && this._board[square]?.color === this._turn && this._board[square]?.type === $6eb582f9081eb7e5$export$4c32fd1f222ff2b0;\n        if (!attackers.some(canCapture)) this._epSquare = $6eb582f9081eb7e5$var$EMPTY;\n    }\n    _attacked(color, square) {\n        for(let i = $6eb582f9081eb7e5$var$Ox88.a8; i <= $6eb582f9081eb7e5$var$Ox88.h1; i++){\n            // did we run off the end of the board\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            // if empty square or wrong color\n            if (this._board[i] === undefined || this._board[i].color !== color) continue;\n            const piece = this._board[i];\n            const difference = i - square;\n            // skip - to/from square are the same\n            if (difference === 0) continue;\n            const index = difference + 119;\n            if ($6eb582f9081eb7e5$var$ATTACKS[index] & $6eb582f9081eb7e5$var$PIECE_MASKS[piece.type]) {\n                if (piece.type === $6eb582f9081eb7e5$export$4c32fd1f222ff2b0) {\n                    if (difference > 0) {\n                        if (piece.color === $6eb582f9081eb7e5$export$29814851e0aa981f) return true;\n                    } else {\n                        if (piece.color === $6eb582f9081eb7e5$export$7a91b0fde7ec420f) return true;\n                    }\n                    continue;\n                }\n                // if the piece is a knight or a king\n                if (piece.type === \"n\" || piece.type === \"k\") return true;\n                const offset = $6eb582f9081eb7e5$var$RAYS[index];\n                let j = i + offset;\n                let blocked = false;\n                while(j !== square){\n                    if (this._board[j] != null) {\n                        blocked = true;\n                        break;\n                    }\n                    j += offset;\n                }\n                if (!blocked) return true;\n            }\n        }\n        return false;\n    }\n    _isKingAttacked(color) {\n        const square = this._kings[color];\n        return square === -1 ? false : this._attacked($6eb582f9081eb7e5$var$swapColor(color), square);\n    }\n    isAttacked(square, attackedBy) {\n        return this._attacked(attackedBy, $6eb582f9081eb7e5$var$Ox88[square]);\n    }\n    isCheck() {\n        return this._isKingAttacked(this._turn);\n    }\n    inCheck() {\n        return this.isCheck();\n    }\n    isCheckmate() {\n        return this.isCheck() && this._moves().length === 0;\n    }\n    isStalemate() {\n        return !this.isCheck() && this._moves().length === 0;\n    }\n    isInsufficientMaterial() {\n        /*\n         * k.b. vs k.b. (of opposite colors) with mate in 1:\n         * 8/8/8/8/1b6/8/B1k5/K7 b - - 0 1\n         *\n         * k.b. vs k.n. with mate in 1:\n         * 8/8/8/8/1n6/8/B7/K1k5 b - - 2 1\n         */ const pieces = {\n            b: 0,\n            n: 0,\n            r: 0,\n            q: 0,\n            k: 0,\n            p: 0\n        };\n        const bishops = [];\n        let numPieces = 0;\n        let squareColor = 0;\n        for(let i = $6eb582f9081eb7e5$var$Ox88.a8; i <= $6eb582f9081eb7e5$var$Ox88.h1; i++){\n            squareColor = (squareColor + 1) % 2;\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            const piece = this._board[i];\n            if (piece) {\n                pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1;\n                if (piece.type === $6eb582f9081eb7e5$export$54a167f801c5dba3) bishops.push(squareColor);\n                numPieces++;\n            }\n        }\n        // k vs. k\n        if (numPieces === 2) return true;\n        else if (// k vs. kn .... or .... k vs. kb\n        numPieces === 3 && (pieces[$6eb582f9081eb7e5$export$54a167f801c5dba3] === 1 || pieces[$6eb582f9081eb7e5$export$ce32bc8c2a29bae6] === 1)) return true;\n        else if (numPieces === pieces[$6eb582f9081eb7e5$export$54a167f801c5dba3] + 2) {\n            // kb vs. kb where any number of bishops are all on the same color\n            let sum = 0;\n            const len = bishops.length;\n            for(let i = 0; i < len; i++)sum += bishops[i];\n            if (sum === 0 || sum === len) return true;\n        }\n        return false;\n    }\n    isThreefoldRepetition() {\n        const moves = [];\n        const positions = {};\n        let repetition = false;\n        while(true){\n            const move = this._undoMove();\n            if (!move) break;\n            moves.push(move);\n        }\n        while(true){\n            /*\n             * remove the last two fields in the FEN string, they're not needed when\n             * checking for draw by rep\n             */ const fen = this.fen().split(\" \").slice(0, 4).join(\" \");\n            // has the position occurred three or move times\n            positions[fen] = fen in positions ? positions[fen] + 1 : 1;\n            if (positions[fen] >= 3) repetition = true;\n            const move = moves.pop();\n            if (!move) break;\n            else this._makeMove(move);\n        }\n        return repetition;\n    }\n    isDraw() {\n        return this._halfMoves >= 100 || // 50 moves per side = 100 half moves\n        this.isStalemate() || this.isInsufficientMaterial() || this.isThreefoldRepetition();\n    }\n    isGameOver() {\n        return this.isCheckmate() || this.isStalemate() || this.isDraw();\n    }\n    moves({ verbose: verbose = false, square: square, piece: piece } = {}) {\n        const moves = this._moves({\n            square: square,\n            piece: piece\n        });\n        if (verbose) return moves.map((move)=>this._makePretty(move));\n        else return moves.map((move)=>this._moveToSan(move, moves));\n    }\n    _moves({ legal: legal = true, piece: piece, square: square } = {}) {\n        const forSquare = square ? square.toLowerCase() : undefined;\n        const forPiece = piece?.toLowerCase();\n        const moves = [];\n        const us = this._turn;\n        const them = $6eb582f9081eb7e5$var$swapColor(us);\n        let firstSquare = $6eb582f9081eb7e5$var$Ox88.a8;\n        let lastSquare = $6eb582f9081eb7e5$var$Ox88.h1;\n        let singleSquare = false;\n        // are we generating moves for a single square?\n        if (forSquare) {\n            // illegal square, return empty moves\n            if (!(forSquare in $6eb582f9081eb7e5$var$Ox88)) return [];\n            else {\n                firstSquare = lastSquare = $6eb582f9081eb7e5$var$Ox88[forSquare];\n                singleSquare = true;\n            }\n        }\n        for(let from = firstSquare; from <= lastSquare; from++){\n            // did we run off the end of the board\n            if (from & 0x88) {\n                from += 7;\n                continue;\n            }\n            // empty square or opponent, skip\n            if (!this._board[from] || this._board[from].color === them) continue;\n            const { type: type } = this._board[from];\n            let to;\n            if (type === $6eb582f9081eb7e5$export$4c32fd1f222ff2b0) {\n                if (forPiece && forPiece !== type) continue;\n                // single square, non-capturing\n                to = from + $6eb582f9081eb7e5$var$PAWN_OFFSETS[us][0];\n                if (!this._board[to]) {\n                    $6eb582f9081eb7e5$var$addMove(moves, us, from, to, $6eb582f9081eb7e5$export$4c32fd1f222ff2b0);\n                    // double square\n                    to = from + $6eb582f9081eb7e5$var$PAWN_OFFSETS[us][1];\n                    if ($6eb582f9081eb7e5$var$SECOND_RANK[us] === $6eb582f9081eb7e5$var$rank(from) && !this._board[to]) $6eb582f9081eb7e5$var$addMove(moves, us, from, to, $6eb582f9081eb7e5$export$4c32fd1f222ff2b0, undefined, $6eb582f9081eb7e5$var$BITS.BIG_PAWN);\n                }\n                // pawn captures\n                for(let j = 2; j < 4; j++){\n                    to = from + $6eb582f9081eb7e5$var$PAWN_OFFSETS[us][j];\n                    if (to & 0x88) continue;\n                    if (this._board[to]?.color === them) $6eb582f9081eb7e5$var$addMove(moves, us, from, to, $6eb582f9081eb7e5$export$4c32fd1f222ff2b0, this._board[to].type, $6eb582f9081eb7e5$var$BITS.CAPTURE);\n                    else if (to === this._epSquare) $6eb582f9081eb7e5$var$addMove(moves, us, from, to, $6eb582f9081eb7e5$export$4c32fd1f222ff2b0, $6eb582f9081eb7e5$export$4c32fd1f222ff2b0, $6eb582f9081eb7e5$var$BITS.EP_CAPTURE);\n                }\n            } else {\n                if (forPiece && forPiece !== type) continue;\n                for(let j = 0, len = $6eb582f9081eb7e5$var$PIECE_OFFSETS[type].length; j < len; j++){\n                    const offset = $6eb582f9081eb7e5$var$PIECE_OFFSETS[type][j];\n                    to = from;\n                    while(true){\n                        to += offset;\n                        if (to & 0x88) break;\n                        if (!this._board[to]) $6eb582f9081eb7e5$var$addMove(moves, us, from, to, type);\n                        else {\n                            // own color, stop loop\n                            if (this._board[to].color === us) break;\n                            $6eb582f9081eb7e5$var$addMove(moves, us, from, to, type, this._board[to].type, $6eb582f9081eb7e5$var$BITS.CAPTURE);\n                            break;\n                        }\n                        /* break, if knight or king */ if (type === $6eb582f9081eb7e5$export$ce32bc8c2a29bae6 || type === $6eb582f9081eb7e5$export$42387107bb0d6206) break;\n                    }\n                }\n            }\n        }\n        /*\n         * check for castling if we're:\n         *   a) generating all moves, or\n         *   b) doing single square move generation on the king's square\n         */ if (forPiece === undefined || forPiece === $6eb582f9081eb7e5$export$42387107bb0d6206) {\n            if (!singleSquare || lastSquare === this._kings[us]) {\n                // king-side castling\n                if (this._castling[us] & $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE) {\n                    const castlingFrom = this._kings[us];\n                    const castlingTo = castlingFrom + 2;\n                    if (!this._board[castlingFrom + 1] && !this._board[castlingTo] && !this._attacked(them, this._kings[us]) && !this._attacked(them, castlingFrom + 1) && !this._attacked(them, castlingTo)) $6eb582f9081eb7e5$var$addMove(moves, us, this._kings[us], castlingTo, $6eb582f9081eb7e5$export$42387107bb0d6206, undefined, $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE);\n                }\n                // queen-side castling\n                if (this._castling[us] & $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE) {\n                    const castlingFrom = this._kings[us];\n                    const castlingTo = castlingFrom - 2;\n                    if (!this._board[castlingFrom - 1] && !this._board[castlingFrom - 2] && !this._board[castlingFrom - 3] && !this._attacked(them, this._kings[us]) && !this._attacked(them, castlingFrom - 1) && !this._attacked(them, castlingTo)) $6eb582f9081eb7e5$var$addMove(moves, us, this._kings[us], castlingTo, $6eb582f9081eb7e5$export$42387107bb0d6206, undefined, $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE);\n                }\n            }\n        }\n        /*\n         * return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */ if (!legal || this._kings[us] === -1) return moves;\n        // filter out illegal moves\n        const legalMoves = [];\n        for(let i = 0, len = moves.length; i < len; i++){\n            this._makeMove(moves[i]);\n            if (!this._isKingAttacked(us)) legalMoves.push(moves[i]);\n            this._undoMove();\n        }\n        return legalMoves;\n    }\n    move(move, { strict: strict = false } = {}) {\n        /*\n         * The move function can be called with in the following parameters:\n         *\n         * .move('Nxb7')       <- argument is a case-sensitive SAN string\n         *\n         * .move({ from: 'h7', <- argument is a move object\n         *         to :'h8',\n         *         promotion: 'q' })\n         *\n         *\n         * An optional strict argument may be supplied to tell chess.js to\n         * strictly follow the SAN specification.\n         */ let moveObj = null;\n        if (typeof move === \"string\") moveObj = this._moveFromSan(move, strict);\n        else if (typeof move === \"object\") {\n            const moves = this._moves();\n            // convert the pretty move object to an ugly move object\n            for(let i = 0, len = moves.length; i < len; i++)if (move.from === $6eb582f9081eb7e5$var$algebraic(moves[i].from) && move.to === $6eb582f9081eb7e5$var$algebraic(moves[i].to) && (!(\"promotion\" in moves[i]) || move.promotion === moves[i].promotion)) {\n                moveObj = moves[i];\n                break;\n            }\n        }\n        // failed to find move\n        if (!moveObj) {\n            if (typeof move === \"string\") throw new Error(`Invalid move: ${move}`);\n            else throw new Error(`Invalid move: ${JSON.stringify(move)}`);\n        }\n        /*\n         * need to make a copy of move because we can't generate SAN after the move\n         * is made\n         */ const prettyMove = this._makePretty(moveObj);\n        this._makeMove(moveObj);\n        return prettyMove;\n    }\n    _push(move) {\n        this._history.push({\n            move: move,\n            kings: {\n                b: this._kings.b,\n                w: this._kings.w\n            },\n            turn: this._turn,\n            castling: {\n                b: this._castling.b,\n                w: this._castling.w\n            },\n            epSquare: this._epSquare,\n            halfMoves: this._halfMoves,\n            moveNumber: this._moveNumber\n        });\n    }\n    _makeMove(move) {\n        const us = this._turn;\n        const them = $6eb582f9081eb7e5$var$swapColor(us);\n        this._push(move);\n        this._board[move.to] = this._board[move.from];\n        delete this._board[move.from];\n        // if ep capture, remove the captured pawn\n        if (move.flags & $6eb582f9081eb7e5$var$BITS.EP_CAPTURE) {\n            if (this._turn === $6eb582f9081eb7e5$export$7a91b0fde7ec420f) delete this._board[move.to - 16];\n            else delete this._board[move.to + 16];\n        }\n        // if pawn promotion, replace with new piece\n        if (move.promotion) this._board[move.to] = {\n            type: move.promotion,\n            color: us\n        };\n        // if we moved the king\n        if (this._board[move.to].type === $6eb582f9081eb7e5$export$42387107bb0d6206) {\n            this._kings[us] = move.to;\n            // if we castled, move the rook next to the king\n            if (move.flags & $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE) {\n                const castlingTo = move.to - 1;\n                const castlingFrom = move.to + 1;\n                this._board[castlingTo] = this._board[castlingFrom];\n                delete this._board[castlingFrom];\n            } else if (move.flags & $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE) {\n                const castlingTo = move.to + 1;\n                const castlingFrom = move.to - 2;\n                this._board[castlingTo] = this._board[castlingFrom];\n                delete this._board[castlingFrom];\n            }\n            // turn off castling\n            this._castling[us] = 0;\n        }\n        // turn off castling if we move a rook\n        if (this._castling[us]) {\n            for(let i = 0, len = $6eb582f9081eb7e5$var$ROOKS[us].length; i < len; i++)if (move.from === $6eb582f9081eb7e5$var$ROOKS[us][i].square && this._castling[us] & $6eb582f9081eb7e5$var$ROOKS[us][i].flag) {\n                this._castling[us] ^= $6eb582f9081eb7e5$var$ROOKS[us][i].flag;\n                break;\n            }\n        }\n        // turn off castling if we capture a rook\n        if (this._castling[them]) {\n            for(let i = 0, len = $6eb582f9081eb7e5$var$ROOKS[them].length; i < len; i++)if (move.to === $6eb582f9081eb7e5$var$ROOKS[them][i].square && this._castling[them] & $6eb582f9081eb7e5$var$ROOKS[them][i].flag) {\n                this._castling[them] ^= $6eb582f9081eb7e5$var$ROOKS[them][i].flag;\n                break;\n            }\n        }\n        // if big pawn move, update the en passant square\n        if (move.flags & $6eb582f9081eb7e5$var$BITS.BIG_PAWN) {\n            if (us === $6eb582f9081eb7e5$export$7a91b0fde7ec420f) this._epSquare = move.to - 16;\n            else this._epSquare = move.to + 16;\n        } else this._epSquare = $6eb582f9081eb7e5$var$EMPTY;\n        // reset the 50 move counter if a pawn is moved or a piece is captured\n        if (move.piece === $6eb582f9081eb7e5$export$4c32fd1f222ff2b0) this._halfMoves = 0;\n        else if (move.flags & ($6eb582f9081eb7e5$var$BITS.CAPTURE | $6eb582f9081eb7e5$var$BITS.EP_CAPTURE)) this._halfMoves = 0;\n        else this._halfMoves++;\n        if (us === $6eb582f9081eb7e5$export$7a91b0fde7ec420f) this._moveNumber++;\n        this._turn = them;\n    }\n    undo() {\n        const move = this._undoMove();\n        return move ? this._makePretty(move) : null;\n    }\n    _undoMove() {\n        const old = this._history.pop();\n        if (old === undefined) return null;\n        const move = old.move;\n        this._kings = old.kings;\n        this._turn = old.turn;\n        this._castling = old.castling;\n        this._epSquare = old.epSquare;\n        this._halfMoves = old.halfMoves;\n        this._moveNumber = old.moveNumber;\n        const us = this._turn;\n        const them = $6eb582f9081eb7e5$var$swapColor(us);\n        this._board[move.from] = this._board[move.to];\n        this._board[move.from].type = move.piece; // to undo any promotions\n        delete this._board[move.to];\n        if (move.captured) {\n            if (move.flags & $6eb582f9081eb7e5$var$BITS.EP_CAPTURE) {\n                // en passant capture\n                let index;\n                if (us === $6eb582f9081eb7e5$export$7a91b0fde7ec420f) index = move.to - 16;\n                else index = move.to + 16;\n                this._board[index] = {\n                    type: $6eb582f9081eb7e5$export$4c32fd1f222ff2b0,\n                    color: them\n                };\n            } else // regular capture\n            this._board[move.to] = {\n                type: move.captured,\n                color: them\n            };\n        }\n        if (move.flags & ($6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE | $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE)) {\n            let castlingTo, castlingFrom;\n            if (move.flags & $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE) {\n                castlingTo = move.to + 1;\n                castlingFrom = move.to - 1;\n            } else {\n                castlingTo = move.to - 2;\n                castlingFrom = move.to + 1;\n            }\n            this._board[castlingTo] = this._board[castlingFrom];\n            delete this._board[castlingFrom];\n        }\n        return move;\n    }\n    pgn({ newline: newline = \"\\n\", maxWidth: maxWidth = 0 } = {}) {\n        /*\n         * using the specification from http://www.chessclub.com/help/PGN-spec\n         * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n         */ const result = [];\n        let headerExists = false;\n        /* add the PGN header information */ for(const i in this._header){\n            /*\n             * TODO: order of enumerated properties in header object is not\n             * guaranteed, see ECMA-262 spec (section 12.6.4)\n             */ result.push(\"[\" + i + ' \"' + this._header[i] + '\"]' + newline);\n            headerExists = true;\n        }\n        if (headerExists && this._history.length) result.push(newline);\n        const appendComment = (moveString)=>{\n            const comment = this._comments[this.fen()];\n            if (typeof comment !== \"undefined\") {\n                const delimiter = moveString.length > 0 ? \" \" : \"\";\n                moveString = `${moveString}${delimiter}{${comment}}`;\n            }\n            return moveString;\n        };\n        // pop all of history onto reversed_history\n        const reversedHistory = [];\n        while(this._history.length > 0)reversedHistory.push(this._undoMove());\n        const moves = [];\n        let moveString = \"\";\n        // special case of a commented starting position with no moves\n        if (reversedHistory.length === 0) moves.push(appendComment(\"\"));\n        // build the list of moves.  a move_string looks like: \"3. e3 e6\"\n        while(reversedHistory.length > 0){\n            moveString = appendComment(moveString);\n            const move = reversedHistory.pop();\n            // make TypeScript stop complaining about move being undefined\n            if (!move) break;\n            // if the position started with black to move, start PGN with #. ...\n            if (!this._history.length && move.color === \"b\") {\n                const prefix = `${this._moveNumber}. ...`;\n                // is there a comment preceding the first move?\n                moveString = moveString ? `${moveString} ${prefix}` : prefix;\n            } else if (move.color === \"w\") {\n                // store the previous generated move_string if we have one\n                if (moveString.length) moves.push(moveString);\n                moveString = this._moveNumber + \".\";\n            }\n            moveString = moveString + \" \" + this._moveToSan(move, this._moves({\n                legal: true\n            }));\n            this._makeMove(move);\n        }\n        // are there any other leftover moves?\n        if (moveString.length) moves.push(appendComment(moveString));\n        // is there a result?\n        if (typeof this._header.Result !== \"undefined\") moves.push(this._header.Result);\n        /*\n         * history should be back to what it was before we started generating PGN,\n         * so join together moves\n         */ if (maxWidth === 0) return result.join(\"\") + moves.join(\" \");\n        // TODO (jah): huh?\n        const strip = function() {\n            if (result.length > 0 && result[result.length - 1] === \" \") {\n                result.pop();\n                return true;\n            }\n            return false;\n        };\n        // NB: this does not preserve comment whitespace.\n        const wrapComment = function(width, move) {\n            for (const token of move.split(\" \")){\n                if (!token) continue;\n                if (width + token.length > maxWidth) {\n                    while(strip())width--;\n                    result.push(newline);\n                    width = 0;\n                }\n                result.push(token);\n                width += token.length;\n                result.push(\" \");\n                width++;\n            }\n            if (strip()) width--;\n            return width;\n        };\n        // wrap the PGN output at max_width\n        let currentWidth = 0;\n        for(let i = 0; i < moves.length; i++){\n            if (currentWidth + moves[i].length > maxWidth) {\n                if (moves[i].includes(\"{\")) {\n                    currentWidth = wrapComment(currentWidth, moves[i]);\n                    continue;\n                }\n            }\n            // if the current move will push past max_width\n            if (currentWidth + moves[i].length > maxWidth && i !== 0) {\n                // don't end the line with whitespace\n                if (result[result.length - 1] === \" \") result.pop();\n                result.push(newline);\n                currentWidth = 0;\n            } else if (i !== 0) {\n                result.push(\" \");\n                currentWidth++;\n            }\n            result.push(moves[i]);\n            currentWidth += moves[i].length;\n        }\n        return result.join(\"\");\n    }\n    header(...args) {\n        for(let i = 0; i < args.length; i += 2)if (typeof args[i] === \"string\" && typeof args[i + 1] === \"string\") this._header[args[i]] = args[i + 1];\n        return this._header;\n    }\n    loadPgn(pgn, { strict: strict = false, newlineChar: newlineChar = \"\\r?\\n\" } = {}) {\n        function mask(str) {\n            return str.replace(/\\\\/g, \"\\\\\");\n        }\n        function parsePgnHeader(header) {\n            const headerObj = {};\n            const headers = header.split(new RegExp(mask(newlineChar)));\n            let key = \"\";\n            let value = \"\";\n            for(let i = 0; i < headers.length; i++){\n                const regex = /^\\s*\\[\\s*([A-Za-z]+)\\s*\"(.*)\"\\s*\\]\\s*$/;\n                key = headers[i].replace(regex, \"$1\");\n                value = headers[i].replace(regex, \"$2\");\n                if (key.trim().length > 0) headerObj[key] = value;\n            }\n            return headerObj;\n        }\n        // strip whitespace from head/tail of PGN block\n        pgn = pgn.trim();\n        /*\n         * RegExp to split header. Takes advantage of the fact that header and movetext\n         * will always have a blank line between them (ie, two newline_char's). Handles\n         * case where movetext is empty by matching newlineChar until end of string is\n         * matched - effectively trimming from the end extra newlineChar.\n         *\n         * With default newline_char, will equal:\n         * /^(\\[((?:\\r?\\n)|.)*\\])((?:\\s*\\r?\\n){2}|(?:\\s*\\r?\\n)*$)/\n         */ const headerRegex = new RegExp(\"^(\\\\[((?:\" + mask(newlineChar) + \")|.)*\\\\])\" + \"((?:\\\\s*\" + mask(newlineChar) + \"){2}|(?:\\\\s*\" + mask(newlineChar) + \")*$)\");\n        // If no header given, begin with moves.\n        const headerRegexResults = headerRegex.exec(pgn);\n        const headerString = headerRegexResults ? headerRegexResults.length >= 2 ? headerRegexResults[1] : \"\" : \"\";\n        // Put the board in the starting position\n        this.reset();\n        // parse PGN header\n        const headers = parsePgnHeader(headerString);\n        let fen = \"\";\n        for(const key in headers){\n            // check to see user is including fen (possibly with wrong tag case)\n            if (key.toLowerCase() === \"fen\") fen = headers[key];\n            this.header(key, headers[key]);\n        }\n        /*\n         * the permissive parser should attempt to load a fen tag, even if it's the\n         * wrong case and doesn't include a corresponding [SetUp \"1\"] tag\n         */ if (!strict) {\n            if (fen) this.load(fen, true);\n        } else /*\n             * strict parser - load the starting position indicated by [Setup '1']\n             * and [FEN position]\n             */ if (headers[\"SetUp\"] === \"1\") {\n            if (!(\"FEN\" in headers)) throw new Error(\"Invalid PGN: FEN tag must be supplied with SetUp tag\");\n            // second argument to load: don't clear the headers\n            this.load(headers[\"FEN\"], true);\n        }\n        /*\n         * NB: the regexes below that delete move numbers, recursive annotations,\n         * and numeric annotation glyphs may also match text in comments. To\n         * prevent this, we transform comments by hex-encoding them in place and\n         * decoding them again after the other tokens have been deleted.\n         *\n         * While the spec states that PGN files should be ASCII encoded, we use\n         * {en,de}codeURIComponent here to support arbitrary UTF8 as a convenience\n         * for modern users\n         */ function toHex(s) {\n            return Array.from(s).map(function(c) {\n                /*\n                 * encodeURI doesn't transform most ASCII characters, so we handle\n                 * these ourselves\n                 */ return c.charCodeAt(0) < 128 ? c.charCodeAt(0).toString(16) : encodeURIComponent(c).replace(/%/g, \"\").toLowerCase();\n            }).join(\"\");\n        }\n        function fromHex(s) {\n            return s.length == 0 ? \"\" : decodeURIComponent(\"%\" + (s.match(/.{1,2}/g) || []).join(\"%\"));\n        }\n        const encodeComment = function(s) {\n            s = s.replace(new RegExp(mask(newlineChar), \"g\"), \" \");\n            return `{${toHex(s.slice(1, s.length - 1))}}`;\n        };\n        const decodeComment = function(s) {\n            if (s.startsWith(\"{\") && s.endsWith(\"}\")) return fromHex(s.slice(1, s.length - 1));\n        };\n        // delete header to get the moves\n        let ms = pgn.replace(headerString, \"\").replace(// encode comments so they don't get deleted below\n        new RegExp(`({[^}]*})+?|;([^${mask(newlineChar)}]*)`, \"g\"), function(_match, bracket, semicolon) {\n            return bracket !== undefined ? encodeComment(bracket) : \" \" + encodeComment(`{${semicolon.slice(1)}}`);\n        }).replace(new RegExp(mask(newlineChar), \"g\"), \" \");\n        // delete recursive annotation variations\n        const ravRegex = /(\\([^()]+\\))+?/g;\n        while(ravRegex.test(ms))ms = ms.replace(ravRegex, \"\");\n        // delete move numbers\n        ms = ms.replace(/\\d+\\.(\\.\\.)?/g, \"\");\n        // delete ... indicating black to move\n        ms = ms.replace(/\\.\\.\\./g, \"\");\n        /* delete numeric annotation glyphs */ ms = ms.replace(/\\$\\d+/g, \"\");\n        // trim and get array of moves\n        let moves = ms.trim().split(new RegExp(/\\s+/));\n        // delete empty entries\n        moves = moves.filter((move)=>move !== \"\");\n        let result = \"\";\n        for(let halfMove = 0; halfMove < moves.length; halfMove++){\n            const comment = decodeComment(moves[halfMove]);\n            if (comment !== undefined) {\n                this._comments[this.fen()] = comment;\n                continue;\n            }\n            const move = this._moveFromSan(moves[halfMove], strict);\n            // invalid move\n            if (move == null) {\n                // was the move an end of game marker\n                if ($6eb582f9081eb7e5$var$TERMINATION_MARKERS.indexOf(moves[halfMove]) > -1) result = moves[halfMove];\n                else throw new Error(`Invalid move in PGN: ${moves[halfMove]}`);\n            } else {\n                // reset the end of game marker if making a valid move\n                result = \"\";\n                this._makeMove(move);\n            }\n        }\n        /*\n         * Per section 8.2.6 of the PGN spec, the Result tag pair must match match\n         * the termination marker. Only do this when headers are present, but the\n         * result tag is missing\n         */ if (result && Object.keys(this._header).length && !this._header[\"Result\"]) this.header(\"Result\", result);\n    }\n    /*\n     * Convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} strict Use the strict SAN parser. It will throw errors\n     * on overly disambiguated moves (see below):\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */ _moveToSan(move, moves) {\n        let output = \"\";\n        if (move.flags & $6eb582f9081eb7e5$var$BITS.KSIDE_CASTLE) output = \"O-O\";\n        else if (move.flags & $6eb582f9081eb7e5$var$BITS.QSIDE_CASTLE) output = \"O-O-O\";\n        else {\n            if (move.piece !== $6eb582f9081eb7e5$export$4c32fd1f222ff2b0) {\n                const disambiguator = $6eb582f9081eb7e5$var$getDisambiguator(move, moves);\n                output += move.piece.toUpperCase() + disambiguator;\n            }\n            if (move.flags & ($6eb582f9081eb7e5$var$BITS.CAPTURE | $6eb582f9081eb7e5$var$BITS.EP_CAPTURE)) {\n                if (move.piece === $6eb582f9081eb7e5$export$4c32fd1f222ff2b0) output += $6eb582f9081eb7e5$var$algebraic(move.from)[0];\n                output += \"x\";\n            }\n            output += $6eb582f9081eb7e5$var$algebraic(move.to);\n            if (move.promotion) output += \"=\" + move.promotion.toUpperCase();\n        }\n        this._makeMove(move);\n        if (this.isCheck()) {\n            if (this.isCheckmate()) output += \"#\";\n            else output += \"+\";\n        }\n        this._undoMove();\n        return output;\n    }\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    _moveFromSan(move, strict = false) {\n        // strip off any move decorations: e.g Nf3+?! becomes Nf3\n        const cleanMove = $6eb582f9081eb7e5$var$strippedSan(move);\n        let pieceType = $6eb582f9081eb7e5$var$inferPieceType(cleanMove);\n        let moves = this._moves({\n            legal: true,\n            piece: pieceType\n        });\n        // strict parser\n        for(let i = 0, len = moves.length; i < len; i++){\n            if (cleanMove === $6eb582f9081eb7e5$var$strippedSan(this._moveToSan(moves[i], moves))) return moves[i];\n        }\n        // the strict parser failed\n        if (strict) return null;\n        let piece = undefined;\n        let matches = undefined;\n        let from = undefined;\n        let to = undefined;\n        let promotion = undefined;\n        /*\n         * The default permissive (non-strict) parser allows the user to parse\n         * non-standard chess notations. This parser is only run after the strict\n         * Standard Algebraic Notation (SAN) parser has failed.\n         *\n         * When running the permissive parser, we'll run a regex to grab the piece, the\n         * to/from square, and an optional promotion piece. This regex will\n         * parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n         * f7f8q, b1c3\n         *\n         * NOTE: Some positions and moves may be ambiguous when using the permissive\n         * parser. For example, in this position: 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1,\n         * the move b1c3 may be interpreted as Nc3 or B1c3 (a disambiguated bishop\n         * move). In these cases, the permissive parser will default to the most\n         * basic interpretation (which is b1c3 parsing to Nc3).\n         */ let overlyDisambiguated = false;\n        matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n        if (matches) {\n            piece = matches[1];\n            from = matches[2];\n            to = matches[3];\n            promotion = matches[4];\n            if (from.length == 1) overlyDisambiguated = true;\n        } else {\n            /*\n             * The [a-h]?[1-8]? portion of the regex below handles moves that may be\n             * overly disambiguated (e.g. Nge7 is unnecessary and non-standard when\n             * there is one legal knight move to e7). In this case, the value of\n             * 'from' variable will be a rank or file, not a square.\n             */ matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);\n            if (matches) {\n                piece = matches[1];\n                from = matches[2];\n                to = matches[3];\n                promotion = matches[4];\n                if (from.length == 1) overlyDisambiguated = true;\n            }\n        }\n        pieceType = $6eb582f9081eb7e5$var$inferPieceType(cleanMove);\n        moves = this._moves({\n            legal: true,\n            piece: piece ? piece : pieceType\n        });\n        if (!to) return null;\n        for(let i = 0, len = moves.length; i < len; i++){\n            if (!from) {\n                // if there is no from square, it could be just 'x' missing from a capture\n                if (cleanMove === $6eb582f9081eb7e5$var$strippedSan(this._moveToSan(moves[i], moves)).replace(\"x\", \"\")) return moves[i];\n            // hand-compare move properties with the results from our permissive regex\n            } else if ((!piece || piece.toLowerCase() == moves[i].piece) && $6eb582f9081eb7e5$var$Ox88[from] == moves[i].from && $6eb582f9081eb7e5$var$Ox88[to] == moves[i].to && (!promotion || promotion.toLowerCase() == moves[i].promotion)) return moves[i];\n            else if (overlyDisambiguated) {\n                /*\n                 * SPECIAL CASE: we parsed a move string that may have an unneeded\n                 * rank/file disambiguator (e.g. Nge7).  The 'from' variable will\n                 */ const square = $6eb582f9081eb7e5$var$algebraic(moves[i].from);\n                if ((!piece || piece.toLowerCase() == moves[i].piece) && $6eb582f9081eb7e5$var$Ox88[to] == moves[i].to && (from == square[0] || from == square[1]) && (!promotion || promotion.toLowerCase() == moves[i].promotion)) return moves[i];\n            }\n        }\n        return null;\n    }\n    ascii() {\n        let s = \"   +------------------------+\\n\";\n        for(let i = $6eb582f9081eb7e5$var$Ox88.a8; i <= $6eb582f9081eb7e5$var$Ox88.h1; i++){\n            // display the rank\n            if ($6eb582f9081eb7e5$var$file(i) === 0) s += \" \" + \"87654321\"[$6eb582f9081eb7e5$var$rank(i)] + \" |\";\n            if (this._board[i]) {\n                const piece = this._board[i].type;\n                const color = this._board[i].color;\n                const symbol = color === $6eb582f9081eb7e5$export$29814851e0aa981f ? piece.toUpperCase() : piece.toLowerCase();\n                s += \" \" + symbol + \" \";\n            } else s += \" . \";\n            if (i + 1 & 0x88) {\n                s += \"|\\n\";\n                i += 8;\n            }\n        }\n        s += \"   +------------------------+\\n\";\n        s += \"     a  b  c  d  e  f  g  h\";\n        return s;\n    }\n    perft(depth) {\n        const moves = this._moves({\n            legal: false\n        });\n        let nodes = 0;\n        const color = this._turn;\n        for(let i = 0, len = moves.length; i < len; i++){\n            this._makeMove(moves[i]);\n            if (!this._isKingAttacked(color)) {\n                if (depth - 1 > 0) nodes += this.perft(depth - 1);\n                else nodes++;\n            }\n            this._undoMove();\n        }\n        return nodes;\n    }\n    // pretty = external move object\n    _makePretty(uglyMove) {\n        const { color: color, piece: piece, from: from, to: to, flags: flags, captured: captured, promotion: promotion } = uglyMove;\n        let prettyFlags = \"\";\n        for(const flag in $6eb582f9081eb7e5$var$BITS)if ($6eb582f9081eb7e5$var$BITS[flag] & flags) prettyFlags += $6eb582f9081eb7e5$var$FLAGS[flag];\n        const fromAlgebraic = $6eb582f9081eb7e5$var$algebraic(from);\n        const toAlgebraic = $6eb582f9081eb7e5$var$algebraic(to);\n        const move = {\n            color: color,\n            piece: piece,\n            from: fromAlgebraic,\n            to: toAlgebraic,\n            san: this._moveToSan(uglyMove, this._moves({\n                legal: true\n            })),\n            flags: prettyFlags,\n            lan: fromAlgebraic + toAlgebraic,\n            before: this.fen(),\n            after: \"\"\n        };\n        // generate the FEN for the 'after' key\n        this._makeMove(uglyMove);\n        move.after = this.fen();\n        this._undoMove();\n        if (captured) move.captured = captured;\n        if (promotion) {\n            move.promotion = promotion;\n            move.lan += promotion;\n        }\n        return move;\n    }\n    turn() {\n        return this._turn;\n    }\n    board() {\n        const output = [];\n        let row = [];\n        for(let i = $6eb582f9081eb7e5$var$Ox88.a8; i <= $6eb582f9081eb7e5$var$Ox88.h1; i++){\n            if (this._board[i] == null) row.push(null);\n            else row.push({\n                square: $6eb582f9081eb7e5$var$algebraic(i),\n                type: this._board[i].type,\n                color: this._board[i].color\n            });\n            if (i + 1 & 0x88) {\n                output.push(row);\n                row = [];\n                i += 8;\n            }\n        }\n        return output;\n    }\n    squareColor(square) {\n        if (square in $6eb582f9081eb7e5$var$Ox88) {\n            const sq = $6eb582f9081eb7e5$var$Ox88[square];\n            return ($6eb582f9081eb7e5$var$rank(sq) + $6eb582f9081eb7e5$var$file(sq)) % 2 === 0 ? \"light\" : \"dark\";\n        }\n        return null;\n    }\n    history({ verbose: verbose = false } = {}) {\n        const reversedHistory = [];\n        const moveHistory = [];\n        while(this._history.length > 0)reversedHistory.push(this._undoMove());\n        while(true){\n            const move = reversedHistory.pop();\n            if (!move) break;\n            if (verbose) moveHistory.push(this._makePretty(move));\n            else moveHistory.push(this._moveToSan(move, this._moves()));\n            this._makeMove(move);\n        }\n        return moveHistory;\n    }\n    _pruneComments() {\n        const reversedHistory = [];\n        const currentComments = {};\n        const copyComment = (fen)=>{\n            if (fen in this._comments) currentComments[fen] = this._comments[fen];\n        };\n        while(this._history.length > 0)reversedHistory.push(this._undoMove());\n        copyComment(this.fen());\n        while(true){\n            const move = reversedHistory.pop();\n            if (!move) break;\n            this._makeMove(move);\n            copyComment(this.fen());\n        }\n        this._comments = currentComments;\n    }\n    getComment() {\n        return this._comments[this.fen()];\n    }\n    setComment(comment) {\n        this._comments[this.fen()] = comment.replace(\"{\", \"[\").replace(\"}\", \"]\");\n    }\n    deleteComment() {\n        const comment = this._comments[this.fen()];\n        delete this._comments[this.fen()];\n        return comment;\n    }\n    getComments() {\n        this._pruneComments();\n        return Object.keys(this._comments).map((fen)=>{\n            return {\n                fen: fen,\n                comment: this._comments[fen]\n            };\n        });\n    }\n    deleteComments() {\n        this._pruneComments();\n        return Object.keys(this._comments).map((fen)=>{\n            const comment = this._comments[fen];\n            delete this._comments[fen];\n            return {\n                fen: fen,\n                comment: comment\n            };\n        });\n    }\n    setCastlingRights(color, rights) {\n        for (const side of [\n            $6eb582f9081eb7e5$export$42387107bb0d6206,\n            $6eb582f9081eb7e5$export$36a8946792f13ec9\n        ])if (rights[side] !== undefined) {\n            if (rights[side]) this._castling[color] |= $6eb582f9081eb7e5$var$SIDES[side];\n            else this._castling[color] &= ~$6eb582f9081eb7e5$var$SIDES[side];\n        }\n        this._updateCastlingRights();\n        const result = this.getCastlingRights(color);\n        return (rights[$6eb582f9081eb7e5$export$42387107bb0d6206] === undefined || rights[$6eb582f9081eb7e5$export$42387107bb0d6206] === result[$6eb582f9081eb7e5$export$42387107bb0d6206]) && (rights[$6eb582f9081eb7e5$export$36a8946792f13ec9] === undefined || rights[$6eb582f9081eb7e5$export$36a8946792f13ec9] === result[$6eb582f9081eb7e5$export$36a8946792f13ec9]);\n    }\n    getCastlingRights(color) {\n        return {\n            [$6eb582f9081eb7e5$export$42387107bb0d6206]: (this._castling[color] & $6eb582f9081eb7e5$var$SIDES[$6eb582f9081eb7e5$export$42387107bb0d6206]) !== 0,\n            [$6eb582f9081eb7e5$export$36a8946792f13ec9]: (this._castling[color] & $6eb582f9081eb7e5$var$SIDES[$6eb582f9081eb7e5$export$36a8946792f13ec9]) !== 0\n        };\n    }\n    moveNumber() {\n        return this._moveNumber;\n    }\n}\n\n\n\nconst $236ba31c448bdb87$export$45f641c0a85ed846 = \"abcdefgh\";\nlet $236ba31c448bdb87$var$squares = [];\nlet $236ba31c448bdb87$var$files = [\n    ...$236ba31c448bdb87$export$45f641c0a85ed846\n];\n$236ba31c448bdb87$var$files.forEach((f)=>{\n    for(let i = 1; i <= 8; i++)$236ba31c448bdb87$var$squares.push(f + i);\n});\nconst $236ba31c448bdb87$export$5fc67852ab417150 = $236ba31c448bdb87$var$squares;\nfunction $236ba31c448bdb87$export$ef42e39072fd379(move) {\n    let uci = move.from + move.to;\n    if (move.promotion) uci += move.promotion;\n    return uci;\n}\nfunction $236ba31c448bdb87$export$a23e9f71e3b927c7(fen) {\n    let chess = new (0, $6eb582f9081eb7e5$export$a4d6ea685c300d39)(fen);\n    let moves = chess.moves({\n        verbose: true\n    }) //, legal: false})\n    ;\n    let defenders = Array(64).fill(0);\n    moves.forEach((move, i)=>{\n        let index = $236ba31c448bdb87$export$5fc67852ab417150.indexOf(move.to);\n        defenders[index] += 1;\n    });\n    $236ba31c448bdb87$export$5fc67852ab417150.forEach((square, i)=>{\n        if (chess.get(square) && chess.get(square).color == chess.turn()) defenders[i] += 1;\n    });\n    return defenders;\n}\nfunction $236ba31c448bdb87$export$def19b3072191111(fen) {\n    let tokens = fen.split(\" \");\n    tokens[1] = tokens[1] == \"w\" ? \"b\" : \"w\";\n    // fix for en passant\n    tokens[3] = \"-\";\n    let newFen = tokens.join(\" \");\n    return newFen;\n}\nfunction $236ba31c448bdb87$export$51b6663f33fc7508(fen) {\n    let chess = new (0, $6eb582f9081eb7e5$export$a4d6ea685c300d39)(fen);\n    let moves = chess.moves({\n        verbose: true\n    });\n    let dests = {};\n    moves.forEach((m, i)=>{\n        if (dests[m.from]) dests[m.from].push(m.to);\n        else dests[m.from] = [\n            m.to\n        ];\n    });\n    // console.log('all possible moves', dests)\n    return dests;\n}\nfunction $236ba31c448bdb87$export$f784c029d2bce31b(chess, piece) {\n    let res = [];\n    chess.board().map((rank, r)=>{\n        rank.map((p, f)=>{\n            if (p && p.type == piece.type && p.color == piece.color) res.push($236ba31c448bdb87$export$45f641c0a85ed846[f] + (8 - r));\n        });\n    });\n    return res;\n}\n\n\n\n\n\n\n\nvar $b058e0cf7a9c3e39$exports = {};\n// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n(function(definition) {\n    /* global module, define */ if (typeof $b058e0cf7a9c3e39$exports === \"object\") $b058e0cf7a9c3e39$exports = definition();\n    else if (typeof define === \"function\" && define.amd) define([], definition);\n    else {\n        var exports = definition();\n        window.astar = exports.astar;\n        window.Graph = exports.Graph;\n    }\n})(function() {\n    function pathTo(node) {\n        var curr = node, path = [];\n        while(curr.parent){\n            path.unshift(curr);\n            curr = curr.parent;\n        }\n        return path;\n    }\n    function getHeap() {\n        return new BinaryHeap(function(node) {\n            return node.f;\n        });\n    }\n    var astar = {\n        /**\n    * Perform an A* Search on a graph given a start and end node.\n    * @param {Graph} graph\n    * @param {GridNode} start\n    * @param {GridNode} end\n    * @param {Object} [options]\n    * @param {bool} [options.closest] Specifies whether to return the\n               path to the closest node if the target is unreachable.\n    * @param {Function} [options.heuristic] Heuristic function (see\n    *          astar.heuristics).\n    */ search: function(graph, start, end, options) {\n            graph.cleanDirty();\n            options = options || {};\n            var heuristic = options.heuristic || astar.heuristics.manhattan, closest = options.closest || false;\n            var openHeap = getHeap(), closestNode = start; // set the start node to be the closest if required\n            start.h = heuristic(start, end);\n            openHeap.push(start);\n            while(openHeap.size() > 0){\n                // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n                var currentNode = openHeap.pop();\n                // End case -- result has been found, return the traced path.\n                if (currentNode === end) return pathTo(currentNode);\n                // Normal case -- move currentNode from open to closed, process each of its neighbors.\n                currentNode.closed = true;\n                // Find all neighbors for the current node.\n                var neighbors = graph.neighbors(currentNode);\n                for(var i = 0, il = neighbors.length; i < il; ++i){\n                    var neighbor = neighbors[i];\n                    if (neighbor.closed || neighbor.isWall()) continue;\n                    // The g score is the shortest distance from start to current node.\n                    // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                    var gScore = currentNode.g + neighbor.getCost(currentNode), beenVisited = neighbor.visited;\n                    if (!beenVisited || gScore < neighbor.g) {\n                        // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                        neighbor.visited = true;\n                        neighbor.parent = currentNode;\n                        neighbor.h = neighbor.h || heuristic(neighbor, end);\n                        neighbor.g = gScore;\n                        neighbor.f = neighbor.g + neighbor.h;\n                        graph.markDirty(neighbor);\n                        if (closest) // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        {\n                            if (neighbor.h < closestNode.h || neighbor.h === closestNode.h && neighbor.g < closestNode.g) closestNode = neighbor;\n                        }\n                        if (!beenVisited) // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                        else // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n            if (closest) return pathTo(closestNode);\n            // No result was found - empty array signifies failure to find path.\n            return [];\n        },\n        // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n        heuristics: {\n            manhattan: function(pos0, pos1) {\n                var d1 = Math.abs(pos1.x - pos0.x);\n                var d2 = Math.abs(pos1.y - pos0.y);\n                return d1 + d2;\n            },\n            diagonal: function(pos0, pos1) {\n                var D = 1;\n                var D2 = Math.sqrt(2);\n                var d1 = Math.abs(pos1.x - pos0.x);\n                var d2 = Math.abs(pos1.y - pos0.y);\n                return D * (d1 + d2) + (D2 - 2 * D) * Math.min(d1, d2);\n            }\n        },\n        cleanNode: function(node) {\n            node.f = 0;\n            node.g = 0;\n            node.h = 0;\n            node.visited = false;\n            node.closed = false;\n            node.parent = null;\n        }\n    };\n    /**\n* A graph memory structure\n* @param {Array} gridIn 2D array of input weights\n* @param {Object} [options]\n* @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed\n*/ function Graph(gridIn, options) {\n        options = options || {};\n        this.nodes = [];\n        this.diagonal = !!options.diagonal;\n        this.grid = [];\n        for(var x = 0; x < gridIn.length; x++){\n            this.grid[x] = [];\n            for(var y = 0, row = gridIn[x]; y < row.length; y++){\n                var node = new GridNode(x, y, row[y]);\n                this.grid[x][y] = node;\n                this.nodes.push(node);\n            }\n        }\n        this.init();\n    }\n    Graph.prototype.init = function() {\n        this.dirtyNodes = [];\n        for(var i = 0; i < this.nodes.length; i++)astar.cleanNode(this.nodes[i]);\n    };\n    Graph.prototype.cleanDirty = function() {\n        for(var i = 0; i < this.dirtyNodes.length; i++)astar.cleanNode(this.dirtyNodes[i]);\n        this.dirtyNodes = [];\n    };\n    Graph.prototype.markDirty = function(node) {\n        this.dirtyNodes.push(node);\n    };\n    Graph.prototype.neighbors = function(node) {\n        var ret = [], x = node.x, y = node.y, grid = this.grid;\n        // West\n        if (grid[x - 1] && grid[x - 1][y]) ret.push(grid[x - 1][y]);\n        // East\n        if (grid[x + 1] && grid[x + 1][y]) ret.push(grid[x + 1][y]);\n        // South\n        if (grid[x] && grid[x][y - 1]) ret.push(grid[x][y - 1]);\n        // North\n        if (grid[x] && grid[x][y + 1]) ret.push(grid[x][y + 1]);\n        if (this.diagonal) {\n            // Southwest\n            if (grid[x - 1] && grid[x - 1][y - 1]) ret.push(grid[x - 1][y - 1]);\n            // Southeast\n            if (grid[x + 1] && grid[x + 1][y - 1]) ret.push(grid[x + 1][y - 1]);\n            // Northwest\n            if (grid[x - 1] && grid[x - 1][y + 1]) ret.push(grid[x - 1][y + 1]);\n            // Northeast\n            if (grid[x + 1] && grid[x + 1][y + 1]) ret.push(grid[x + 1][y + 1]);\n        }\n        return ret;\n    };\n    Graph.prototype.toString = function() {\n        var graphString = [], nodes = this.grid, rowDebug, row, y, l;\n        for(var x = 0, len = nodes.length; x < len; x++){\n            rowDebug = [];\n            row = nodes[x];\n            for(y = 0, l = row.length; y < l; y++)rowDebug.push(row[y].weight);\n            graphString.push(rowDebug.join(\" \"));\n        }\n        return graphString.join(\"\\n\");\n    };\n    function GridNode(x, y, weight) {\n        this.x = x;\n        this.y = y;\n        this.weight = weight;\n    }\n    GridNode.prototype.toString = function() {\n        return \"[\" + this.x + \" \" + this.y + \"]\";\n    };\n    GridNode.prototype.getCost = function(fromNeighbor) {\n        // Take diagonal weight into consideration.\n        if (fromNeighbor && fromNeighbor.x != this.x && fromNeighbor.y != this.y) return this.weight * 1.41421;\n        return this.weight;\n    };\n    GridNode.prototype.isWall = function() {\n        return this.weight === 0;\n    };\n    function BinaryHeap(scoreFunction) {\n        this.content = [];\n        this.scoreFunction = scoreFunction;\n    }\n    BinaryHeap.prototype = {\n        push: function(element) {\n            // Add the new element to the end of the array.\n            this.content.push(element);\n            // Allow it to sink down.\n            this.sinkDown(this.content.length - 1);\n        },\n        pop: function() {\n            // Store the first element so we can return it later.\n            var result = this.content[0];\n            // Get the element at the end of the array.\n            var end = this.content.pop();\n            // If there are any elements left, put the end element at the\n            // start, and let it bubble up.\n            if (this.content.length > 0) {\n                this.content[0] = end;\n                this.bubbleUp(0);\n            }\n            return result;\n        },\n        remove: function(node) {\n            var i = this.content.indexOf(node);\n            // When it is found, the process seen in 'pop' is repeated\n            // to fill up the hole.\n            var end = this.content.pop();\n            if (i !== this.content.length - 1) {\n                this.content[i] = end;\n                if (this.scoreFunction(end) < this.scoreFunction(node)) this.sinkDown(i);\n                else this.bubbleUp(i);\n            }\n        },\n        size: function() {\n            return this.content.length;\n        },\n        rescoreElement: function(node) {\n            this.sinkDown(this.content.indexOf(node));\n        },\n        sinkDown: function(n) {\n            // Fetch the element that has to be sunk.\n            var element = this.content[n];\n            // When at 0, an element can not sink any further.\n            while(n > 0){\n                // Compute the parent element's index, and fetch it.\n                var parentN = (n + 1 >> 1) - 1, parent = this.content[parentN];\n                // Swap the elements if the parent is greater.\n                if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                    this.content[parentN] = element;\n                    this.content[n] = parent;\n                    // Update 'n' to continue at the new position.\n                    n = parentN;\n                } else break;\n            }\n        },\n        bubbleUp: function(n) {\n            // Look up the target element and its score.\n            var length = this.content.length, element = this.content[n], elemScore = this.scoreFunction(element);\n            while(true){\n                // Compute the indices of the child elements.\n                var child2N = n + 1 << 1, child1N = child2N - 1;\n                // This is used to store the new position of the element, if any.\n                var swap = null, child1Score;\n                // If the first child exists (is inside the array)...\n                if (child1N < length) {\n                    // Look it up and compute its score.\n                    var child1 = this.content[child1N];\n                    child1Score = this.scoreFunction(child1);\n                    // If the score is less than our element's, we need to swap.\n                    if (child1Score < elemScore) swap = child1N;\n                }\n                // Do the same checks for the other child.\n                if (child2N < length) {\n                    var child2 = this.content[child2N], child2Score = this.scoreFunction(child2);\n                    if (child2Score < (swap === null ? elemScore : child1Score)) swap = child2N;\n                }\n                // If the element needs to be moved, swap it, and continue.\n                if (swap !== null) {\n                    this.content[n] = this.content[swap];\n                    this.content[swap] = element;\n                    n = swap;\n                } else break;\n            }\n        }\n    };\n    return {\n        astar: astar,\n        Graph: Graph\n    };\n});\n\n\nfunction $d5ffb40ab7d69c90$export$7dc676b6dd72d281(chess) {\n    const dests = new Map();\n    (0, $236ba31c448bdb87$export$5fc67852ab417150).forEach((s)=>{\n        const ms = chess.moves({\n            square: s,\n            verbose: true\n        });\n        if (ms.length) dests.set(s, ms.map((m)=>m.to));\n    });\n    console.log(\"all moves\", dests);\n    return dests;\n}\nfunction $d5ffb40ab7d69c90$export$4282caeda4cf6c97(chess) {\n    return chess.turn() === \"w\" ? \"white\" : \"black\";\n}\nfunction $d5ffb40ab7d69c90$export$5b50b356a8724b72(chess, ground) {\n    return (orig, dest)=>{\n        chess.move({\n            from: orig,\n            to: dest\n        });\n        $d5ffb40ab7d69c90$export$8aee836dd884f091(chess, ground);\n    };\n}\nfunction $d5ffb40ab7d69c90$export$8aee836dd884f091(chess, ground) {\n    ground.set({\n        fen: chess.fen(),\n        check: chess.isCheck(),\n        turnColor: $d5ffb40ab7d69c90$export$4282caeda4cf6c97(chess),\n        movable: {\n            color: $d5ffb40ab7d69c90$export$4282caeda4cf6c97(chess),\n            dests: $d5ffb40ab7d69c90$export$7dc676b6dd72d281(chess)\n        }\n    });\n    let hist = chess.history({\n        verbose: true\n    });\n    if (hist.length) {\n        let last = hist.pop();\n        ground.set({\n            lastMove: [\n                last.from,\n                last.to\n            ]\n        });\n    }\n}\nfunction $d5ffb40ab7d69c90$export$dfb56f6b9abe10bc(from, to) {\n    let graph = new (0, $b058e0cf7a9c3e39$exports.Graph)(new Array(8).fill(new Array(8).fill(1)), {\n        diagonal: true\n    });\n    console.log(\"finding path\", from, to, graph);\n    let start = graph.grid[from.charCodeAt(0) - 97][from.charCodeAt(1) - 49];\n    let end = graph.grid[to.charCodeAt(0) - 97][to.charCodeAt(1) - 49];\n    let path = (0, $b058e0cf7a9c3e39$exports.astar).search(graph, start, end, {\n        heuristic: (0, $b058e0cf7a9c3e39$exports.astar).heuristics.diagonal\n    });\n    path.unshift(start);\n    console.log(\"found path\", path);\n    return path;\n}\n\n\n\n\nvar $61fb775615801b9d$exports = {};\n\"use strict\";\n/**\n * An implementation of rfc6749#section-4.1 and rfc7636.\n */ var $61fb775615801b9d$var$__extends = $61fb775615801b9d$exports && $61fb775615801b9d$exports.__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar $61fb775615801b9d$var$__assign = $61fb775615801b9d$exports && $61fb775615801b9d$exports.__assign || function() {\n    $61fb775615801b9d$var$__assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $61fb775615801b9d$var$__assign.apply(this, arguments);\n};\nvar $61fb775615801b9d$var$__awaiter = $61fb775615801b9d$exports && $61fb775615801b9d$exports.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar $61fb775615801b9d$var$__generator = $61fb775615801b9d$exports && $61fb775615801b9d$exports.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar $61fb775615801b9d$var$__spreadArrays = $61fb775615801b9d$exports && $61fb775615801b9d$exports.__spreadArrays || function() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n};\nObject.defineProperty($61fb775615801b9d$exports, \"__esModule\", {\n    value: true\n});\n/**\n * A list of OAuth2AuthCodePKCE errors.\n */ // To \"namespace\" all errors.\nvar $61fb775615801b9d$var$ErrorOAuth2 = /** @class */ function() {\n    function ErrorOAuth2() {}\n    ErrorOAuth2.prototype.toString = function() {\n        return \"ErrorOAuth2\";\n    };\n    return ErrorOAuth2;\n}();\n$61fb775615801b9d$exports.ErrorOAuth2 = $61fb775615801b9d$var$ErrorOAuth2;\n// For really unknown errors.\nvar $61fb775615801b9d$var$ErrorUnknown = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorUnknown, _super);\n    function ErrorUnknown() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnknown.prototype.toString = function() {\n        return \"ErrorUnknown\";\n    };\n    return ErrorUnknown;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorUnknown = $61fb775615801b9d$var$ErrorUnknown;\n// Some generic, internal errors that can happen.\nvar $61fb775615801b9d$var$ErrorNoAuthCode = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorNoAuthCode, _super);\n    function ErrorNoAuthCode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorNoAuthCode.prototype.toString = function() {\n        return \"ErrorNoAuthCode\";\n    };\n    return ErrorNoAuthCode;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorNoAuthCode = $61fb775615801b9d$var$ErrorNoAuthCode;\nvar $61fb775615801b9d$var$ErrorInvalidReturnedStateParam = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorInvalidReturnedStateParam, _super);\n    function ErrorInvalidReturnedStateParam() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidReturnedStateParam.prototype.toString = function() {\n        return \"ErrorInvalidReturnedStateParam\";\n    };\n    return ErrorInvalidReturnedStateParam;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorInvalidReturnedStateParam = $61fb775615801b9d$var$ErrorInvalidReturnedStateParam;\nvar $61fb775615801b9d$var$ErrorInvalidJson = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorInvalidJson, _super);\n    function ErrorInvalidJson() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidJson.prototype.toString = function() {\n        return \"ErrorInvalidJson\";\n    };\n    return ErrorInvalidJson;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorInvalidJson = $61fb775615801b9d$var$ErrorInvalidJson;\n// Errors that occur across many endpoints\nvar $61fb775615801b9d$var$ErrorInvalidScope = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorInvalidScope, _super);\n    function ErrorInvalidScope() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidScope.prototype.toString = function() {\n        return \"ErrorInvalidScope\";\n    };\n    return ErrorInvalidScope;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorInvalidScope = $61fb775615801b9d$var$ErrorInvalidScope;\nvar $61fb775615801b9d$var$ErrorInvalidRequest = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorInvalidRequest, _super);\n    function ErrorInvalidRequest() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidRequest.prototype.toString = function() {\n        return \"ErrorInvalidRequest\";\n    };\n    return ErrorInvalidRequest;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorInvalidRequest = $61fb775615801b9d$var$ErrorInvalidRequest;\nvar $61fb775615801b9d$var$ErrorInvalidToken = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorInvalidToken, _super);\n    function ErrorInvalidToken() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidToken.prototype.toString = function() {\n        return \"ErrorInvalidToken\";\n    };\n    return ErrorInvalidToken;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorInvalidToken = $61fb775615801b9d$var$ErrorInvalidToken;\n/**\n * Possible authorization grant errors given by the redirection from the\n * authorization server.\n */ var $61fb775615801b9d$var$ErrorAuthenticationGrant = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorAuthenticationGrant, _super);\n    function ErrorAuthenticationGrant() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAuthenticationGrant.prototype.toString = function() {\n        return \"ErrorAuthenticationGrant\";\n    };\n    return ErrorAuthenticationGrant;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorAuthenticationGrant = $61fb775615801b9d$var$ErrorAuthenticationGrant;\nvar $61fb775615801b9d$var$ErrorUnauthorizedClient = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorUnauthorizedClient, _super);\n    function ErrorUnauthorizedClient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnauthorizedClient.prototype.toString = function() {\n        return \"ErrorUnauthorizedClient\";\n    };\n    return ErrorUnauthorizedClient;\n}($61fb775615801b9d$var$ErrorAuthenticationGrant);\n$61fb775615801b9d$exports.ErrorUnauthorizedClient = $61fb775615801b9d$var$ErrorUnauthorizedClient;\nvar $61fb775615801b9d$var$ErrorAccessDenied = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorAccessDenied, _super);\n    function ErrorAccessDenied() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAccessDenied.prototype.toString = function() {\n        return \"ErrorAccessDenied\";\n    };\n    return ErrorAccessDenied;\n}($61fb775615801b9d$var$ErrorAuthenticationGrant);\n$61fb775615801b9d$exports.ErrorAccessDenied = $61fb775615801b9d$var$ErrorAccessDenied;\nvar $61fb775615801b9d$var$ErrorUnsupportedResponseType = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorUnsupportedResponseType, _super);\n    function ErrorUnsupportedResponseType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnsupportedResponseType.prototype.toString = function() {\n        return \"ErrorUnsupportedResponseType\";\n    };\n    return ErrorUnsupportedResponseType;\n}($61fb775615801b9d$var$ErrorAuthenticationGrant);\n$61fb775615801b9d$exports.ErrorUnsupportedResponseType = $61fb775615801b9d$var$ErrorUnsupportedResponseType;\nvar $61fb775615801b9d$var$ErrorServerError = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorServerError, _super);\n    function ErrorServerError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorServerError.prototype.toString = function() {\n        return \"ErrorServerError\";\n    };\n    return ErrorServerError;\n}($61fb775615801b9d$var$ErrorAuthenticationGrant);\n$61fb775615801b9d$exports.ErrorServerError = $61fb775615801b9d$var$ErrorServerError;\nvar $61fb775615801b9d$var$ErrorTemporarilyUnavailable = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorTemporarilyUnavailable, _super);\n    function ErrorTemporarilyUnavailable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorTemporarilyUnavailable.prototype.toString = function() {\n        return \"ErrorTemporarilyUnavailable\";\n    };\n    return ErrorTemporarilyUnavailable;\n}($61fb775615801b9d$var$ErrorAuthenticationGrant);\n$61fb775615801b9d$exports.ErrorTemporarilyUnavailable = $61fb775615801b9d$var$ErrorTemporarilyUnavailable;\n/**\n * A list of possible access token response errors.\n */ var $61fb775615801b9d$var$ErrorAccessTokenResponse = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorAccessTokenResponse, _super);\n    function ErrorAccessTokenResponse() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAccessTokenResponse.prototype.toString = function() {\n        return \"ErrorAccessTokenResponse\";\n    };\n    return ErrorAccessTokenResponse;\n}($61fb775615801b9d$var$ErrorOAuth2);\n$61fb775615801b9d$exports.ErrorAccessTokenResponse = $61fb775615801b9d$var$ErrorAccessTokenResponse;\nvar $61fb775615801b9d$var$ErrorInvalidClient = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorInvalidClient, _super);\n    function ErrorInvalidClient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidClient.prototype.toString = function() {\n        return \"ErrorInvalidClient\";\n    };\n    return ErrorInvalidClient;\n}($61fb775615801b9d$var$ErrorAccessTokenResponse);\n$61fb775615801b9d$exports.ErrorInvalidClient = $61fb775615801b9d$var$ErrorInvalidClient;\nvar $61fb775615801b9d$var$ErrorInvalidGrant = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorInvalidGrant, _super);\n    function ErrorInvalidGrant() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidGrant.prototype.toString = function() {\n        return \"ErrorInvalidGrant\";\n    };\n    return ErrorInvalidGrant;\n}($61fb775615801b9d$var$ErrorAccessTokenResponse);\n$61fb775615801b9d$exports.ErrorInvalidGrant = $61fb775615801b9d$var$ErrorInvalidGrant;\nvar $61fb775615801b9d$var$ErrorUnsupportedGrantType = /** @class */ function(_super) {\n    $61fb775615801b9d$var$__extends(ErrorUnsupportedGrantType, _super);\n    function ErrorUnsupportedGrantType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnsupportedGrantType.prototype.toString = function() {\n        return \"ErrorUnsupportedGrantType\";\n    };\n    return ErrorUnsupportedGrantType;\n}($61fb775615801b9d$var$ErrorAccessTokenResponse);\n$61fb775615801b9d$exports.ErrorUnsupportedGrantType = $61fb775615801b9d$var$ErrorUnsupportedGrantType;\n/**\n * WWW-Authenticate error object structure for less error prone handling.\n */ var $61fb775615801b9d$var$ErrorWWWAuthenticate = /** @class */ function() {\n    function ErrorWWWAuthenticate() {\n        this.realm = \"\";\n        this.error = \"\";\n    }\n    return ErrorWWWAuthenticate;\n}();\n$61fb775615801b9d$exports.ErrorWWWAuthenticate = $61fb775615801b9d$var$ErrorWWWAuthenticate;\n$61fb775615801b9d$exports.RawErrorToErrorClassMap = {\n    invalid_request: $61fb775615801b9d$var$ErrorInvalidRequest,\n    invalid_grant: $61fb775615801b9d$var$ErrorInvalidGrant,\n    unauthorized_client: $61fb775615801b9d$var$ErrorUnauthorizedClient,\n    access_denied: $61fb775615801b9d$var$ErrorAccessDenied,\n    unsupported_response_type: $61fb775615801b9d$var$ErrorUnsupportedResponseType,\n    invalid_scope: $61fb775615801b9d$var$ErrorInvalidScope,\n    server_error: $61fb775615801b9d$var$ErrorServerError,\n    temporarily_unavailable: $61fb775615801b9d$var$ErrorTemporarilyUnavailable,\n    invalid_client: $61fb775615801b9d$var$ErrorInvalidClient,\n    unsupported_grant_type: $61fb775615801b9d$var$ErrorUnsupportedGrantType,\n    invalid_json: $61fb775615801b9d$var$ErrorInvalidJson,\n    invalid_token: $61fb775615801b9d$var$ErrorInvalidToken\n};\n/**\n * Translate the raw error strings returned from the server into error classes.\n */ function $61fb775615801b9d$var$toErrorClass(rawError) {\n    return new ($61fb775615801b9d$exports.RawErrorToErrorClassMap[rawError] || $61fb775615801b9d$var$ErrorUnknown)();\n}\n$61fb775615801b9d$exports.toErrorClass = $61fb775615801b9d$var$toErrorClass;\n/**\n * A convience function to turn, for example, `Bearer realm=\"bity.com\",\n * error=\"invalid_client\"` into `{ realm: \"bity.com\", error: \"invalid_client\"\n * }`.\n */ function $61fb775615801b9d$var$fromWWWAuthenticateHeaderStringToObject(a) {\n    var obj = a.slice(7).replace(/\"/g, \"\").split(\", \").map(function(tokens) {\n        var _a;\n        var _b = tokens.split(\"=\"), k = _b[0], v = _b[1];\n        return _a = {}, _a[k] = v, _a;\n    }).reduce(function(a, c) {\n        return $61fb775615801b9d$var$__assign($61fb775615801b9d$var$__assign({}, a), c);\n    }, {});\n    return {\n        realm: obj.realm,\n        error: obj.error\n    };\n}\n$61fb775615801b9d$exports.fromWWWAuthenticateHeaderStringToObject = $61fb775615801b9d$var$fromWWWAuthenticateHeaderStringToObject;\n/**\n * HTTP headers that we need to access.\n */ var $61fb775615801b9d$var$HEADER_AUTHORIZATION = \"Authorization\";\nvar $61fb775615801b9d$var$HEADER_WWW_AUTHENTICATE = \"WWW-Authenticate\";\n/**\n * To store the OAuth client's data between websites due to redirection.\n */ $61fb775615801b9d$exports.LOCALSTORAGE_ID = \"oauth2authcodepkce\";\n$61fb775615801b9d$exports.LOCALSTORAGE_STATE = $61fb775615801b9d$exports.LOCALSTORAGE_ID + \"-state\";\n/**\n * The maximum length for a code verifier for the best security we can offer.\n * Please note the NOTE section of RFC 7636 § 4.1 - the length must be >= 43,\n * but <= 128, **after** base64 url encoding. This means 32 code verifier bytes\n * encoded will be 43 bytes, or 96 bytes encoded will be 128 bytes. So 96 bytes\n * is the highest valid value that can be used.\n */ $61fb775615801b9d$exports.RECOMMENDED_CODE_VERIFIER_LENGTH = 96;\n/**\n * A sensible length for the state's length, for anti-csrf.\n */ $61fb775615801b9d$exports.RECOMMENDED_STATE_LENGTH = 32;\n/**\n * Character set to generate code verifier defined in rfc7636.\n */ var $61fb775615801b9d$var$PKCE_CHARSET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\";\n/**\n * OAuth 2.0 client that ONLY supports authorization code flow, with PKCE.\n *\n * Many applications structure their OAuth usage in different ways. This class\n * aims to provide both flexible and easy ways to use this configuration of\n * OAuth.\n *\n * See `example.ts` for how you'd typically use this.\n *\n * For others, review this class's methods.\n */ var $61fb775615801b9d$var$OAuth2AuthCodePKCE = /** @class */ function() {\n    function OAuth2AuthCodePKCE(config) {\n        this.state = {};\n        this.config = config;\n        this.recoverState();\n        return this;\n    }\n    /**\n     * Attach the OAuth logic to all fetch requests and translate errors (either\n     * returned as json or through the WWW-Authenticate header) into nice error\n     * classes.\n     */ OAuth2AuthCodePKCE.prototype.decorateFetchHTTPClient = function(fetch1) {\n        var _this = this;\n        return function(url, config) {\n            var rest = [];\n            for(var _i = 2; _i < arguments.length; _i++)rest[_i - 2] = arguments[_i];\n            if (!_this.state.isHTTPDecoratorActive) return fetch1.apply(void 0, $61fb775615801b9d$var$__spreadArrays([\n                url,\n                config\n            ], rest));\n            return _this.getAccessToken().then(function(_a) {\n                var token = _a.token;\n                var configNew = Object.assign({}, config);\n                if (!configNew.headers) configNew.headers = {};\n                configNew.headers[$61fb775615801b9d$var$HEADER_AUTHORIZATION] = \"Bearer \" + token.value;\n                return fetch1.apply(void 0, $61fb775615801b9d$var$__spreadArrays([\n                    url,\n                    configNew\n                ], rest));\n            }).then(function(res) {\n                if (res.ok) return res;\n                if (!res.headers.has($61fb775615801b9d$var$HEADER_WWW_AUTHENTICATE.toLowerCase())) return res;\n                var error = $61fb775615801b9d$var$toErrorClass($61fb775615801b9d$var$fromWWWAuthenticateHeaderStringToObject(res.headers.get($61fb775615801b9d$var$HEADER_WWW_AUTHENTICATE.toLowerCase())).error);\n                if (error instanceof $61fb775615801b9d$var$ErrorInvalidToken) _this.config.onAccessTokenExpiry(function() {\n                    return _this.exchangeRefreshTokenForAccessToken();\n                });\n                return Promise.reject(error);\n            });\n        };\n    };\n    /**\n     * If there is an error, it will be passed back as a rejected Promise.\n     * If there is no code, the user should be redirected via\n     * [fetchAuthorizationCode].\n     */ OAuth2AuthCodePKCE.prototype.isReturningFromAuthServer = function() {\n        var error = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, \"error\");\n        if (error) return Promise.reject($61fb775615801b9d$var$toErrorClass(error));\n        var code = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, \"code\");\n        if (!code) return Promise.resolve(false);\n        var state = JSON.parse(localStorage.getItem($61fb775615801b9d$exports.LOCALSTORAGE_STATE) || \"{}\");\n        var stateQueryParam = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, \"state\");\n        if (stateQueryParam !== state.stateQueryParam) {\n            console.warn(\"state query string parameter doesn't match the one sent! Possible malicious activity somewhere.\");\n            return Promise.reject(new $61fb775615801b9d$var$ErrorInvalidReturnedStateParam());\n        }\n        state.authorizationCode = code;\n        state.hasAuthCodeBeenExchangedForAccessToken = false;\n        localStorage.setItem($61fb775615801b9d$exports.LOCALSTORAGE_STATE, JSON.stringify(state));\n        this.setState(state);\n        return Promise.resolve(true);\n    };\n    /**\n     * Fetch an authorization grant via redirection. In a sense this function\n     * doesn't return because of the redirect behavior (uses `location.replace`).\n     *\n     * @param oneTimeParams A way to specify \"one time\" used query string\n     * parameters during the authorization code fetching process, usually for\n     * values which need to change at run-time.\n     */ OAuth2AuthCodePKCE.prototype.fetchAuthorizationCode = function(oneTimeParams) {\n        return $61fb775615801b9d$var$__awaiter(this, void 0, void 0, function() {\n            var _a, clientId, extraAuthorizationParams, redirectUrl, scopes, _b, codeChallenge, codeVerifier, stateQueryParam, url, extraParameters;\n            return $61fb775615801b9d$var$__generator(this, function(_c) {\n                switch(_c.label){\n                    case 0:\n                        this.assertStateAndConfigArePresent();\n                        _a = this.config, clientId = _a.clientId, extraAuthorizationParams = _a.extraAuthorizationParams, redirectUrl = _a.redirectUrl, scopes = _a.scopes;\n                        return [\n                            4 /*yield*/ ,\n                            OAuth2AuthCodePKCE.generatePKCECodes()\n                        ];\n                    case 1:\n                        _b = _c.sent(), codeChallenge = _b.codeChallenge, codeVerifier = _b.codeVerifier;\n                        stateQueryParam = OAuth2AuthCodePKCE.generateRandomState($61fb775615801b9d$exports.RECOMMENDED_STATE_LENGTH);\n                        this.state = $61fb775615801b9d$var$__assign($61fb775615801b9d$var$__assign({}, this.state), {\n                            codeChallenge: codeChallenge,\n                            codeVerifier: codeVerifier,\n                            stateQueryParam: stateQueryParam,\n                            isHTTPDecoratorActive: true\n                        });\n                        localStorage.setItem($61fb775615801b9d$exports.LOCALSTORAGE_STATE, JSON.stringify(this.state));\n                        url = this.config.authorizationUrl + \"?response_type=code&\" + (\"client_id=\" + encodeURIComponent(clientId) + \"&\") + (\"redirect_uri=\" + encodeURIComponent(redirectUrl) + \"&\") + (\"scope=\" + encodeURIComponent(scopes.join(\" \")) + \"&\") + (\"state=\" + stateQueryParam + \"&\") + (\"code_challenge=\" + encodeURIComponent(codeChallenge) + \"&\") + \"code_challenge_method=S256\";\n                        if (extraAuthorizationParams || oneTimeParams) {\n                            extraParameters = $61fb775615801b9d$var$__assign($61fb775615801b9d$var$__assign({}, extraAuthorizationParams), oneTimeParams);\n                            url = url + \"&\" + OAuth2AuthCodePKCE.objectToQueryString(extraParameters);\n                        }\n                        location.replace(url);\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Tries to get the current access token. If there is none\n     * it will fetch another one. If it is expired, it will fire\n     * [onAccessTokenExpiry] but it's up to the user to call the refresh token\n     * function. This is because sometimes not using the refresh token facilities\n     * is easier.\n     */ OAuth2AuthCodePKCE.prototype.getAccessToken = function() {\n        var _this = this;\n        this.assertStateAndConfigArePresent();\n        var onAccessTokenExpiry = this.config.onAccessTokenExpiry;\n        var _a = this.state, accessToken = _a.accessToken, authorizationCode = _a.authorizationCode, explicitlyExposedTokens = _a.explicitlyExposedTokens, hasAuthCodeBeenExchangedForAccessToken = _a.hasAuthCodeBeenExchangedForAccessToken, refreshToken = _a.refreshToken, scopes = _a.scopes;\n        if (!authorizationCode) return Promise.reject(new $61fb775615801b9d$var$ErrorNoAuthCode());\n        if (this.authCodeForAccessTokenRequest) return this.authCodeForAccessTokenRequest;\n        if (!this.isAuthorized() || !hasAuthCodeBeenExchangedForAccessToken) {\n            this.authCodeForAccessTokenRequest = this.exchangeAuthCodeForAccessToken();\n            return this.authCodeForAccessTokenRequest;\n        }\n        // Depending on the server (and config), refreshToken may not be available.\n        if (refreshToken && this.isAccessTokenExpired()) return onAccessTokenExpiry(function() {\n            return _this.exchangeRefreshTokenForAccessToken();\n        });\n        return Promise.resolve({\n            token: accessToken,\n            explicitlyExposedTokens: explicitlyExposedTokens,\n            scopes: scopes,\n            refreshToken: refreshToken\n        });\n    };\n    /**\n     * Refresh an access token from the remote service.\n     */ OAuth2AuthCodePKCE.prototype.exchangeRefreshTokenForAccessToken = function() {\n        var _this = this;\n        var _a;\n        this.assertStateAndConfigArePresent();\n        var _b = this.config, extraRefreshParams = _b.extraRefreshParams, clientId = _b.clientId, tokenUrl = _b.tokenUrl;\n        var refreshToken = this.state.refreshToken;\n        if (!refreshToken) console.warn(\"No refresh token is present.\");\n        var url = tokenUrl;\n        var body = \"grant_type=refresh_token&\" + (\"refresh_token=\" + ((_a = refreshToken) === null || _a === void 0 ? void 0 : _a.value) + \"&\") + (\"client_id=\" + clientId);\n        if (extraRefreshParams) body = url + \"&\" + OAuth2AuthCodePKCE.objectToQueryString(extraRefreshParams);\n        return fetch(url, {\n            method: \"POST\",\n            body: body,\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(function(res) {\n            return res.status >= 400 ? res.json().then(function(data) {\n                return Promise.reject(data);\n            }) : res.json();\n        }).then(function(json) {\n            var access_token = json.access_token, expires_in = json.expires_in, refresh_token = json.refresh_token, scope = json.scope;\n            var explicitlyExposedTokens = _this.config.explicitlyExposedTokens;\n            var scopes = [];\n            var tokensToExpose = {};\n            var accessToken = {\n                value: access_token,\n                expiry: new Date(Date.now() + parseInt(expires_in) * 1000).toString()\n            };\n            _this.state.accessToken = accessToken;\n            if (refresh_token) {\n                var refreshToken_1 = {\n                    value: refresh_token\n                };\n                _this.state.refreshToken = refreshToken_1;\n            }\n            if (explicitlyExposedTokens) {\n                tokensToExpose = Object.fromEntries(explicitlyExposedTokens.map(function(tokenName) {\n                    return [\n                        tokenName,\n                        json[tokenName]\n                    ];\n                }).filter(function(_a) {\n                    var _ = _a[0], tokenValue = _a[1];\n                    return tokenValue !== undefined;\n                }));\n                _this.state.explicitlyExposedTokens = tokensToExpose;\n            }\n            if (scope) {\n                // Multiple scopes are passed and delimited by spaces,\n                // despite using the singular name \"scope\".\n                scopes = scope.split(\" \");\n                _this.state.scopes = scopes;\n            }\n            localStorage.setItem($61fb775615801b9d$exports.LOCALSTORAGE_STATE, JSON.stringify(_this.state));\n            var accessContext = {\n                token: accessToken,\n                scopes: scopes\n            };\n            if (explicitlyExposedTokens) accessContext.explicitlyExposedTokens = tokensToExpose;\n            return accessContext;\n        }).catch(function(data) {\n            var onInvalidGrant = _this.config.onInvalidGrant;\n            var error = data.error || \"There was a network error.\";\n            switch(error){\n                case \"invalid_grant\":\n                    onInvalidGrant(function() {\n                        return _this.fetchAuthorizationCode();\n                    });\n                    break;\n                default:\n                    break;\n            }\n            return Promise.reject($61fb775615801b9d$var$toErrorClass(error));\n        });\n    };\n    /**\n     * Get the scopes that were granted by the authorization server.\n     */ OAuth2AuthCodePKCE.prototype.getGrantedScopes = function() {\n        return this.state.scopes;\n    };\n    /**\n     * Signals if OAuth HTTP decorating should be active or not.\n     */ OAuth2AuthCodePKCE.prototype.isHTTPDecoratorActive = function(isActive) {\n        this.state.isHTTPDecoratorActive = isActive;\n        localStorage.setItem($61fb775615801b9d$exports.LOCALSTORAGE_STATE, JSON.stringify(this.state));\n    };\n    /**\n     * Tells if the client is authorized or not. This means the client has at\n     * least once successfully fetched an access token. The access token could be\n     * expired.\n     */ OAuth2AuthCodePKCE.prototype.isAuthorized = function() {\n        return !!this.state.accessToken;\n    };\n    /**\n     * Checks to see if the access token has expired.\n     */ OAuth2AuthCodePKCE.prototype.isAccessTokenExpired = function() {\n        var accessToken = this.state.accessToken;\n        return Boolean(accessToken && new Date() >= new Date(accessToken.expiry));\n    };\n    /**\n     * Resets the state of the client. Equivalent to \"logging out\" the user.\n     */ OAuth2AuthCodePKCE.prototype.reset = function() {\n        this.setState({});\n        this.authCodeForAccessTokenRequest = undefined;\n    };\n    /**\n     * If the state or config are missing, it means the client is in a bad state.\n     * This should never happen, but the check is there just in case.\n     */ OAuth2AuthCodePKCE.prototype.assertStateAndConfigArePresent = function() {\n        if (!this.state || !this.config) {\n            console.error(\"state:\", this.state, \"config:\", this.config);\n            throw new Error(\"state or config is not set.\");\n        }\n    };\n    /**\n     * Fetch an access token from the remote service. You may pass a custom\n     * authorization grant code for any reason, but this is non-standard usage.\n     */ OAuth2AuthCodePKCE.prototype.exchangeAuthCodeForAccessToken = function(codeOverride) {\n        var _this = this;\n        this.assertStateAndConfigArePresent();\n        var _a = this.state, _b = _a.authorizationCode, authorizationCode = _b === void 0 ? codeOverride : _b, _c = _a.codeVerifier, codeVerifier = _c === void 0 ? \"\" : _c;\n        var _d = this.config, clientId = _d.clientId, onInvalidGrant = _d.onInvalidGrant, redirectUrl = _d.redirectUrl;\n        if (!codeVerifier) console.warn(\"No code verifier is being sent.\");\n        else if (!authorizationCode) console.warn(\"No authorization grant code is being passed.\");\n        var url = this.config.tokenUrl;\n        var body = \"grant_type=authorization_code&\" + (\"code=\" + encodeURIComponent(authorizationCode || \"\") + \"&\") + (\"redirect_uri=\" + encodeURIComponent(redirectUrl) + \"&\") + (\"client_id=\" + encodeURIComponent(clientId) + \"&\") + (\"code_verifier=\" + codeVerifier);\n        return fetch(url, {\n            method: \"POST\",\n            body: body,\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(function(res) {\n            var jsonPromise = res.json().catch(function(_) {\n                return {\n                    error: \"invalid_json\"\n                };\n            });\n            if (!res.ok) return jsonPromise.then(function(_a) {\n                var error = _a.error;\n                switch(error){\n                    case \"invalid_grant\":\n                        onInvalidGrant(function() {\n                            return _this.fetchAuthorizationCode();\n                        });\n                        break;\n                    default:\n                        break;\n                }\n                return Promise.reject($61fb775615801b9d$var$toErrorClass(error));\n            });\n            return jsonPromise.then(function(json) {\n                var access_token = json.access_token, expires_in = json.expires_in, refresh_token = json.refresh_token, scope = json.scope;\n                var explicitlyExposedTokens = _this.config.explicitlyExposedTokens;\n                var scopes = [];\n                var tokensToExpose = {};\n                _this.state.hasAuthCodeBeenExchangedForAccessToken = true;\n                _this.authCodeForAccessTokenRequest = undefined;\n                var accessToken = {\n                    value: access_token,\n                    expiry: new Date(Date.now() + parseInt(expires_in) * 1000).toString()\n                };\n                _this.state.accessToken = accessToken;\n                if (refresh_token) {\n                    var refreshToken = {\n                        value: refresh_token\n                    };\n                    _this.state.refreshToken = refreshToken;\n                }\n                if (explicitlyExposedTokens) {\n                    tokensToExpose = Object.fromEntries(explicitlyExposedTokens.map(function(tokenName) {\n                        return [\n                            tokenName,\n                            json[tokenName]\n                        ];\n                    }).filter(function(_a) {\n                        var _ = _a[0], tokenValue = _a[1];\n                        return tokenValue !== undefined;\n                    }));\n                    _this.state.explicitlyExposedTokens = tokensToExpose;\n                }\n                if (scope) {\n                    // Multiple scopes are passed and delimited by spaces,\n                    // despite using the singular name \"scope\".\n                    scopes = scope.split(\" \");\n                    _this.state.scopes = scopes;\n                }\n                localStorage.setItem($61fb775615801b9d$exports.LOCALSTORAGE_STATE, JSON.stringify(_this.state));\n                var accessContext = {\n                    token: accessToken,\n                    scopes: scopes\n                };\n                if (explicitlyExposedTokens) accessContext.explicitlyExposedTokens = tokensToExpose;\n                return accessContext;\n            });\n        });\n    };\n    OAuth2AuthCodePKCE.prototype.recoverState = function() {\n        this.state = JSON.parse(localStorage.getItem($61fb775615801b9d$exports.LOCALSTORAGE_STATE) || \"{}\");\n        return this;\n    };\n    OAuth2AuthCodePKCE.prototype.setState = function(state) {\n        this.state = state;\n        localStorage.setItem($61fb775615801b9d$exports.LOCALSTORAGE_STATE, JSON.stringify(state));\n        return this;\n    };\n    /**\n     * Implements *base64url-encode* (RFC 4648 § 5) without padding, which is NOT\n     * the same as regular base64 encoding.\n     */ OAuth2AuthCodePKCE.base64urlEncode = function(value) {\n        var base64 = btoa(value);\n        base64 = base64.replace(/\\+/g, \"-\");\n        base64 = base64.replace(/\\//g, \"_\");\n        base64 = base64.replace(/=/g, \"\");\n        return base64;\n    };\n    /**\n     * Extracts a query string parameter.\n     */ OAuth2AuthCodePKCE.extractParamFromUrl = function(url, param) {\n        var queryString = url.split(\"?\");\n        if (queryString.length < 2) return \"\";\n        // Account for hash URLs that SPAs usually use.\n        queryString = queryString[1].split(\"#\");\n        var parts = queryString[0].split(\"&\").reduce(function(a, s) {\n            return a.concat(s.split(\"=\"));\n        }, []);\n        if (parts.length < 2) return \"\";\n        var paramIdx = parts.indexOf(param);\n        return decodeURIComponent(paramIdx >= 0 ? parts[paramIdx + 1] : \"\");\n    };\n    /**\n     * Converts the keys and values of an object to a url query string\n     */ OAuth2AuthCodePKCE.objectToQueryString = function(dict) {\n        return Object.entries(dict).map(function(_a) {\n            var key = _a[0], val = _a[1];\n            return key + \"=\" + encodeURIComponent(val);\n        }).join(\"&\");\n    };\n    /**\n     * Generates a code_verifier and code_challenge, as specified in rfc7636.\n     */ OAuth2AuthCodePKCE.generatePKCECodes = function() {\n        var output = new Uint32Array($61fb775615801b9d$exports.RECOMMENDED_CODE_VERIFIER_LENGTH);\n        crypto.getRandomValues(output);\n        var codeVerifier = OAuth2AuthCodePKCE.base64urlEncode(Array.from(output).map(function(num) {\n            return $61fb775615801b9d$var$PKCE_CHARSET[num % $61fb775615801b9d$var$PKCE_CHARSET.length];\n        }).join(\"\"));\n        return crypto.subtle.digest(\"SHA-256\", new TextEncoder().encode(codeVerifier)).then(function(buffer) {\n            var hash = new Uint8Array(buffer);\n            var binary = \"\";\n            var hashLength = hash.byteLength;\n            for(var i = 0; i < hashLength; i++)binary += String.fromCharCode(hash[i]);\n            return binary;\n        }).then(OAuth2AuthCodePKCE.base64urlEncode).then(function(codeChallenge) {\n            return {\n                codeChallenge: codeChallenge,\n                codeVerifier: codeVerifier\n            };\n        });\n    };\n    /**\n     * Generates random state to be passed for anti-csrf.\n     */ OAuth2AuthCodePKCE.generateRandomState = function(lengthOfState) {\n        var output = new Uint32Array(lengthOfState);\n        crypto.getRandomValues(output);\n        return Array.from(output).map(function(num) {\n            return $61fb775615801b9d$var$PKCE_CHARSET[num % $61fb775615801b9d$var$PKCE_CHARSET.length];\n        }).join(\"\");\n    };\n    return OAuth2AuthCodePKCE;\n}();\n$61fb775615801b9d$exports.OAuth2AuthCodePKCE = $61fb775615801b9d$var$OAuth2AuthCodePKCE;\n\n\n// ND-JSON response streamer\n// See https://lichess.org/api#section/Introduction/Streaming-with-ND-JSON\nconst $c18e048c96a42e94$export$e45226161c660403 = (name, response, handler)=>{\n    const stream = response.body.getReader();\n    const matcher = /\\r?\\n/;\n    const decoder = new TextDecoder();\n    let buf = \"\";\n    const process = (json)=>{\n        const msg = JSON.parse(json);\n        console.log(name, msg);\n        handler(msg);\n    };\n    const loop = ()=>stream.read().then(({ done: done, value: value })=>{\n            if (done) {\n                if (buf.length > 0) process(buf);\n                return;\n            } else {\n                const chunk = decoder.decode(value, {\n                    stream: true\n                });\n                buf += chunk;\n                const parts = buf.split(matcher);\n                buf = parts.pop() || \"\";\n                for (const i of parts.filter((p)=>p))process(i);\n                return loop();\n            }\n        });\n    return {\n        closePromise: loop(),\n        close: ()=>stream.cancel()\n    };\n};\n\n\nconst $c88ba0be6ebdc294$export$f478a3382b69e867 = \"https://lichess.org\";\nconst $c88ba0be6ebdc294$export$54a06e3f4a159ad8 = [\n    \"board:play\"\n];\nconst $c88ba0be6ebdc294$export$e80e8b1bea817f73 = \"launchchess-client\";\nconst $c88ba0be6ebdc294$export$e360011a2b524b1a = `${location.protocol}//${location.host}${location.pathname}`;\nconst $c88ba0be6ebdc294$export$334c29725a78c21d = (state, actions)=>({\n        oauth: new (0, $61fb775615801b9d$exports.OAuth2AuthCodePKCE)({\n            authorizationUrl: `${$c88ba0be6ebdc294$export$f478a3382b69e867}/oauth`,\n            tokenUrl: `${$c88ba0be6ebdc294$export$f478a3382b69e867}/api/token`,\n            clientId: $c88ba0be6ebdc294$export$e80e8b1bea817f73,\n            scopes: $c88ba0be6ebdc294$export$54a06e3f4a159ad8,\n            redirectUrl: $c88ba0be6ebdc294$export$e360011a2b524b1a,\n            onAccessTokenExpiry: (refreshAccessToken)=>refreshAccessToken(),\n            onInvalidGrant: console.warn\n        }),\n        // me?: Me,\n        init: async ()=>{\n            try {\n                const accessContext = await state.auth.oauth.getAccessToken();\n                if (accessContext) await state.auth.authenticate();\n            } catch (err) {\n                console.error(err);\n            }\n            if (!state.loggedIn()) try {\n                const hasAuthCode = await state.auth.oauth.isReturningFromAuthServer();\n                if (hasAuthCode) await state.auth.authenticate();\n            } catch (err) {\n                console.error(err);\n            }\n        },\n        login: async ()=>{\n            await state.auth.oauth.fetchAuthorizationCode();\n        },\n        logout: async ()=>{\n            if (state.loggedIn()) await state.user.httpClient(`${$c88ba0be6ebdc294$export$f478a3382b69e867}/api/token`, {\n                method: \"DELETE\"\n            });\n            localStorage.clear();\n            state.user = {};\n        },\n        authenticate: async ()=>{\n            const httpClient = state.auth.oauth.decorateFetchHTTPClient(window.fetch);\n            const res = await httpClient(`${$c88ba0be6ebdc294$export$f478a3382b69e867}/api/account`);\n            if (res.error) throw res.error;\n            const profile = await res.json();\n            const me = {\n                username: profile.username,\n                profile: profile,\n                httpClient: httpClient\n            };\n            state.user = me;\n            state.loggedIn(true);\n            localStorage.setItem(\"me\", JSON.stringify(me));\n            console.log(\"Authenticated as\", me.username, actions);\n            await actions.getGames();\n            (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).redraw();\n        },\n        openStream: async (path, config, handler)=>{\n            const stream = await state.auth.fetchResponse(path, config);\n            return (0, $c18e048c96a42e94$export$e45226161c660403)(`STREAM ${path}`, stream, handler);\n        },\n        fetchBody: async (path, config = {})=>{\n            const res = await state.auth.fetchResponse(path, config);\n            const body = await res.json();\n            return body;\n        },\n        fetchResponse: async (path, config = {})=>{\n            const res = await (state.user.httpClient || window.fetch)(`${$c88ba0be6ebdc294$export$f478a3382b69e867}${path}`, config);\n            if (res.error || !res.ok) {\n                const err = `${res.error} ${res.status} ${res.statusText}`;\n                alert(err);\n                throw err;\n            }\n            return res;\n        }\n    });\n\n\nconst $22788da0e2196326$export$2fb70d5e506c6bc2 = (state, actions)=>({\n        login: async (token)=>{\n            console.log(\"logging in\");\n            state.auth.login();\n            console.log(\"logged in as: \", state.user.username);\n            state.user.loggedIn = true;\n            if ((0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.param(\"redirect\")) (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set((0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.param(\"redirect\"));\n            else if ((0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.get() == \"/login\") (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/\");\n            // m.redraw()\n            state.user.profile = await state.auth.fetchBody(\"/oauth/profile\");\n            state.user.username = state.user.profile.username;\n        },\n        logout: ()=>{\n            console.log(\"logging out\");\n            state.auth.logout();\n            state.user.username = null;\n            state.user.loggedIn = false;\n            window.localStorage.setItem(\"CREDENTIALS_FLUSH\", Date.now().toString());\n            window.localStorage.removeItem(\"CREDENTIALS_FLUSH\");\n        // m.redraw()\n        },\n        initAuth: async ()=>{\n            if (localStorage.getItem(\"me\")) {\n                state.user = JSON.parse(localStorage.getItem(\"me\"));\n                state.user.loggedIn = true;\n                console.log(\"loaded user from localstorage\", state.user);\n            }\n            state.auth = (0, $c88ba0be6ebdc294$export$334c29725a78c21d)(state, actions);\n            await state.auth.init();\n            console.log(\"auth inited\");\n        }\n    });\n\n\n\nvar $c6ddc35a8c0d5f38$exports = {};\n\"use strict\";\n\n$c6ddc35a8c0d5f38$exports = (parcelRequire(\"f1bNS\"));\n\n\nconst $a01e4d144b50218c$export$d02631cccf789723 = (start, end)=>Array.apply(0, Array(end - 1)).map((element, index)=>index + start);\nconst $a01e4d144b50218c$export$7254cc27399e90bd = ()=>({\n        auth: null,\n        loggedIn: $c6ddc35a8c0d5f38$exports(false),\n        user: {\n            username: null,\n            profile: null\n        },\n        theme: \"dark\",\n        input: null,\n        output: null,\n        inputName: null,\n        outputName: null,\n        inputs: $c6ddc35a8c0d5f38$exports([]),\n        outputs: $c6ddc35a8c0d5f38$exports([]),\n        deviceId: null,\n        deviceName: null,\n        deviceType: null,\n        connected: false,\n        top: $a01e4d144b50218c$export$d02631cccf789723(91, 10),\n        header: null,\n        layout: null,\n        changeLayout: null,\n        game: null,\n        games: $c6ddc35a8c0d5f38$exports([]),\n        stream: null,\n        opponent: null,\n        chess: new (0, $6eb582f9081eb7e5$export$a4d6ea685c300d39)(),\n        ground: null,\n        color: \"w\",\n        selectedSquare: null,\n        selectedPiece: null,\n        invert: $c6ddc35a8c0d5f38$exports(false),\n        grid: true,\n        pieces: true,\n        influence: false,\n        history: $c6ddc35a8c0d5f38$exports(1),\n        animationDuration: 400,\n        animations: [],\n        colors: (0, $9066c94fd6c8e22f$export$56d196d2844d1ca1)\n    });\nconst $a01e4d144b50218c$export$b52183d5cfb26dc9 = (state, actions)=>({\n        incrementHistory: ()=>{\n            state.history(state.history() + 1);\n            actions.lightBoard();\n        },\n        decrementHistory: ()=>{\n            state.history(Math.max(0, state.history() - 1));\n            actions.lightBoard();\n        },\n        send: (type, message)=>{\n            try {\n                state.output.send(type, message);\n            } catch (error) {\n                console.debug(\"failed to send message\", error);\n            }\n        },\n        sendSysex: (header, message)=>{\n            try {\n                state.output.sendSysex(header, message);\n            } catch (error) {\n                console.debug(\"failed to send sysex\", error);\n            }\n        },\n        lightMatrix: ()=>null,\n        lightGame: ()=>null,\n        clearAnimations: ()=>null,\n        clear: ()=>null,\n        highlightAvailableMoves: ()=>null\n    });\nconst $a01e4d144b50218c$export$81ce9b7e86ec18db = (state, actions)=>({\n        onmove: (orig, dest)=>{\n            let move = {\n                from: orig,\n                to: dest\n            };\n            let piece = state.chess.get(move.from);\n            if (piece.type == \"p\" && (piece.color == \"w\" && move.to.charAt(1) == 8 || piece.color == \"b\" && move.to.charAt(1) == 1)) {\n                console.log(\"promotion! Auto promote to Queen\");\n                move.promotion = \"q\";\n            }\n            state.chess.move(move);\n            console.log(\"moved\", move, piece, state.chess.ascii());\n            state.ground.set({\n                fen: state.chess.fen()\n            });\n            actions.lightBoard(true);\n            (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).redraw();\n            // send to lichess api\n            let move_uci = (0, $236ba31c448bdb87$export$ef42e39072fd379)(move);\n            let body = state.auth.fetchBody(\"/api/board/game/\" + (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.param(\"id\") + \"/move/\" + move_uci, {\n                method: \"post\"\n            });\n            console.log(\"played move\", move_uci, body);\n        }\n    });\n\n\n\nconst $9066c94fd6c8e22f$export$9dae6f82820323cf = 144;\nconst $9066c94fd6c8e22f$export$d265beb1ee5d4530 = 176;\nconst $9066c94fd6c8e22f$export$c6f17c29808f1b66 = [\n    0,\n    32,\n    41\n];\nconst $9066c94fd6c8e22f$export$4b04cd3b2feae9ab = {\n    LaunchpadX: [\n        2,\n        12\n    ],\n    LaunchpadMk2: [\n        2,\n        24\n    ],\n    LaunchpadPro: [\n        2,\n        16\n    ],\n    LaunchpadMini: [\n        2,\n        14\n    ],\n    LaunchpadMiniMk3: [\n        2,\n        13\n    ],\n    LaunchpadS: [\n        32,\n        0\n    ]\n};\nconst $9066c94fd6c8e22f$export$776a922db93662cb = {\n    \"Launchpad MK2 MIDI 1\": \"LaunchpadMk2\",\n    \"Launchpad MK2\": \"LaunchpadMk2\",\n    \"Launchpad X MIDI 2\": \"LaunchpadX\",\n    \"Launchpad X LPX MIDI In\": \"LaunchpadX\",\n    \"Launchpad X LPX MIDI Out\": \"LaunchpadX\",\n    \"MIDIIN2 (LPX MIDI)\": \"LaunchpadX\",\n    \"MIDIOUT2 (LPX MIDI)\": \"LaunchpadX\",\n    \"Launchpad Mini In\": \"LaunchpadMini\",\n    \"Launchpad Mini Out\": \"LaunchpadMini\",\n    \"LPMiniMK3 MIDI In\": \"LaunchpadMiniMk3\",\n    \"LPMiniMK3 MIDI Out\": \"LaunchpadMiniMk3\"\n};\nconst $9066c94fd6c8e22f$export$56d196d2844d1ca1 = {\n    p: 13,\n    r: 9,\n    n: 45,\n    b: 37,\n    q: 53,\n    k: 49,\n    white: 3,\n    dim_white: 1,\n    black: 0,\n    movable: 21,\n    moved: 89,\n    check: 5,\n    brown: 83\n};\nconst $9066c94fd6c8e22f$export$a17043daf8ba543f = (state, actions)=>({\n        nToLaunch: (n)=>{\n            /** Convert a 0-63 chess square into a Launchpad MIDI number\n     * @param {int} n - 0-63, chess square\n     */ if (state.invert()) n = 63 - n;\n            return 11 + (n >> 3) * 10 + n % 8;\n        },\n        launchToN: (l)=>{\n            /** Convert a Launchpad MIDI number into 0-63 for chess squares.\n     * @param {int} l - Launchpad MIDI number\n     */ if ((l - 11) % 10 == 8) // fix for LaunchpadMk2 sending side buttons as NOTE_ON\n            return null;\n            const n = Math.floor((l - 11) / 10) * 8 + (l - 11) % 10;\n            return state.invert() ? 63 - n : n;\n        },\n        squareToN: (sq)=>{\n            return (Number(sq[1]) - 1) * 8 + sq.charCodeAt(0) - 97;\n        },\n        nToSquare: (n)=>{\n            return String.fromCharCode(97 + n % 8, 49 + (n >> 3));\n        },\n        toggleLive: (mode)=>{\n            if (mode === true) state.connected = true;\n            else if (mode === false) state.connected = false;\n            else state.connected = !state.connected;\n            actions.sendSysex($9066c94fd6c8e22f$export$c6f17c29808f1b66, [\n                ...state.header,\n                state.changeLayout,\n                state.connected ? state.layout[1] : state.layout[0]\n            ]);\n        },\n        clear: ()=>{\n            for(var i = 0; i < 64; i++)actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf, [\n                actions.nToLaunch(i),\n                0\n            ]);\n            state.top.forEach((b, i)=>{\n                actions.send($9066c94fd6c8e22f$export$d265beb1ee5d4530, [\n                    b,\n                    0\n                ]);\n            });\n        },\n        grid: ()=>{\n            for(let y = 0; y < 8; y++)for(let x = 0; x < 8; x++)actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf, [\n                11 + x + y * 10,\n                (x + y) % 2 == 0 ? 0 : 1\n            ]);\n        },\n        lightMatrix: (m)=>{\n            for(let y = 0; y < 8; y++)for(let x = 0; x < 8; x++)actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf, [\n                11 + x + y * 10,\n                m[x + y * 8]\n            ]);\n        },\n        lightGame: (animate = false)=>{\n            const board = state.chess.board();\n            for(let i = 0; i < 64; i++){\n                let piece;\n                let color = 0;\n                const l = actions.nToLaunch(i);\n                if (board[63 - i >> 3][i % 8]) {\n                    piece = board[63 - i >> 3][i % 8];\n                    // console.log('piece at i', i, piece)\n                    if (state.pieces) {\n                        color = $9066c94fd6c8e22f$export$56d196d2844d1ca1[piece.type];\n                        if (piece.color == \"b\") color += 2;\n                    } else if (state.grid) color = (i + (i >> 3)) % 2 == 0 ? 0 : 1;\n                } else {\n                    piece = null;\n                    if (state.grid) color = (i + (i >> 3)) % 2 == 0 ? 0 : 1;\n                }\n                // console.log(i, piece, l)\n                // console.log(NOTE_ON, l, c)\n                actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf, [\n                    l,\n                    color\n                ]);\n            }\n            let history = state.chess.history();\n            for(let i = 0; i < Math.min(history.length, state.history()); i++)actions.highlightMove(i, animate);\n        },\n        highlightMove: (index, animate = false)=>{\n            let lastMove = state.chess.history({\n                verbose: true\n            }).reverse()[index];\n            if (lastMove) {\n                console.log(\"lastmove \", lastMove);\n                let from_square = lastMove.from;\n                let to_square = lastMove.to;\n                console.log(\"highlighting\", lastMove, from_square, to_square);\n                let path = (0, $d5ffb40ab7d69c90$export$dfb56f6b9abe10bc)(from_square, to_square);\n                // Add an extra final square to the animation list\n                // so the piece holds on the final square before restarting\n                path.push(path[path.length - 1]);\n                let piece = lastMove.piece;\n                let color = $9066c94fd6c8e22f$export$56d196d2844d1ca1[piece];\n                if (lastMove.color == \"b\") color += 2;\n                if (animate) actions.animatePath(path, color, 0);\n                if (state.chess.isCheck()) actions.highlightCheck();\n                if (state.chess.isCheckmate()) actions.highlightCheckmate();\n            }\n        },\n        animatePath: (path, color, step)=>{\n            // console.log('animating path', path, step)\n            let current = path.splice(step, 1)[0];\n            path.forEach((square, i)=>{\n                actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf | 2, [\n                    actions.nToLaunch(square.y * 8 + square.x),\n                    $9066c94fd6c8e22f$export$56d196d2844d1ca1.moved\n                ]);\n            });\n            actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf | 2, [\n                actions.nToLaunch(current.y * 8 + current.x),\n                color\n            ]);\n            path.splice(step, 0, current);\n            // console.log('path', path.length)\n            state.animations.push(setTimeout(actions.animatePath, state.animationDuration, path, color, (step + 1) % path.length));\n        },\n        clearAnimations: ()=>{\n            state.animations.forEach((a, i)=>{\n                clearTimeout(a);\n            });\n        },\n        highlightCheck: ()=>{\n            let k = (0, $236ba31c448bdb87$export$f784c029d2bce31b)(state.chess, {\n                type: \"k\",\n                color: state.chess.turn()\n            })[0];\n            console.log(\"check!\", k);\n            actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf | 1, [\n                actions.nToLaunch(actions.squareToN(k)),\n                $9066c94fd6c8e22f$export$56d196d2844d1ca1.check\n            ]);\n        },\n        highlightCheckmate: ()=>{\n            let k = (0, $236ba31c448bdb87$export$f784c029d2bce31b)(state.chess, {\n                type: \"k\",\n                color: state.chess.turn()\n            })[0];\n            console.log(\"mate!\", k);\n            actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf, [\n                actions.nToLaunch(actions.squareToN(k)),\n                $9066c94fd6c8e22f$export$56d196d2844d1ca1.check\n            ]);\n        },\n        highlightAvailableMoves: (square)=>{\n            let s = actions.nToLaunch(actions.squareToN(square));\n            console.log(\"highlighting\", square, s, actions.squareToN(square));\n            actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf | 1, [\n                s,\n                $9066c94fd6c8e22f$export$56d196d2844d1ca1.movable\n            ]);\n            let piece_moves = state.chess.moves({\n                square: square,\n                verbose: true\n            });\n            console.log(\"possible moves\", piece_moves);\n            piece_moves.forEach((p, i)=>{\n                // console.log(p)\n                if (state.chess.get(p.to)) // piece at square. flash green\n                // console.log('capture', actions.nToLaunch(actions.squareToN(p.to)))\n                actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf | 1, [\n                    actions.nToLaunch(actions.squareToN(p.to)),\n                    $9066c94fd6c8e22f$export$56d196d2844d1ca1.movable\n                ]);\n                else // console.log('regular move', p.to, actions.squareToN(p.to), actions.nToLaunch(actions.squareToN(p.to)))\n                actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf | 2, [\n                    actions.nToLaunch(actions.squareToN(p.to)),\n                    $9066c94fd6c8e22f$export$56d196d2844d1ca1.movable\n                ]);\n            });\n        }\n    });\nconst $9066c94fd6c8e22f$export$726be47e50c912d1 = (state, actions)=>{\n    state.header = [\n        2,\n        12\n    ];\n    state.changeLayout = 14;\n    state.layout = [\n        0,\n        1\n    ];\n    return {\n        ...$9066c94fd6c8e22f$export$a17043daf8ba543f(state, actions)\n    };\n};\nconst $9066c94fd6c8e22f$export$fef6b4cfd4f0cac0 = (state, actions)=>{\n    state.header = [\n        2,\n        16\n    ];\n    state.changeLayout = 44;\n    state.layout = [\n        0,\n        3\n    ];\n    return {\n        ...$9066c94fd6c8e22f$export$a17043daf8ba543f(state, actions)\n    };\n};\nconst $9066c94fd6c8e22f$export$e078d1c822b6d179 = (state, actions)=>{\n    state.header = [\n        2,\n        13\n    ];\n    state.changeLayout = 14;\n    state.layout = [\n        0,\n        1\n    ];\n    return {\n        ...$9066c94fd6c8e22f$export$cb572084ac15dab5(state, actions)\n    };\n};\nconst $9066c94fd6c8e22f$export$cb572084ac15dab5 = (state, actions)=>{\n    state.top = (0, $a01e4d144b50218c$export$d02631cccf789723)(104, 9);\n    state.header = [\n        2,\n        24\n    ];\n    state.changeLayout = 34;\n    state.layout = [\n        0,\n        0\n    ];\n    return {\n        ...$9066c94fd6c8e22f$export$a17043daf8ba543f(state, actions)\n    };\n};\nconst $9066c94fd6c8e22f$export$ceb4afcefeff8d = (state, actions)=>{\n    state.changeLayout = 14;\n    state.layout = [\n        0,\n        1\n    ];\n    return {\n        ...$9066c94fd6c8e22f$export$a17043daf8ba543f(state, actions)\n    };\n};\nconst $9066c94fd6c8e22f$export$20e6038b255aa41 = (state, actions)=>({\n        ...$9066c94fd6c8e22f$export$a17043daf8ba543f(state, actions),\n        nToLaunch: (n)=>{\n            /** Convert a 0-63 chess square into a Launchpad MIDI number\n     * @param {int} n - 0-63, chess square\n     */ if (state.invert()) return 8 - n % 8 + (n >> 3) * 16;\n            else return 112 + n % 8 - (n >> 3) * 16;\n        },\n        launchToN: (l)=>{\n            /** Convert a Launchpad MIDI number into 0-63 for chess squares.\n     * The original Launchpad uses a different grid numbering system than mk2+ Launchpads\n     * @param {int} l - Launchpad MIDI number\n     */ if (state.invert()) return Math.floor(l / 16) * 8 + 7 - (l % 8 >> 3);\n            else return (7 - Math.floor(l / 16)) * 8 + (l % 8 >> 3);\n        },\n        toggleLive: (mode)=>{\n            if (mode === true) state.connected = true;\n            else if (mode === false) state.connected = false;\n            else state.connected = !state.connected;\n            actions.send($9066c94fd6c8e22f$export$d265beb1ee5d4530, [\n                0,\n                state.connected ? 1 : 2\n            ]);\n        },\n        lightMatrix: (m)=>{\n            for(let y = 0; y < 8; y++)for(let x = 0; x < 8; x++)actions.send($9066c94fd6c8e22f$export$9dae6f82820323cf, [\n                actions.nToLaunch(x + y * 8),\n                m[x + y * 8]\n            ]);\n        }\n    });\nconst $9066c94fd6c8e22f$export$4586496351d727fb = {\n    Launchpad: $9066c94fd6c8e22f$export$20e6038b255aa41,\n    LaunchpadS: $9066c94fd6c8e22f$export$20e6038b255aa41,\n    LaunchpadMk2: $9066c94fd6c8e22f$export$cb572084ac15dab5,\n    LaunchpadX: $9066c94fd6c8e22f$export$726be47e50c912d1,\n    LaunchpadMini: $9066c94fd6c8e22f$export$e078d1c822b6d179,\n    LaunchpadMiniMk3: $9066c94fd6c8e22f$export$ceb4afcefeff8d,\n    LaunchpadPro: $9066c94fd6c8e22f$export$fef6b4cfd4f0cac0\n};\n\n\nvar $6ff984c8b6ecdbd9$exports = {};\n\"use strict\";\nvar $1e857081292cf176$exports = {};\n$1e857081292cf176$exports = {};\n\n\nvar $6ff984c8b6ecdbd9$var$ndjsonStream = function(response) {\n    // For cancellation\n    var is_reader, cancellationRequest = false;\n    return new ReadableStream({\n        start: function(controller) {\n            var reader = response.getReader();\n            is_reader = reader;\n            var decoder = new TextDecoder();\n            var data_buf = \"\";\n            reader.read().then(function processResult(result) {\n                if (result.done) {\n                    if (cancellationRequest) // Immediately exit\n                    return;\n                    data_buf = data_buf.trim();\n                    if (data_buf.length !== 0) try {\n                        var data_l = JSON.parse(data_buf);\n                        controller.enqueue(data_l);\n                    } catch (e) {\n                        controller.error(e);\n                        return;\n                    }\n                    controller.close();\n                    return;\n                }\n                var data = decoder.decode(result.value, {\n                    stream: true\n                });\n                data_buf += data;\n                var lines = data_buf.split(\"\\n\");\n                for(var i = 0; i < lines.length - 1; ++i){\n                    var l = lines[i].trim();\n                    if (l.length > 0) try {\n                        var data_line = JSON.parse(l);\n                        controller.enqueue(data_line);\n                    } catch (e) {\n                        controller.error(e);\n                        cancellationRequest = true;\n                        reader.cancel();\n                        return;\n                    }\n                }\n                data_buf = lines[lines.length - 1];\n                return reader.read().then(processResult);\n            });\n        },\n        cancel: function(reason) {\n            console.log(\"Cancel registered due to \", reason);\n            cancellationRequest = true;\n            is_reader.cancel();\n        }\n    });\n};\n$6ff984c8b6ecdbd9$exports = $1e857081292cf176$exports.ndjsonStream = $6ff984c8b6ecdbd9$var$ndjsonStream;\n\n\n\nvar $134912d8b38e370d$exports = {};\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var $134912d8b38e370d$var$runtime = function(exports) {\n    \"use strict\";\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var defineProperty = Object.defineProperty || function(obj, key, desc) {\n        obj[key] = desc.value;\n    };\n    var undefined; // More compressible than void 0.\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    function define(obj, key, value) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n        return obj[key];\n    }\n    try {\n        // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n        define({}, \"\");\n    } catch (err) {\n        define = function(obj, key, value) {\n            return obj[key] = value;\n        };\n    }\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n        // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n        var generator = Object.create(protoGenerator.prototype);\n        var context = new Context(tryLocsList || []);\n        // The ._invoke method unifies the implementations of the .next,\n        // .throw, and .return methods.\n        defineProperty(generator, \"_invoke\", {\n            value: makeInvokeMethod(innerFn, self, context)\n        });\n        return generator;\n    }\n    exports.wrap = wrap;\n    // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n    function tryCatch(fn, obj, arg) {\n        try {\n            return {\n                type: \"normal\",\n                arg: fn.call(obj, arg)\n            };\n        } catch (err) {\n            return {\n                type: \"throw\",\n                arg: err\n            };\n        }\n    }\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\";\n    // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n    var ContinueSentinel = {};\n    // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function() {\n        return this;\n    });\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = GeneratorFunctionPrototype;\n    defineProperty(Gp, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: true\n    });\n    defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: true\n    });\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\");\n    // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n    function defineIteratorMethods(prototype) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(method) {\n            define(prototype, method, function(arg) {\n                return this._invoke(method, arg);\n            });\n        });\n    }\n    exports.isGeneratorFunction = function(genFun) {\n        var ctor = typeof genFun === \"function\" && genFun.constructor;\n        return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n    exports.mark = function(genFun) {\n        if (Object.setPrototypeOf) Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n        else {\n            genFun.__proto__ = GeneratorFunctionPrototype;\n            define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n        }\n        genFun.prototype = Object.create(Gp);\n        return genFun;\n    };\n    // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n    exports.awrap = function(arg) {\n        return {\n            __await: arg\n        };\n    };\n    function AsyncIterator(generator, PromiseImpl) {\n        function invoke(method, arg, resolve, reject) {\n            var record = tryCatch(generator[method], generator, arg);\n            if (record.type === \"throw\") reject(record.arg);\n            else {\n                var result = record.arg;\n                var value = result.value;\n                if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) return PromiseImpl.resolve(value.__await).then(function(value) {\n                    invoke(\"next\", value, resolve, reject);\n                }, function(err) {\n                    invoke(\"throw\", err, resolve, reject);\n                });\n                return PromiseImpl.resolve(value).then(function(unwrapped) {\n                    // When a yielded Promise is resolved, its final value becomes\n                    // the .value of the Promise<{value,done}> result for the\n                    // current iteration.\n                    result.value = unwrapped;\n                    resolve(result);\n                }, function(error) {\n                    // If a rejected Promise was yielded, throw the rejection back\n                    // into the async generator function so it can be handled there.\n                    return invoke(\"throw\", error, resolve, reject);\n                });\n            }\n        }\n        var previousPromise;\n        function enqueue(method, arg) {\n            function callInvokeWithMethodAndArg() {\n                return new PromiseImpl(function(resolve, reject) {\n                    invoke(method, arg, resolve, reject);\n                });\n            }\n            return previousPromise = // If enqueue has been called before, then we want to wait until\n            // all previous Promises have been resolved before calling invoke,\n            // so that results are always delivered in the correct order. If\n            // enqueue has not been called before, then it is important to\n            // call invoke immediately, without waiting on a callback to fire,\n            // so that the async generator function has the opportunity to do\n            // any necessary setup in a predictable way. This predictability\n            // is why the Promise constructor synchronously invokes its\n            // executor callback, and why async functions synchronously\n            // execute code before the first await. Since we implement simple\n            // async functions in terms of async generators, it is especially\n            // important to get this right, even though it requires care.\n            previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n            // invocations of the iterator.\n            callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n        }\n        // Define the unified helper method that is used to implement .next,\n        // .throw, and .return (see defineIteratorMethods).\n        defineProperty(this, \"_invoke\", {\n            value: enqueue\n        });\n    }\n    defineIteratorMethods(AsyncIterator.prototype);\n    define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n        return this;\n    });\n    exports.AsyncIterator = AsyncIterator;\n    // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n    exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n        if (PromiseImpl === void 0) PromiseImpl = Promise;\n        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n        return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n         : iter.next().then(function(result) {\n            return result.done ? result.value : iter.next();\n        });\n    };\n    function makeInvokeMethod(innerFn, self, context) {\n        var state = GenStateSuspendedStart;\n        return function invoke(method, arg) {\n            if (state === GenStateExecuting) throw new Error(\"Generator is already running\");\n            if (state === GenStateCompleted) {\n                if (method === \"throw\") throw arg;\n                // Be forgiving, per 25.3.3.3.3 of the spec:\n                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n                return doneResult();\n            }\n            context.method = method;\n            context.arg = arg;\n            while(true){\n                var delegate = context.delegate;\n                if (delegate) {\n                    var delegateResult = maybeInvokeDelegate(delegate, context);\n                    if (delegateResult) {\n                        if (delegateResult === ContinueSentinel) continue;\n                        return delegateResult;\n                    }\n                }\n                if (context.method === \"next\") // Setting context._sent for legacy support of Babel's\n                // function.sent implementation.\n                context.sent = context._sent = context.arg;\n                else if (context.method === \"throw\") {\n                    if (state === GenStateSuspendedStart) {\n                        state = GenStateCompleted;\n                        throw context.arg;\n                    }\n                    context.dispatchException(context.arg);\n                } else if (context.method === \"return\") context.abrupt(\"return\", context.arg);\n                state = GenStateExecuting;\n                var record = tryCatch(innerFn, self, context);\n                if (record.type === \"normal\") {\n                    // If an exception is thrown from innerFn, we leave state ===\n                    // GenStateExecuting and loop back for another invocation.\n                    state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n                    if (record.arg === ContinueSentinel) continue;\n                    return {\n                        value: record.arg,\n                        done: context.done\n                    };\n                } else if (record.type === \"throw\") {\n                    state = GenStateCompleted;\n                    // Dispatch the exception by looping back around to the\n                    // context.dispatchException(context.arg) call above.\n                    context.method = \"throw\";\n                    context.arg = record.arg;\n                }\n            }\n        };\n    }\n    // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n    function maybeInvokeDelegate(delegate, context) {\n        var methodName = context.method;\n        var method = delegate.iterator[methodName];\n        if (method === undefined) {\n            // A .throw or .return when the delegate iterator has no .throw\n            // method, or a missing .next mehtod, always terminate the\n            // yield* loop.\n            context.delegate = null;\n            // Note: [\"return\"] must be used for ES3 parsing compatibility.\n            if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n                // If the delegate iterator has a return method, give it a\n                // chance to clean up.\n                context.method = \"return\";\n                context.arg = undefined;\n                maybeInvokeDelegate(delegate, context);\n                if (context.method === \"throw\") // If maybeInvokeDelegate(context) changed context.method from\n                // \"return\" to \"throw\", let that override the TypeError below.\n                return ContinueSentinel;\n            }\n            if (methodName !== \"return\") {\n                context.method = \"throw\";\n                context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\");\n            }\n            return ContinueSentinel;\n        }\n        var record = tryCatch(method, delegate.iterator, context.arg);\n        if (record.type === \"throw\") {\n            context.method = \"throw\";\n            context.arg = record.arg;\n            context.delegate = null;\n            return ContinueSentinel;\n        }\n        var info = record.arg;\n        if (!info) {\n            context.method = \"throw\";\n            context.arg = new TypeError(\"iterator result is not an object\");\n            context.delegate = null;\n            return ContinueSentinel;\n        }\n        if (info.done) {\n            // Assign the result of the finished delegate to the temporary\n            // variable specified by delegate.resultName (see delegateYield).\n            context[delegate.resultName] = info.value;\n            // Resume execution at the desired location (see delegateYield).\n            context.next = delegate.nextLoc;\n            // If context.method was \"throw\" but the delegate handled the\n            // exception, let the outer generator proceed normally. If\n            // context.method was \"next\", forget context.arg since it has been\n            // \"consumed\" by the delegate iterator. If context.method was\n            // \"return\", allow the original .return call to continue in the\n            // outer generator.\n            if (context.method !== \"return\") {\n                context.method = \"next\";\n                context.arg = undefined;\n            }\n        } else // Re-yield the result returned by the delegate method.\n        return info;\n        // The delegate iterator is finished, so forget it and continue with\n        // the outer generator.\n        context.delegate = null;\n        return ContinueSentinel;\n    }\n    // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\");\n    // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n    define(Gp, iteratorSymbol, function() {\n        return this;\n    });\n    define(Gp, \"toString\", function() {\n        return \"[object Generator]\";\n    });\n    function pushTryEntry(locs) {\n        var entry = {\n            tryLoc: locs[0]\n        };\n        if (1 in locs) entry.catchLoc = locs[1];\n        if (2 in locs) {\n            entry.finallyLoc = locs[2];\n            entry.afterLoc = locs[3];\n        }\n        this.tryEntries.push(entry);\n    }\n    function resetTryEntry(entry) {\n        var record = entry.completion || {};\n        record.type = \"normal\";\n        delete record.arg;\n        entry.completion = record;\n    }\n    function Context(tryLocsList) {\n        // The root entry object (effectively a try statement without a catch\n        // or a finally block) gives us a place to store values thrown from\n        // locations where there is no enclosing try statement.\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ];\n        tryLocsList.forEach(pushTryEntry, this);\n        this.reset(true);\n    }\n    exports.keys = function(val) {\n        var object = Object(val);\n        var keys = [];\n        for(var key in object)keys.push(key);\n        keys.reverse();\n        // Rather than returning an object with a next method, we keep\n        // things simple and return the next function itself.\n        return function next() {\n            while(keys.length){\n                var key = keys.pop();\n                if (key in object) {\n                    next.value = key;\n                    next.done = false;\n                    return next;\n                }\n            }\n            // To avoid creating an additional object, we just hang the .value\n            // and .done properties off the next function object itself. This\n            // also ensures that the minifier will not anonymize the function.\n            next.done = true;\n            return next;\n        };\n    };\n    function values(iterable) {\n        if (iterable) {\n            var iteratorMethod = iterable[iteratorSymbol];\n            if (iteratorMethod) return iteratorMethod.call(iterable);\n            if (typeof iterable.next === \"function\") return iterable;\n            if (!isNaN(iterable.length)) {\n                var i = -1, next = function next() {\n                    while(++i < iterable.length)if (hasOwn.call(iterable, i)) {\n                        next.value = iterable[i];\n                        next.done = false;\n                        return next;\n                    }\n                    next.value = undefined;\n                    next.done = true;\n                    return next;\n                };\n                return next.next = next;\n            }\n        }\n        // Return an iterator with no values.\n        return {\n            next: doneResult\n        };\n    }\n    exports.values = values;\n    function doneResult() {\n        return {\n            value: undefined,\n            done: true\n        };\n    }\n    Context.prototype = {\n        constructor: Context,\n        reset: function(skipTempReset) {\n            this.prev = 0;\n            this.next = 0;\n            // Resetting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            this.sent = this._sent = undefined;\n            this.done = false;\n            this.delegate = null;\n            this.method = \"next\";\n            this.arg = undefined;\n            this.tryEntries.forEach(resetTryEntry);\n            if (!skipTempReset) {\n                for(var name in this)// Not sure about the optimal order of these conditions:\n                if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) this[name] = undefined;\n            }\n        },\n        stop: function() {\n            this.done = true;\n            var rootEntry = this.tryEntries[0];\n            var rootRecord = rootEntry.completion;\n            if (rootRecord.type === \"throw\") throw rootRecord.arg;\n            return this.rval;\n        },\n        dispatchException: function(exception) {\n            if (this.done) throw exception;\n            var context = this;\n            function handle(loc, caught) {\n                record.type = \"throw\";\n                record.arg = exception;\n                context.next = loc;\n                if (caught) {\n                    // If the dispatched exception was caught by a catch block,\n                    // then let that catch block handle the exception normally.\n                    context.method = \"next\";\n                    context.arg = undefined;\n                }\n                return !!caught;\n            }\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                var record = entry.completion;\n                if (entry.tryLoc === \"root\") // Exception thrown outside of any try block that could handle\n                // it, so set the completion value of the entire function to\n                // throw the exception.\n                return handle(\"end\");\n                if (entry.tryLoc <= this.prev) {\n                    var hasCatch = hasOwn.call(entry, \"catchLoc\");\n                    var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n                    if (hasCatch && hasFinally) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);\n                        else if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    } else if (hasCatch) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);\n                    } else if (hasFinally) {\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    } else throw new Error(\"try statement without catch or finally\");\n                }\n            }\n        },\n        abrupt: function(type, arg) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                    var finallyEntry = entry;\n                    break;\n                }\n            }\n            if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) // Ignore the finally entry if control is not jumping to a\n            // location outside the try/catch block.\n            finallyEntry = null;\n            var record = finallyEntry ? finallyEntry.completion : {};\n            record.type = type;\n            record.arg = arg;\n            if (finallyEntry) {\n                this.method = \"next\";\n                this.next = finallyEntry.finallyLoc;\n                return ContinueSentinel;\n            }\n            return this.complete(record);\n        },\n        complete: function(record, afterLoc) {\n            if (record.type === \"throw\") throw record.arg;\n            if (record.type === \"break\" || record.type === \"continue\") this.next = record.arg;\n            else if (record.type === \"return\") {\n                this.rval = this.arg = record.arg;\n                this.method = \"return\";\n                this.next = \"end\";\n            } else if (record.type === \"normal\" && afterLoc) this.next = afterLoc;\n            return ContinueSentinel;\n        },\n        finish: function(finallyLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.finallyLoc === finallyLoc) {\n                    this.complete(entry.completion, entry.afterLoc);\n                    resetTryEntry(entry);\n                    return ContinueSentinel;\n                }\n            }\n        },\n        \"catch\": function(tryLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc === tryLoc) {\n                    var record = entry.completion;\n                    if (record.type === \"throw\") {\n                        var thrown = record.arg;\n                        resetTryEntry(entry);\n                    }\n                    return thrown;\n                }\n            }\n            // The context.catch method must only be called with a location\n            // argument that corresponds to a known catch block.\n            throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function(iterable, resultName, nextLoc) {\n            this.delegate = {\n                iterator: values(iterable),\n                resultName: resultName,\n                nextLoc: nextLoc\n            };\n            if (this.method === \"next\") // Deliberately forget the last sent value so that we don't\n            // accidentally pass it on to the delegate.\n            this.arg = undefined;\n            return ContinueSentinel;\n        }\n    };\n    // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n    return exports;\n}(// If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n(0, $134912d8b38e370d$exports));\ntry {\n    regeneratorRuntime = $134912d8b38e370d$var$runtime;\n} catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, in modern engines\n    // we can explicitly access globalThis. In older engines we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    if (typeof globalThis === \"object\") globalThis.regeneratorRuntime = $134912d8b38e370d$var$runtime;\n    else Function(\"r\", \"regeneratorRuntime = r\")($134912d8b38e370d$var$runtime);\n}\n\n\nconst $65dd0e8440d320eb$export$df8cbc0f1f104ed7 = (endpoint, config = {})=>{\n    var res;\n    return fetch(endpoint, config) // make a fetch request to a NDJSON stream service\n    .then((response)=>{\n        return (0, (/*@__PURE__*/$parcel$interopDefault($6ff984c8b6ecdbd9$exports)))(response.body) //ndjsonStream parses the response.body\n        ;\n    });\n};\nfunction $65dd0e8440d320eb$export$9903e0d29be3ee54(endpoint, token, callback) {\n    $65dd0e8440d320eb$export$df8cbc0f1f104ed7(endpoint, {\n        headers: {\n            Authorization: token.token_type + \" \" + token.access_token\n        }\n    }).then((exampleStream)=>{\n        const reader = exampleStream.getReader();\n        let read;\n        reader.read().then(read = (result)=>{\n            if (result.done) return;\n            // console.log( result.value )\n            callback(result.value);\n            reader.read().then(read);\n        });\n    });\n}\nfunction $65dd0e8440d320eb$export$47fdd40111eda34c() {\n    var nd = \"\";\n    return {\n        oninit: (vnode)=>{\n            $65dd0e8440d320eb$export$df8cbc0f1f104ed7(vnode.attrs.endpoint, {\n                headers: {\n                    Authorization: vnode.attrs.token.token_type + \" \" + vnode.attrs.token.access_token\n                }\n            }).then((exampleStream)=>{\n                const reader = exampleStream.getReader();\n                let read;\n                reader.read().then(read = (result)=>{\n                    if (result.done) return;\n                    console.log(result.value);\n                    nd = JSON.stringify(result.value);\n                    // m.redraw()\n                    vnode.attrs.callback(result.value);\n                    reader.read().then(read);\n                });\n            });\n            console.log(\"nd\", nd);\n        },\n        view: (vnode)=>{\n            return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"\", vnode.attrs, vnode.children);\n        }\n    };\n}\n\n\nconst $a0433e89bac4710b$export$7333953c775d26f6 = \"https://lichess.org/api/\";\nconst $a0433e89bac4710b$export$3c6d453abf5a879b = \"Launchpad X MIDI 2\";\n\n\n\n\nconst $cae4a8b830b22bcf$export$74a0f09caf74d623 = [\n    5,\n    121,\n    9,\n    11,\n    15,\n    1,\n    23,\n    37,\n    45,\n    49,\n    69\n];\nconst $cae4a8b830b22bcf$export$683788d28fb74d54 = (state, actions)=>({\n        lightBoard: (animate = false)=>{\n            actions.clearAnimations();\n            if (state.chess) {\n                if (state.influence) actions.showInfluence();\n                else actions.lightGame(animate);\n            } else if (state.grid) actions.grid();\n            actions.send((0, $9066c94fd6c8e22f$export$d265beb1ee5d4530), [\n                state.top[0],\n                Math.min(state.history() + 1, 3)\n            ]);\n            actions.send((0, $9066c94fd6c8e22f$export$d265beb1ee5d4530), [\n                state.top[1],\n                Math.min(state.history(), 3)\n            ]);\n            actions.send((0, $9066c94fd6c8e22f$export$d265beb1ee5d4530), [\n                state.top[2],\n                67\n            ]);\n            actions.send((0, $9066c94fd6c8e22f$export$d265beb1ee5d4530), [\n                state.top[4],\n                state.invert() ? (0, $9066c94fd6c8e22f$export$56d196d2844d1ca1).brown : 3\n            ]);\n            actions.send((0, $9066c94fd6c8e22f$export$d265beb1ee5d4530), [\n                state.top[5],\n                state.grid ? (0, $9066c94fd6c8e22f$export$56d196d2844d1ca1).white : (0, $9066c94fd6c8e22f$export$56d196d2844d1ca1).dim_white\n            ]);\n            actions.send((0, $9066c94fd6c8e22f$export$d265beb1ee5d4530), [\n                state.top[6],\n                state.pieces ? (0, $9066c94fd6c8e22f$export$56d196d2844d1ca1).q : 82\n            ]);\n            // actions.send(CONTROL_CHANGE, [state.top[7], state.influence ? 5 : 7])\n            actions.send((0, $9066c94fd6c8e22f$export$d265beb1ee5d4530), [\n                state.top[state.top.length - 1],\n                state.chess.turn() == \"w\" ? 3 : (0, $9066c94fd6c8e22f$export$56d196d2844d1ca1).brown\n            ]);\n        },\n        togglePieces: (mode = null)=>{\n            state.pieces = mode ? mode : !state.pieces;\n            state.ground.set({\n                drawable: {\n                    visible: false\n                }\n            });\n            actions.lightBoard();\n        },\n        flipBoard: ()=>{\n            state.invert(!state.invert());\n            actions.lightBoard();\n            // if (ground)\n            state.ground.toggleOrientation();\n        // m.redraw()\n        },\n        showInfluence: ()=>{\n            let fen = state.chess.fen();\n            let defenders = (0, $236ba31c448bdb87$export$a23e9f71e3b927c7)(fen);\n            let attackers = (0, $236ba31c448bdb87$export$a23e9f71e3b927c7)((0, $236ba31c448bdb87$export$def19b3072191111)(fen));\n            console.log(fen, defenders, attackers);\n            let heatMap = defenders.map((s, i)=>{\n                return s - attackers[i];\n            });\n            console.log(\"heatmap\", heatMap);\n            let colorMap = heatMap.map((v, i)=>{\n                let c = Math.min(v + 5, 9);\n                return $cae4a8b830b22bcf$export$74a0f09caf74d623[state.chess.turn() == state.color ? c : 10 - c];\n            });\n            if (state.invert() != (state.color == \"b\")) colorMap.reverse();\n            // reverse ranks\n            colorMap = colorMap.map((s, i)=>{\n                return colorMap[(7 - Math.floor(i / 8)) * 8 + i % 8];\n            });\n            console.log(\"colorMap\", colorMap);\n            actions.lightMatrix(colorMap);\n        },\n        newGame: ()=>{\n            state.chess = new (0, $6eb582f9081eb7e5$export$a4d6ea685c300d39)();\n            (0, $d5ffb40ab7d69c90$export$8aee836dd884f091)(state.chess, state.ground);\n        },\n        onInput: (message)=>{\n            message = message.data;\n            console.log(\"input\", message);\n            if (message[2]) {\n                const s = actions.launchToN(message[1]);\n                if (s === null) return;\n                const square = actions.nToSquare(s);\n                console.log(\"touched\", s);\n                const legal_moves = state.chess.moves({\n                    verbose: true\n                });\n                console.log(\"legal moves\", legal_moves);\n                if (state.selectedSquare && actions.squareToN(state.selectedSquare) == s) {\n                    // clear selected piece\n                    actions.lightBoard();\n                    state.selectedSquare = null;\n                    state.ground.selectSquare(null);\n                } else if (state.chess.get(square) && state.chess.get(square).color == state.chess.turn()) {\n                    if (state.selectedSquare) {\n                        // clear other selected piece\n                        actions.lightBoard();\n                        state.selectedSquare = null;\n                        state.ground.selectSquare(null);\n                    }\n                    console.log(\"checking\", square, state.chess.get(square));\n                    if (state.chess.get(square) && state.chess.get(square).color == state.chess.turn()) {\n                        // select piece\n                        state.selectedSquare = square;\n                        state.selectedPiece = state.chess.get(square);\n                        state.ground.selectSquare(state.selectedSquare);\n                        actions.highlightAvailableMoves(state.selectedSquare);\n                    }\n                } else if (state.chess.history().length && s == actions.squareToN(state.chess.history({\n                    verbose: true\n                }).pop().to)) {\n                    console.log(\"clear animations and resend current position\");\n                    actions.lightBoard();\n                }\n                if (state.selectedSquare) {\n                    // move selected to square\n                    const move = {\n                        from: state.selectedSquare,\n                        to: square\n                    };\n                    console.log(\"checking if \", move, \" is legal\");\n                    const squares = state.chess.moves({\n                        square: state.selectedSquare,\n                        verbose: true\n                    }).map((legal_move)=>legal_move.to);\n                    if (squares.includes(move.to)) actions.makeMove(move);\n                    else console.log(\"illegal move\", move);\n                }\n            }\n        },\n        onCC: (message)=>{\n            message = message.data;\n            if (message[2]) {\n                console.log(\"cc\", message);\n                switch(message[1]){\n                    case state.top[0]:\n                        // up arrow\n                        // increase history\n                        actions.incrementHistory();\n                        break;\n                    case state.top[1]:\n                        // down arrow\n                        // decreace history\n                        actions.decrementHistory();\n                        break;\n                    case state.top[2]:\n                        // left arrow\n                        // undo move\n                        actions.takeback();\n                        break;\n                    case state.top[4]:\n                        // Session button\n                        // flip board\n                        actions.flipBoard();\n                        (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).redraw();\n                        break;\n                    case state.top[5]:\n                        // Custom button\n                        // Toggle grid\n                        state.grid = !state.grid;\n                        actions.lightBoard();\n                        break;\n                    case state.top[6]:\n                        // Note button\n                        // Toggle pieces\n                        state.pieces = !state.pieces;\n                        actions.lightBoard();\n                        break;\n                    case state.top[7]:\n                        // Custom Midi\n                        // toggle square influence / game\n                        actions.toggleInfluence();\n                        break;\n                }\n            }\n        },\n        toggleInfluence: ()=>{\n            state.influence = !state.influence;\n            actions.lightBoard();\n        },\n        streamGame: ()=>{\n            if (!state.loggedIn) (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/login\");\n            console.log(\"streaming game\", (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.param(\"id\"));\n            state.auth.openStream(\"/api/board/game/stream/\" + (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.param(\"id\"), {}, (v)=>{\n                console.log(\"calling back\", v);\n                if (v.type == \"gameFull\") {\n                    state.game = v;\n                    // TODO: change to Stream()\n                    // m.redraw()\n                    console.log(\"loading game\", v.state.moves);\n                    console.log(\"loaded?\", state.chess.loadPgn(v.state.moves, {\n                        sloppy: true\n                    }));\n                    if (v.black.id == state.user.profile.id && !state.invert()) {\n                        // if playing black, and not already inverted, flip board\n                        actions.flipBoard();\n                        state.color = \"b\";\n                    } else state.color = \"w\";\n                } else if (v.type == \"gameState\") {\n                    console.log(\"move played\", v.moves);\n                    console.log(\"loaded?\", state.chess.loadPgn(v.moves, {\n                        sloppy: true\n                    }));\n                }\n                let turn = state.chess.turn() == \"w\" ? \"white\" : \"black\";\n                console.log(\"updated. turn is\", turn);\n                (0, $d5ffb40ab7d69c90$export$8aee836dd884f091)(state.chess, state.ground);\n                actions.lightBoard(true);\n            });\n        },\n        newGame: ()=>{\n            state.chess = new (0, $6eb582f9081eb7e5$export$a4d6ea685c300d39)();\n            console.log(\"new game\", state.chess.ascii());\n            (0, $d5ffb40ab7d69c90$export$8aee836dd884f091)(state.chess, state.ground);\n            state.ground.selectSquare(null);\n            actions.lightBoard();\n        },\n        makeMove: (move)=>{\n            state.ground.move(move.from, move.to);\n            state.ground.selectSquare(null);\n        },\n        onmove: (orig, dest)=>{\n            let move = {\n                from: orig,\n                to: dest\n            };\n            let piece = state.chess.get(move.from);\n            if (piece.type == \"p\" && (piece.color == \"w\" && move.to.charAt(1) == 8 || piece.color == \"b\" && move.to.charAt(1) == 1)) {\n                console.log(\"promotion! Auto promote to Queen\");\n                move.promotion = \"q\";\n            }\n            state.chess.move(move);\n            console.log(\"moved\", move, piece, state.chess.ascii());\n            state.ground.set({\n                fen: state.chess.fen()\n            });\n            actions.lightBoard(true);\n            (0, $d5ffb40ab7d69c90$export$5b50b356a8724b72)(state.chess, state.ground)(orig, dest);\n        },\n        afterInit: ()=>{\n            actions.initMidi(actions.onInput, actions.onCC, ()=>{\n                actions.lightBoard();\n            });\n        },\n        takeback: ()=>{\n            state.chess.undo();\n            state.selectedPiece, state.selectedSquare = null;\n            state.ground.set({\n                fen: state.chess.fen()\n            });\n            actions.lightBoard();\n            (0, $d5ffb40ab7d69c90$export$8aee836dd884f091)(state.chess, state.ground);\n        }\n    });\n\n\n\nconst $bb75f90500322e40$export$21a94553ffa41578 = (state, actions)=>{\n    return {\n        oninit: (vnode)=>{\n            if (state.loggedIn()) {\n                console.log(\"already logged in. Not sure how we got here.\");\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/\");\n            }\n        },\n        view: (vnode)=>{\n            return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"\", {\n                onclick: actions.login\n            }, (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i\", {}, \"Login with lichess\"));\n        }\n    };\n};\n\n\n\n\n\n\n\nconst $f00dad157732f88c$export$8f45430ccf837300 = [\n    \"white\",\n    \"black\"\n];\nconst $f00dad157732f88c$export$3a444357c5f65f65 = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\"\n];\nconst $f00dad157732f88c$export$d8e4e3952f325c95 = [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\"\n];\n\n\nconst $dbbfaf35dad95b1f$export$978f7ef4c67d166e = [\n    ...$f00dad157732f88c$export$d8e4e3952f325c95\n].reverse();\nconst $dbbfaf35dad95b1f$export$ade7a30951d0bc54 = Array.prototype.concat(...$f00dad157732f88c$export$3a444357c5f65f65.map((c)=>$f00dad157732f88c$export$d8e4e3952f325c95.map((r)=>c + r)));\nconst $dbbfaf35dad95b1f$export$fe9f8b727818c0ae = (pos)=>$dbbfaf35dad95b1f$export$ade7a30951d0bc54[8 * pos[0] + pos[1]];\nconst $dbbfaf35dad95b1f$export$e2878eba51f22d11 = (k)=>[\n        k.charCodeAt(0) - 97,\n        k.charCodeAt(1) - 49\n    ];\nconst $dbbfaf35dad95b1f$export$ab796e79c29e0864 = (uci)=>{\n    if (!uci) return undefined;\n    if (uci[1] === \"@\") return [\n        uci.slice(2, 4)\n    ];\n    return [\n        uci.slice(0, 2),\n        uci.slice(2, 4)\n    ];\n};\nconst $dbbfaf35dad95b1f$export$26773b74d67e09c2 = $dbbfaf35dad95b1f$export$ade7a30951d0bc54.map($dbbfaf35dad95b1f$export$e2878eba51f22d11);\nfunction $dbbfaf35dad95b1f$export$7c73462e0d25e514(f) {\n    let v;\n    const ret = ()=>{\n        if (v === undefined) v = f();\n        return v;\n    };\n    ret.clear = ()=>{\n        v = undefined;\n    };\n    return ret;\n}\nconst $dbbfaf35dad95b1f$export$9dc4ecf953986f04 = ()=>{\n    let startAt;\n    return {\n        start () {\n            startAt = performance.now();\n        },\n        cancel () {\n            startAt = undefined;\n        },\n        stop () {\n            if (!startAt) return 0;\n            const time = performance.now() - startAt;\n            startAt = undefined;\n            return time;\n        }\n    };\n};\nconst $dbbfaf35dad95b1f$export$a27c3a1c44ba515b = (c)=>c === \"white\" ? \"black\" : \"white\";\nconst $dbbfaf35dad95b1f$export$e4884e1734dcd545 = (pos1, pos2)=>{\n    const dx = pos1[0] - pos2[0], dy = pos1[1] - pos2[1];\n    return dx * dx + dy * dy;\n};\nconst $dbbfaf35dad95b1f$export$e329b1a538c004fa = (p1, p2)=>p1.role === p2.role && p1.color === p2.color;\nconst $dbbfaf35dad95b1f$export$2135ad75550a2ff4 = (bounds)=>(pos, asWhite)=>[\n            (asWhite ? pos[0] : 7 - pos[0]) * bounds.width / 8,\n            (asWhite ? 7 - pos[1] : pos[1]) * bounds.height / 8\n        ];\nconst $dbbfaf35dad95b1f$export$d73ee8ef04f5226a = (el, pos)=>{\n    el.style.transform = `translate(${pos[0]}px,${pos[1]}px)`;\n};\nconst $dbbfaf35dad95b1f$export$f8afaca97e230dc6 = (el, pos, scale = 1)=>{\n    el.style.transform = `translate(${pos[0]}px,${pos[1]}px) scale(${scale})`;\n};\nconst $dbbfaf35dad95b1f$export$8cb512849e51eaf5 = (el, v)=>{\n    el.style.visibility = v ? \"visible\" : \"hidden\";\n};\nconst $dbbfaf35dad95b1f$export$33052595192f7117 = (e)=>{\n    var _a;\n    if (e.clientX || e.clientX === 0) return [\n        e.clientX,\n        e.clientY\n    ];\n    if ((_a = e.targetTouches) === null || _a === void 0 ? void 0 : _a[0]) return [\n        e.targetTouches[0].clientX,\n        e.targetTouches[0].clientY\n    ];\n    return; // touchend has no position!\n};\nconst $dbbfaf35dad95b1f$export$947a472b5b3020ba = (e)=>e.buttons === 2 || e.button === 2;\nconst $dbbfaf35dad95b1f$export$3d7cd8ed57263b30 = (tagName, className)=>{\n    const el = document.createElement(tagName);\n    if (className) el.className = className;\n    return el;\n};\nfunction $dbbfaf35dad95b1f$export$1c17f680299a31f7(key, asWhite, bounds) {\n    const pos = $dbbfaf35dad95b1f$export$e2878eba51f22d11(key);\n    if (!asWhite) {\n        pos[0] = 7 - pos[0];\n        pos[1] = 7 - pos[1];\n    }\n    return [\n        bounds.left + bounds.width * pos[0] / 8 + bounds.width / 16,\n        bounds.top + bounds.height * (7 - pos[1]) / 8 + bounds.height / 16\n    ];\n}\n\n\n\nconst $9edb68138fa5ce8d$var$diff = (a, b)=>Math.abs(a - b);\nconst $9edb68138fa5ce8d$var$pawn = (color)=>(x1, y1, x2, y2)=>$9edb68138fa5ce8d$var$diff(x1, x2) < 2 && (color === \"white\" ? y2 === y1 + 1 || y1 <= 1 && y2 === y1 + 2 && x1 === x2 : y2 === y1 - 1 || y1 >= 6 && y2 === y1 - 2 && x1 === x2);\nconst $9edb68138fa5ce8d$export$5584fb45fd3a6d08 = (x1, y1, x2, y2)=>{\n    const xd = $9edb68138fa5ce8d$var$diff(x1, x2);\n    const yd = $9edb68138fa5ce8d$var$diff(y1, y2);\n    return xd === 1 && yd === 2 || xd === 2 && yd === 1;\n};\nconst $9edb68138fa5ce8d$var$bishop = (x1, y1, x2, y2)=>{\n    return $9edb68138fa5ce8d$var$diff(x1, x2) === $9edb68138fa5ce8d$var$diff(y1, y2);\n};\nconst $9edb68138fa5ce8d$var$rook = (x1, y1, x2, y2)=>{\n    return x1 === x2 || y1 === y2;\n};\nconst $9edb68138fa5ce8d$export$b9d1aa6d9cf991c6 = (x1, y1, x2, y2)=>{\n    return $9edb68138fa5ce8d$var$bishop(x1, y1, x2, y2) || $9edb68138fa5ce8d$var$rook(x1, y1, x2, y2);\n};\nconst $9edb68138fa5ce8d$var$king = (color, rookFiles, canCastle)=>(x1, y1, x2, y2)=>$9edb68138fa5ce8d$var$diff(x1, x2) < 2 && $9edb68138fa5ce8d$var$diff(y1, y2) < 2 || canCastle && y1 === y2 && y1 === (color === \"white\" ? 0 : 7) && (x1 === 4 && (x2 === 2 && rookFiles.includes(0) || x2 === 6 && rookFiles.includes(7)) || rookFiles.includes(x2));\nfunction $9edb68138fa5ce8d$var$rookFilesOf(pieces, color) {\n    const backrank = color === \"white\" ? \"1\" : \"8\";\n    const files = [];\n    for (const [key, piece] of pieces)if (key[1] === backrank && piece.color === color && piece.role === \"rook\") files.push($dbbfaf35dad95b1f$export$e2878eba51f22d11(key)[0]);\n    return files;\n}\nfunction $9edb68138fa5ce8d$export$99ff1a176ab1ff90(pieces, key, canCastle) {\n    const piece = pieces.get(key);\n    if (!piece) return [];\n    const pos = $dbbfaf35dad95b1f$export$e2878eba51f22d11(key), r = piece.role, mobility = r === \"pawn\" ? $9edb68138fa5ce8d$var$pawn(piece.color) : r === \"knight\" ? $9edb68138fa5ce8d$export$5584fb45fd3a6d08 : r === \"bishop\" ? $9edb68138fa5ce8d$var$bishop : r === \"rook\" ? $9edb68138fa5ce8d$var$rook : r === \"queen\" ? $9edb68138fa5ce8d$export$b9d1aa6d9cf991c6 : $9edb68138fa5ce8d$var$king(piece.color, $9edb68138fa5ce8d$var$rookFilesOf(pieces, piece.color), canCastle);\n    return $dbbfaf35dad95b1f$export$26773b74d67e09c2.filter((pos2)=>(pos[0] !== pos2[0] || pos[1] !== pos2[1]) && mobility(pos[0], pos[1], pos2[0], pos2[1])).map($dbbfaf35dad95b1f$export$fe9f8b727818c0ae);\n}\n\n\nfunction $80f8b45278b0164a$export$6511920ae9f0cd34(f, ...args) {\n    if (f) setTimeout(()=>f(...args), 1);\n}\nfunction $80f8b45278b0164a$export$e798007c48b456cd(state) {\n    state.orientation = (0, $dbbfaf35dad95b1f$export$a27c3a1c44ba515b)(state.orientation);\n    state.animation.current = state.draggable.current = state.selected = undefined;\n}\nfunction $80f8b45278b0164a$export$aad8462122ac592b(state) {\n    state.lastMove = undefined;\n    $80f8b45278b0164a$export$fe412c270a34f415(state);\n    $80f8b45278b0164a$export$f92a111f74a3f7c7(state);\n    $80f8b45278b0164a$export$9e6f418e5ea6b92c(state);\n}\nfunction $80f8b45278b0164a$export$20a063d1402ff7ff(state, pieces) {\n    for (const [key, piece] of pieces)if (piece) state.pieces.set(key, piece);\n    else state.pieces.delete(key);\n}\nfunction $80f8b45278b0164a$export$6503933b06013bb6(state, color) {\n    state.check = undefined;\n    if (color === true) color = state.turnColor;\n    if (color) {\n        for (const [k, p] of state.pieces)if (p.role === \"king\" && p.color === color) state.check = k;\n    }\n}\nfunction $80f8b45278b0164a$var$setPremove(state, orig, dest, meta) {\n    $80f8b45278b0164a$export$9e6f418e5ea6b92c(state);\n    state.premovable.current = [\n        orig,\n        dest\n    ];\n    $80f8b45278b0164a$export$6511920ae9f0cd34(state.premovable.events.set, orig, dest, meta);\n}\nfunction $80f8b45278b0164a$export$f92a111f74a3f7c7(state) {\n    if (state.premovable.current) {\n        state.premovable.current = undefined;\n        $80f8b45278b0164a$export$6511920ae9f0cd34(state.premovable.events.unset);\n    }\n}\nfunction $80f8b45278b0164a$var$setPredrop(state, role, key) {\n    $80f8b45278b0164a$export$f92a111f74a3f7c7(state);\n    state.predroppable.current = {\n        role: role,\n        key: key\n    };\n    $80f8b45278b0164a$export$6511920ae9f0cd34(state.predroppable.events.set, role, key);\n}\nfunction $80f8b45278b0164a$export$9e6f418e5ea6b92c(state) {\n    const pd = state.predroppable;\n    if (pd.current) {\n        pd.current = undefined;\n        $80f8b45278b0164a$export$6511920ae9f0cd34(pd.events.unset);\n    }\n}\nfunction $80f8b45278b0164a$var$tryAutoCastle(state, orig, dest) {\n    if (!state.autoCastle) return false;\n    const king = state.pieces.get(orig);\n    if (!king || king.role !== \"king\") return false;\n    const origPos = (0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(orig);\n    const destPos = (0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(dest);\n    if (origPos[1] !== 0 && origPos[1] !== 7 || origPos[1] !== destPos[1]) return false;\n    if (origPos[0] === 4 && !state.pieces.has(dest)) {\n        if (destPos[0] === 6) dest = (0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n            7,\n            destPos[1]\n        ]);\n        else if (destPos[0] === 2) dest = (0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n            0,\n            destPos[1]\n        ]);\n    }\n    const rook = state.pieces.get(dest);\n    if (!rook || rook.color !== king.color || rook.role !== \"rook\") return false;\n    state.pieces.delete(orig);\n    state.pieces.delete(dest);\n    if (origPos[0] < destPos[0]) {\n        state.pieces.set((0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n            6,\n            destPos[1]\n        ]), king);\n        state.pieces.set((0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n            5,\n            destPos[1]\n        ]), rook);\n    } else {\n        state.pieces.set((0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n            2,\n            destPos[1]\n        ]), king);\n        state.pieces.set((0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n            3,\n            destPos[1]\n        ]), rook);\n    }\n    return true;\n}\nfunction $80f8b45278b0164a$export$13f6ca6271343510(state, orig, dest) {\n    const origPiece = state.pieces.get(orig), destPiece = state.pieces.get(dest);\n    if (orig === dest || !origPiece) return false;\n    const captured = destPiece && destPiece.color !== origPiece.color ? destPiece : undefined;\n    if (dest === state.selected) $80f8b45278b0164a$export$fe412c270a34f415(state);\n    $80f8b45278b0164a$export$6511920ae9f0cd34(state.events.move, orig, dest, captured);\n    if (!$80f8b45278b0164a$var$tryAutoCastle(state, orig, dest)) {\n        state.pieces.set(dest, origPiece);\n        state.pieces.delete(orig);\n    }\n    state.lastMove = [\n        orig,\n        dest\n    ];\n    state.check = undefined;\n    $80f8b45278b0164a$export$6511920ae9f0cd34(state.events.change);\n    return captured || true;\n}\nfunction $80f8b45278b0164a$export$13886f9573facc29(state, piece, key, force) {\n    if (state.pieces.has(key)) {\n        if (force) state.pieces.delete(key);\n        else return false;\n    }\n    $80f8b45278b0164a$export$6511920ae9f0cd34(state.events.dropNewPiece, piece, key);\n    state.pieces.set(key, piece);\n    state.lastMove = [\n        key\n    ];\n    state.check = undefined;\n    $80f8b45278b0164a$export$6511920ae9f0cd34(state.events.change);\n    state.movable.dests = undefined;\n    state.turnColor = (0, $dbbfaf35dad95b1f$export$a27c3a1c44ba515b)(state.turnColor);\n    return true;\n}\nfunction $80f8b45278b0164a$var$baseUserMove(state, orig, dest) {\n    const result = $80f8b45278b0164a$export$13f6ca6271343510(state, orig, dest);\n    if (result) {\n        state.movable.dests = undefined;\n        state.turnColor = (0, $dbbfaf35dad95b1f$export$a27c3a1c44ba515b)(state.turnColor);\n        state.animation.current = undefined;\n    }\n    return result;\n}\nfunction $80f8b45278b0164a$export$843c446e2e718822(state, orig, dest) {\n    if ($80f8b45278b0164a$export$a4ef2b0c3fa55ad2(state, orig, dest)) {\n        const result = $80f8b45278b0164a$var$baseUserMove(state, orig, dest);\n        if (result) {\n            const holdTime = state.hold.stop();\n            $80f8b45278b0164a$export$fe412c270a34f415(state);\n            const metadata = {\n                premove: false,\n                ctrlKey: state.stats.ctrlKey,\n                holdTime: holdTime\n            };\n            if (result !== true) metadata.captured = result;\n            $80f8b45278b0164a$export$6511920ae9f0cd34(state.movable.events.after, orig, dest, metadata);\n            return true;\n        }\n    } else if ($80f8b45278b0164a$var$canPremove(state, orig, dest)) {\n        $80f8b45278b0164a$var$setPremove(state, orig, dest, {\n            ctrlKey: state.stats.ctrlKey\n        });\n        $80f8b45278b0164a$export$fe412c270a34f415(state);\n        return true;\n    }\n    $80f8b45278b0164a$export$fe412c270a34f415(state);\n    return false;\n}\nfunction $80f8b45278b0164a$export$b2b9f46b948033b0(state, orig, dest, force) {\n    const piece = state.pieces.get(orig);\n    if (piece && ($80f8b45278b0164a$var$canDrop(state, orig, dest) || force)) {\n        state.pieces.delete(orig);\n        $80f8b45278b0164a$export$13886f9573facc29(state, piece, dest, force);\n        $80f8b45278b0164a$export$6511920ae9f0cd34(state.movable.events.afterNewPiece, piece.role, dest, {\n            premove: false,\n            predrop: false\n        });\n    } else if (piece && $80f8b45278b0164a$var$canPredrop(state, orig, dest)) $80f8b45278b0164a$var$setPredrop(state, piece.role, dest);\n    else {\n        $80f8b45278b0164a$export$f92a111f74a3f7c7(state);\n        $80f8b45278b0164a$export$9e6f418e5ea6b92c(state);\n    }\n    state.pieces.delete(orig);\n    $80f8b45278b0164a$export$fe412c270a34f415(state);\n}\nfunction $80f8b45278b0164a$export$6073914ea697a63e(state, key, force) {\n    $80f8b45278b0164a$export$6511920ae9f0cd34(state.events.select, key);\n    if (state.selected) {\n        if (state.selected === key && !state.draggable.enabled) {\n            $80f8b45278b0164a$export$fe412c270a34f415(state);\n            state.hold.cancel();\n            return;\n        } else if ((state.selectable.enabled || force) && state.selected !== key) {\n            if ($80f8b45278b0164a$export$843c446e2e718822(state, state.selected, key)) {\n                state.stats.dragged = false;\n                return;\n            }\n        }\n    }\n    if ((state.selectable.enabled || state.draggable.enabled) && ($80f8b45278b0164a$var$isMovable(state, key) || $80f8b45278b0164a$var$isPremovable(state, key))) {\n        $80f8b45278b0164a$export$5a4818cec1656a71(state, key);\n        state.hold.start();\n    }\n}\nfunction $80f8b45278b0164a$export$5a4818cec1656a71(state, key) {\n    state.selected = key;\n    if ($80f8b45278b0164a$var$isPremovable(state, key)) // calculate chess premoves if custom premoves are not passed\n    {\n        if (!state.premovable.customDests) state.premovable.dests = (0, $9edb68138fa5ce8d$export$99ff1a176ab1ff90)(state.pieces, key, state.premovable.castle);\n    } else state.premovable.dests = undefined;\n}\nfunction $80f8b45278b0164a$export$fe412c270a34f415(state) {\n    state.selected = undefined;\n    state.premovable.dests = undefined;\n    state.hold.cancel();\n}\nfunction $80f8b45278b0164a$var$isMovable(state, orig) {\n    const piece = state.pieces.get(orig);\n    return !!piece && (state.movable.color === \"both\" || state.movable.color === piece.color && state.turnColor === piece.color);\n}\nconst $80f8b45278b0164a$export$a4ef2b0c3fa55ad2 = (state, orig, dest)=>{\n    var _a, _b;\n    return orig !== dest && $80f8b45278b0164a$var$isMovable(state, orig) && (state.movable.free || !!((_b = (_a = state.movable.dests) === null || _a === void 0 ? void 0 : _a.get(orig)) === null || _b === void 0 ? void 0 : _b.includes(dest)));\n};\nfunction $80f8b45278b0164a$var$canDrop(state, orig, dest) {\n    const piece = state.pieces.get(orig);\n    return !!piece && (orig === dest || !state.pieces.has(dest)) && (state.movable.color === \"both\" || state.movable.color === piece.color && state.turnColor === piece.color);\n}\nfunction $80f8b45278b0164a$var$isPremovable(state, orig) {\n    const piece = state.pieces.get(orig);\n    return !!piece && state.premovable.enabled && state.movable.color === piece.color && state.turnColor !== piece.color;\n}\nfunction $80f8b45278b0164a$var$canPremove(state, orig, dest) {\n    var _a, _b;\n    const validPremoves = (_b = (_a = state.premovable.customDests) === null || _a === void 0 ? void 0 : _a.get(orig)) !== null && _b !== void 0 ? _b : (0, $9edb68138fa5ce8d$export$99ff1a176ab1ff90)(state.pieces, orig, state.premovable.castle);\n    return orig !== dest && $80f8b45278b0164a$var$isPremovable(state, orig) && validPremoves.includes(dest);\n}\nfunction $80f8b45278b0164a$var$canPredrop(state, orig, dest) {\n    const piece = state.pieces.get(orig);\n    const destPiece = state.pieces.get(dest);\n    return !!piece && (!destPiece || destPiece.color !== state.movable.color) && state.predroppable.enabled && (piece.role !== \"pawn\" || dest[1] !== \"1\" && dest[1] !== \"8\") && state.movable.color === piece.color && state.turnColor !== piece.color;\n}\nfunction $80f8b45278b0164a$export$fe8f97248bbe2d04(state, orig) {\n    const piece = state.pieces.get(orig);\n    return !!piece && state.draggable.enabled && (state.movable.color === \"both\" || state.movable.color === piece.color && (state.turnColor === piece.color || state.premovable.enabled));\n}\nfunction $80f8b45278b0164a$export$d04320a93cdae73d(state) {\n    const move = state.premovable.current;\n    if (!move) return false;\n    const orig = move[0], dest = move[1];\n    let success = false;\n    if ($80f8b45278b0164a$export$a4ef2b0c3fa55ad2(state, orig, dest)) {\n        const result = $80f8b45278b0164a$var$baseUserMove(state, orig, dest);\n        if (result) {\n            const metadata = {\n                premove: true\n            };\n            if (result !== true) metadata.captured = result;\n            $80f8b45278b0164a$export$6511920ae9f0cd34(state.movable.events.after, orig, dest, metadata);\n            success = true;\n        }\n    }\n    $80f8b45278b0164a$export$f92a111f74a3f7c7(state);\n    return success;\n}\nfunction $80f8b45278b0164a$export$8efa9460c0cedd9e(state, validate) {\n    const drop = state.predroppable.current;\n    let success = false;\n    if (!drop) return false;\n    if (validate(drop)) {\n        const piece = {\n            role: drop.role,\n            color: state.movable.color\n        };\n        if ($80f8b45278b0164a$export$13886f9573facc29(state, piece, drop.key)) {\n            $80f8b45278b0164a$export$6511920ae9f0cd34(state.movable.events.afterNewPiece, drop.role, drop.key, {\n                premove: false,\n                predrop: true\n            });\n            success = true;\n        }\n    }\n    $80f8b45278b0164a$export$9e6f418e5ea6b92c(state);\n    return success;\n}\nfunction $80f8b45278b0164a$export$e47a3d6268102bb5(state) {\n    $80f8b45278b0164a$export$f92a111f74a3f7c7(state);\n    $80f8b45278b0164a$export$9e6f418e5ea6b92c(state);\n    $80f8b45278b0164a$export$fe412c270a34f415(state);\n}\nfunction $80f8b45278b0164a$export$fa6813432f753b0d(state) {\n    state.movable.color = state.movable.dests = state.animation.current = undefined;\n    $80f8b45278b0164a$export$e47a3d6268102bb5(state);\n}\nfunction $80f8b45278b0164a$export$102bdd581884418b(pos, asWhite, bounds) {\n    let file = Math.floor(8 * (pos[0] - bounds.left) / bounds.width);\n    if (!asWhite) file = 7 - file;\n    let rank = 7 - Math.floor(8 * (pos[1] - bounds.top) / bounds.height);\n    if (!asWhite) rank = 7 - rank;\n    return file >= 0 && file < 8 && rank >= 0 && rank < 8 ? (0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n        file,\n        rank\n    ]) : undefined;\n}\nfunction $80f8b45278b0164a$export$6ee499125a88eb43(orig, pos, asWhite, bounds) {\n    const origPos = (0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(orig);\n    const validSnapPos = (0, $dbbfaf35dad95b1f$export$26773b74d67e09c2).filter((pos2)=>(0, $9edb68138fa5ce8d$export$b9d1aa6d9cf991c6)(origPos[0], origPos[1], pos2[0], pos2[1]) || (0, $9edb68138fa5ce8d$export$5584fb45fd3a6d08)(origPos[0], origPos[1], pos2[0], pos2[1]));\n    const validSnapCenters = validSnapPos.map((pos2)=>(0, $dbbfaf35dad95b1f$export$1c17f680299a31f7)((0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)(pos2), asWhite, bounds));\n    const validSnapDistances = validSnapCenters.map((pos2)=>(0, $dbbfaf35dad95b1f$export$e4884e1734dcd545)(pos, pos2));\n    const [, closestSnapIndex] = validSnapDistances.reduce((a, b, index)=>a[0] < b ? a : [\n            b,\n            index\n        ], [\n        validSnapDistances[0],\n        0\n    ]);\n    return (0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)(validSnapPos[closestSnapIndex]);\n}\nconst $80f8b45278b0164a$export$970133fdf67d86cb = (s)=>s.orientation === \"white\";\n\n\n\n\nconst $f37f4d2e14067e5f$export$59ff82fc918bd7e3 = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\";\nconst $f37f4d2e14067e5f$var$roles = {\n    p: \"pawn\",\n    r: \"rook\",\n    n: \"knight\",\n    b: \"bishop\",\n    q: \"queen\",\n    k: \"king\"\n};\nconst $f37f4d2e14067e5f$var$letters = {\n    pawn: \"p\",\n    rook: \"r\",\n    knight: \"n\",\n    bishop: \"b\",\n    queen: \"q\",\n    king: \"k\"\n};\nfunction $f37f4d2e14067e5f$export$aafa59e2e03f2942(fen) {\n    if (fen === \"start\") fen = $f37f4d2e14067e5f$export$59ff82fc918bd7e3;\n    const pieces = new Map();\n    let row = 7, col = 0;\n    for (const c of fen)switch(c){\n        case \" \":\n        case \"[\":\n            return pieces;\n        case \"/\":\n            --row;\n            if (row < 0) return pieces;\n            col = 0;\n            break;\n        case \"~\":\n            {\n                const piece = pieces.get((0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n                    col - 1,\n                    row\n                ]));\n                if (piece) piece.promoted = true;\n                break;\n            }\n        default:\n            {\n                const nb = c.charCodeAt(0);\n                if (nb < 57) col += nb - 48;\n                else {\n                    const role = c.toLowerCase();\n                    pieces.set((0, $dbbfaf35dad95b1f$export$fe9f8b727818c0ae)([\n                        col,\n                        row\n                    ]), {\n                        role: $f37f4d2e14067e5f$var$roles[role],\n                        color: c === role ? \"black\" : \"white\"\n                    });\n                    ++col;\n                }\n            }\n    }\n    return pieces;\n}\nfunction $f37f4d2e14067e5f$export$68d8715fc104d294(pieces) {\n    return (0, $dbbfaf35dad95b1f$export$978f7ef4c67d166e).map((y)=>$f00dad157732f88c$export$3a444357c5f65f65.map((x)=>{\n            const piece = pieces.get(x + y);\n            if (piece) {\n                let p = $f37f4d2e14067e5f$var$letters[piece.role];\n                if (piece.color === \"white\") p = p.toUpperCase();\n                if (piece.promoted) p += \"~\";\n                return p;\n            } else return \"1\";\n        }).join(\"\")).join(\"/\").replace(/1{2,}/g, (s)=>s.length.toString());\n}\n\n\n\n\nfunction $fe7eac34876cd925$export$d771543c4ed87064(state, config) {\n    if (config.animation) {\n        $fe7eac34876cd925$var$deepMerge(state.animation, config.animation);\n        // no need for such short animations\n        if ((state.animation.duration || 0) < 70) state.animation.enabled = false;\n    }\n}\nfunction $fe7eac34876cd925$export$8d21e34596265fa2(state, config) {\n    var _a, _b, _c;\n    // don't merge destinations and autoShapes. Just override.\n    if ((_a = config.movable) === null || _a === void 0 ? void 0 : _a.dests) state.movable.dests = undefined;\n    if ((_b = config.drawable) === null || _b === void 0 ? void 0 : _b.autoShapes) state.drawable.autoShapes = [];\n    $fe7eac34876cd925$var$deepMerge(state, config);\n    // if a fen was provided, replace the pieces\n    if (config.fen) {\n        state.pieces = (0, $f37f4d2e14067e5f$export$aafa59e2e03f2942)(config.fen);\n        state.drawable.shapes = ((_c = config.drawable) === null || _c === void 0 ? void 0 : _c.shapes) || [];\n    }\n    // apply config values that could be undefined yet meaningful\n    if (\"check\" in config) (0, $80f8b45278b0164a$export$6503933b06013bb6)(state, config.check || false);\n    if (\"lastMove\" in config && !config.lastMove) state.lastMove = undefined;\n    else if (config.lastMove) state.lastMove = config.lastMove;\n    // fix move/premove dests\n    if (state.selected) (0, $80f8b45278b0164a$export$5a4818cec1656a71)(state, state.selected);\n    $fe7eac34876cd925$export$d771543c4ed87064(state, config);\n    if (!state.movable.rookCastle && state.movable.dests) {\n        const rank = state.movable.color === \"white\" ? \"1\" : \"8\", kingStartPos = \"e\" + rank, dests = state.movable.dests.get(kingStartPos), king = state.pieces.get(kingStartPos);\n        if (!dests || !king || king.role !== \"king\") return;\n        state.movable.dests.set(kingStartPos, dests.filter((d)=>!(d === \"a\" + rank && dests.includes(\"c\" + rank)) && !(d === \"h\" + rank && dests.includes(\"g\" + rank))));\n    }\n}\nfunction $fe7eac34876cd925$var$deepMerge(base, extend) {\n    for(const key in extend)if (Object.prototype.hasOwnProperty.call(extend, key)) {\n        if (Object.prototype.hasOwnProperty.call(base, key) && $fe7eac34876cd925$var$isPlainObject(base[key]) && $fe7eac34876cd925$var$isPlainObject(extend[key])) $fe7eac34876cd925$var$deepMerge(base[key], extend[key]);\n        else base[key] = extend[key];\n    }\n}\nfunction $fe7eac34876cd925$var$isPlainObject(o) {\n    if (typeof o !== \"object\" || o === null) return false;\n    const proto = Object.getPrototypeOf(o);\n    return proto === Object.prototype || proto === null;\n}\n\n\n\nconst $b81ba4ea6c3c4676$export$bd46b8ab3689edc4 = (mutation, state)=>state.animation.enabled ? $b81ba4ea6c3c4676$var$animate(mutation, state) : $b81ba4ea6c3c4676$export$b3890eb0ae9dca99(mutation, state);\nfunction $b81ba4ea6c3c4676$export$b3890eb0ae9dca99(mutation, state) {\n    const result = mutation(state);\n    state.dom.redraw();\n    return result;\n}\nconst $b81ba4ea6c3c4676$var$makePiece = (key, piece)=>({\n        key: key,\n        pos: $dbbfaf35dad95b1f$export$e2878eba51f22d11(key),\n        piece: piece\n    });\nconst $b81ba4ea6c3c4676$var$closer = (piece, pieces)=>pieces.sort((p1, p2)=>$dbbfaf35dad95b1f$export$e4884e1734dcd545(piece.pos, p1.pos) - $dbbfaf35dad95b1f$export$e4884e1734dcd545(piece.pos, p2.pos))[0];\nfunction $b81ba4ea6c3c4676$var$computePlan(prevPieces, current) {\n    const anims = new Map(), animedOrigs = [], fadings = new Map(), missings = [], news = [], prePieces = new Map();\n    let curP, preP, vector;\n    for (const [k, p] of prevPieces)prePieces.set(k, $b81ba4ea6c3c4676$var$makePiece(k, p));\n    for (const key of $dbbfaf35dad95b1f$export$ade7a30951d0bc54){\n        curP = current.pieces.get(key);\n        preP = prePieces.get(key);\n        if (curP) {\n            if (preP) {\n                if (!$dbbfaf35dad95b1f$export$e329b1a538c004fa(curP, preP.piece)) {\n                    missings.push(preP);\n                    news.push($b81ba4ea6c3c4676$var$makePiece(key, curP));\n                }\n            } else news.push($b81ba4ea6c3c4676$var$makePiece(key, curP));\n        } else if (preP) missings.push(preP);\n    }\n    for (const newP of news){\n        preP = $b81ba4ea6c3c4676$var$closer(newP, missings.filter((p)=>$dbbfaf35dad95b1f$export$e329b1a538c004fa(newP.piece, p.piece)));\n        if (preP) {\n            vector = [\n                preP.pos[0] - newP.pos[0],\n                preP.pos[1] - newP.pos[1]\n            ];\n            anims.set(newP.key, vector.concat(vector));\n            animedOrigs.push(preP.key);\n        }\n    }\n    for (const p of missings)if (!animedOrigs.includes(p.key)) fadings.set(p.key, p.piece);\n    return {\n        anims: anims,\n        fadings: fadings\n    };\n}\nfunction $b81ba4ea6c3c4676$var$step(state, now) {\n    const cur = state.animation.current;\n    if (cur === undefined) {\n        // animation was canceled :(\n        if (!state.dom.destroyed) state.dom.redrawNow();\n        return;\n    }\n    const rest = 1 - (now - cur.start) * cur.frequency;\n    if (rest <= 0) {\n        state.animation.current = undefined;\n        state.dom.redrawNow();\n    } else {\n        const ease = $b81ba4ea6c3c4676$var$easing(rest);\n        for (const cfg of cur.plan.anims.values()){\n            cfg[2] = cfg[0] * ease;\n            cfg[3] = cfg[1] * ease;\n        }\n        state.dom.redrawNow(true); // optimisation: don't render SVG changes during animations\n        requestAnimationFrame((now = performance.now())=>$b81ba4ea6c3c4676$var$step(state, now));\n    }\n}\nfunction $b81ba4ea6c3c4676$var$animate(mutation, state) {\n    // clone state before mutating it\n    const prevPieces = new Map(state.pieces);\n    const result = mutation(state);\n    const plan = $b81ba4ea6c3c4676$var$computePlan(prevPieces, state);\n    if (plan.anims.size || plan.fadings.size) {\n        const alreadyRunning = state.animation.current && state.animation.current.start;\n        state.animation.current = {\n            start: performance.now(),\n            frequency: 1 / state.animation.duration,\n            plan: plan\n        };\n        if (!alreadyRunning) $b81ba4ea6c3c4676$var$step(state, performance.now());\n    } else // don't animate, just render right away\n    state.dom.redraw();\n    return result;\n}\n// https://gist.github.com/gre/1650294\nconst $b81ba4ea6c3c4676$var$easing = (t)=>t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\n\n\n\n\n\nconst $7a42cea72ae7e4e6$var$brushes = [\n    \"green\",\n    \"red\",\n    \"blue\",\n    \"yellow\"\n];\nfunction $7a42cea72ae7e4e6$export$b3571188c770cc5a(state, e) {\n    // support one finger touch only\n    if (e.touches && e.touches.length > 1) return;\n    e.stopPropagation();\n    e.preventDefault();\n    e.ctrlKey ? (0, $80f8b45278b0164a$export$fe412c270a34f415)(state) : (0, $80f8b45278b0164a$export$e47a3d6268102bb5)(state);\n    const pos = (0, $dbbfaf35dad95b1f$export$33052595192f7117)(e), orig = (0, $80f8b45278b0164a$export$102bdd581884418b)(pos, (0, $80f8b45278b0164a$export$970133fdf67d86cb)(state), state.dom.bounds());\n    if (!orig) return;\n    state.drawable.current = {\n        orig: orig,\n        pos: pos,\n        brush: $7a42cea72ae7e4e6$var$eventBrush(e),\n        snapToValidMove: state.drawable.defaultSnapToValidMove\n    };\n    $7a42cea72ae7e4e6$export$816e7b21815d9cf9(state);\n}\nfunction $7a42cea72ae7e4e6$export$816e7b21815d9cf9(state) {\n    requestAnimationFrame(()=>{\n        const cur = state.drawable.current;\n        if (cur) {\n            const keyAtDomPos = (0, $80f8b45278b0164a$export$102bdd581884418b)(cur.pos, (0, $80f8b45278b0164a$export$970133fdf67d86cb)(state), state.dom.bounds());\n            if (!keyAtDomPos) cur.snapToValidMove = false;\n            const mouseSq = cur.snapToValidMove ? (0, $80f8b45278b0164a$export$6ee499125a88eb43)(cur.orig, cur.pos, (0, $80f8b45278b0164a$export$970133fdf67d86cb)(state), state.dom.bounds()) : keyAtDomPos;\n            if (mouseSq !== cur.mouseSq) {\n                cur.mouseSq = mouseSq;\n                cur.dest = mouseSq !== cur.orig ? mouseSq : undefined;\n                state.dom.redrawNow();\n            }\n            $7a42cea72ae7e4e6$export$816e7b21815d9cf9(state);\n        }\n    });\n}\nfunction $7a42cea72ae7e4e6$export$d947e5f4f4c48d48(state, e) {\n    if (state.drawable.current) state.drawable.current.pos = (0, $dbbfaf35dad95b1f$export$33052595192f7117)(e);\n}\nfunction $7a42cea72ae7e4e6$export$bd5df0f255a350f8(state) {\n    const cur = state.drawable.current;\n    if (cur) {\n        if (cur.mouseSq) $7a42cea72ae7e4e6$var$addShape(state.drawable, cur);\n        $7a42cea72ae7e4e6$export$70b61ad426ddbe54(state);\n    }\n}\nfunction $7a42cea72ae7e4e6$export$70b61ad426ddbe54(state) {\n    if (state.drawable.current) {\n        state.drawable.current = undefined;\n        state.dom.redraw();\n    }\n}\nfunction $7a42cea72ae7e4e6$export$42ffd38884aecdac(state) {\n    if (state.drawable.shapes.length) {\n        state.drawable.shapes = [];\n        state.dom.redraw();\n        $7a42cea72ae7e4e6$var$onChange(state.drawable);\n    }\n}\nfunction $7a42cea72ae7e4e6$var$eventBrush(e) {\n    var _a;\n    const modA = (e.shiftKey || e.ctrlKey) && (0, $dbbfaf35dad95b1f$export$947a472b5b3020ba)(e);\n    const modB = e.altKey || e.metaKey || ((_a = e.getModifierState) === null || _a === void 0 ? void 0 : _a.call(e, \"AltGraph\"));\n    return $7a42cea72ae7e4e6$var$brushes[(modA ? 1 : 0) + (modB ? 2 : 0)];\n}\nfunction $7a42cea72ae7e4e6$var$addShape(drawable, cur) {\n    const sameShape = (s)=>s.orig === cur.orig && s.dest === cur.dest;\n    const similar = drawable.shapes.find(sameShape);\n    if (similar) drawable.shapes = drawable.shapes.filter((s)=>!sameShape(s));\n    if (!similar || similar.brush !== cur.brush) drawable.shapes.push({\n        orig: cur.orig,\n        dest: cur.dest,\n        brush: cur.brush\n    });\n    $7a42cea72ae7e4e6$var$onChange(drawable);\n}\nfunction $7a42cea72ae7e4e6$var$onChange(drawable) {\n    if (drawable.onChange) drawable.onChange(drawable.shapes);\n}\n\n\n\nfunction $84ee20f15ef980fb$export$b3571188c770cc5a(s, e) {\n    if (!(s.trustAllEvents || e.isTrusted)) return; // only trust when trustAllEvents is enabled\n    if (e.button !== undefined && e.button !== 0) return; // only touch or left click\n    if (e.touches && e.touches.length > 1) return; // support one finger touch only\n    const bounds = s.dom.bounds(), position = $dbbfaf35dad95b1f$export$33052595192f7117(e), orig = $80f8b45278b0164a$export$102bdd581884418b(position, $80f8b45278b0164a$export$970133fdf67d86cb(s), bounds);\n    if (!orig) return;\n    const piece = s.pieces.get(orig);\n    const previouslySelected = s.selected;\n    if (!previouslySelected && s.drawable.enabled && (s.drawable.eraseOnClick || !piece || piece.color !== s.turnColor)) (0, $7a42cea72ae7e4e6$export$42ffd38884aecdac)(s);\n    // Prevent touch scroll and create no corresponding mouse event, if there\n    // is an intent to interact with the board.\n    if (e.cancelable !== false && (!e.touches || s.blockTouchScroll || piece || previouslySelected || $84ee20f15ef980fb$var$pieceCloseTo(s, position))) e.preventDefault();\n    else if (e.touches) return; // Handle only corresponding mouse event https://github.com/lichess-org/chessground/pull/268\n    const hadPremove = !!s.premovable.current;\n    const hadPredrop = !!s.predroppable.current;\n    s.stats.ctrlKey = e.ctrlKey;\n    if (s.selected && $80f8b45278b0164a$export$a4ef2b0c3fa55ad2(s, s.selected, orig)) (0, $b81ba4ea6c3c4676$export$bd46b8ab3689edc4)((state)=>$80f8b45278b0164a$export$6073914ea697a63e(state, orig), s);\n    else $80f8b45278b0164a$export$6073914ea697a63e(s, orig);\n    const stillSelected = s.selected === orig;\n    const element = $84ee20f15ef980fb$var$pieceElementByKey(s, orig);\n    if (piece && element && stillSelected && $80f8b45278b0164a$export$fe8f97248bbe2d04(s, orig)) {\n        s.draggable.current = {\n            orig: orig,\n            piece: piece,\n            origPos: position,\n            pos: position,\n            started: s.draggable.autoDistance && s.stats.dragged,\n            element: element,\n            previouslySelected: previouslySelected,\n            originTarget: e.target,\n            keyHasChanged: false\n        };\n        element.cgDragging = true;\n        element.classList.add(\"dragging\");\n        // place ghost\n        const ghost = s.dom.elements.ghost;\n        if (ghost) {\n            ghost.className = `ghost ${piece.color} ${piece.role}`;\n            $dbbfaf35dad95b1f$export$d73ee8ef04f5226a(ghost, $dbbfaf35dad95b1f$export$2135ad75550a2ff4(bounds)($dbbfaf35dad95b1f$export$e2878eba51f22d11(orig), $80f8b45278b0164a$export$970133fdf67d86cb(s)));\n            $dbbfaf35dad95b1f$export$8cb512849e51eaf5(ghost, true);\n        }\n        $84ee20f15ef980fb$var$processDrag(s);\n    } else {\n        if (hadPremove) $80f8b45278b0164a$export$f92a111f74a3f7c7(s);\n        if (hadPredrop) $80f8b45278b0164a$export$9e6f418e5ea6b92c(s);\n    }\n    s.dom.redraw();\n}\nfunction $84ee20f15ef980fb$var$pieceCloseTo(s, pos) {\n    const asWhite = $80f8b45278b0164a$export$970133fdf67d86cb(s), bounds = s.dom.bounds(), radiusSq = Math.pow(bounds.width / 8, 2);\n    for (const key of s.pieces.keys()){\n        const center = $dbbfaf35dad95b1f$export$1c17f680299a31f7(key, asWhite, bounds);\n        if ($dbbfaf35dad95b1f$export$e4884e1734dcd545(center, pos) <= radiusSq) return true;\n    }\n    return false;\n}\nfunction $84ee20f15ef980fb$export$65771a6862d302e4(s, piece, e, force) {\n    const key = \"a0\";\n    s.pieces.set(key, piece);\n    s.dom.redraw();\n    const position = $dbbfaf35dad95b1f$export$33052595192f7117(e);\n    s.draggable.current = {\n        orig: key,\n        piece: piece,\n        origPos: position,\n        pos: position,\n        started: true,\n        element: ()=>$84ee20f15ef980fb$var$pieceElementByKey(s, key),\n        originTarget: e.target,\n        newPiece: true,\n        force: !!force,\n        keyHasChanged: false\n    };\n    $84ee20f15ef980fb$var$processDrag(s);\n}\nfunction $84ee20f15ef980fb$var$processDrag(s) {\n    requestAnimationFrame(()=>{\n        var _a;\n        const cur = s.draggable.current;\n        if (!cur) return;\n        // cancel animations while dragging\n        if ((_a = s.animation.current) === null || _a === void 0 ? void 0 : _a.plan.anims.has(cur.orig)) s.animation.current = undefined;\n        // if moving piece is gone, cancel\n        const origPiece = s.pieces.get(cur.orig);\n        if (!origPiece || !$dbbfaf35dad95b1f$export$e329b1a538c004fa(origPiece, cur.piece)) $84ee20f15ef980fb$export$70b61ad426ddbe54(s);\n        else {\n            if (!cur.started && $dbbfaf35dad95b1f$export$e4884e1734dcd545(cur.pos, cur.origPos) >= Math.pow(s.draggable.distance, 2)) cur.started = true;\n            if (cur.started) {\n                // support lazy elements\n                if (typeof cur.element === \"function\") {\n                    const found = cur.element();\n                    if (!found) return;\n                    found.cgDragging = true;\n                    found.classList.add(\"dragging\");\n                    cur.element = found;\n                }\n                const bounds = s.dom.bounds();\n                $dbbfaf35dad95b1f$export$d73ee8ef04f5226a(cur.element, [\n                    cur.pos[0] - bounds.left - bounds.width / 16,\n                    cur.pos[1] - bounds.top - bounds.height / 16\n                ]);\n                cur.keyHasChanged || (cur.keyHasChanged = cur.orig !== $80f8b45278b0164a$export$102bdd581884418b(cur.pos, $80f8b45278b0164a$export$970133fdf67d86cb(s), bounds));\n            }\n        }\n        $84ee20f15ef980fb$var$processDrag(s);\n    });\n}\nfunction $84ee20f15ef980fb$export$d947e5f4f4c48d48(s, e) {\n    // support one finger touch only\n    if (s.draggable.current && (!e.touches || e.touches.length < 2)) s.draggable.current.pos = $dbbfaf35dad95b1f$export$33052595192f7117(e);\n}\nfunction $84ee20f15ef980fb$export$bd5df0f255a350f8(s, e) {\n    const cur = s.draggable.current;\n    if (!cur) return;\n    // create no corresponding mouse event\n    if (e.type === \"touchend\" && e.cancelable !== false) e.preventDefault();\n    // comparing with the origin target is an easy way to test that the end event\n    // has the same touch origin\n    if (e.type === \"touchend\" && cur.originTarget !== e.target && !cur.newPiece) {\n        s.draggable.current = undefined;\n        return;\n    }\n    $80f8b45278b0164a$export$f92a111f74a3f7c7(s);\n    $80f8b45278b0164a$export$9e6f418e5ea6b92c(s);\n    // touchend has no position; so use the last touchmove position instead\n    const eventPos = $dbbfaf35dad95b1f$export$33052595192f7117(e) || cur.pos;\n    const dest = $80f8b45278b0164a$export$102bdd581884418b(eventPos, $80f8b45278b0164a$export$970133fdf67d86cb(s), s.dom.bounds());\n    if (dest && cur.started && cur.orig !== dest) {\n        if (cur.newPiece) $80f8b45278b0164a$export$b2b9f46b948033b0(s, cur.orig, dest, cur.force);\n        else {\n            s.stats.ctrlKey = e.ctrlKey;\n            if ($80f8b45278b0164a$export$843c446e2e718822(s, cur.orig, dest)) s.stats.dragged = true;\n        }\n    } else if (cur.newPiece) s.pieces.delete(cur.orig);\n    else if (s.draggable.deleteOnDropOff && !dest) {\n        s.pieces.delete(cur.orig);\n        $80f8b45278b0164a$export$6511920ae9f0cd34(s.events.change);\n    }\n    if ((cur.orig === cur.previouslySelected || cur.keyHasChanged) && (cur.orig === dest || !dest)) $80f8b45278b0164a$export$fe412c270a34f415(s);\n    else if (!s.selectable.enabled) $80f8b45278b0164a$export$fe412c270a34f415(s);\n    $84ee20f15ef980fb$var$removeDragElements(s);\n    s.draggable.current = undefined;\n    s.dom.redraw();\n}\nfunction $84ee20f15ef980fb$export$70b61ad426ddbe54(s) {\n    const cur = s.draggable.current;\n    if (cur) {\n        if (cur.newPiece) s.pieces.delete(cur.orig);\n        s.draggable.current = undefined;\n        $80f8b45278b0164a$export$fe412c270a34f415(s);\n        $84ee20f15ef980fb$var$removeDragElements(s);\n        s.dom.redraw();\n    }\n}\nfunction $84ee20f15ef980fb$var$removeDragElements(s) {\n    const e = s.dom.elements;\n    if (e.ghost) $dbbfaf35dad95b1f$export$8cb512849e51eaf5(e.ghost, false);\n}\nfunction $84ee20f15ef980fb$var$pieceElementByKey(s, key) {\n    let el = s.dom.elements.board.firstChild;\n    while(el){\n        if (el.cgKey === key && el.tagName === \"PIECE\") return el;\n        el = el.nextSibling;\n    }\n    return;\n}\n\n\nfunction $edda395882a62460$export$4971bcc2704b21ab(state, keys) {\n    state.exploding = {\n        stage: 1,\n        keys: keys\n    };\n    state.dom.redraw();\n    setTimeout(()=>{\n        $edda395882a62460$var$setStage(state, 2);\n        setTimeout(()=>$edda395882a62460$var$setStage(state, undefined), 120);\n    }, 120);\n}\nfunction $edda395882a62460$var$setStage(state, stage) {\n    if (state.exploding) {\n        if (stage) state.exploding.stage = stage;\n        else state.exploding = undefined;\n        state.dom.redraw();\n    }\n}\n\n\nfunction $77723e179126bec6$export$b3571188c770cc5a(state, redrawAll) {\n    function toggleOrientation() {\n        $80f8b45278b0164a$export$e798007c48b456cd(state);\n        redrawAll();\n    }\n    return {\n        set (config) {\n            if (config.orientation && config.orientation !== state.orientation) toggleOrientation();\n            (0, $fe7eac34876cd925$export$d771543c4ed87064)(state, config);\n            (config.fen ? (0, $b81ba4ea6c3c4676$export$bd46b8ab3689edc4) : (0, $b81ba4ea6c3c4676$export$b3890eb0ae9dca99))((state)=>(0, $fe7eac34876cd925$export$8d21e34596265fa2)(state, config), state);\n        },\n        state: state,\n        getFen: ()=>(0, $f37f4d2e14067e5f$export$68d8715fc104d294)(state.pieces),\n        toggleOrientation: toggleOrientation,\n        setPieces (pieces) {\n            (0, $b81ba4ea6c3c4676$export$bd46b8ab3689edc4)((state)=>$80f8b45278b0164a$export$20a063d1402ff7ff(state, pieces), state);\n        },\n        selectSquare (key, force) {\n            if (key) (0, $b81ba4ea6c3c4676$export$bd46b8ab3689edc4)((state)=>$80f8b45278b0164a$export$6073914ea697a63e(state, key, force), state);\n            else if (state.selected) {\n                $80f8b45278b0164a$export$fe412c270a34f415(state);\n                state.dom.redraw();\n            }\n        },\n        move (orig, dest) {\n            (0, $b81ba4ea6c3c4676$export$bd46b8ab3689edc4)((state)=>$80f8b45278b0164a$export$13f6ca6271343510(state, orig, dest), state);\n        },\n        newPiece (piece, key) {\n            (0, $b81ba4ea6c3c4676$export$bd46b8ab3689edc4)((state)=>$80f8b45278b0164a$export$13886f9573facc29(state, piece, key), state);\n        },\n        playPremove () {\n            if (state.premovable.current) {\n                if ((0, $b81ba4ea6c3c4676$export$bd46b8ab3689edc4)($80f8b45278b0164a$export$d04320a93cdae73d, state)) return true;\n                // if the premove couldn't be played, redraw to clear it up\n                state.dom.redraw();\n            }\n            return false;\n        },\n        playPredrop (validate) {\n            if (state.predroppable.current) {\n                const result = $80f8b45278b0164a$export$8efa9460c0cedd9e(state, validate);\n                state.dom.redraw();\n                return result;\n            }\n            return false;\n        },\n        cancelPremove () {\n            (0, $b81ba4ea6c3c4676$export$b3890eb0ae9dca99)($80f8b45278b0164a$export$f92a111f74a3f7c7, state);\n        },\n        cancelPredrop () {\n            (0, $b81ba4ea6c3c4676$export$b3890eb0ae9dca99)($80f8b45278b0164a$export$9e6f418e5ea6b92c, state);\n        },\n        cancelMove () {\n            (0, $b81ba4ea6c3c4676$export$b3890eb0ae9dca99)((state)=>{\n                $80f8b45278b0164a$export$e47a3d6268102bb5(state);\n                (0, $84ee20f15ef980fb$export$70b61ad426ddbe54)(state);\n            }, state);\n        },\n        stop () {\n            (0, $b81ba4ea6c3c4676$export$b3890eb0ae9dca99)((state)=>{\n                $80f8b45278b0164a$export$fa6813432f753b0d(state);\n                (0, $84ee20f15ef980fb$export$70b61ad426ddbe54)(state);\n            }, state);\n        },\n        explode (keys) {\n            (0, $edda395882a62460$export$4971bcc2704b21ab)(state, keys);\n        },\n        setAutoShapes (shapes) {\n            (0, $b81ba4ea6c3c4676$export$b3890eb0ae9dca99)((state)=>state.drawable.autoShapes = shapes, state);\n        },\n        setShapes (shapes) {\n            (0, $b81ba4ea6c3c4676$export$b3890eb0ae9dca99)((state)=>state.drawable.shapes = shapes, state);\n        },\n        getKeyAtDomPos (pos) {\n            return $80f8b45278b0164a$export$102bdd581884418b(pos, $80f8b45278b0164a$export$970133fdf67d86cb(state), state.dom.bounds());\n        },\n        redrawAll: redrawAll,\n        dragNewPiece (piece, event, force) {\n            (0, $84ee20f15ef980fb$export$65771a6862d302e4)(state, piece, event, force);\n        },\n        destroy () {\n            $80f8b45278b0164a$export$fa6813432f753b0d(state);\n            state.dom.unbind && state.dom.unbind();\n            state.dom.destroyed = true;\n        }\n    };\n}\n\n\n\n\n\nfunction $7b1d28100d027626$export$ebe90cb607ad99e() {\n    return {\n        pieces: $f37f4d2e14067e5f$export$aafa59e2e03f2942($f37f4d2e14067e5f$export$59ff82fc918bd7e3),\n        orientation: \"white\",\n        turnColor: \"white\",\n        coordinates: true,\n        ranksPosition: \"right\",\n        autoCastle: true,\n        viewOnly: false,\n        disableContextMenu: false,\n        addPieceZIndex: false,\n        blockTouchScroll: false,\n        pieceKey: false,\n        trustAllEvents: false,\n        highlight: {\n            lastMove: true,\n            check: true\n        },\n        animation: {\n            enabled: true,\n            duration: 200\n        },\n        movable: {\n            free: true,\n            color: \"both\",\n            showDests: true,\n            events: {},\n            rookCastle: true\n        },\n        premovable: {\n            enabled: true,\n            showDests: true,\n            castle: true,\n            events: {}\n        },\n        predroppable: {\n            enabled: false,\n            events: {}\n        },\n        draggable: {\n            enabled: true,\n            distance: 3,\n            autoDistance: true,\n            showGhost: true,\n            deleteOnDropOff: false\n        },\n        dropmode: {\n            active: false\n        },\n        selectable: {\n            enabled: true\n        },\n        stats: {\n            // on touchscreen, default to \"tap-tap\" moves\n            // instead of drag\n            dragged: !(\"ontouchstart\" in window)\n        },\n        events: {},\n        drawable: {\n            enabled: true,\n            visible: true,\n            defaultSnapToValidMove: true,\n            eraseOnClick: true,\n            shapes: [],\n            autoShapes: [],\n            brushes: {\n                green: {\n                    key: \"g\",\n                    color: \"#15781B\",\n                    opacity: 1,\n                    lineWidth: 10\n                },\n                red: {\n                    key: \"r\",\n                    color: \"#882020\",\n                    opacity: 1,\n                    lineWidth: 10\n                },\n                blue: {\n                    key: \"b\",\n                    color: \"#003088\",\n                    opacity: 1,\n                    lineWidth: 10\n                },\n                yellow: {\n                    key: \"y\",\n                    color: \"#e68f00\",\n                    opacity: 1,\n                    lineWidth: 10\n                },\n                paleBlue: {\n                    key: \"pb\",\n                    color: \"#003088\",\n                    opacity: 0.4,\n                    lineWidth: 15\n                },\n                paleGreen: {\n                    key: \"pg\",\n                    color: \"#15781B\",\n                    opacity: 0.4,\n                    lineWidth: 15\n                },\n                paleRed: {\n                    key: \"pr\",\n                    color: \"#882020\",\n                    opacity: 0.4,\n                    lineWidth: 15\n                },\n                paleGrey: {\n                    key: \"pgr\",\n                    color: \"#4a4a4a\",\n                    opacity: 0.35,\n                    lineWidth: 15\n                },\n                purple: {\n                    key: \"purp\",\n                    color: \"#68217a\",\n                    opacity: 0.65,\n                    lineWidth: 10\n                },\n                pink: {\n                    key: \"pink\",\n                    color: \"#ee2080\",\n                    opacity: 0.5,\n                    lineWidth: 10\n                },\n                hilite: {\n                    key: \"hilite\",\n                    color: \"#fff\",\n                    opacity: 1,\n                    lineWidth: 1\n                }\n            },\n            prevSvgHash: \"\"\n        },\n        hold: (0, $dbbfaf35dad95b1f$export$9dc4ecf953986f04)()\n    };\n}\n\n\n\n\n\nfunction $3eabe156c0ff4c04$export$a529cedf94de8dc() {\n    const defs = $3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"defs\");\n    const filter = $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"filter\"), {\n        id: \"cg-filter-blur\"\n    });\n    filter.appendChild($3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"feGaussianBlur\"), {\n        stdDeviation: \"0.022\"\n    }));\n    defs.appendChild(filter);\n    return defs;\n}\nfunction $3eabe156c0ff4c04$export$fb80b1b7d7777ee5(state, shapesEl, customsEl) {\n    var _a;\n    const d = state.drawable, curD = d.current, cur = curD && curD.mouseSq ? curD : undefined, dests = new Map(), bounds = state.dom.bounds(), nonPieceAutoShapes = d.autoShapes.filter((autoShape)=>!autoShape.piece);\n    for (const s of d.shapes.concat(nonPieceAutoShapes).concat(cur ? [\n        cur\n    ] : [])){\n        if (!s.dest) continue;\n        const sources = (_a = dests.get(s.dest)) !== null && _a !== void 0 ? _a : new Set(), from = $3eabe156c0ff4c04$var$pos2user($3eabe156c0ff4c04$var$orient((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(s.orig), state.orientation), bounds), to = $3eabe156c0ff4c04$var$pos2user($3eabe156c0ff4c04$var$orient((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(s.dest), state.orientation), bounds);\n        sources.add($3eabe156c0ff4c04$var$moveAngle(from, to));\n        dests.set(s.dest, sources);\n    }\n    const shapes = d.shapes.concat(nonPieceAutoShapes).map((s)=>{\n        return {\n            shape: s,\n            current: false,\n            hash: $3eabe156c0ff4c04$var$shapeHash(s, $3eabe156c0ff4c04$var$isShort(s.dest, dests), false, bounds)\n        };\n    });\n    if (cur) shapes.push({\n        shape: cur,\n        current: true,\n        hash: $3eabe156c0ff4c04$var$shapeHash(cur, $3eabe156c0ff4c04$var$isShort(cur.dest, dests), true, bounds)\n    });\n    const fullHash = shapes.map((sc)=>sc.hash).join(\";\");\n    if (fullHash === state.drawable.prevSvgHash) return;\n    state.drawable.prevSvgHash = fullHash;\n    /*\n      -- DOM hierarchy --\n      <svg class=\"cg-shapes\">      (<= svg)\n        <defs>\n          ...(for brushes)...\n        </defs>\n        <g>\n          ...(for arrows and circles)...\n        </g>\n      </svg>\n      <svg class=\"cg-custom-svgs\"> (<= customSvg)\n        <g>\n          ...(for custom svgs)...\n        </g>\n      </svg>\n    */ const defsEl = shapesEl.querySelector(\"defs\");\n    $3eabe156c0ff4c04$var$syncDefs(d, shapes, defsEl);\n    $3eabe156c0ff4c04$var$syncShapes(shapes, shapesEl.querySelector(\"g\"), customsEl.querySelector(\"g\"), (s)=>$3eabe156c0ff4c04$var$renderShape(state, s, d.brushes, dests, bounds));\n}\n// append only. Don't try to update/remove.\nfunction $3eabe156c0ff4c04$var$syncDefs(d, shapes, defsEl) {\n    var _a;\n    const brushes = new Map();\n    let brush;\n    for (const s of shapes.filter((s)=>s.shape.dest && s.shape.brush)){\n        brush = $3eabe156c0ff4c04$var$makeCustomBrush(d.brushes[s.shape.brush], s.shape.modifiers);\n        if ((_a = s.shape.modifiers) === null || _a === void 0 ? void 0 : _a.hilite) brushes.set(\"hilite\", d.brushes[\"hilite\"]);\n        brushes.set(brush.key, brush);\n    }\n    const keysInDom = new Set();\n    let el = defsEl.firstElementChild;\n    while(el){\n        keysInDom.add(el.getAttribute(\"cgKey\"));\n        el = el.nextElementSibling;\n    }\n    for (const [key, brush] of brushes.entries())if (!keysInDom.has(key)) defsEl.appendChild($3eabe156c0ff4c04$var$renderMarker(brush));\n}\nfunction $3eabe156c0ff4c04$var$syncShapes(syncables, shapes, customs, renderShape) {\n    const hashesInDom = new Map();\n    for (const sc of syncables)hashesInDom.set(sc.hash, false);\n    for (const root of [\n        shapes,\n        customs\n    ]){\n        const toRemove = [];\n        let el = root.firstElementChild, elHash;\n        while(el){\n            elHash = el.getAttribute(\"cgHash\");\n            if (hashesInDom.has(elHash)) hashesInDom.set(elHash, true);\n            else toRemove.push(el);\n            el = el.nextElementSibling;\n        }\n        for (const el of toRemove)root.removeChild(el);\n    }\n    // insert shapes that are not yet in dom\n    for (const sc of syncables.filter((s)=>!hashesInDom.get(s.hash))){\n        for (const svg of renderShape(sc))if (svg.isCustom) customs.appendChild(svg.el);\n        else shapes.appendChild(svg.el);\n    }\n}\nfunction $3eabe156c0ff4c04$var$shapeHash({ orig: orig, dest: dest, brush: brush, piece: piece, modifiers: modifiers, customSvg: customSvg, label: label }, shorten, current, bounds) {\n    var _a, _b;\n    // a shape and an overlay svg share a lifetime and have the same cgHash attribute\n    return [\n        bounds.width,\n        bounds.height,\n        current,\n        orig,\n        dest,\n        brush,\n        shorten && \"-\",\n        piece && $3eabe156c0ff4c04$var$pieceHash(piece),\n        modifiers && $3eabe156c0ff4c04$var$modifiersHash(modifiers),\n        customSvg && `custom-${$3eabe156c0ff4c04$var$textHash(customSvg.html)},${(_b = (_a = customSvg.center) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : \"o\"}`,\n        label && `label-${$3eabe156c0ff4c04$var$textHash(label.text)}`\n    ].filter((x)=>x).join(\",\");\n}\nfunction $3eabe156c0ff4c04$var$pieceHash(piece) {\n    return [\n        piece.color,\n        piece.role,\n        piece.scale\n    ].filter((x)=>x).join(\",\");\n}\nfunction $3eabe156c0ff4c04$var$modifiersHash(m) {\n    return [\n        m.lineWidth,\n        m.hilite && \"*\"\n    ].filter((x)=>x).join(\",\");\n}\nfunction $3eabe156c0ff4c04$var$textHash(s) {\n    // Rolling hash with base 31 (cf. https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\n    let h = 0;\n    for(let i = 0; i < s.length; i++)h = (h << 5) - h + s.charCodeAt(i) >>> 0;\n    return h.toString();\n}\nfunction $3eabe156c0ff4c04$var$renderShape(state, { shape: shape, current: current, hash: hash }, brushes, dests, bounds) {\n    var _a, _b;\n    const from = $3eabe156c0ff4c04$var$pos2user($3eabe156c0ff4c04$var$orient((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(shape.orig), state.orientation), bounds), to = shape.dest ? $3eabe156c0ff4c04$var$pos2user($3eabe156c0ff4c04$var$orient((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(shape.dest), state.orientation), bounds) : from, brush = shape.brush && $3eabe156c0ff4c04$var$makeCustomBrush(brushes[shape.brush], shape.modifiers), slots = dests.get(shape.dest), svgs = [];\n    if (brush) {\n        const el = $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"g\"), {\n            cgHash: hash\n        });\n        svgs.push({\n            el: el\n        });\n        if (from[0] !== to[0] || from[1] !== to[1]) el.appendChild($3eabe156c0ff4c04$var$renderArrow(shape, brush, from, to, current, $3eabe156c0ff4c04$var$isShort(shape.dest, dests)));\n        else el.appendChild($3eabe156c0ff4c04$var$renderCircle(brushes[shape.brush], from, current, bounds));\n    }\n    if (shape.label) {\n        const label = shape.label;\n        (_a = label.fill) !== null && _a !== void 0 ? _a : label.fill = shape.brush && brushes[shape.brush].color;\n        const corner = shape.brush ? undefined : \"tr\";\n        svgs.push({\n            el: $3eabe156c0ff4c04$var$renderLabel(label, hash, from, to, slots, corner),\n            isCustom: true\n        });\n    }\n    if (shape.customSvg) {\n        const on = (_b = shape.customSvg.center) !== null && _b !== void 0 ? _b : \"orig\";\n        const [x, y] = on === \"label\" ? $3eabe156c0ff4c04$var$labelCoords(from, to, slots).map((c)=>c - 0.5) : on === \"dest\" ? to : from;\n        const el = $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"g\"), {\n            transform: `translate(${x},${y})`,\n            cgHash: hash\n        });\n        el.innerHTML = `<svg width=\"1\" height=\"1\" viewBox=\"0 0 100 100\">${shape.customSvg.html}</svg>`;\n        svgs.push({\n            el: el,\n            isCustom: true\n        });\n    }\n    return svgs;\n}\nfunction $3eabe156c0ff4c04$var$renderCircle(brush, at, current, bounds) {\n    const widths = $3eabe156c0ff4c04$var$circleWidth(), radius = (bounds.width + bounds.height) / (4 * Math.max(bounds.width, bounds.height));\n    return $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"circle\"), {\n        stroke: brush.color,\n        \"stroke-width\": widths[current ? 0 : 1],\n        fill: \"none\",\n        opacity: $3eabe156c0ff4c04$var$opacity(brush, current),\n        cx: at[0],\n        cy: at[1],\n        r: radius - widths[1] / 2\n    });\n}\nfunction $3eabe156c0ff4c04$var$renderArrow(s, brush, from, to, current, shorten) {\n    var _a;\n    function renderLine(isHilite) {\n        var _a;\n        const m = $3eabe156c0ff4c04$var$arrowMargin(shorten && !current), dx = to[0] - from[0], dy = to[1] - from[1], angle = Math.atan2(dy, dx), xo = Math.cos(angle) * m, yo = Math.sin(angle) * m;\n        return $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"line\"), {\n            stroke: isHilite ? \"white\" : brush.color,\n            \"stroke-width\": $3eabe156c0ff4c04$var$lineWidth(brush, current) + (isHilite ? 0.04 : 0),\n            \"stroke-linecap\": \"round\",\n            \"marker-end\": `url(#arrowhead-${isHilite ? \"hilite\" : brush.key})`,\n            opacity: ((_a = s.modifiers) === null || _a === void 0 ? void 0 : _a.hilite) ? 1 : $3eabe156c0ff4c04$var$opacity(brush, current),\n            x1: from[0],\n            y1: from[1],\n            x2: to[0] - xo,\n            y2: to[1] - yo\n        });\n    }\n    if (!((_a = s.modifiers) === null || _a === void 0 ? void 0 : _a.hilite)) return renderLine(false);\n    const g = $3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"g\");\n    const blurred = $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"g\"), {\n        filter: \"url(#cg-filter-blur)\"\n    });\n    blurred.appendChild($3eabe156c0ff4c04$var$filterBox(from, to));\n    blurred.appendChild(renderLine(true));\n    g.appendChild(blurred);\n    g.appendChild(renderLine(false));\n    return g;\n}\nfunction $3eabe156c0ff4c04$var$renderMarker(brush) {\n    const marker = $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"marker\"), {\n        id: \"arrowhead-\" + brush.key,\n        orient: \"auto\",\n        overflow: \"visible\",\n        markerWidth: 4,\n        markerHeight: 4,\n        refX: brush.key === \"hilite\" ? 1.86 : 2.05,\n        refY: 2\n    });\n    marker.appendChild($3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"path\"), {\n        d: \"M0,0 V4 L3,2 Z\",\n        fill: brush.color\n    }));\n    marker.setAttribute(\"cgKey\", brush.key);\n    return marker;\n}\nfunction $3eabe156c0ff4c04$var$renderLabel(label, hash, from, to, slots, corner) {\n    var _a;\n    const labelSize = 0.4, fontSize = labelSize * 0.75 ** label.text.length, at = $3eabe156c0ff4c04$var$labelCoords(from, to, slots), cornerOff = corner === \"tr\" ? 0.4 : 0, g = $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"g\"), {\n        transform: `translate(${at[0] + cornerOff},${at[1] - cornerOff})`,\n        cgHash: hash\n    });\n    g.appendChild($3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"circle\"), {\n        r: labelSize / 2,\n        \"fill-opacity\": corner ? 1.0 : 0.8,\n        \"stroke-opacity\": corner ? 1.0 : 0.7,\n        \"stroke-width\": 0.03,\n        fill: (_a = label.fill) !== null && _a !== void 0 ? _a : \"#666\",\n        stroke: \"white\"\n    }));\n    const labelEl = $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"text\"), {\n        \"font-size\": fontSize,\n        \"font-family\": \"Noto Sans\",\n        \"text-anchor\": \"middle\",\n        fill: \"white\",\n        y: 0.13 * 0.75 ** label.text.length\n    });\n    labelEl.innerHTML = label.text;\n    g.appendChild(labelEl);\n    return g;\n}\nfunction $3eabe156c0ff4c04$var$orient(pos, color) {\n    return color === \"white\" ? pos : [\n        7 - pos[0],\n        7 - pos[1]\n    ];\n}\nfunction $3eabe156c0ff4c04$var$isShort(dest, dests) {\n    return true === (dest && dests.has(dest) && dests.get(dest).size > 1);\n}\nfunction $3eabe156c0ff4c04$export$c8a8987d4410bf2d(tagName) {\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n}\nfunction $3eabe156c0ff4c04$export$74da2cba014bdc09(el, attrs) {\n    for(const key in attrs)if (Object.prototype.hasOwnProperty.call(attrs, key)) el.setAttribute(key, attrs[key]);\n    return el;\n}\nfunction $3eabe156c0ff4c04$var$makeCustomBrush(base, modifiers) {\n    return !modifiers ? base : {\n        color: base.color,\n        opacity: Math.round(base.opacity * 10) / 10,\n        lineWidth: Math.round(modifiers.lineWidth || base.lineWidth),\n        key: [\n            base.key,\n            modifiers.lineWidth\n        ].filter((x)=>x).join(\"\")\n    };\n}\nfunction $3eabe156c0ff4c04$var$circleWidth() {\n    return [\n        3 / 64,\n        4 / 64\n    ];\n}\nfunction $3eabe156c0ff4c04$var$lineWidth(brush, current) {\n    return (brush.lineWidth || 10) * (current ? 0.85 : 1) / 64;\n}\nfunction $3eabe156c0ff4c04$var$opacity(brush, current) {\n    return (brush.opacity || 1) * (current ? 0.9 : 1);\n}\nfunction $3eabe156c0ff4c04$var$arrowMargin(shorten) {\n    return (shorten ? 20 : 10) / 64;\n}\nfunction $3eabe156c0ff4c04$var$pos2user(pos, bounds) {\n    const xScale = Math.min(1, bounds.width / bounds.height);\n    const yScale = Math.min(1, bounds.height / bounds.width);\n    return [\n        (pos[0] - 3.5) * xScale,\n        (3.5 - pos[1]) * yScale\n    ];\n}\nfunction $3eabe156c0ff4c04$var$filterBox(from, to) {\n    // lines/arrows are considered to be one dimensional for the purposes of SVG filters,\n    // so we add a transparent bounding box to ensure they apply to the 2nd dimension\n    const box = {\n        from: [\n            Math.floor(Math.min(from[0], to[0])),\n            Math.floor(Math.min(from[1], to[1]))\n        ],\n        to: [\n            Math.ceil(Math.max(from[0], to[0])),\n            Math.ceil(Math.max(from[1], to[1]))\n        ]\n    };\n    return $3eabe156c0ff4c04$export$74da2cba014bdc09($3eabe156c0ff4c04$export$c8a8987d4410bf2d(\"rect\"), {\n        x: box.from[0],\n        y: box.from[1],\n        width: box.to[0] - box.from[0],\n        height: box.to[1] - box.from[1],\n        fill: \"none\",\n        stroke: \"none\"\n    });\n}\nfunction $3eabe156c0ff4c04$var$moveAngle(from, to, asSlot = true) {\n    const angle = Math.atan2(to[1] - from[1], to[0] - from[0]) + Math.PI;\n    return asSlot ? (Math.round(angle * 8 / Math.PI) + 16) % 16 : angle;\n}\nfunction $3eabe156c0ff4c04$var$dist(from, to) {\n    return Math.sqrt([\n        from[0] - to[0],\n        from[1] - to[1]\n    ].reduce((acc, x)=>acc + x * x, 0));\n}\n/*\n try to place label at the junction of the destination shaft and arrowhead. if there's more than\n 1 arrow pointing to a square, the arrow shortens by 10 / 64 units so the label must move as well.\n \n if the angle between two incoming arrows is pi / 8, such as when an adjacent knight and bishop\n attack the same square, the knight's label is slid further down the shaft by an amount equal to\n our label size to avoid collision\n*/ function $3eabe156c0ff4c04$var$labelCoords(from, to, slots) {\n    let mag = $3eabe156c0ff4c04$var$dist(from, to);\n    //if (mag === 0) return [from[0], from[1]];\n    const angle = $3eabe156c0ff4c04$var$moveAngle(from, to, false);\n    if (slots) {\n        mag -= 33 / 64; // reduce by arrowhead length\n        if (slots.size > 1) {\n            mag -= 10 / 64; // reduce by shortening factor\n            const slot = $3eabe156c0ff4c04$var$moveAngle(from, to);\n            if (slots.has((slot + 1) % 16) || slots.has((slot + 15) % 16)) {\n                if (slot & 1) mag -= 0.4;\n            }\n        }\n    }\n    return [\n        from[0] - Math.cos(angle) * mag,\n        from[1] - Math.sin(angle) * mag\n    ].map((c)=>c + 0.5);\n}\n\n\nfunction $0a27377e74afbcfd$export$79188534738a92bf(element, s) {\n    // .cg-wrap (element passed to Chessground)\n    //   cg-container\n    //     cg-board\n    //     svg.cg-shapes\n    //       defs\n    //       g\n    //     svg.cg-custom-svgs\n    //       g\n    //     cg-auto-pieces\n    //     coords.ranks\n    //     coords.files\n    //     piece.ghost\n    element.innerHTML = \"\";\n    // ensure the cg-wrap class is set\n    // so bounds calculation can use the CSS width/height values\n    // add that class yourself to the element before calling chessground\n    // for a slight performance improvement! (avoids recomputing style)\n    element.classList.add(\"cg-wrap\");\n    for (const c of (0, $f00dad157732f88c$export$8f45430ccf837300))element.classList.toggle(\"orientation-\" + c, s.orientation === c);\n    element.classList.toggle(\"manipulable\", !s.viewOnly);\n    const container = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"cg-container\");\n    element.appendChild(container);\n    const board = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"cg-board\");\n    container.appendChild(board);\n    let svg;\n    let customSvg;\n    let autoPieces;\n    if (s.drawable.visible) {\n        svg = (0, $3eabe156c0ff4c04$export$74da2cba014bdc09)((0, $3eabe156c0ff4c04$export$c8a8987d4410bf2d)(\"svg\"), {\n            class: \"cg-shapes\",\n            viewBox: \"-4 -4 8 8\",\n            preserveAspectRatio: \"xMidYMid slice\"\n        });\n        svg.appendChild((0, $3eabe156c0ff4c04$export$a529cedf94de8dc)());\n        svg.appendChild((0, $3eabe156c0ff4c04$export$c8a8987d4410bf2d)(\"g\"));\n        customSvg = (0, $3eabe156c0ff4c04$export$74da2cba014bdc09)((0, $3eabe156c0ff4c04$export$c8a8987d4410bf2d)(\"svg\"), {\n            class: \"cg-custom-svgs\",\n            viewBox: \"-3.5 -3.5 8 8\",\n            preserveAspectRatio: \"xMidYMid slice\"\n        });\n        customSvg.appendChild((0, $3eabe156c0ff4c04$export$c8a8987d4410bf2d)(\"g\"));\n        autoPieces = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"cg-auto-pieces\");\n        container.appendChild(svg);\n        container.appendChild(customSvg);\n        container.appendChild(autoPieces);\n    }\n    if (s.coordinates) {\n        const orientClass = s.orientation === \"black\" ? \" black\" : \"\";\n        const ranksPositionClass = s.ranksPosition === \"left\" ? \" left\" : \"\";\n        container.appendChild($0a27377e74afbcfd$var$renderCoords((0, $f00dad157732f88c$export$d8e4e3952f325c95), \"ranks\" + orientClass + ranksPositionClass));\n        container.appendChild($0a27377e74afbcfd$var$renderCoords((0, $f00dad157732f88c$export$3a444357c5f65f65), \"files\" + orientClass));\n    }\n    let ghost;\n    if (s.draggable.enabled && s.draggable.showGhost) {\n        ghost = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"piece\", \"ghost\");\n        (0, $dbbfaf35dad95b1f$export$8cb512849e51eaf5)(ghost, false);\n        container.appendChild(ghost);\n    }\n    return {\n        board: board,\n        container: container,\n        wrap: element,\n        ghost: ghost,\n        svg: svg,\n        customSvg: customSvg,\n        autoPieces: autoPieces\n    };\n}\nfunction $0a27377e74afbcfd$var$renderCoords(elems, className) {\n    const el = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"coords\", className);\n    let f;\n    for (const elem of elems){\n        f = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"coord\");\n        f.textContent = elem;\n        el.appendChild(f);\n    }\n    return el;\n}\n\n\n\n\n\n\n\nfunction $de1bc8749e875bbb$export$af7814416196c9de(s, piece) {\n    s.dropmode = {\n        active: true,\n        piece: piece\n    };\n    (0, $84ee20f15ef980fb$export$70b61ad426ddbe54)(s);\n}\nfunction $de1bc8749e875bbb$export$3bf31ae3228aa49e(s) {\n    s.dropmode = {\n        active: false\n    };\n}\nfunction $de1bc8749e875bbb$export$663103110d94aac9(s, e) {\n    if (!s.dropmode.active) return;\n    $80f8b45278b0164a$export$f92a111f74a3f7c7(s);\n    $80f8b45278b0164a$export$9e6f418e5ea6b92c(s);\n    const piece = s.dropmode.piece;\n    if (piece) {\n        s.pieces.set(\"a0\", piece);\n        const position = $dbbfaf35dad95b1f$export$33052595192f7117(e);\n        const dest = position && $80f8b45278b0164a$export$102bdd581884418b(position, $80f8b45278b0164a$export$970133fdf67d86cb(s), s.dom.bounds());\n        if (dest) $80f8b45278b0164a$export$b2b9f46b948033b0(s, \"a0\", dest);\n    }\n    s.dom.redraw();\n}\n\n\n\nfunction $2d15ce003fd0519b$export$fc48d2ed06541843(s, onResize) {\n    const boardEl = s.dom.elements.board;\n    if (\"ResizeObserver\" in window) new ResizeObserver(onResize).observe(s.dom.elements.wrap);\n    if (s.disableContextMenu || s.drawable.enabled) boardEl.addEventListener(\"contextmenu\", (e)=>e.preventDefault());\n    if (s.viewOnly) return;\n    // Cannot be passive, because we prevent touch scrolling and dragging of\n    // selected elements.\n    const onStart = $2d15ce003fd0519b$var$startDragOrDraw(s);\n    boardEl.addEventListener(\"touchstart\", onStart, {\n        passive: false\n    });\n    boardEl.addEventListener(\"mousedown\", onStart, {\n        passive: false\n    });\n}\nfunction $2d15ce003fd0519b$export$fdc77453278b0fa9(s, onResize) {\n    const unbinds = [];\n    // Old versions of Edge and Safari do not support ResizeObserver. Send\n    // chessground.resize if a user action has changed the bounds of the board.\n    if (!(\"ResizeObserver\" in window)) unbinds.push($2d15ce003fd0519b$var$unbindable(document.body, \"chessground.resize\", onResize));\n    if (!s.viewOnly) {\n        const onmove = $2d15ce003fd0519b$var$dragOrDraw(s, $84ee20f15ef980fb$export$d947e5f4f4c48d48, $7a42cea72ae7e4e6$export$d947e5f4f4c48d48);\n        const onend = $2d15ce003fd0519b$var$dragOrDraw(s, $84ee20f15ef980fb$export$bd5df0f255a350f8, $7a42cea72ae7e4e6$export$bd5df0f255a350f8);\n        for (const ev of [\n            \"touchmove\",\n            \"mousemove\"\n        ])unbinds.push($2d15ce003fd0519b$var$unbindable(document, ev, onmove));\n        for (const ev of [\n            \"touchend\",\n            \"mouseup\"\n        ])unbinds.push($2d15ce003fd0519b$var$unbindable(document, ev, onend));\n        const onScroll = ()=>s.dom.bounds.clear();\n        unbinds.push($2d15ce003fd0519b$var$unbindable(document, \"scroll\", onScroll, {\n            capture: true,\n            passive: true\n        }));\n        unbinds.push($2d15ce003fd0519b$var$unbindable(window, \"resize\", onScroll, {\n            passive: true\n        }));\n    }\n    return ()=>unbinds.forEach((f)=>f());\n}\nfunction $2d15ce003fd0519b$var$unbindable(el, eventName, callback, options) {\n    el.addEventListener(eventName, callback, options);\n    return ()=>el.removeEventListener(eventName, callback, options);\n}\nconst $2d15ce003fd0519b$var$startDragOrDraw = (s)=>(e)=>{\n        if (s.draggable.current) $84ee20f15ef980fb$export$70b61ad426ddbe54(s);\n        else if (s.drawable.current) $7a42cea72ae7e4e6$export$70b61ad426ddbe54(s);\n        else if (e.shiftKey || (0, $dbbfaf35dad95b1f$export$947a472b5b3020ba)(e)) {\n            if (s.drawable.enabled) $7a42cea72ae7e4e6$export$b3571188c770cc5a(s, e);\n        } else if (!s.viewOnly) {\n            if (s.dropmode.active) (0, $de1bc8749e875bbb$export$663103110d94aac9)(s, e);\n            else $84ee20f15ef980fb$export$b3571188c770cc5a(s, e);\n        }\n    };\nconst $2d15ce003fd0519b$var$dragOrDraw = (s, withDrag, withDraw)=>(e)=>{\n        if (s.drawable.current) {\n            if (s.drawable.enabled) withDraw(s, e);\n        } else if (!s.viewOnly) withDrag(s, e);\n    };\n\n\n\n\nfunction $c28505726f0fb896$export$b3890eb0ae9dca99(s) {\n    const asWhite = (0, $80f8b45278b0164a$export$970133fdf67d86cb)(s), posToTranslate = (0, $dbbfaf35dad95b1f$export$2135ad75550a2ff4)(s.dom.bounds()), boardEl = s.dom.elements.board, pieces = s.pieces, curAnim = s.animation.current, anims = curAnim ? curAnim.plan.anims : new Map(), fadings = curAnim ? curAnim.plan.fadings : new Map(), curDrag = s.draggable.current, squares = $c28505726f0fb896$var$computeSquareClasses(s), samePieces = new Set(), sameSquares = new Set(), movedPieces = new Map(), movedSquares = new Map(); // by class name\n    let k, el, pieceAtKey, elPieceName, anim, fading, pMvdset, pMvd, sMvdset, sMvd;\n    // walk over all board dom elements, apply animations and flag moved pieces\n    el = boardEl.firstChild;\n    while(el){\n        k = el.cgKey;\n        if ($c28505726f0fb896$var$isPieceNode(el)) {\n            pieceAtKey = pieces.get(k);\n            anim = anims.get(k);\n            fading = fadings.get(k);\n            elPieceName = el.cgPiece;\n            // if piece not being dragged anymore, remove dragging style\n            if (el.cgDragging && (!curDrag || curDrag.orig !== k)) {\n                el.classList.remove(\"dragging\");\n                (0, $dbbfaf35dad95b1f$export$d73ee8ef04f5226a)(el, posToTranslate((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(k), asWhite));\n                el.cgDragging = false;\n            }\n            // remove fading class if it still remains\n            if (!fading && el.cgFading) {\n                el.cgFading = false;\n                el.classList.remove(\"fading\");\n            }\n            // there is now a piece at this dom key\n            if (pieceAtKey) {\n                // continue animation if already animating and same piece\n                // (otherwise it could animate a captured piece)\n                if (anim && el.cgAnimating && elPieceName === $c28505726f0fb896$var$pieceNameOf(pieceAtKey)) {\n                    const pos = (0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(k);\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                    el.classList.add(\"anim\");\n                    (0, $dbbfaf35dad95b1f$export$d73ee8ef04f5226a)(el, posToTranslate(pos, asWhite));\n                } else if (el.cgAnimating) {\n                    el.cgAnimating = false;\n                    el.classList.remove(\"anim\");\n                    (0, $dbbfaf35dad95b1f$export$d73ee8ef04f5226a)(el, posToTranslate((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(k), asWhite));\n                    if (s.addPieceZIndex) el.style.zIndex = $c28505726f0fb896$var$posZIndex((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(k), asWhite);\n                }\n                // same piece: flag as same\n                if (elPieceName === $c28505726f0fb896$var$pieceNameOf(pieceAtKey) && (!fading || !el.cgFading)) samePieces.add(k);\n                else if (fading && elPieceName === $c28505726f0fb896$var$pieceNameOf(fading)) {\n                    el.classList.add(\"fading\");\n                    el.cgFading = true;\n                } else $c28505726f0fb896$var$appendValue(movedPieces, elPieceName, el);\n            } else $c28505726f0fb896$var$appendValue(movedPieces, elPieceName, el);\n        } else if ($c28505726f0fb896$var$isSquareNode(el)) {\n            const cn = el.className;\n            if (squares.get(k) === cn) sameSquares.add(k);\n            else $c28505726f0fb896$var$appendValue(movedSquares, cn, el);\n        }\n        el = el.nextSibling;\n    }\n    // walk over all squares in current set, apply dom changes to moved squares\n    // or append new squares\n    for (const [sk, className] of squares)if (!sameSquares.has(sk)) {\n        sMvdset = movedSquares.get(className);\n        sMvd = sMvdset && sMvdset.pop();\n        const translation = posToTranslate((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(sk), asWhite);\n        if (sMvd) {\n            sMvd.cgKey = sk;\n            (0, $dbbfaf35dad95b1f$export$d73ee8ef04f5226a)(sMvd, translation);\n        } else {\n            const squareNode = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"square\", className);\n            squareNode.cgKey = sk;\n            (0, $dbbfaf35dad95b1f$export$d73ee8ef04f5226a)(squareNode, translation);\n            boardEl.insertBefore(squareNode, boardEl.firstChild);\n        }\n    }\n    // walk over all pieces in current set, apply dom changes to moved pieces\n    // or append new pieces\n    for (const [k, p] of pieces){\n        anim = anims.get(k);\n        if (!samePieces.has(k)) {\n            pMvdset = movedPieces.get($c28505726f0fb896$var$pieceNameOf(p));\n            pMvd = pMvdset && pMvdset.pop();\n            // a same piece was moved\n            if (pMvd) {\n                // apply dom changes\n                pMvd.cgKey = k;\n                if (pMvd.cgFading) {\n                    pMvd.classList.remove(\"fading\");\n                    pMvd.cgFading = false;\n                }\n                const pos = (0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(k);\n                if (s.addPieceZIndex) pMvd.style.zIndex = $c28505726f0fb896$var$posZIndex(pos, asWhite);\n                if (anim) {\n                    pMvd.cgAnimating = true;\n                    pMvd.classList.add(\"anim\");\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                }\n                (0, $dbbfaf35dad95b1f$export$d73ee8ef04f5226a)(pMvd, posToTranslate(pos, asWhite));\n            } else {\n                const pieceName = $c28505726f0fb896$var$pieceNameOf(p), pieceNode = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"piece\", pieceName), pos = (0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(k);\n                pieceNode.cgPiece = pieceName;\n                pieceNode.cgKey = k;\n                if (anim) {\n                    pieceNode.cgAnimating = true;\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                }\n                (0, $dbbfaf35dad95b1f$export$d73ee8ef04f5226a)(pieceNode, posToTranslate(pos, asWhite));\n                if (s.addPieceZIndex) pieceNode.style.zIndex = $c28505726f0fb896$var$posZIndex(pos, asWhite);\n                boardEl.appendChild(pieceNode);\n            }\n        }\n    }\n    // remove any element that remains in the moved sets\n    for (const nodes of movedPieces.values())$c28505726f0fb896$var$removeNodes(s, nodes);\n    for (const nodes of movedSquares.values())$c28505726f0fb896$var$removeNodes(s, nodes);\n}\nfunction $c28505726f0fb896$export$d62f185fd39aa98c(s) {\n    const asWhite = (0, $80f8b45278b0164a$export$970133fdf67d86cb)(s), posToTranslate = (0, $dbbfaf35dad95b1f$export$2135ad75550a2ff4)(s.dom.bounds());\n    let el = s.dom.elements.board.firstChild;\n    while(el){\n        if ($c28505726f0fb896$var$isPieceNode(el) && !el.cgAnimating || $c28505726f0fb896$var$isSquareNode(el)) (0, $dbbfaf35dad95b1f$export$d73ee8ef04f5226a)(el, posToTranslate((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(el.cgKey), asWhite));\n        el = el.nextSibling;\n    }\n}\nfunction $c28505726f0fb896$export$f4467a4f41373bc7(s) {\n    var _a, _b;\n    const bounds = s.dom.elements.wrap.getBoundingClientRect();\n    const container = s.dom.elements.container;\n    const ratio = bounds.height / bounds.width;\n    const width = Math.floor(bounds.width * window.devicePixelRatio / 8) * 8 / window.devicePixelRatio;\n    const height = width * ratio;\n    container.style.width = width + \"px\";\n    container.style.height = height + \"px\";\n    s.dom.bounds.clear();\n    (_a = s.addDimensionsCssVarsTo) === null || _a === void 0 || _a.style.setProperty(\"--cg-width\", width + \"px\");\n    (_b = s.addDimensionsCssVarsTo) === null || _b === void 0 || _b.style.setProperty(\"--cg-height\", height + \"px\");\n}\nconst $c28505726f0fb896$var$isPieceNode = (el)=>el.tagName === \"PIECE\";\nconst $c28505726f0fb896$var$isSquareNode = (el)=>el.tagName === \"SQUARE\";\nfunction $c28505726f0fb896$var$removeNodes(s, nodes) {\n    for (const node of nodes)s.dom.elements.board.removeChild(node);\n}\nfunction $c28505726f0fb896$var$posZIndex(pos, asWhite) {\n    const minZ = 3;\n    const rank = pos[1];\n    const z = asWhite ? minZ + 7 - rank : minZ + rank;\n    return `${z}`;\n}\nconst $c28505726f0fb896$var$pieceNameOf = (piece)=>`${piece.color} ${piece.role}`;\nfunction $c28505726f0fb896$var$computeSquareClasses(s) {\n    var _a, _b, _c;\n    const squares = new Map();\n    if (s.lastMove && s.highlight.lastMove) for (const k of s.lastMove)$c28505726f0fb896$var$addSquare(squares, k, \"last-move\");\n    if (s.check && s.highlight.check) $c28505726f0fb896$var$addSquare(squares, s.check, \"check\");\n    if (s.selected) {\n        $c28505726f0fb896$var$addSquare(squares, s.selected, \"selected\");\n        if (s.movable.showDests) {\n            const dests = (_a = s.movable.dests) === null || _a === void 0 ? void 0 : _a.get(s.selected);\n            if (dests) for (const k of dests)$c28505726f0fb896$var$addSquare(squares, k, \"move-dest\" + (s.pieces.has(k) ? \" oc\" : \"\"));\n            const pDests = (_c = (_b = s.premovable.customDests) === null || _b === void 0 ? void 0 : _b.get(s.selected)) !== null && _c !== void 0 ? _c : s.premovable.dests;\n            if (pDests) for (const k of pDests)$c28505726f0fb896$var$addSquare(squares, k, \"premove-dest\" + (s.pieces.has(k) ? \" oc\" : \"\"));\n        }\n    }\n    const premove = s.premovable.current;\n    if (premove) for (const k of premove)$c28505726f0fb896$var$addSquare(squares, k, \"current-premove\");\n    else if (s.predroppable.current) $c28505726f0fb896$var$addSquare(squares, s.predroppable.current.key, \"current-premove\");\n    const o = s.exploding;\n    if (o) for (const k of o.keys)$c28505726f0fb896$var$addSquare(squares, k, \"exploding\" + o.stage);\n    if (s.highlight.custom) s.highlight.custom.forEach((v, k)=>{\n        $c28505726f0fb896$var$addSquare(squares, k, v);\n    });\n    return squares;\n}\nfunction $c28505726f0fb896$var$addSquare(squares, key, klass) {\n    const classes = squares.get(key);\n    if (classes) squares.set(key, `${classes} ${klass}`);\n    else squares.set(key, klass);\n}\nfunction $c28505726f0fb896$var$appendValue(map, key, value) {\n    const arr = map.get(key);\n    if (arr) arr.push(value);\n    else map.set(key, [\n        value\n    ]);\n}\n\n\n\n\n// append and remove only. No updates.\nfunction $f6a46b1a152048c7$export$eb48cb918245ce33(shapes, root, renderShape) {\n    const hashesInDom = new Map(), toRemove = [];\n    for (const sc of shapes)hashesInDom.set(sc.hash, false);\n    let el = root.firstElementChild, elHash;\n    while(el){\n        elHash = el.getAttribute(\"cgHash\");\n        // found a shape element that's here to stay\n        if (hashesInDom.has(elHash)) hashesInDom.set(elHash, true);\n        else toRemove.push(el);\n        el = el.nextElementSibling;\n    }\n    // remove old shapes\n    for (const el of toRemove)root.removeChild(el);\n    // insert shapes that are not yet in dom\n    for (const sc of shapes)if (!hashesInDom.get(sc.hash)) root.appendChild(renderShape(sc));\n}\n\n\nfunction $df86554080128aa6$export$b3890eb0ae9dca99(state, autoPieceEl) {\n    const autoPieces = state.drawable.autoShapes.filter((autoShape)=>autoShape.piece);\n    const autoPieceShapes = autoPieces.map((s)=>{\n        return {\n            shape: s,\n            hash: $df86554080128aa6$var$hash(s),\n            current: false\n        };\n    });\n    (0, $f6a46b1a152048c7$export$eb48cb918245ce33)(autoPieceShapes, autoPieceEl, (shape)=>$df86554080128aa6$var$renderShape(state, shape, state.dom.bounds()));\n}\nfunction $df86554080128aa6$export$d62f185fd39aa98c(state) {\n    var _a;\n    const asWhite = (0, $80f8b45278b0164a$export$970133fdf67d86cb)(state), posToTranslate = (0, $dbbfaf35dad95b1f$export$2135ad75550a2ff4)(state.dom.bounds());\n    let el = (_a = state.dom.elements.autoPieces) === null || _a === void 0 ? void 0 : _a.firstChild;\n    while(el){\n        (0, $dbbfaf35dad95b1f$export$f8afaca97e230dc6)(el, posToTranslate((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(el.cgKey), asWhite), el.cgScale);\n        el = el.nextSibling;\n    }\n}\nfunction $df86554080128aa6$var$renderShape(state, { shape: shape, hash: hash }, bounds) {\n    var _a, _b, _c;\n    const orig = shape.orig;\n    const role = (_a = shape.piece) === null || _a === void 0 ? void 0 : _a.role;\n    const color = (_b = shape.piece) === null || _b === void 0 ? void 0 : _b.color;\n    const scale = (_c = shape.piece) === null || _c === void 0 ? void 0 : _c.scale;\n    const pieceEl = (0, $dbbfaf35dad95b1f$export$3d7cd8ed57263b30)(\"piece\", `${role} ${color}`);\n    pieceEl.setAttribute(\"cgHash\", hash);\n    pieceEl.cgKey = orig;\n    pieceEl.cgScale = scale;\n    (0, $dbbfaf35dad95b1f$export$f8afaca97e230dc6)(pieceEl, (0, $dbbfaf35dad95b1f$export$2135ad75550a2ff4)(bounds)((0, $dbbfaf35dad95b1f$export$e2878eba51f22d11)(orig), (0, $80f8b45278b0164a$export$970133fdf67d86cb)(state)), scale);\n    return pieceEl;\n}\nconst $df86554080128aa6$var$hash = (autoPiece)=>{\n    var _a, _b, _c;\n    return [\n        autoPiece.orig,\n        (_a = autoPiece.piece) === null || _a === void 0 ? void 0 : _a.role,\n        (_b = autoPiece.piece) === null || _b === void 0 ? void 0 : _b.color,\n        (_c = autoPiece.piece) === null || _c === void 0 ? void 0 : _c.scale\n    ].join(\",\");\n};\n\n\n\n\nfunction $ea2d34c1974d7d8b$export$7e59435764664c61({ el: el, config: config }) {\n    return $ea2d34c1974d7d8b$export$6aaf0e4db08ad996(el, config);\n}\nfunction $ea2d34c1974d7d8b$export$6aaf0e4db08ad996(element, config) {\n    const maybeState = (0, $7b1d28100d027626$export$ebe90cb607ad99e)();\n    (0, $fe7eac34876cd925$export$8d21e34596265fa2)(maybeState, config || {});\n    function redrawAll() {\n        const prevUnbind = \"dom\" in maybeState ? maybeState.dom.unbind : undefined;\n        // compute bounds from existing board element if possible\n        // this allows non-square boards from CSS to be handled (for 3D)\n        const elements = (0, $0a27377e74afbcfd$export$79188534738a92bf)(element, maybeState), bounds = $dbbfaf35dad95b1f$export$7c73462e0d25e514(()=>elements.board.getBoundingClientRect()), redrawNow = (skipSvg)=>{\n            (0, $c28505726f0fb896$export$b3890eb0ae9dca99)(state);\n            if (elements.autoPieces) $df86554080128aa6$export$b3890eb0ae9dca99(state, elements.autoPieces);\n            if (!skipSvg && elements.svg) $3eabe156c0ff4c04$export$fb80b1b7d7777ee5(state, elements.svg, elements.customSvg);\n        }, onResize = ()=>{\n            (0, $c28505726f0fb896$export$f4467a4f41373bc7)(state);\n            (0, $c28505726f0fb896$export$d62f185fd39aa98c)(state);\n            if (elements.autoPieces) $df86554080128aa6$export$d62f185fd39aa98c(state);\n        };\n        const state = maybeState;\n        state.dom = {\n            elements: elements,\n            bounds: bounds,\n            redraw: $ea2d34c1974d7d8b$var$debounceRedraw(redrawNow),\n            redrawNow: redrawNow,\n            unbind: prevUnbind\n        };\n        state.drawable.prevSvgHash = \"\";\n        (0, $c28505726f0fb896$export$f4467a4f41373bc7)(state);\n        redrawNow(false);\n        $2d15ce003fd0519b$export$fc48d2ed06541843(state, onResize);\n        if (!prevUnbind) state.dom.unbind = $2d15ce003fd0519b$export$fdc77453278b0fa9(state, onResize);\n        state.events.insert && state.events.insert(elements);\n        return state;\n    }\n    return (0, $77723e179126bec6$export$b3571188c770cc5a)(redrawAll(), redrawAll);\n}\nfunction $ea2d34c1974d7d8b$var$debounceRedraw(redrawNow) {\n    let redrawing = false;\n    return ()=>{\n        if (redrawing) return;\n        redrawing = true;\n        requestAnimationFrame(()=>{\n            redrawNow();\n            redrawing = false;\n        });\n    };\n}\n\n\n\n\n\n\n\n\nconst $497352f3986651c5$export$dc537a3a3893548e = (state, actions)=>({\n        oncreate: (vnode)=>{\n            state.ground = new (0, $ea2d34c1974d7d8b$export$6aaf0e4db08ad996)(vnode.dom, vnode.attrs.config);\n        },\n        view: (vnode)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".board\", {\n                class: vnode.attrs.class,\n                onclick: vnode.attrs.onclick\n            })\n    });\n\n\n\n\n\n\nconst $6ed1fb4f245a8c05$export$d0d76c231f6d55bd = (state, actions)=>({\n        getGames: async ()=>{\n            state.stream = await state.auth.openStream(\"/api/stream/event\", {}, (msg)=>{\n                console.log(\"got game stream msg\", msg);\n                switch(msg.type){\n                    case \"gameStart\":\n                        let games = state.games();\n                        games.push(msg.game);\n                        state.games(games);\n                        if (games.length == 1) {\n                            console.log(\"one active game. loading now!\");\n                            state.game = games[0];\n                        }\n                        break;\n                    case \"gameFinish\":\n                        state.games(state.games().filter((g)=>g.gameId != msg.game.gameId));\n                        break;\n                    case \"challenge\":\n                        break;\n                    case \"challengeCanceled\":\n                        break;\n                    case \"challengeDeclined\":\n                        break;\n                }\n            });\n        }\n    });\nconst $6ed1fb4f245a8c05$export$e5446db5f37b1855 = (state, game)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(game.isMyTurn ? \".gamethumb.myturn\" : \".gamethumb\", {}, [\n        game.opponent.username,\n        (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $497352f3986651c5$export$dc537a3a3893548e), {\n            class: \"thumb\",\n            config: {\n                fen: game.fen,\n                viewOnly: true,\n                orientation: game.color,\n                lastMove: [\n                    game.lastMove.slice(0, 2),\n                    game.lastMove.slice(2)\n                ]\n            },\n            onclick: (e)=>{\n                console.log(\"game clicked\", game);\n                state.game = game;\n                state.opponent = game.opponent;\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/online\", {\n                    id: game.gameId\n                });\n            }\n        })\n    ]);\nconst $6ed1fb4f245a8c05$export$93fd0e768dbd3f80 = (state, actions)=>{\n    let listener;\n    return {\n        listener: null,\n        oninit: (vnode)=>{\n            if (!state.loggedIn) (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/login\");\n            state.invert(false);\n            let games = state.games();\n            console.log(\"games\", games);\n            state.games(games);\n            if (state.input) {\n                listener = state.input.addListener(\"noteon\", \"all\", (message)=>{\n                    console.log(\"connector got message\", message);\n                    let n = actions.launchToN(message.data[1]);\n                    /* n is 0-63, but represented bottom to top.\n        We need to invert the row to make it read top to bottom, left to right. */ let g = n % 8 + (7 - Math.floor(n / 8)) * 8;\n                    console.log(\"selected game\", g);\n                    if (g < games.length) (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/online\", {\n                        id: games[g].gameId\n                    });\n                });\n                games.map((g, i)=>{\n                    let note = g.isMyTurn ? (0, $9066c94fd6c8e22f$export$9dae6f82820323cf) | 2 : (0, $9066c94fd6c8e22f$export$9dae6f82820323cf);\n                    /* Invert the row to get buttons to go top to bottom. */ let n = i % 8 + 8 * (7 - Math.floor(i / 8));\n                    let l = actions.nToLaunch(n);\n                    console.log(\"sending\", g, i, l);\n                    actions.send(note, [\n                        l,\n                        g.color == \"white\" ? 15 : 83\n                    ]);\n                });\n                actions.clearAnimations();\n                actions.clear();\n                actions.send((0, $9066c94fd6c8e22f$export$9dae6f82820323cf), [\n                    state.top[state.top.length - 1],\n                    (0, $9066c94fd6c8e22f$export$56d196d2844d1ca1)[\"q\"]\n                ]);\n            }\n            if (games.length == 1) {\n                console.log(\"one active game. loading now!\");\n                state.game = games[0];\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/online\", {\n                    id: state.game.gameId\n                });\n            }\n        },\n        onremove: (vnode)=>{\n            if (state.input) state.input.removeListener(listener);\n        },\n        view: (vnode)=>[\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".toolbar\", {}, [\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n                        onclick: actions.getGames\n                    }, \"refresh\"),\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"a.inline\", {\n                        href: \"https://lichess.org/?any#ai\",\n                        target: \"_blank\"\n                    }, (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i.material-icons\", {\n                        title: \"create new game on Lichess.com\"\n                    }, (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"img.svgicon\", {\n                        src: state.theme == \"dark\" ? \"static/lichess-logo-white.svg\" : \"static/lichess-logo.svg\"\n                    })))\n                ]),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".selector\", {}, [\n                    state.games().map((g)=>{\n                        return $6ed1fb4f245a8c05$export$e5446db5f37b1855(state, g);\n                    })\n                ])\n            ]\n    };\n};\nlet $6ed1fb4f245a8c05$var$config = {\n    movable: {\n        color: \"both\",\n        free: false\n    }\n};\nconst $6ed1fb4f245a8c05$export$985739bfa5723e08 = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".board\", {\n        oninit: (vnode)=>{\n            console.log(\"game loading\", vnode.attrs, state.chess.ascii());\n            actions.streamGame();\n            actions.afterInit();\n        },\n        oncreate: (vnode)=>{\n            state.ground = (0, $ea2d34c1974d7d8b$export$6aaf0e4db08ad996)(vnode.dom, {\n                ...$6ed1fb4f245a8c05$var$config,\n                ...vnode.attrs.config\n            });\n            state.ground.set({\n                fen: state.chess.fen(),\n                orientation: state.invert() ? \"black\" : \"white\",\n                movable: {\n                    dests: (0, $d5ffb40ab7d69c90$export$7dc676b6dd72d281)(state.chess)\n                },\n                events: {\n                    select: (key)=>{\n                        console.log(\"chessground selected\", key);\n                        if (state.chess.get(key) && state.chess.get(key).color == state.chess.turn()) {\n                            // clear previous selection\n                            actions.lightBoard();\n                            state.selectedSquare = key;\n                            state.selectedPiece = state.chess.get(key);\n                            actions.highlightAvailableMoves(key);\n                        }\n                    },\n                    move: (orig, dest)=>{\n                        actions.onmove(orig, dest);\n                    }\n                }\n            });\n        }\n    });\nconst $6ed1fb4f245a8c05$export$6996ecd26284460f = (state, actions)=>({\n        view: (vnode)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".gamePage\", {}, [\n                (0, $ef84d931ff2e086e$export$4c260019440d418f)(state, actions),\n                $6ed1fb4f245a8c05$export$985739bfa5723e08(state, actions)\n            ])\n    });\nconst $6ed1fb4f245a8c05$export$2616165974278734 = (state)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".me\", {}, state.user.username);\nconst $6ed1fb4f245a8c05$export$414a9ba52728302b = (state)=>state.opponent ? (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".opponent\", {}, JSON.stringify(state.opponent)) : null;\nconst $6ed1fb4f245a8c05$export$a22305df274c15ec = (state, actions)=>({\n        oninit: (vnode)=>{\n            if (!state.loggedIn) {\n                console.log(\"not logged in. Redirecting to login\");\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/login\");\n            }\n        },\n        view: (vnode)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".gamePage\", {}, [\n                (0, $ef84d931ff2e086e$export$69d4e78a69e95731)(state, actions),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".top_user\", {}, state.invert() != (state.color == \"b\") ? $6ed1fb4f245a8c05$export$2616165974278734(state) : $6ed1fb4f245a8c05$export$414a9ba52728302b(state)),\n                $6ed1fb4f245a8c05$export$985739bfa5723e08(state, actions),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".bottom_user\", {}, state.invert() != (state.color == \"b\") ? $6ed1fb4f245a8c05$export$414a9ba52728302b(state) : $6ed1fb4f245a8c05$export$2616165974278734(state))\n            ])\n    });\n\n\n\n\n\n\n\n(0, $3895aa91744b6895$exports.defaults).glossary.title = \"LaunchChess\";\n(0, $3895aa91744b6895$exports.defaults).transition = \"zoom\";\n(0, $3895aa91744b6895$exports.defaults).theme.ok = \"ui positive button\";\n(0, $3895aa91744b6895$exports.defaults).theme.cancel = \"ui black button\";\n(0, $3895aa91744b6895$exports.defaults).notifier.delay = 10;\nfunction $325b867be1548751$export$120c0e7b1bef3ec7(state, actions) {\n    return {\n        view: (vnode)=>{\n            return [\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))($325b867be1548751$export$5120f2d0b8d4cab8, {}, state.user.profile),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"i\", {\n                    onclick: (e)=>{\n                        (0, $3895aa91744b6895$exports.confirm)(\"Are you sure you want to deauthorize this device?\", (affirm)=>{\n                            actions.logout();\n                            (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/\");\n                            (0, $3895aa91744b6895$exports.message)(\"logged out\", 3);\n                        }, (deny)=>{\n                            console.log(\"That was a close one!\");\n                        });\n                    }\n                }, \"deauthorize this device\")\n            ];\n        }\n    };\n}\nfunction $325b867be1548751$export$5120f2d0b8d4cab8() {\n    return {\n        view: (vnode)=>{\n            return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"table.profile\", vnode.attrs, Object.keys(vnode.children[0]).map((k, i)=>{\n                // console.log(k, i)\n                return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"tr.entry\", {}, [\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"td.key\", {}, k),\n                    // m('td.seperator', {}, ' - '),\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"td.value\", {}, JSON.stringify(vnode.children[0][k]))\n                ]);\n            }));\n        }\n    };\n}\n\n\n\n\nvar $kWuxe = parcelRequire(\"kWuxe\");\n\n\n\n\n\n\n\n\n/* tslint:disable */ var $48fb4da1ea4addfd$export$2e2bcd8739ae039 = {\n    \"activity\": '<polyline points=\"22 12 18 12 15 21 9 3 6 12 2 12\"></polyline>',\n    \"airplay\": '<path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon>',\n    \"alert-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>',\n    \"alert-octagon\": '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>',\n    \"alert-triangle\": '<path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>',\n    \"align-center\": '<line x1=\"18\" y1=\"10\" x2=\"6\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"18\" y1=\"18\" x2=\"6\" y2=\"18\"></line>',\n    \"align-justify\": '<line x1=\"21\" y1=\"10\" x2=\"3\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"21\" y1=\"18\" x2=\"3\" y2=\"18\"></line>',\n    \"align-left\": '<line x1=\"17\" y1=\"10\" x2=\"3\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"17\" y1=\"18\" x2=\"3\" y2=\"18\"></line>',\n    \"align-right\": '<line x1=\"21\" y1=\"10\" x2=\"7\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"21\" y1=\"18\" x2=\"7\" y2=\"18\"></line>',\n    \"anchor\": '<circle cx=\"12\" cy=\"5\" r=\"3\"></circle><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"8\"></line><path d=\"M5 12H2a10 10 0 0 0 20 0h-3\"></path>',\n    \"aperture\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"14.31\" y1=\"8\" x2=\"20.05\" y2=\"17.94\"></line><line x1=\"9.69\" y1=\"8\" x2=\"21.17\" y2=\"8\"></line><line x1=\"7.38\" y1=\"12\" x2=\"13.12\" y2=\"2.06\"></line><line x1=\"9.69\" y1=\"16\" x2=\"3.95\" y2=\"6.06\"></line><line x1=\"14.31\" y1=\"16\" x2=\"2.83\" y2=\"16\"></line><line x1=\"16.62\" y1=\"12\" x2=\"10.88\" y2=\"21.94\"></line>',\n    \"archive\": '<polyline points=\"21 8 21 21 3 21 3 8\"></polyline><rect x=\"1\" y=\"3\" width=\"22\" height=\"5\"></rect><line x1=\"10\" y1=\"12\" x2=\"14\" y2=\"12\"></line>',\n    \"arrow-down-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"8 12 12 16 16 12\"></polyline><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>',\n    \"arrow-down-left\": '<line x1=\"17\" y1=\"7\" x2=\"7\" y2=\"17\"></line><polyline points=\"17 17 7 17 7 7\"></polyline>',\n    \"arrow-down-right\": '<line x1=\"7\" y1=\"7\" x2=\"17\" y2=\"17\"></line><polyline points=\"17 7 17 17 7 17\"></polyline>',\n    \"arrow-down\": '<line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><polyline points=\"19 12 12 19 5 12\"></polyline>',\n    \"arrow-left-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 8 8 12 12 16\"></polyline><line x1=\"16\" y1=\"12\" x2=\"8\" y2=\"12\"></line>',\n    \"arrow-left\": '<line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line><polyline points=\"12 19 5 12 12 5\"></polyline>',\n    \"arrow-right-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 16 16 12 12 8\"></polyline><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\n    \"arrow-right\": '<line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline>',\n    \"arrow-up-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"16 12 12 8 8 12\"></polyline><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"8\"></line>',\n    \"arrow-up-left\": '<line x1=\"17\" y1=\"17\" x2=\"7\" y2=\"7\"></line><polyline points=\"7 17 7 7 17 7\"></polyline>',\n    \"arrow-up-right\": '<line x1=\"7\" y1=\"17\" x2=\"17\" y2=\"7\"></line><polyline points=\"7 7 17 7 17 17\"></polyline>',\n    \"arrow-up\": '<line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\"></line><polyline points=\"5 12 12 5 19 12\"></polyline>',\n    \"at-sign\": '<circle cx=\"12\" cy=\"12\" r=\"4\"></circle><path d=\"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94\"></path>',\n    \"award\": '<circle cx=\"12\" cy=\"8\" r=\"7\"></circle><polyline points=\"8.21 13.89 7 23 12 20 17 23 15.79 13.88\"></polyline>',\n    \"bar-chart-2\": '<line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line>',\n    \"bar-chart\": '<line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"10\"></line><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"16\"></line>',\n    \"battery-charging\": '<path d=\"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19\"></path><line x1=\"23\" y1=\"13\" x2=\"23\" y2=\"11\"></line><polyline points=\"11 6 7 12 13 12 9 18\"></polyline>',\n    \"battery\": '<rect x=\"1\" y=\"6\" width=\"18\" height=\"12\" rx=\"2\" ry=\"2\"></rect><line x1=\"23\" y1=\"13\" x2=\"23\" y2=\"11\"></line>',\n    \"bell-off\": '<path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path><path d=\"M18.63 13A17.89 17.89 0 0 1 18 8\"></path><path d=\"M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14\"></path><path d=\"M18 8a6 6 0 0 0-9.33-5\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\n    \"bell\": '<path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path><path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>',\n    \"bluetooth\": '<polyline points=\"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5\"></polyline>',\n    \"bold\": '<path d=\"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path><path d=\"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path>',\n    \"book-open\": '<path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path><path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>',\n    \"book\": '<path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"></path><path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"></path>',\n    \"bookmark\": '<path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"></path>',\n    \"box\": '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\n    \"briefcase\": '<rect x=\"2\" y=\"7\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect><path d=\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"></path>',\n    \"calendar\": '<rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line><line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line><line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>',\n    \"camera-off\": '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56\"></path>',\n    \"camera\": '<path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path><circle cx=\"12\" cy=\"13\" r=\"4\"></circle>',\n    \"cast\": '<path d=\"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6\"></path><line x1=\"2\" y1=\"20\" x2=\"2.01\" y2=\"20\"></line>',\n    \"check-circle\": '<path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline>',\n    \"check-square\": '<polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>',\n    \"check\": '<polyline points=\"20 6 9 17 4 12\"></polyline>',\n    \"chevron-down\": '<polyline points=\"6 9 12 15 18 9\"></polyline>',\n    \"chevron-left\": '<polyline points=\"15 18 9 12 15 6\"></polyline>',\n    \"chevron-right\": '<polyline points=\"9 18 15 12 9 6\"></polyline>',\n    \"chevron-up\": '<polyline points=\"18 15 12 9 6 15\"></polyline>',\n    \"chevrons-down\": '<polyline points=\"7 13 12 18 17 13\"></polyline><polyline points=\"7 6 12 11 17 6\"></polyline>',\n    \"chevrons-left\": '<polyline points=\"11 17 6 12 11 7\"></polyline><polyline points=\"18 17 13 12 18 7\"></polyline>',\n    \"chevrons-right\": '<polyline points=\"13 17 18 12 13 7\"></polyline><polyline points=\"6 17 11 12 6 7\"></polyline>',\n    \"chevrons-up\": '<polyline points=\"17 11 12 6 7 11\"></polyline><polyline points=\"17 18 12 13 7 18\"></polyline>',\n    \"chrome\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"21.17\" y1=\"8\" x2=\"12\" y2=\"8\"></line><line x1=\"3.95\" y1=\"6.06\" x2=\"8.54\" y2=\"14\"></line><line x1=\"10.88\" y1=\"21.94\" x2=\"15.46\" y2=\"14\"></line>',\n    \"circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle>',\n    \"clipboard\": '<path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect>',\n    \"clock\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline>',\n    \"cloud-drizzle\": '<line x1=\"8\" y1=\"19\" x2=\"8\" y2=\"21\"></line><line x1=\"8\" y1=\"13\" x2=\"8\" y2=\"15\"></line><line x1=\"16\" y1=\"19\" x2=\"16\" y2=\"21\"></line><line x1=\"16\" y1=\"13\" x2=\"16\" y2=\"15\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"17\"></line><path d=\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"></path>',\n    \"cloud-lightning\": '<path d=\"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9\"></path><polyline points=\"13 11 9 17 15 17 11 23\"></polyline>',\n    \"cloud-off\": '<path d=\"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\n    \"cloud-rain\": '<line x1=\"16\" y1=\"13\" x2=\"16\" y2=\"21\"></line><line x1=\"8\" y1=\"13\" x2=\"8\" y2=\"21\"></line><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"23\"></line><path d=\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"></path>',\n    \"cloud-snow\": '<path d=\"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25\"></path><line x1=\"8\" y1=\"16\" x2=\"8.01\" y2=\"16\"></line><line x1=\"8\" y1=\"20\" x2=\"8.01\" y2=\"20\"></line><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line><line x1=\"12\" y1=\"22\" x2=\"12.01\" y2=\"22\"></line><line x1=\"16\" y1=\"16\" x2=\"16.01\" y2=\"16\"></line><line x1=\"16\" y1=\"20\" x2=\"16.01\" y2=\"20\"></line>',\n    \"cloud\": '<path d=\"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z\"></path>',\n    \"code\": '<polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline>',\n    \"codepen\": '<polygon points=\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"></polygon><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"15.5\"></line><polyline points=\"22 8.5 12 15.5 2 8.5\"></polyline><polyline points=\"2 15.5 12 8.5 22 15.5\"></polyline><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"8.5\"></line>',\n    \"codesandbox\": '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"7.5 4.21 12 6.81 16.5 4.21\"></polyline><polyline points=\"7.5 19.79 7.5 14.6 3 12\"></polyline><polyline points=\"21 12 16.5 14.6 16.5 19.79\"></polyline><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\n    \"coffee\": '<path d=\"M18 8h1a4 4 0 0 1 0 8h-1\"></path><path d=\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\"></path><line x1=\"6\" y1=\"1\" x2=\"6\" y2=\"4\"></line><line x1=\"10\" y1=\"1\" x2=\"10\" y2=\"4\"></line><line x1=\"14\" y1=\"1\" x2=\"14\" y2=\"4\"></line>',\n    \"columns\": '<path d=\"M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18\"></path>',\n    \"command\": '<path d=\"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z\"></path>',\n    \"compass\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polygon points=\"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"></polygon>',\n    \"copy\": '<rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>',\n    \"corner-down-left\": '<polyline points=\"9 10 4 15 9 20\"></polyline><path d=\"M20 4v7a4 4 0 0 1-4 4H4\"></path>',\n    \"corner-down-right\": '<polyline points=\"15 10 20 15 15 20\"></polyline><path d=\"M4 4v7a4 4 0 0 0 4 4h12\"></path>',\n    \"corner-left-down\": '<polyline points=\"14 15 9 20 4 15\"></polyline><path d=\"M20 4h-7a4 4 0 0 0-4 4v12\"></path>',\n    \"corner-left-up\": '<polyline points=\"14 9 9 4 4 9\"></polyline><path d=\"M20 20h-7a4 4 0 0 1-4-4V4\"></path>',\n    \"corner-right-down\": '<polyline points=\"10 15 15 20 20 15\"></polyline><path d=\"M4 4h7a4 4 0 0 1 4 4v12\"></path>',\n    \"corner-right-up\": '<polyline points=\"10 9 15 4 20 9\"></polyline><path d=\"M4 20h7a4 4 0 0 0 4-4V4\"></path>',\n    \"corner-up-left\": '<polyline points=\"9 14 4 9 9 4\"></polyline><path d=\"M20 20v-7a4 4 0 0 0-4-4H4\"></path>',\n    \"corner-up-right\": '<polyline points=\"15 14 20 9 15 4\"></polyline><path d=\"M4 20v-7a4 4 0 0 1 4-4h12\"></path>',\n    \"cpu\": '<rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\" ry=\"2\"></rect><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\"></rect><line x1=\"9\" y1=\"1\" x2=\"9\" y2=\"4\"></line><line x1=\"15\" y1=\"1\" x2=\"15\" y2=\"4\"></line><line x1=\"9\" y1=\"20\" x2=\"9\" y2=\"23\"></line><line x1=\"15\" y1=\"20\" x2=\"15\" y2=\"23\"></line><line x1=\"20\" y1=\"9\" x2=\"23\" y2=\"9\"></line><line x1=\"20\" y1=\"14\" x2=\"23\" y2=\"14\"></line><line x1=\"1\" y1=\"9\" x2=\"4\" y2=\"9\"></line><line x1=\"1\" y1=\"14\" x2=\"4\" y2=\"14\"></line>',\n    \"credit-card\": '<rect x=\"1\" y=\"4\" width=\"22\" height=\"16\" rx=\"2\" ry=\"2\"></rect><line x1=\"1\" y1=\"10\" x2=\"23\" y2=\"10\"></line>',\n    \"crop\": '<path d=\"M6.13 1L6 16a2 2 0 0 0 2 2h15\"></path><path d=\"M1 6.13L16 6a2 2 0 0 1 2 2v15\"></path>',\n    \"crosshair\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"22\" y1=\"12\" x2=\"18\" y2=\"12\"></line><line x1=\"6\" y1=\"12\" x2=\"2\" y2=\"12\"></line><line x1=\"12\" y1=\"6\" x2=\"12\" y2=\"2\"></line><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\"></line>',\n    \"database\": '<ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"></ellipse><path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"></path><path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"></path>',\n    \"delete\": '<path d=\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"></path><line x1=\"18\" y1=\"9\" x2=\"12\" y2=\"15\"></line><line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>',\n    \"disc\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"3\"></circle>',\n    \"divide-circle\": '<line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"8\"></line><circle cx=\"12\" cy=\"12\" r=\"10\"></circle>',\n    \"divide-square\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"8\"></line>',\n    \"divide\": '<circle cx=\"12\" cy=\"6\" r=\"2\"></circle><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><circle cx=\"12\" cy=\"18\" r=\"2\"></circle>',\n    \"dollar-sign\": '<line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path>',\n    \"download-cloud\": '<polyline points=\"8 17 12 21 16 17\"></polyline><line x1=\"12\" y1=\"12\" x2=\"12\" y2=\"21\"></line><path d=\"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29\"></path>',\n    \"download\": '<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"7 10 12 15 17 10\"></polyline><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>',\n    \"dribbble\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M8.56 2.75c4.37 6.03 6.02 9.42 8.03 17.72m2.54-15.38c-3.72 4.35-8.94 5.66-16.88 5.85m19.5 1.9c-3.5-.93-6.63-.82-8.94 0-2.58.92-5.01 2.86-7.44 6.32\"></path>',\n    \"droplet\": '<path d=\"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\"></path>',\n    \"edit-2\": '<path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>',\n    \"edit-3\": '<path d=\"M12 20h9\"></path><path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"></path>',\n    \"edit\": '<path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>',\n    \"external-link\": '<path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>',\n    \"eye-off\": '<path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\n    \"eye\": '<path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle>',\n    \"facebook\": '<path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path>',\n    \"fast-forward\": '<polygon points=\"13 19 22 12 13 5 13 19\"></polygon><polygon points=\"2 19 11 12 2 5 2 19\"></polygon>',\n    \"feather\": '<path d=\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\"></path><line x1=\"16\" y1=\"8\" x2=\"2\" y2=\"22\"></line><line x1=\"17.5\" y1=\"15\" x2=\"9\" y2=\"15\"></line>',\n    \"figma\": '<path d=\"M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z\"></path><path d=\"M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z\"></path><path d=\"M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z\"></path><path d=\"M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z\"></path><path d=\"M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z\"></path>',\n    \"file-minus\": '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>',\n    \"file-plus\": '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"12\"></line><line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>',\n    \"file-text\": '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line><line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line><polyline points=\"10 9 9 9 8 9\"></polyline>',\n    \"file\": '<path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline>',\n    \"film\": '<rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"2.18\" ry=\"2.18\"></rect><line x1=\"7\" y1=\"2\" x2=\"7\" y2=\"22\"></line><line x1=\"17\" y1=\"2\" x2=\"17\" y2=\"22\"></line><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"2\" y1=\"7\" x2=\"7\" y2=\"7\"></line><line x1=\"2\" y1=\"17\" x2=\"7\" y2=\"17\"></line><line x1=\"17\" y1=\"17\" x2=\"22\" y2=\"17\"></line><line x1=\"17\" y1=\"7\" x2=\"22\" y2=\"7\"></line>',\n    \"filter\": '<polygon points=\"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\"></polygon>',\n    \"flag\": '<path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line>',\n    \"folder-minus\": '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path><line x1=\"9\" y1=\"14\" x2=\"15\" y2=\"14\"></line>',\n    \"folder-plus\": '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path><line x1=\"12\" y1=\"11\" x2=\"12\" y2=\"17\"></line><line x1=\"9\" y1=\"14\" x2=\"15\" y2=\"14\"></line>',\n    \"folder\": '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path>',\n    \"framer\": '<path d=\"M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7\"></path>',\n    \"frown\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M16 16s-1.5-2-4-2-4 2-4 2\"></path><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\n    \"gift\": '<polyline points=\"20 12 20 22 4 22 4 12\"></polyline><rect x=\"2\" y=\"7\" width=\"20\" height=\"5\"></rect><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"7\"></line><path d=\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"></path><path d=\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"></path>',\n    \"git-branch\": '<line x1=\"6\" y1=\"3\" x2=\"6\" y2=\"15\"></line><circle cx=\"18\" cy=\"6\" r=\"3\"></circle><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><path d=\"M18 9a9 9 0 0 1-9 9\"></path>',\n    \"git-commit\": '<circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"1.05\" y1=\"12\" x2=\"7\" y2=\"12\"></line><line x1=\"17.01\" y1=\"12\" x2=\"22.96\" y2=\"12\"></line>',\n    \"git-merge\": '<circle cx=\"18\" cy=\"18\" r=\"3\"></circle><circle cx=\"6\" cy=\"6\" r=\"3\"></circle><path d=\"M6 21V9a9 9 0 0 0 9 9\"></path>',\n    \"git-pull-request\": '<circle cx=\"18\" cy=\"18\" r=\"3\"></circle><circle cx=\"6\" cy=\"6\" r=\"3\"></circle><path d=\"M13 6h3a2 2 0 0 1 2 2v7\"></path><line x1=\"6\" y1=\"9\" x2=\"6\" y2=\"21\"></line>',\n    \"github\": '<path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>',\n    \"gitlab\": '<path d=\"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z\"></path>',\n    \"globe\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path>',\n    \"grid\": '<rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect><rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect>',\n    \"hard-drive\": '<line x1=\"22\" y1=\"12\" x2=\"2\" y2=\"12\"></line><path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"></path><line x1=\"6\" y1=\"16\" x2=\"6.01\" y2=\"16\"></line><line x1=\"10\" y1=\"16\" x2=\"10.01\" y2=\"16\"></line>',\n    \"hash\": '<line x1=\"4\" y1=\"9\" x2=\"20\" y2=\"9\"></line><line x1=\"4\" y1=\"15\" x2=\"20\" y2=\"15\"></line><line x1=\"10\" y1=\"3\" x2=\"8\" y2=\"21\"></line><line x1=\"16\" y1=\"3\" x2=\"14\" y2=\"21\"></line>',\n    \"headphones\": '<path d=\"M3 18v-6a9 9 0 0 1 18 0v6\"></path><path d=\"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z\"></path>',\n    \"heart\": '<path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>',\n    \"help-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>',\n    \"hexagon\": '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>',\n    \"home\": '<path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline>',\n    \"image\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"></circle><polyline points=\"21 15 16 10 5 21\"></polyline>',\n    \"inbox\": '<polyline points=\"22 12 16 12 14 15 10 15 8 12 2 12\"></polyline><path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"></path>',\n    \"info\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>',\n    \"instagram\": '<rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect><path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path><line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line>',\n    \"italic\": '<line x1=\"19\" y1=\"4\" x2=\"10\" y2=\"4\"></line><line x1=\"14\" y1=\"20\" x2=\"5\" y2=\"20\"></line><line x1=\"15\" y1=\"4\" x2=\"9\" y2=\"20\"></line>',\n    \"key\": '<path d=\"M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4\"></path>',\n    \"layers\": '<polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon><polyline points=\"2 17 12 22 22 17\"></polyline><polyline points=\"2 12 12 17 22 12\"></polyline>',\n    \"layout\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"3\" y1=\"9\" x2=\"21\" y2=\"9\"></line><line x1=\"9\" y1=\"21\" x2=\"9\" y2=\"9\"></line>',\n    \"life-buoy\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"4.93\" y1=\"4.93\" x2=\"9.17\" y2=\"9.17\"></line><line x1=\"14.83\" y1=\"14.83\" x2=\"19.07\" y2=\"19.07\"></line><line x1=\"14.83\" y1=\"9.17\" x2=\"19.07\" y2=\"4.93\"></line><line x1=\"14.83\" y1=\"9.17\" x2=\"18.36\" y2=\"5.64\"></line><line x1=\"4.93\" y1=\"19.07\" x2=\"9.17\" y2=\"14.83\"></line>',\n    \"link-2\": '<path d=\"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3\"></path><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\n    \"link\": '<path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>',\n    \"linkedin\": '<path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"></path><rect x=\"2\" y=\"9\" width=\"4\" height=\"12\"></rect><circle cx=\"4\" cy=\"4\" r=\"2\"></circle>',\n    \"list\": '<line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line>',\n    \"loader\": '<line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\"></line><line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\"></line><line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\"></line><line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\"></line><line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\"></line><line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\"></line><line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\"></line>',\n    \"lock\": '<rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect><path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>',\n    \"log-in\": '<path d=\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\"></path><polyline points=\"10 17 15 12 10 7\"></polyline><line x1=\"15\" y1=\"12\" x2=\"3\" y2=\"12\"></line>',\n    \"log-out\": '<path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"16 17 21 12 16 7\"></polyline><line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>',\n    \"mail\": '<path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path><polyline points=\"22,6 12,13 2,6\"></polyline>',\n    \"map-pin\": '<path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path><circle cx=\"12\" cy=\"10\" r=\"3\"></circle>',\n    \"map\": '<polygon points=\"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6\"></polygon><line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"18\"></line><line x1=\"16\" y1=\"6\" x2=\"16\" y2=\"22\"></line>',\n    \"maximize-2\": '<polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\"></line><line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\"></line>',\n    \"maximize\": '<path d=\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\"></path>',\n    \"meh\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"8\" y1=\"15\" x2=\"16\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\n    \"menu\": '<line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line>',\n    \"message-circle\": '<path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>',\n    \"message-square\": '<path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>',\n    \"mic-off\": '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path><path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path><line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line><line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>',\n    \"mic\": '<path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path><path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path><line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line><line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>',\n    \"minimize-2\": '<polyline points=\"4 14 10 14 10 20\"></polyline><polyline points=\"20 10 14 10 14 4\"></polyline><line x1=\"14\" y1=\"10\" x2=\"21\" y2=\"3\"></line><line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\"></line>',\n    \"minimize\": '<path d=\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"></path>',\n    \"minus-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\n    \"minus-square\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\n    \"minus\": '<line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>',\n    \"monitor\": '<rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"></line><line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"></line>',\n    \"moon\": '<path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>',\n    \"more-horizontal\": '<circle cx=\"12\" cy=\"12\" r=\"1\"></circle><circle cx=\"19\" cy=\"12\" r=\"1\"></circle><circle cx=\"5\" cy=\"12\" r=\"1\"></circle>',\n    \"more-vertical\": '<circle cx=\"12\" cy=\"12\" r=\"1\"></circle><circle cx=\"12\" cy=\"5\" r=\"1\"></circle><circle cx=\"12\" cy=\"19\" r=\"1\"></circle>',\n    \"mouse-pointer\": '<path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"></path><path d=\"M13 13l6 6\"></path>',\n    \"move\": '<polyline points=\"5 9 2 12 5 15\"></polyline><polyline points=\"9 5 12 2 15 5\"></polyline><polyline points=\"15 19 12 22 9 19\"></polyline><polyline points=\"19 9 22 12 19 15\"></polyline><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"22\"></line>',\n    \"music\": '<path d=\"M9 18V5l12-2v13\"></path><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><circle cx=\"18\" cy=\"16\" r=\"3\"></circle>',\n    \"navigation-2\": '<polygon points=\"12 2 19 21 12 17 5 21 12 2\"></polygon>',\n    \"navigation\": '<polygon points=\"3 11 22 2 13 21 11 13 3 11\"></polygon>',\n    \"octagon\": '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon>',\n    \"package\": '<line x1=\"16.5\" y1=\"9.4\" x2=\"7.5\" y2=\"4.21\"></line><path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\n    \"paperclip\": '<path d=\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48\"></path>',\n    \"pause-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"10\" y1=\"15\" x2=\"10\" y2=\"9\"></line><line x1=\"14\" y1=\"15\" x2=\"14\" y2=\"9\"></line>',\n    \"pause\": '<rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"></rect><rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"></rect>',\n    \"pen-tool\": '<path d=\"M12 19l7-7 3 3-7 7-3-3z\"></path><path d=\"M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z\"></path><path d=\"M2 2l7.586 7.586\"></path><circle cx=\"11\" cy=\"11\" r=\"2\"></circle>',\n    \"percent\": '<line x1=\"19\" y1=\"5\" x2=\"5\" y2=\"19\"></line><circle cx=\"6.5\" cy=\"6.5\" r=\"2.5\"></circle><circle cx=\"17.5\" cy=\"17.5\" r=\"2.5\"></circle>',\n    \"phone-call\": '<path d=\"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\n    \"phone-forwarded\": '<polyline points=\"19 1 23 5 19 9\"></polyline><line x1=\"15\" y1=\"5\" x2=\"23\" y2=\"5\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\n    \"phone-incoming\": '<polyline points=\"16 2 16 8 22 8\"></polyline><line x1=\"23\" y1=\"1\" x2=\"16\" y2=\"8\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\n    \"phone-missed\": '<line x1=\"23\" y1=\"1\" x2=\"17\" y2=\"7\"></line><line x1=\"17\" y1=\"1\" x2=\"23\" y2=\"7\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\n    \"phone-off\": '<path d=\"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91\"></path><line x1=\"23\" y1=\"1\" x2=\"1\" y2=\"23\"></line>',\n    \"phone-outgoing\": '<polyline points=\"23 7 23 1 17 1\"></polyline><line x1=\"16\" y1=\"8\" x2=\"23\" y2=\"1\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\n    \"phone\": '<path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\n    \"pie-chart\": '<path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"></path><path d=\"M22 12A10 10 0 0 0 12 2v10z\"></path>',\n    \"play-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polygon points=\"10 8 16 12 10 16 10 8\"></polygon>',\n    \"play\": '<polygon points=\"5 3 19 12 5 21 5 3\"></polygon>',\n    \"plus-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\n    \"plus-square\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\n    \"plus\": '<line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>',\n    \"pocket\": '<path d=\"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z\"></path><polyline points=\"8 10 12 14 16 10\"></polyline>',\n    \"power\": '<path d=\"M18.36 6.64a9 9 0 1 1-12.73 0\"></path><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"12\"></line>',\n    \"printer\": '<polyline points=\"6 9 6 2 18 2 18 9\"></polyline><path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"></path><rect x=\"6\" y=\"14\" width=\"12\" height=\"8\"></rect>',\n    \"radio\": '<circle cx=\"12\" cy=\"12\" r=\"2\"></circle><path d=\"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14\"></path>',\n    \"refresh-ccw\": '<polyline points=\"1 4 1 10 7 10\"></polyline><polyline points=\"23 20 23 14 17 14\"></polyline><path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"></path>',\n    \"refresh-cw\": '<polyline points=\"23 4 23 10 17 10\"></polyline><polyline points=\"1 20 1 14 7 14\"></polyline><path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\"></path>',\n    \"repeat\": '<polyline points=\"17 1 21 5 17 9\"></polyline><path d=\"M3 11V9a4 4 0 0 1 4-4h14\"></path><polyline points=\"7 23 3 19 7 15\"></polyline><path d=\"M21 13v2a4 4 0 0 1-4 4H3\"></path>',\n    \"rewind\": '<polygon points=\"11 19 2 12 11 5 11 19\"></polygon><polygon points=\"22 19 13 12 22 5 22 19\"></polygon>',\n    \"rotate-ccw\": '<polyline points=\"1 4 1 10 7 10\"></polyline><path d=\"M3.51 15a9 9 0 1 0 2.13-9.36L1 10\"></path>',\n    \"rotate-cw\": '<polyline points=\"23 4 23 10 17 10\"></polyline><path d=\"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"></path>',\n    \"rss\": '<path d=\"M4 11a9 9 0 0 1 9 9\"></path><path d=\"M4 4a16 16 0 0 1 16 16\"></path><circle cx=\"5\" cy=\"19\" r=\"1\"></circle>',\n    \"save\": '<path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path><polyline points=\"17 21 17 13 7 13 7 21\"></polyline><polyline points=\"7 3 7 8 15 8\"></polyline>',\n    \"scissors\": '<circle cx=\"6\" cy=\"6\" r=\"3\"></circle><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\"></line><line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\"></line><line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\"></line>',\n    \"search\": '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>',\n    \"send\": '<line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>',\n    \"server\": '<rect x=\"2\" y=\"2\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect><rect x=\"2\" y=\"14\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect><line x1=\"6\" y1=\"6\" x2=\"6.01\" y2=\"6\"></line><line x1=\"6\" y1=\"18\" x2=\"6.01\" y2=\"18\"></line>',\n    \"settings\": '<circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>',\n    \"share-2\": '<circle cx=\"18\" cy=\"5\" r=\"3\"></circle><circle cx=\"6\" cy=\"12\" r=\"3\"></circle><circle cx=\"18\" cy=\"19\" r=\"3\"></circle><line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"></line><line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"></line>',\n    \"share\": '<path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"></line>',\n    \"shield-off\": '<path d=\"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18\"></path><path d=\"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\n    \"shield\": '<path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>',\n    \"shopping-bag\": '<path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><path d=\"M16 10a4 4 0 0 1-8 0\"></path>',\n    \"shopping-cart\": '<circle cx=\"9\" cy=\"21\" r=\"1\"></circle><circle cx=\"20\" cy=\"21\" r=\"1\"></circle><path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>',\n    \"shuffle\": '<polyline points=\"16 3 21 3 21 8\"></polyline><line x1=\"4\" y1=\"20\" x2=\"21\" y2=\"3\"></line><polyline points=\"21 16 21 21 16 21\"></polyline><line x1=\"15\" y1=\"15\" x2=\"21\" y2=\"21\"></line><line x1=\"4\" y1=\"4\" x2=\"9\" y2=\"9\"></line>',\n    \"sidebar\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"9\" y1=\"3\" x2=\"9\" y2=\"21\"></line>',\n    \"skip-back\": '<polygon points=\"19 20 9 12 19 4 19 20\"></polygon><line x1=\"5\" y1=\"19\" x2=\"5\" y2=\"5\"></line>',\n    \"skip-forward\": '<polygon points=\"5 4 15 12 5 20 5 4\"></polygon><line x1=\"19\" y1=\"5\" x2=\"19\" y2=\"19\"></line>',\n    \"slack\": '<path d=\"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z\"></path><path d=\"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"></path><path d=\"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z\"></path><path d=\"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z\"></path><path d=\"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z\"></path><path d=\"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"></path><path d=\"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z\"></path><path d=\"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z\"></path>',\n    \"slash\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"4.93\" y1=\"4.93\" x2=\"19.07\" y2=\"19.07\"></line>',\n    \"sliders\": '<line x1=\"4\" y1=\"21\" x2=\"4\" y2=\"14\"></line><line x1=\"4\" y1=\"10\" x2=\"4\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"3\"></line><line x1=\"20\" y1=\"21\" x2=\"20\" y2=\"16\"></line><line x1=\"20\" y1=\"12\" x2=\"20\" y2=\"3\"></line><line x1=\"1\" y1=\"14\" x2=\"7\" y2=\"14\"></line><line x1=\"9\" y1=\"8\" x2=\"15\" y2=\"8\"></line><line x1=\"17\" y1=\"16\" x2=\"23\" y2=\"16\"></line>',\n    \"smartphone\": '<rect x=\"5\" y=\"2\" width=\"14\" height=\"20\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line>',\n    \"smile\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M8 14s1.5 2 4 2 4-2 4-2\"></path><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\n    \"speaker\": '<rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\" ry=\"2\"></rect><circle cx=\"12\" cy=\"14\" r=\"4\"></circle><line x1=\"12\" y1=\"6\" x2=\"12.01\" y2=\"6\"></line>',\n    \"square\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>',\n    \"star\": '<polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>',\n    \"stop-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\"></rect>',\n    \"sun\": '<circle cx=\"12\" cy=\"12\" r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line><line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>',\n    \"sunrise\": '<path d=\"M17 18a5 5 0 0 0-10 0\"></path><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"9\"></line><line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\"></line><line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\"></line><line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\"></line><line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\"></line><line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line><polyline points=\"8 6 12 2 16 6\"></polyline>',\n    \"sunset\": '<path d=\"M17 18a5 5 0 0 0-10 0\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"2\"></line><line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\"></line><line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\"></line><line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\"></line><line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\"></line><line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line><polyline points=\"16 5 12 9 8 5\"></polyline>',\n    \"table\": '<path d=\"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"></path>',\n    \"tablet\": '<rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line>',\n    \"tag\": '<path d=\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\"></path><line x1=\"7\" y1=\"7\" x2=\"7.01\" y2=\"7\"></line>',\n    \"target\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"6\"></circle><circle cx=\"12\" cy=\"12\" r=\"2\"></circle>',\n    \"terminal\": '<polyline points=\"4 17 10 11 4 5\"></polyline><line x1=\"12\" y1=\"19\" x2=\"20\" y2=\"19\"></line>',\n    \"thermometer\": '<path d=\"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z\"></path>',\n    \"thumbs-down\": '<path d=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"></path>',\n    \"thumbs-up\": '<path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>',\n    \"toggle-left\": '<rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect><circle cx=\"8\" cy=\"12\" r=\"3\"></circle>',\n    \"toggle-right\": '<rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect><circle cx=\"16\" cy=\"12\" r=\"3\"></circle>',\n    \"tool\": '<path d=\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"></path>',\n    \"trash-2\": '<polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>',\n    \"trash\": '<polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>',\n    \"trello\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><rect x=\"7\" y=\"7\" width=\"3\" height=\"9\"></rect><rect x=\"14\" y=\"7\" width=\"3\" height=\"5\"></rect>',\n    \"trending-down\": '<polyline points=\"23 18 13.5 8.5 8.5 13.5 1 6\"></polyline><polyline points=\"17 18 23 18 23 12\"></polyline>',\n    \"trending-up\": '<polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline><polyline points=\"17 6 23 6 23 12\"></polyline>',\n    \"triangle\": '<path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path>',\n    \"truck\": '<rect x=\"1\" y=\"3\" width=\"15\" height=\"13\"></rect><polygon points=\"16 8 20 8 23 11 23 16 16 16 16 8\"></polygon><circle cx=\"5.5\" cy=\"18.5\" r=\"2.5\"></circle><circle cx=\"18.5\" cy=\"18.5\" r=\"2.5\"></circle>',\n    \"tv\": '<rect x=\"2\" y=\"7\" width=\"20\" height=\"15\" rx=\"2\" ry=\"2\"></rect><polyline points=\"17 2 12 7 7 2\"></polyline>',\n    \"twitch\": '<path d=\"M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7\"></path>',\n    \"twitter\": '<path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path>',\n    \"type\": '<polyline points=\"4 7 4 4 20 4 20 7\"></polyline><line x1=\"9\" y1=\"20\" x2=\"15\" y2=\"20\"></line><line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"20\"></line>',\n    \"umbrella\": '<path d=\"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7\"></path>',\n    \"underline\": '<path d=\"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3\"></path><line x1=\"4\" y1=\"21\" x2=\"20\" y2=\"21\"></line>',\n    \"unlock\": '<rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect><path d=\"M7 11V7a5 5 0 0 1 9.9-1\"></path>',\n    \"upload-cloud\": '<polyline points=\"16 16 12 12 8 16\"></polyline><line x1=\"12\" y1=\"12\" x2=\"12\" y2=\"21\"></line><path d=\"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3\"></path><polyline points=\"16 16 12 12 8 16\"></polyline>',\n    \"upload\": '<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"17 8 12 3 7 8\"></polyline><line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>',\n    \"user-check\": '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><polyline points=\"17 11 19 13 23 9\"></polyline>',\n    \"user-minus\": '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>',\n    \"user-plus\": '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>',\n    \"user-x\": '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"18\" y1=\"8\" x2=\"23\" y2=\"13\"></line><line x1=\"23\" y1=\"8\" x2=\"18\" y2=\"13\"></line>',\n    \"user\": '<path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle>',\n    \"users\": '<path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"9\" cy=\"7\" r=\"4\"></circle><path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path><path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>',\n    \"video-off\": '<path d=\"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\n    \"video\": '<polygon points=\"23 7 16 12 23 17 23 7\"></polygon><rect x=\"1\" y=\"5\" width=\"15\" height=\"14\" rx=\"2\" ry=\"2\"></rect>',\n    \"voicemail\": '<circle cx=\"5.5\" cy=\"11.5\" r=\"4.5\"></circle><circle cx=\"18.5\" cy=\"11.5\" r=\"4.5\"></circle><line x1=\"5.5\" y1=\"16\" x2=\"18.5\" y2=\"16\"></line>',\n    \"volume-1\": '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><path d=\"M15.54 8.46a5 5 0 0 1 0 7.07\"></path>',\n    \"volume-2\": '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><path d=\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"></path>',\n    \"volume-x\": '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><line x1=\"23\" y1=\"9\" x2=\"17\" y2=\"15\"></line><line x1=\"17\" y1=\"9\" x2=\"23\" y2=\"15\"></line>',\n    \"volume\": '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>',\n    \"watch\": '<circle cx=\"12\" cy=\"12\" r=\"7\"></circle><polyline points=\"12 9 12 12 13.5 13.5\"></polyline><path d=\"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83\"></path>',\n    \"wifi-off\": '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M16.72 11.06A10.94 10.94 0 0 1 19 12.55\"></path><path d=\"M5 12.55a10.94 10.94 0 0 1 5.17-2.39\"></path><path d=\"M10.71 5.05A16 16 0 0 1 22.58 9\"></path><path d=\"M1.42 9a15.91 15.91 0 0 1 4.7-2.88\"></path><path d=\"M8.53 16.11a6 6 0 0 1 6.95 0\"></path><line x1=\"12\" y1=\"20\" x2=\"12.01\" y2=\"20\"></line>',\n    \"wifi\": '<path d=\"M5 12.55a11 11 0 0 1 14.08 0\"></path><path d=\"M1.42 9a16 16 0 0 1 21.16 0\"></path><path d=\"M8.53 16.11a6 6 0 0 1 6.95 0\"></path><line x1=\"12\" y1=\"20\" x2=\"12.01\" y2=\"20\"></line>',\n    \"wind\": '<path d=\"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2\"></path>',\n    \"x-circle\": '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>',\n    \"x-octagon\": '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>',\n    \"x-square\": '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>',\n    \"x\": '<line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>',\n    \"youtube\": '<path d=\"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z\"></path><polygon points=\"9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02\"></polygon>',\n    \"zap-off\": '<polyline points=\"12.41 6.75 13 2 10.57 4.92\"></polyline><polyline points=\"18.57 12.91 21 10 15.66 10\"></polyline><polyline points=\"8 8 3 14 12 14 11 22 16 16\"></polyline><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\n    \"zap\": '<polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"></polygon>',\n    \"zoom-in\": '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line><line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\"></line><line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\"></line>',\n    \"zoom-out\": '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line><line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\"></line>'\n};\n\n\nvar $8b880b011fadfe36$export$f04a61298a47a40f = /** @class */ function() {\n    function Icon() {}\n    Icon.prototype.view = function(_a) {\n        var attrs = _a.attrs;\n        var className = attrs.class, intent = attrs.intent, name = attrs.name, onclick = attrs.onclick, size = attrs.size, htmlAttrs = (0, $17f1b9f8ce16014e$export$3c9a16f847548506)(attrs, [\n            \"class\",\n            \"intent\",\n            \"name\",\n            \"onclick\",\n            \"size\"\n        ]);\n        var classes = (0, (/*@__PURE__*/$parcel$interopDefault($fcc1f848a67e05c0$exports)))((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).ICON, \"\".concat((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).ICON, \"-\").concat(name), intent && \"cui-\".concat(intent), size && \"cui-\".concat(size), onclick && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).ICON_ACTION, className);\n        var svg = (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).trust(\"<svg viewBox='0 0 24 24'>\".concat((0, $48fb4da1ea4addfd$export$2e2bcd8739ae039)[name], \"</svg>\"));\n        return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"\", (0, $17f1b9f8ce16014e$export$18ce0697a983be9b)((0, $17f1b9f8ce16014e$export$18ce0697a983be9b)({}, htmlAttrs), {\n            class: classes,\n            onclick: onclick\n        }), svg);\n    };\n    return Icon;\n}();\n\n\n\n\n\n\nvar $d8e6351f6bd19e38$export$7f7cbe89f1eacd2 = /** @class */ function() {\n    function Spinner() {}\n    Spinner.prototype.view = function(_a) {\n        var attrs = _a.attrs;\n        var active = attrs.active, background = attrs.background, className = attrs.class, fill = attrs.fill, intent = attrs.intent, message = attrs.message, size = attrs.size, otherAttrs = (0, $17f1b9f8ce16014e$export$3c9a16f847548506)(attrs, [\n            \"active\",\n            \"background\",\n            \"class\",\n            \"fill\",\n            \"intent\",\n            \"message\",\n            \"size\"\n        ]);\n        var content = [\n            (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".\".concat((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SPINNER_CONTENT), [\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".\".concat((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SPINNER_ICON)),\n                message && (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".\".concat((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SPINNER_MESSAGE), message)\n            ])\n        ];\n        return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"\", (0, $17f1b9f8ce16014e$export$18ce0697a983be9b)((0, $17f1b9f8ce16014e$export$18ce0697a983be9b)({}, otherAttrs), {\n            class: (0, (/*@__PURE__*/$parcel$interopDefault($fcc1f848a67e05c0$exports)))((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SPINNER, active && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SPINNER_ACTIVE, background && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SPINNER_BG, fill && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SPINNER_FILL, intent && \"cui-\".concat(attrs.intent), size && \"cui-\".concat(attrs.size), className)\n        }), content);\n    };\n    return Spinner;\n}();\n\n\n\nfunction $0e6f230737bfa6ad$export$f6e2535fb5126e54(value) {\n    return typeof value === \"function\";\n}\nfunction $0e6f230737bfa6ad$export$175e60bb96229ece(func) {\n    var args = [];\n    for(var _i = 1; _i < arguments.length; _i++)args[_i - 1] = arguments[_i];\n    if ($0e6f230737bfa6ad$export$f6e2535fb5126e54(func)) return func.apply(void 0, args);\n}\nfunction $0e6f230737bfa6ad$export$211731fc355e9121(el, selector) {\n    if (el.matches(selector)) return el;\n    if (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector || function(s) {\n        var matches = (this.document || this.ownerDocument).querySelectorAll(s);\n        var i = matches.length;\n        while(--i >= 0 && matches.item(i) !== this);\n        return i > -1;\n    };\n    for(; el && el !== document; el = el.parentNode){\n        if (el.matches(selector)) return el;\n    }\n    return null;\n}\nfunction $0e6f230737bfa6ad$export$ace028f8da1a6300() {\n    var el = document.createElement(\"div\");\n    el.style.width = \"100px\";\n    el.style.height = \"100px\";\n    el.style.overflow = \"scroll\";\n    el.style.position = \"absolute\";\n    el.style.top = \"-9999px\";\n    document.body.appendChild(el);\n    var scrollbarWidth = el.offsetWidth - el.clientWidth;\n    document.body.removeChild(el);\n    return scrollbarWidth;\n}\nfunction $0e6f230737bfa6ad$export$4d450e1748530b6a(el) {\n    return el.scrollHeight > window.innerHeight;\n}\nfunction $0e6f230737bfa6ad$export$3c0fcc112e8e7788(element, testElement) {\n    return element === testElement || element.contains(testElement);\n}\nfunction $0e6f230737bfa6ad$export$8756898546458274(style) {\n    if (typeof style === \"string\") {\n        var result = {};\n        var attributes = style.replace(/\\s/g, \"\").split(\";\");\n        for(var i = 0; i < attributes.length; i++){\n            var entry = attributes[i].split(\":\");\n            result[entry.splice(0, 1)[0]] = entry.join(\":\");\n        }\n        return result;\n    } else return style;\n}\nfunction $0e6f230737bfa6ad$export$2069c0f7afbb4fb9(containerEl, contentLeft, contentRight) {\n    if (!containerEl) return;\n    var containerPadding = Math.floor(containerEl.clientHeight / 1.6);\n    if (contentLeft) {\n        var contentLeftEl = contentLeft.dom;\n        containerEl.style.paddingLeft = $0e6f230737bfa6ad$var$shouldAddPadding(contentLeftEl) ? \"\".concat(contentLeftEl.clientWidth + containerPadding, \"px\") : \"\";\n    } else containerEl.style.paddingLeft = \"\";\n    if (contentRight) {\n        var contentRightEl = contentRight.dom;\n        containerEl.style.paddingRight = $0e6f230737bfa6ad$var$shouldAddPadding(contentRightEl) ? \"\".concat(contentRightEl.clientWidth + containerPadding, \"px\") : \"\";\n    } else containerEl.style.paddingRight = \"\";\n}\nfunction $0e6f230737bfa6ad$var$shouldAddPadding(element) {\n    return element && !element.classList.contains((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).ICON) && !element.classList.contains((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).SPINNER) && !element.classList.contains((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).BUTTON_ICON);\n}\nfunction $0e6f230737bfa6ad$export$c8733ae29fb53302(item) {\n    return item == null || item === \"\" || item === false;\n}\n\n\nvar $5b35d122dacb9815$export$353f5b6fc5456de1 = /** @class */ function() {\n    function Button() {}\n    Button.prototype.view = function(_a) {\n        var attrs = _a.attrs;\n        var _b = attrs.align, align = _b === void 0 ? \"center\" : _b, active = attrs.active, basic = attrs.basic, compact = attrs.compact, className = attrs.class, disabled = attrs.disabled, fluid = attrs.fluid, href = attrs.href, iconLeft = attrs.iconLeft, iconLeftAttrs = attrs.iconLeftAttrs, iconRight = attrs.iconRight, iconRightAttrs = attrs.iconRightAttrs, intent = attrs.intent, loading = attrs.loading, label = attrs.label, onclick = attrs.onclick, outlined = attrs.outlined, rounded = attrs.rounded, size = attrs.size, sublabel = attrs.sublabel, htmlAttrs = (0, $17f1b9f8ce16014e$export$3c9a16f847548506)(attrs, [\n            \"align\",\n            \"active\",\n            \"basic\",\n            \"compact\",\n            \"class\",\n            \"disabled\",\n            \"fluid\",\n            \"href\",\n            \"iconLeft\",\n            \"iconLeftAttrs\",\n            \"iconRight\",\n            \"iconRightAttrs\",\n            \"intent\",\n            \"loading\",\n            \"label\",\n            \"onclick\",\n            \"outlined\",\n            \"rounded\",\n            \"size\",\n            \"sublabel\"\n        ]);\n        var tag = href ? \"a\" : \"button\";\n        var isAnchor = tag === \"a\";\n        var classes = (0, (/*@__PURE__*/$parcel$interopDefault($fcc1f848a67e05c0$exports)))((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).BUTTON, align && \"\".concat((0, $e4aeb149e284da0d$export$4dbe3495bda74f11).ALIGN, \"-\").concat(align), active && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).ACTIVE, compact && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).COMPACT, disabled && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).DISABLED, fluid && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).FLUID, loading && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).LOADING, size && \"cui-\".concat(size), intent && \"cui-\".concat(intent), rounded && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).ROUNDED, basic && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).BASIC, outlined && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).OUTLINED, (0, $0e6f230737bfa6ad$export$c8733ae29fb53302)(label) && (0, $0e6f230737bfa6ad$export$c8733ae29fb53302)(sublabel) && (!iconLeft || !iconRight) && (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).BUTTON_ICON, className);\n        var content = [\n            loading && (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $d8e6351f6bd19e38$export$7f7cbe89f1eacd2), {\n                active: true,\n                fill: true\n            }),\n            iconLeft && (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $8b880b011fadfe36$export$f04a61298a47a40f), (0, $17f1b9f8ce16014e$export$18ce0697a983be9b)({\n                name: iconLeft\n            }, iconLeftAttrs)),\n            !(0, $0e6f230737bfa6ad$export$c8733ae29fb53302)(sublabel) && (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"span\", {\n                class: (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).BUTTON_SUBLABEL\n            }, sublabel),\n            !(0, $0e6f230737bfa6ad$export$c8733ae29fb53302)(label) && (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"span\", {\n                class: (0, $e4aeb149e284da0d$export$4dbe3495bda74f11).BUTTON_LABEL\n            }, label),\n            iconRight && (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $8b880b011fadfe36$export$f04a61298a47a40f), (0, $17f1b9f8ce16014e$export$18ce0697a983be9b)({\n                name: iconRight\n            }, iconRightAttrs))\n        ];\n        return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(tag, (0, $17f1b9f8ce16014e$export$18ce0697a983be9b)((0, $17f1b9f8ce16014e$export$18ce0697a983be9b)({\n            type: isAnchor ? undefined : \"button\",\n            role: isAnchor ? \"button\" : undefined\n        }, htmlAttrs), {\n            class: classes,\n            disabled: disabled,\n            // Undefined attrs are not removed on redraw. See https://github.com/MithrilJS/mithril.js/pull/1865#issuecomment-382990558'\n            href: disabled ? undefined : href,\n            onclick: disabled ? undefined : onclick,\n            tabIndex: disabled ? undefined : htmlAttrs.tabIndex\n        }), content);\n    };\n    return Button;\n}();\n\n\n\n\n\n\nconst $d2dce2c3cae33f9c$export$892596cec99bc70e = (color)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"input[type=color]\", {\n        value: $d2dce2c3cae33f9c$export$812799c9515a950b[color]\n    });\nconst $d2dce2c3cae33f9c$export$9012acaf449cdfcb = (state)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".colors\", {}, [\n        Object.keys(state.colors).map((k, n)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"span.color\", {}, [\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"p.type\", {}, k),\n                $d2dce2c3cae33f9c$export$892596cec99bc70e(state.colors[k])\n            ]))\n    ]);\nconst $d2dce2c3cae33f9c$export$812799c9515a950b = [\n    \"#000000\",\n    \"#b3b3b3\",\n    \"#dddddd\",\n    \"#ffffff\",\n    \"#ffb3b3 \",\n    \"#ff6161\",\n    \"#dd6161\",\n    \"#b36161\",\n    \"#fff3d5\",\n    \"#ffb361\",\n    \"#dd8c61\",\n    \"#b37661\",\n    \"#ffeea1\",\n    \"#ffff61\",\n    \"#dddd61\",\n    \"#b3b361\",\n    \"#ddffa1\",\n    \"#c2ff61\",\n    \"#a1dd61\",\n    \"#81b361\",\n    \"#c2ffb3\",\n    \"#61ff61\",\n    \"#61dd61\",\n    \"#61b361\",\n    \"#c2ffc2\",\n    \"#61ff8c\",\n    \"#61dd76\",\n    \"#61b36b\",\n    \"#c2ffcc\",\n    \"#61ffcc\",\n    \"#61dda1\",\n    \"#61b381\",\n    \"#c2fff3\",\n    \"#61ffe9\",\n    \"#61ddc2\",\n    \"#61b396\",\n    \"#c2f3ff\",\n    \"#61eeff\",\n    \"#61c7dd\",\n    \"#61a1b3\",\n    \"#c2ddff\",\n    \"#61c7ff\",\n    \"#61a1dd\",\n    \"#6181b3\",\n    \"#a18cff\",\n    \"#6161ff\",\n    \"#6161dd\",\n    \"#6161b3\",\n    \"#ccb3ff\",\n    \"#a161ff\",\n    \"#8161dd\",\n    \"#7761B2\",\n    \"#FFB2FE\",\n    \"#FF60FE\",\n    \"#DD60DC\",\n    \"#B360B2\",\n    \"#FEB2D5\",\n    \"#FF60C3\",\n    \"#DD60A0\",\n    \"#B3608D\",\n    \"#FF7760\",\n    \"#E8B360\",\n    \"#DDC360\",\n    \"#A1A161\",\n    \"#60B261\",\n    \"#61B28D\",\n    \"#608CD4\",\n    \"#6060FF\",\n    \"#60B2B3\",\n    \"#8C60F2\",\n    \"#CDB3C3\",\n    \"#8C7780\",\n    \"#FF6060\",\n    \"#F2FFA0\",\n    \"#EEFD60\",\n    \"#CCFE60\",\n    \"#77DC61\",\n    \"#60FFCD\",\n    \"#61E8FE\",\n    \"#61A0FE\",\n    \"#8D61FE\",\n    \"#CD61FD\",\n    \"#EF8CDC\",\n    \"#A17760\",\n    \"#FEA160\",\n    \"#DCF861\",\n    \"#D5FF8C\",\n    \"#60FF60\",\n    \"#B3FEA0\",\n    \"#CDFDD5\",\n    \"#B3FFF6\",\n    \"#CDE4FE\",\n    \"#A1C2F6\",\n    \"#D4C2F8\",\n    \"#F88DFF\",\n    \"#FE61CD\",\n    \"#FEC361\",\n    \"#F3EF60\",\n    \"#E5FE61\",\n    \"#DDCD60\",\n    \"#B2A061\",\n    \"#61BA76\",\n    \"#77C38C\",\n    \"#8080A1\",\n    \"#808CCD\",\n    \"#CCAA81\",\n    \"#DD6161\",\n    \"#F8B3A0\",\n    \"#F8BA77\",\n    \"#FEF28C\",\n    \"#E8F9A0\",\n    \"#D4EF76\",\n    \"#8080A1\",\n    \"#F8F9D4\",\n    \"#DCFDE4\",\n    \"#E9E8FE\",\n    \"#E5D4FF\",\n    \"#B3B3B3\",\n    \"#D5D5D5\",\n    \"#F9FFFF\",\n    \"#E86160\",\n    \"#AA6060\",\n    \"#81F760\",\n    \"#60B261\",\n    \"#F3EF60\",\n    \"#B2A061\",\n    \"#EEC360\",\n    \"#C37761\"\n];\n\n\n\nconst $ac5b3dd658baca4b$var$equals = (a, b)=>a.length === b.length && a.every((v, i)=>v === b[i]);\nconst $ac5b3dd658baca4b$export$b2278035370d6017 = (state, actions)=>({\n        connect: (name)=>{\n            // search on device name only\n            name = name.replace(\" Out\", \"\");\n            if (state.connected) actions.disconnect();\n            state.output = (0, $kWuxe.WebMidi).getOutputByName(name || state.inputName);\n            state.outputName = state.output.name;\n            state.input = (0, $kWuxe.WebMidi).getInputByName(name || state.outputName);\n            state.inputName = state.input.name;\n            console.log(\"connected\", state.input);\n            if (state.input) {\n                // send sysex to see if device is a launchpad\n                state.connected = true;\n                state.deviceName = name;\n                actions.detectDevice(state.input, state.output);\n            } else state.connected = false;\n        },\n        connectInput: (id)=>{\n            state.input = (0, $kWuxe.WebMidi).getInputById(id);\n            state.inputName = state.input.name;\n            console.log(\"connected\", state.input);\n            if (state.input) state.connected = true;\n            else state.connected = false;\n        },\n        connectOutput: (id)=>{\n            state.output = (0, $kWuxe.WebMidi).getOutputById(id);\n            state.outputName = state.output.name;\n            console.log(\"connected\", state.output);\n            if (state.output) {\n                // send sysex to see if device is a launchpad\n                state.connected = true;\n                let launchpad = (0, $9066c94fd6c8e22f$export$776a922db93662cb)[state.output.name];\n                console.log(\"assigning \", launchpad);\n                Object.assign(actions, (0, $9066c94fd6c8e22f$export$4586496351d727fb)[launchpad](state, actions));\n                Object.assign((0, $b7ac0cf7b7632c81$export$83b795a96c5728f1), (0, $9066c94fd6c8e22f$export$4586496351d727fb)[launchpad](state, actions));\n                actions.toggleLive(state.connected);\n            } else state.connected = false;\n        },\n        disconnect: ()=>{\n            if (state.input) {\n                if (state.connected) try {\n                    actions.toggleLive(false);\n                } catch (err) {\n                    console.log(\"error disconnecting\", err);\n                }\n                state.input.removeListener();\n                state.input = null;\n                state.output = null;\n            }\n            state.connected = false;\n        },\n        reloadInputs: ()=>{\n            state.inputs((0, $kWuxe.WebMidi).inputs);\n            state.outputs((0, $kWuxe.WebMidi).outputs);\n            if (!state.connected && state.inputs().length == 1) {\n                let name = state.inputs()[0].name;\n                console.log(\"single input: auto connecting\", name);\n                let launchpad = (0, $9066c94fd6c8e22f$export$776a922db93662cb)[name];\n                console.log(\"auto connecting to \", name, launchpad);\n                Object.assign(actions, (0, $9066c94fd6c8e22f$export$4586496351d727fb)[launchpad](state, actions));\n                Object.assign((0, $b7ac0cf7b7632c81$export$83b795a96c5728f1), (0, $9066c94fd6c8e22f$export$4586496351d727fb)[launchpad](state, actions));\n                actions.connect(name);\n                actions.toggleLive(state.connected);\n            }\n            (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).redraw();\n        },\n        initConnector: ()=>{\n            try {\n                (0, $kWuxe.WebMidi).enable(function(err) {\n                    console.debug((0, $kWuxe.WebMidi).inputs);\n                    console.debug((0, $kWuxe.WebMidi).outputs);\n                    actions.reloadInputs();\n                    (0, $kWuxe.WebMidi).addListener(\"connected\", (e)=>{\n                        console.log(\"device connected\");\n                        actions.reloadInputs();\n                    });\n                    (0, $kWuxe.WebMidi).addListener(\"disconnected\", (e)=>{\n                        console.log(\"device disconnected\", e);\n                        if (e.port.name == state.deviceName) {\n                            console.log(\"active device disconnected!\");\n                            state.connected = false;\n                            (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).redraw();\n                        }\n                        actions.reloadInputs();\n                    });\n                }, true);\n                window.onunload = (e)=>{\n                    console.log(\"unloading\");\n                    actions.disconnect();\n                };\n            } catch (err) {\n                console.log(\"error setting up WebMidi\", err);\n            }\n        },\n        initMidi: (noteCallback, ccCallback, afterInit)=>{\n            console.log((0, $kWuxe.WebMidi).inputs);\n            console.log((0, $kWuxe.WebMidi).outputs);\n            if (state.input) {\n                state.input.removeListener();\n                state.input.addListener(\"noteon\", \"all\", noteCallback);\n                state.input.addListener(\"controlchange\", \"all\", ccCallback);\n            // state.input.addListener('midimessage', m => console.log('MIDI', m))\n            } else console.log(\"error, not connected\");\n            afterInit();\n        },\n        detectDevice: (input, output)=>{\n            input.addListener(\"sysex\", \"all\", (sysex)=>{\n                let data = sysex.data;\n                console.log(\"got sysex message\", sysex);\n                if ($ac5b3dd658baca4b$var$equals(data.slice(0, 5), [\n                    240,\n                    126,\n                    0,\n                    6,\n                    2\n                ]) && $ac5b3dd658baca4b$var$equals(data.slice(5, 8), (0, $9066c94fd6c8e22f$export$c6f17c29808f1b66))) {\n                    console.log(\"found Novation product\");\n                    Object.values((0, $9066c94fd6c8e22f$export$4b04cd3b2feae9ab)).map((value)=>{\n                        output.sendSysex((0, $9066c94fd6c8e22f$export$c6f17c29808f1b66), [\n                            ...value,\n                            14\n                        ]);\n                    });\n                }\n                if ($ac5b3dd658baca4b$var$equals(data.slice(0, 4), [\n                    240,\n                    ...(0, $9066c94fd6c8e22f$export$c6f17c29808f1b66)\n                ]) && data[6] == 14) {\n                    let header = data.slice(4, 6);\n                    console.log(\"identified device!\", header);\n                    state.header = header;\n                    for(const key in 0, $9066c94fd6c8e22f$export$4b04cd3b2feae9ab)if ($ac5b3dd658baca4b$var$equals(header, (0, $9066c94fd6c8e22f$export$4b04cd3b2feae9ab)[key])) {\n                        console.log(\"this is a \", key);\n                        state.deviceType = key;\n                        Object.assign(actions, (0, $9066c94fd6c8e22f$export$4586496351d727fb)[key](state, actions));\n                        Object.assign((0, $b7ac0cf7b7632c81$export$83b795a96c5728f1), (0, $9066c94fd6c8e22f$export$4586496351d727fb)[key](state, actions));\n                        input.removeListener(\"sysex\");\n                        actions.toggleLive(true);\n                    }\n                }\n            });\n            output.sendSysex([\n                126,\n                127,\n                6\n            ], [\n                1\n            ]);\n        }\n    });\nconst $ac5b3dd658baca4b$export$b042cfedf6ae225e = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"select\", {\n        oninput: (e)=>actions.connectInput(e.target.value)\n    }, state.inputs().map((c)=>{\n        return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"option\", {\n            value: c.id,\n            selected: c.name == state.inputName\n        }, c.name);\n    }));\nconst $ac5b3dd658baca4b$export$65f11d6055431773 = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"select\", {\n        oninput: (e)=>actions.connectOutput(e.target.value)\n    }, state.outputs().map((c)=>{\n        return (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"option\", {\n            value: c.id,\n            selected: c.name == state.outputName\n        }, c.name);\n    }));\nconst $ac5b3dd658baca4b$export$4a18af0255371fd1 = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"select\", {\n        value: state.deviceType,\n        oninput: (e)=>{\n            let value = e.target.value;\n            console.log(\"selected\", e, value);\n            state.deviceType = value;\n            if (state.connected) {\n                Object.assign(actions, (0, $9066c94fd6c8e22f$export$4586496351d727fb)[value](state, actions));\n                Object.assign((0, $b7ac0cf7b7632c81$export$83b795a96c5728f1), (0, $9066c94fd6c8e22f$export$4586496351d727fb)[value](state, actions));\n                state.input.removeListener(\"sysex\");\n                actions.toggleLive(true);\n            }\n        }\n    }, [\n        (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"option\"),\n        Object.keys((0, $9066c94fd6c8e22f$export$4b04cd3b2feae9ab)).map((h)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"option\", {\n                value: h\n            }, h))\n    ]);\nconst $ac5b3dd658baca4b$export$32b0ea48e47b356c = (name, state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $5b35d122dacb9815$export$353f5b6fc5456de1), {\n        label: name,\n        class: state.connected && state.inputName == name ? \"glow active\" : \"\",\n        onclick: (e)=>{\n            if (state.connected) actions.disconnect();\n            else actions.connect(name);\n        }\n    }, name);\nconst $ac5b3dd658baca4b$export$9e282393ab352bcd = (state, actions)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $5b35d122dacb9815$export$353f5b6fc5456de1), {\n        onclick: (e)=>{\n            actions.disconnect();\n        },\n        iconLeft: \"zap-off\",\n        label: \"disconnect\"\n    });\nconst $ac5b3dd658baca4b$export$f0de1ba241e121fd = (state, actions)=>({\n        view: (vnode)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\".ConnectionPage\", {}, [\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"h1\", \"Connect your Launchpad\"),\n                (0, $ef84d931ff2e086e$export$b131c49b26d3f427)(state),\n                state.inputs().length ? state.inputs().map((i)=>{\n                    if (i.name in (0, $9066c94fd6c8e22f$export$776a922db93662cb)) {\n                        let matches = Object.keys((0, $9066c94fd6c8e22f$export$776a922db93662cb)).filter((n)=>i.name.includes(n));\n                        console.log(`checking ${i.name}`, matches);\n                        if (matches.length) return $ac5b3dd658baca4b$export$32b0ea48e47b356c(i.name, state, actions);\n                    }\n                }) : \"no Launchpads detected\",\n                state.connected ? $ac5b3dd658baca4b$export$9e282393ab352bcd(state, actions) : null,\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"h3\", {}, \"Input\"),\n                $ac5b3dd658baca4b$export$b042cfedf6ae225e(state, actions),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"h3\", {}, \"Output\"),\n                $ac5b3dd658baca4b$export$65f11d6055431773(state, actions),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"h3\", {}, \"Type\"),\n                $ac5b3dd658baca4b$export$4a18af0255371fd1(state, actions)\n            ])\n    });\n\n\n\n\n\n\n\nconst $bd2f53e1120bdd66$export$b94310965bed44e6 = (state, actions)=>({\n        view: ()=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"#home\", {}, [\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"h1#home\", {}, \"LaunchChess.com\"),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"h4#home\", {}, [\n                    \"Play chess on your \",\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"a\", {\n                        href: \"https://novationmusic.com/en/launch/\"\n                    }, \"Novation Launchpad\")\n                ]),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"br\"),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"\", {}, [\n                    \"More details at the project homepage: \",\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"a\", {\n                        href: \"https://quaternion.media/launchchess\"\n                    }, \"quaternion.media/launchchess\")\n                ]),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"br\"),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $ac5b3dd658baca4b$export$f0de1ba241e121fd)(state, actions)),\n                (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"br\"),\n                state.connected ? [\n                    \"Connected!\",\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))(\"br\"),\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $5b35d122dacb9815$export$353f5b6fc5456de1), {\n                        label: \"play over the board\",\n                        onclick: (e)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/otb\")\n                    }),\n                    (0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports)))((0, $5b35d122dacb9815$export$353f5b6fc5456de1), {\n                        label: \"play over the internet\",\n                        onclick: (e)=>(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route.set(\"/games\")\n                    })\n                ] : null\n            ])\n    });\n\n\n\n\nconsole.log(\"launchchess started!\");\nvar $b7ac0cf7b7632c81$var$state = (0, $a01e4d144b50218c$export$7254cc27399e90bd)();\nvar $b7ac0cf7b7632c81$export$e324594224ef24da = {};\nObject.assign($b7ac0cf7b7632c81$export$e324594224ef24da, (0, $a01e4d144b50218c$export$b52183d5cfb26dc9)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da));\nObject.assign($b7ac0cf7b7632c81$export$e324594224ef24da, (0, $cae4a8b830b22bcf$export$683788d28fb74d54)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da));\nObject.assign($b7ac0cf7b7632c81$export$e324594224ef24da, (0, $ac5b3dd658baca4b$export$b2278035370d6017)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da));\nObject.assign($b7ac0cf7b7632c81$export$e324594224ef24da, (0, $6ed1fb4f245a8c05$export$d0d76c231f6d55bd)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da));\nObject.assign($b7ac0cf7b7632c81$export$e324594224ef24da, (0, $22788da0e2196326$export$2fb70d5e506c6bc2)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da));\nvar $b7ac0cf7b7632c81$export$83b795a96c5728f1 = {\n    ...$b7ac0cf7b7632c81$export$e324594224ef24da,\n    ...(0, $a01e4d144b50218c$export$81ce9b7e86ec18db)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da)\n};\n$b7ac0cf7b7632c81$export$e324594224ef24da.initConnector();\n$b7ac0cf7b7632c81$export$e324594224ef24da.initAuth();\nconsole.log($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da);\n(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).mount(document.body, (0, $3f934752a4447ac8$export$c84671f46d6a1ca)($b7ac0cf7b7632c81$var$state));\nlet $b7ac0cf7b7632c81$var$main = document.getElementById(\"main\");\ndocument.body.className += $b7ac0cf7b7632c81$var$state.theme;\n(0, (/*@__PURE__*/$parcel$interopDefault($231519b62b676521$exports))).route($b7ac0cf7b7632c81$var$main, \"/\", {\n    \"/\": (0, $bd2f53e1120bdd66$export$b94310965bed44e6)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da),\n    \"/connect\": (0, $ac5b3dd658baca4b$export$f0de1ba241e121fd)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da),\n    \"/otb\": (0, $6ed1fb4f245a8c05$export$6996ecd26284460f)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da),\n    \"/games\": (0, $6ed1fb4f245a8c05$export$93fd0e768dbd3f80)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da),\n    \"/online\": (0, $6ed1fb4f245a8c05$export$a22305df274c15ec)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$83b795a96c5728f1),\n    \"/login\": (0, $bb75f90500322e40$export$21a94553ffa41578)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da),\n    \"/profile\": (0, $325b867be1548751$export$120c0e7b1bef3ec7)($b7ac0cf7b7632c81$var$state, $b7ac0cf7b7632c81$export$e324594224ef24da)\n});\nwindow.state = $b7ac0cf7b7632c81$var$state;\nwindow.actions = $b7ac0cf7b7632c81$export$e324594224ef24da;\n\n\n//# sourceMappingURL=index.509fcfc2.js.map\n","\"use strict\"\n\nfunction Vnode(tag, key, attrs, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node == null || typeof node === \"boolean\") return null\n\tif (typeof node === \"object\") return node\n\treturn Vnode(\"#\", undefined, undefined, String(node), undefined, undefined)\n}\nVnode.normalizeChildren = function(input) {\n\tvar children = []\n\tif (input.length) {\n\t\tvar isKeyed = input[0] != null && input[0].key != null\n\t\t// Note: this is a *very* perf-sensitive check.\n\t\t// Fun fact: merging the loop like this is somehow faster than splitting\n\t\t// it, noticeably so.\n\t\tfor (var i = 1; i < input.length; i++) {\n\t\t\tif ((input[i] != null && input[i].key != null) !== isKeyed) {\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\tisKeyed && (input[i] != null || typeof input[i] === \"boolean\")\n\t\t\t\t\t\t? \"In fragments, vnodes must either all have keys or none have keys. You may wish to consider using an explicit keyed empty fragment, m.fragment({key: ...}), instead of a hole.\"\n\t\t\t\t\t\t: \"In fragments, vnodes must either all have keys or none have keys.\"\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tchildren[i] = Vnode.normalize(input[i])\n\t\t}\n\t}\n\treturn children\n}\n\nmodule.exports = Vnode\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function(html) {\n\tif (html == null) html = \"\"\n\treturn Vnode(\"<\", undefined, undefined, html, undefined, undefined)\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar hyperscriptVnode = require(\"./hyperscriptVnode\")\n\nmodule.exports = function() {\n\tvar vnode = hyperscriptVnode.apply(0, arguments)\n\n\tvnode.tag = \"[\"\n\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\treturn vnode\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\n// Call via `hyperscriptVnode.apply(startOffset, arguments)`\n//\n// The reason I do it this way, forwarding the arguments and passing the start\n// offset in `this`, is so I don't have to create a temporary array in a\n// performance-critical path.\n//\n// In native ES6, I'd instead add a final `...args` parameter to the\n// `hyperscript` and `fragment` factories and define this as\n// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But\n// ES5 (what Mithril.js requires thanks to IE support) doesn't give me that luxury,\n// and engines aren't nearly intelligent enough to do either of these:\n//\n// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it's passed to\n//    another function only to be indexed.\n// 2. Elide an `arguments` allocation when it's passed to any function other\n//    than `Function.prototype.apply` or `Reflect.apply`.\n//\n// In ES6, it'd probably look closer to this (I'd need to profile it, though):\n// module.exports = function(attrs, ...children) {\n//     if (attrs == null || typeof attrs === \"object\" && attrs.tag == null && !Array.isArray(attrs)) {\n//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]\n//     } else {\n//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]\n//         attrs = undefined\n//     }\n//\n//     if (attrs == null) attrs = {}\n//     return Vnode(\"\", attrs.key, attrs, children)\n// }\nmodule.exports = function() {\n\tvar attrs = arguments[this], start = this + 1, children\n\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = this\n\t}\n\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\n\treturn Vnode(\"\", attrs.key, attrs, children)\n}\n","\"use strict\"\n/** @constructor */\nvar PromisePolyfill = function(executor) {\n\tif (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with 'new'.\")\n\tif (typeof executor !== \"function\") throw new TypeError(\"executor must be a function.\")\n\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\n\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\tfunction handler(list, shouldAbsorb) {\n\t\treturn function execute(value) {\n\t\t\tvar then\n\t\t\ttry {\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\n\t\t\t\t\tif (value === self) throw new TypeError(\"Promise can't be resolved with itself.\")\n\t\t\t\t\texecuteOnce(then.bind(value))\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallAsync(function() {\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\n\t\t\t\t\t\tinstance.state = shouldAbsorb\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\trejectCurrent(e)\n\t\t\t}\n\t\t}\n\t}\n\tfunction executeOnce(then) {\n\t\tvar runs = 0\n\t\tfunction run(fn) {\n\t\t\treturn function(value) {\n\t\t\t\tif (runs++ > 0) return\n\t\t\t\tfn(value)\n\t\t\t}\n\t\t}\n\t\tvar onerror = run(rejectCurrent)\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\n\t}\n\n\texecuteOnce(executor)\n}\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\n\tvar self = this, instance = self._instance\n\tfunction handle(callback, list, next, state) {\n\t\tlist.push(function(value) {\n\t\t\tif (typeof callback !== \"function\") next(value)\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\n\t\t})\n\t\tif (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\n\t}\n\tvar resolveNext, rejectNext\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\n\treturn promise\n}\nPromisePolyfill.prototype.catch = function(onRejection) {\n\treturn this.then(null, onRejection)\n}\nPromisePolyfill.prototype.finally = function(callback) {\n\treturn this.then(\n\t\tfunction(value) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn value\n\t\t\t})\n\t\t},\n\t\tfunction(reason) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn PromisePolyfill.reject(reason);\n\t\t\t})\n\t\t}\n\t)\n}\nPromisePolyfill.resolve = function(value) {\n\tif (value instanceof PromisePolyfill) return value\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\n}\nPromisePolyfill.reject = function(value) {\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\n}\nPromisePolyfill.all = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tvar total = list.length, count = 0, values = []\n\t\tif (list.length === 0) resolve([])\n\t\telse for (var i = 0; i < list.length; i++) {\n\t\t\t(function(i) {\n\t\t\t\tfunction consume(value) {\n\t\t\t\t\tcount++\n\t\t\t\t\tvalues[i] = value\n\t\t\t\t\tif (count === total) resolve(values)\n\t\t\t\t}\n\t\t\t\tif (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\n\t\t\t\t\tlist[i].then(consume, reject)\n\t\t\t\t}\n\t\t\t\telse consume(list[i])\n\t\t\t})(i)\n\t\t}\n\t})\n}\nPromisePolyfill.race = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlist[i].then(resolve, reject)\n\t\t}\n\t})\n}\n\nmodule.exports = PromisePolyfill\n","\"use strict\"\n\nmodule.exports = require(\"./render/render\")(typeof window !== \"undefined\" ? window : null)\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function($window) {\n\tvar $doc = $window && $window.document\n\tvar currentRedraw\n\n\tvar nameSpace = {\n\t\tsvg: \"http://www.w3.org/2000/svg\",\n\t\tmath: \"http://www.w3.org/1998/Math/MathML\"\n\t}\n\n\tfunction getNameSpace(vnode) {\n\t\treturn vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag]\n\t}\n\n\t//sanity check to discourage people from doing `vnode.state = ...`\n\tfunction checkState(vnode, original) {\n\t\tif (vnode.state !== original) throw new Error(\"'vnode.state' must not be modified.\")\n\t}\n\n\t//Note: the hook is passed as the `this` argument to allow proxying the\n\t//arguments without requiring a full array allocation to do so. It also\n\t//takes advantage of the fact the current `vnode` is the first argument in\n\t//all lifecycle methods.\n\tfunction callHook(vnode) {\n\t\tvar original = vnode.state\n\t\ttry {\n\t\t\treturn this.apply(original, arguments)\n\t\t} finally {\n\t\t\tcheckState(vnode, original)\n\t\t}\n\t}\n\n\t// IE11 (at least) throws an UnspecifiedError when accessing document.activeElement when\n\t// inside an iframe. Catch and swallow this error, and heavy-handidly return null.\n\tfunction activeElement() {\n\t\ttry {\n\t\t\treturn $doc.activeElement\n\t\t} catch (e) {\n\t\t\treturn null\n\t\t}\n\t}\n\t//create\n\tfunction createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t}\n\tfunction createNode(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tif (typeof tag === \"string\") {\n\t\t\tvnode.state = {}\n\t\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tswitch (tag) {\n\t\t\t\tcase \"#\": createText(parent, vnode, nextSibling); break\n\t\t\t\tcase \"<\": createHTML(parent, vnode, ns, nextSibling); break\n\t\t\t\tcase \"[\": createFragment(parent, vnode, hooks, ns, nextSibling); break\n\t\t\t\tdefault: createElement(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t\telse createComponent(parent, vnode, hooks, ns, nextSibling)\n\t}\n\tfunction createText(parent, vnode, nextSibling) {\n\t\tvnode.dom = $doc.createTextNode(vnode.children)\n\t\tinsertNode(parent, vnode.dom, nextSibling)\n\t}\n\tvar possibleParents = {caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\"}\n\tfunction createHTML(parent, vnode, ns, nextSibling) {\n\t\tvar match = vnode.children.match(/^\\s*?<(\\w+)/im) || []\n\t\t// not using the proper parent makes the child element(s) vanish.\n\t\t//     var div = document.createElement(\"div\")\n\t\t//     div.innerHTML = \"<td>i</td><td>j</td>\"\n\t\t//     console.log(div.innerHTML)\n\t\t// --> \"ij\", no <td> in sight.\n\t\tvar temp = $doc.createElement(possibleParents[match[1]] || \"div\")\n\t\tif (ns === \"http://www.w3.org/2000/svg\") {\n\t\t\ttemp.innerHTML = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + vnode.children + \"</svg>\"\n\t\t\ttemp = temp.firstChild\n\t\t} else {\n\t\t\ttemp.innerHTML = vnode.children\n\t\t}\n\t\tvnode.dom = temp.firstChild\n\t\tvnode.domSize = temp.childNodes.length\n\t\t// Capture nodes to remove, so we don't confuse them.\n\t\tvnode.instance = []\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tvar child\n\t\twhile (child = temp.firstChild) {\n\t\t\tvnode.instance.push(child)\n\t\t\tfragment.appendChild(child)\n\t\t}\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createFragment(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tif (vnode.children != null) {\n\t\t\tvar children = vnode.children\n\t\t\tcreateNodes(fragment, children, 0, children.length, hooks, null, ns)\n\t\t}\n\t\tvnode.dom = fragment.firstChild\n\t\tvnode.domSize = fragment.childNodes.length\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createElement(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tvar attrs = vnode.attrs\n\t\tvar is = attrs && attrs.is\n\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tvar element = ns ?\n\t\t\tis ? $doc.createElementNS(ns, tag, {is: is}) : $doc.createElementNS(ns, tag) :\n\t\t\tis ? $doc.createElement(tag, {is: is}) : $doc.createElement(tag)\n\t\tvnode.dom = element\n\n\t\tif (attrs != null) {\n\t\t\tsetAttrs(vnode, attrs, ns)\n\t\t}\n\n\t\tinsertNode(parent, element, nextSibling)\n\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tif (vnode.children != null) {\n\t\t\t\tvar children = vnode.children\n\t\t\t\tcreateNodes(element, children, 0, children.length, hooks, null, ns)\n\t\t\t\tif (vnode.tag === \"select\" && attrs != null) setLateSelectAttrs(vnode, attrs)\n\t\t\t}\n\t\t}\n\t}\n\tfunction initComponent(vnode, hooks) {\n\t\tvar sentinel\n\t\tif (typeof vnode.tag.view === \"function\") {\n\t\t\tvnode.state = Object.create(vnode.tag)\n\t\t\tsentinel = vnode.state.view\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t} else {\n\t\t\tvnode.state = void 0\n\t\t\tsentinel = vnode.tag\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t\tvnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\") ? new vnode.tag(vnode) : vnode.tag(vnode)\n\t\t}\n\t\tinitLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tsentinel.$$reentrantLock$$ = null\n\t}\n\tfunction createComponent(parent, vnode, hooks, ns, nextSibling) {\n\t\tinitComponent(vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tcreateNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\n\t\t}\n\t\telse {\n\t\t\tvnode.domSize = 0\n\t\t}\n\t}\n\n\t//update\n\t/**\n\t * @param {Element|Fragment} parent - the parent element\n\t * @param {Vnode[] | null} old - the list of vnodes of the last `render()` call for\n\t *                               this part of the tree\n\t * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.\n\t * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)\n\t * @param {Element | null} nextSibling - the next DOM node if we're dealing with a\n\t *                                       fragment that is not the last item in its\n\t *                                       parent\n\t * @param {'svg' | 'math' | String | null} ns) - the current XML namespace, if any\n\t * @returns void\n\t */\n\t// This function diffs and patches lists of vnodes, both keyed and unkeyed.\n\t//\n\t// We will:\n\t//\n\t// 1. describe its general structure\n\t// 2. focus on the diff algorithm optimizations\n\t// 3. discuss DOM node operations.\n\n\t// ## Overview:\n\t//\n\t// The updateNodes() function:\n\t// - deals with trivial cases\n\t// - determines whether the lists are keyed or unkeyed based on the first non-null node\n\t//   of each list.\n\t// - diffs them and patches the DOM if needed (that's the brunt of the code)\n\t// - manages the leftovers: after diffing, are there:\n\t//   - old nodes left to remove?\n\t// \t - new nodes to insert?\n\t// \t deal with them!\n\t//\n\t// The lists are only iterated over once, with an exception for the nodes in `old` that\n\t// are visited in the fourth part of the diff and in the `removeNodes` loop.\n\n\t// ## Diffing\n\t//\n\t// Reading https://github.com/localvoid/ivi/blob/ddc09d06abaef45248e6133f7040d00d3c6be853/packages/ivi/src/vdom/implementation.ts#L617-L837\n\t// may be good for context on longest increasing subsequence-based logic for moving nodes.\n\t//\n\t// In order to diff keyed lists, one has to\n\t//\n\t// 1) match nodes in both lists, per key, and update them accordingly\n\t// 2) create the nodes present in the new list, but absent in the old one\n\t// 3) remove the nodes present in the old list, but absent in the new one\n\t// 4) figure out what nodes in 1) to move in order to minimize the DOM operations.\n\t//\n\t// To achieve 1) one can create a dictionary of keys => index (for the old list), then iterate\n\t// over the new list and for each new vnode, find the corresponding vnode in the old list using\n\t// the map.\n\t// 2) is achieved in the same step: if a new node has no corresponding entry in the map, it is new\n\t// and must be created.\n\t// For the removals, we actually remove the nodes that have been updated from the old list.\n\t// The nodes that remain in that list after 1) and 2) have been performed can be safely removed.\n\t// The fourth step is a bit more complex and relies on the longest increasing subsequence (LIS)\n\t// algorithm.\n\t//\n\t// the longest increasing subsequence is the list of nodes that can remain in place. Imagine going\n\t// from `1,2,3,4,5` to `4,5,1,2,3` where the numbers are not necessarily the keys, but the indices\n\t// corresponding to the keyed nodes in the old list (keyed nodes `e,d,c,b,a` => `b,a,e,d,c` would\n\t//  match the above lists, for example).\n\t//\n\t// In there are two increasing subsequences: `4,5` and `1,2,3`, the latter being the longest. We\n\t// can update those nodes without moving them, and only call `insertNode` on `4` and `5`.\n\t//\n\t// @localvoid adapted the algo to also support node deletions and insertions (the `lis` is actually\n\t// the longest increasing subsequence *of old nodes still present in the new list*).\n\t//\n\t// It is a general algorithm that is fireproof in all circumstances, but it requires the allocation\n\t// and the construction of a `key => oldIndex` map, and three arrays (one with `newIndex => oldIndex`,\n\t// the `LIS` and a temporary one to create the LIS).\n\t//\n\t// So we cheat where we can: if the tails of the lists are identical, they are guaranteed to be part of\n\t// the LIS and can be updated without moving them.\n\t//\n\t// If two nodes are swapped, they are guaranteed not to be part of the LIS, and must be moved (with\n\t// the exception of the last node if the list is fully reversed).\n\t//\n\t// ## Finding the next sibling.\n\t//\n\t// `updateNode()` and `createNode()` expect a nextSibling parameter to perform DOM operations.\n\t// When the list is being traversed top-down, at any index, the DOM nodes up to the previous\n\t// vnode reflect the content of the new list, whereas the rest of the DOM nodes reflect the old\n\t// list. The next sibling must be looked for in the old list using `getNextSibling(... oldStart + 1 ...)`.\n\t//\n\t// In the other scenarios (swaps, upwards traversal, map-based diff),\n\t// the new vnodes list is traversed upwards. The DOM nodes at the bottom of the list reflect the\n\t// bottom part of the new vnodes list, and we can use the `v.dom`  value of the previous node\n\t// as the next sibling (cached in the `nextSibling` variable).\n\n\n\t// ## DOM node moves\n\t//\n\t// In most scenarios `updateNode()` and `createNode()` perform the DOM operations. However,\n\t// this is not the case if the node moved (second and fourth part of the diff algo). We move\n\t// the old DOM nodes before updateNode runs because it enables us to use the cached `nextSibling`\n\t// variable rather than fetching it using `getNextSibling()`.\n\t//\n\t// The fourth part of the diff currently inserts nodes unconditionally, leading to issues\n\t// like #1791 and #1999. We need to be smarter about those situations where adjascent old\n\t// nodes remain together in the new list in a way that isn't covered by parts one and\n\t// three of the diff algo.\n\n\tfunction updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {\n\t\tif (old === vnodes || old == null && vnodes == null) return\n\t\telse if (old == null || old.length === 0) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns)\n\t\telse if (vnodes == null || vnodes.length === 0) removeNodes(parent, old, 0, old.length)\n\t\telse {\n\t\t\tvar isOldKeyed = old[0] != null && old[0].key != null\n\t\t\tvar isKeyed = vnodes[0] != null && vnodes[0].key != null\n\t\t\tvar start = 0, oldStart = 0\n\t\t\tif (!isOldKeyed) while (oldStart < old.length && old[oldStart] == null) oldStart++\n\t\t\tif (!isKeyed) while (start < vnodes.length && vnodes[start] == null) start++\n\t\t\tif (isOldKeyed !== isKeyed) {\n\t\t\t\tremoveNodes(parent, old, oldStart, old.length)\n\t\t\t\tcreateNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else if (!isKeyed) {\n\t\t\t\t// Don't index past the end of either list (causes deopts).\n\t\t\t\tvar commonLength = old.length < vnodes.length ? old.length : vnodes.length\n\t\t\t\t// Rewind if necessary to the first non-null index on either side.\n\t\t\t\t// We could alternatively either explicitly create or remove nodes when `start !== oldStart`\n\t\t\t\t// but that would be optimizing for sparse lists which are more rare than dense ones.\n\t\t\t\tstart = start < oldStart ? start : oldStart\n\t\t\t\tfor (; start < commonLength; start++) {\n\t\t\t\t\to = old[start]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o === v || o == null && v == null) continue\n\t\t\t\t\telse if (o == null) createNode(parent, v, hooks, ns, getNextSibling(old, start + 1, nextSibling))\n\t\t\t\t\telse if (v == null) removeNode(parent, o)\n\t\t\t\t\telse updateNode(parent, o, v, hooks, getNextSibling(old, start + 1, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\tif (old.length > commonLength) removeNodes(parent, old, start, old.length)\n\t\t\t\tif (vnodes.length > commonLength) createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else {\n\t\t\t\t// keyed diff\n\t\t\t\tvar oldEnd = old.length - 1, end = vnodes.length - 1, map, o, v, oe, ve, topSibling\n\n\t\t\t\t// bottom-up\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t}\n\t\t\t\t// top-down\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o.key !== v.key) break\n\t\t\t\t\toldStart++, start++\n\t\t\t\t\tif (o !== v) updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\t// swaps and list reversals\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (start === end) break\n\t\t\t\t\tif (o.key !== ve.key || oe.key !== v.key) break\n\t\t\t\t\ttopSibling = getNextSibling(old, oldStart, nextSibling)\n\t\t\t\t\tmoveNodes(parent, oe, topSibling)\n\t\t\t\t\tif (oe !== v) updateNode(parent, oe, v, hooks, topSibling, ns)\n\t\t\t\t\tif (++start <= --end) moveNodes(parent, o, nextSibling)\n\t\t\t\t\tif (o !== ve) updateNode(parent, o, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldStart++; oldEnd--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t}\n\t\t\t\t// bottom up once again\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t}\n\t\t\t\tif (start > end) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\telse if (oldStart > oldEnd) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\telse {\n\t\t\t\t\t// inspired by ivi https://github.com/ivijs/ivi/ by Boris Kaul\n\t\t\t\t\tvar originalNextSibling = nextSibling, vnodesLength = end - start + 1, oldIndices = new Array(vnodesLength), li=0, i=0, pos = 2147483647, matched = 0, map, lisIndices\n\t\t\t\t\tfor (i = 0; i < vnodesLength; i++) oldIndices[i] = -1\n\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\tif (map == null) map = getKeyMap(old, oldStart, oldEnd + 1)\n\t\t\t\t\t\tve = vnodes[i]\n\t\t\t\t\t\tvar oldIndex = map[ve.key]\n\t\t\t\t\t\tif (oldIndex != null) {\n\t\t\t\t\t\t\tpos = (oldIndex < pos) ? oldIndex : -1 // becomes -1 if nodes were re-ordered\n\t\t\t\t\t\t\toldIndices[i-start] = oldIndex\n\t\t\t\t\t\t\toe = old[oldIndex]\n\t\t\t\t\t\t\told[oldIndex] = null\n\t\t\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\t\t\tmatched++\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnextSibling = originalNextSibling\n\t\t\t\t\tif (matched !== oldEnd - oldStart + 1) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\t\tif (matched === 0) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (pos === -1) {\n\t\t\t\t\t\t\t// the indices of the indices of the items that are part of the\n\t\t\t\t\t\t\t// longest increasing subsequence in the oldIndices list\n\t\t\t\t\t\t\tlisIndices = makeLisIndices(oldIndices)\n\t\t\t\t\t\t\tli = lisIndices.length - 1\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif (lisIndices[li] === i - start) li--\n\t\t\t\t\t\t\t\t\telse moveNodes(parent, v, nextSibling)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction updateNode(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvar oldTag = old.tag, tag = vnode.tag\n\t\tif (oldTag === tag) {\n\t\t\tvnode.state = old.state\n\t\t\tvnode.events = old.events\n\t\t\tif (shouldNotUpdate(vnode, old)) return\n\t\t\tif (typeof oldTag === \"string\") {\n\t\t\t\tif (vnode.attrs != null) {\n\t\t\t\t\tupdateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t}\n\t\t\t\tswitch (oldTag) {\n\t\t\t\t\tcase \"#\": updateText(old, vnode); break\n\t\t\t\t\tcase \"<\": updateHTML(parent, old, vnode, ns, nextSibling); break\n\t\t\t\t\tcase \"[\": updateFragment(parent, old, vnode, hooks, nextSibling, ns); break\n\t\t\t\t\tdefault: updateElement(old, vnode, hooks, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse updateComponent(parent, old, vnode, hooks, nextSibling, ns)\n\t\t}\n\t\telse {\n\t\t\tremoveNode(parent, old)\n\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t}\n\t}\n\tfunction updateText(old, vnode) {\n\t\tif (old.children.toString() !== vnode.children.toString()) {\n\t\t\told.dom.nodeValue = vnode.children\n\t\t}\n\t\tvnode.dom = old.dom\n\t}\n\tfunction updateHTML(parent, old, vnode, ns, nextSibling) {\n\t\tif (old.children !== vnode.children) {\n\t\t\tremoveHTML(parent, old)\n\t\t\tcreateHTML(parent, vnode, ns, nextSibling)\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t\tvnode.instance = old.instance\n\t\t}\n\t}\n\tfunction updateFragment(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tupdateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns)\n\t\tvar domSize = 0, children = vnode.children\n\t\tvnode.dom = null\n\t\tif (children != null) {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i]\n\t\t\t\tif (child != null && child.dom != null) {\n\t\t\t\t\tif (vnode.dom == null) vnode.dom = child.dom\n\t\t\t\t\tdomSize += child.domSize || 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (domSize !== 1) vnode.domSize = domSize\n\t\t}\n\t}\n\tfunction updateElement(old, vnode, hooks, ns) {\n\t\tvar element = vnode.dom = old.dom\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tif (vnode.tag === \"textarea\") {\n\t\t\tif (vnode.attrs == null) vnode.attrs = {}\n\t\t}\n\t\tupdateAttrs(vnode, old.attrs, vnode.attrs, ns)\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tupdateNodes(element, old.children, vnode.children, hooks, null, ns)\n\t\t}\n\t}\n\tfunction updateComponent(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tupdateLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tif (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\telse updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.instance.domSize\n\t\t}\n\t\telse if (old.instance != null) {\n\t\t\tremoveNode(parent, old.instance)\n\t\t\tvnode.dom = undefined\n\t\t\tvnode.domSize = 0\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t}\n\t}\n\tfunction getKeyMap(vnodes, start, end) {\n\t\tvar map = Object.create(null)\n\t\tfor (; start < end; start++) {\n\t\t\tvar vnode = vnodes[start]\n\t\t\tif (vnode != null) {\n\t\t\t\tvar key = vnode.key\n\t\t\t\tif (key != null) map[key] = start\n\t\t\t}\n\t\t}\n\t\treturn map\n\t}\n\t// Lifted from ivi https://github.com/ivijs/ivi/\n\t// takes a list of unique numbers (-1 is special and can\n\t// occur multiple times) and returns an array with the indices\n\t// of the items that are part of the longest increasing\n\t// subsequence\n\tvar lisTemp = []\n\tfunction makeLisIndices(a) {\n\t\tvar result = [0]\n\t\tvar u = 0, v = 0, i = 0\n\t\tvar il = lisTemp.length = a.length\n\t\tfor (var i = 0; i < il; i++) lisTemp[i] = a[i]\n\t\tfor (var i = 0; i < il; ++i) {\n\t\t\tif (a[i] === -1) continue\n\t\t\tvar j = result[result.length - 1]\n\t\t\tif (a[j] < a[i]) {\n\t\t\t\tlisTemp[i] = j\n\t\t\t\tresult.push(i)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tu = 0\n\t\t\tv = result.length - 1\n\t\t\twhile (u < v) {\n\t\t\t\t// Fast integer average without overflow.\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tvar c = (u >>> 1) + (v >>> 1) + (u & v & 1)\n\t\t\t\tif (a[result[c]] < a[i]) {\n\t\t\t\t\tu = c + 1\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tv = c\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (a[i] < a[result[u]]) {\n\t\t\t\tif (u > 0) lisTemp[i] = result[u - 1]\n\t\t\t\tresult[u] = i\n\t\t\t}\n\t\t}\n\t\tu = result.length\n\t\tv = result[u - 1]\n\t\twhile (u-- > 0) {\n\t\t\tresult[u] = v\n\t\t\tv = lisTemp[v]\n\t\t}\n\t\tlisTemp.length = 0\n\t\treturn result\n\t}\n\n\tfunction getNextSibling(vnodes, i, nextSibling) {\n\t\tfor (; i < vnodes.length; i++) {\n\t\t\tif (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\n\t\t}\n\t\treturn nextSibling\n\t}\n\n\t// This covers a really specific edge case:\n\t// - Parent node is keyed and contains child\n\t// - Child is removed, returns unresolved promise in `onbeforeremove`\n\t// - Parent node is moved in keyed diff\n\t// - Remaining children still need moved appropriately\n\t//\n\t// Ideally, I'd track removed nodes as well, but that introduces a lot more\n\t// complexity and I'm not exactly interested in doing that.\n\tfunction moveNodes(parent, vnode, nextSibling) {\n\t\tvar frag = $doc.createDocumentFragment()\n\t\tmoveChildToFrag(parent, frag, vnode)\n\t\tinsertNode(parent, frag, nextSibling)\n\t}\n\tfunction moveChildToFrag(parent, frag, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === \"<\") {\n\t\t\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\t\t\tfrag.appendChild(vnode.instance[i])\n\t\t\t\t}\n\t\t\t} else if (vnode.tag !== \"[\") {\n\t\t\t\t// Don't recurse for text nodes *or* elements, just fragments\n\t\t\t\tfrag.appendChild(vnode.dom)\n\t\t\t} else if (vnode.children.length === 1) {\n\t\t\t\tvnode = vnode.children[0]\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\tif (child != null) moveChildToFrag(parent, frag, child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfunction insertNode(parent, dom, nextSibling) {\n\t\tif (nextSibling != null) parent.insertBefore(dom, nextSibling)\n\t\telse parent.appendChild(dom)\n\t}\n\n\tfunction maybeSetContentEditable(vnode) {\n\t\tif (vnode.attrs == null || (\n\t\t\tvnode.attrs.contenteditable == null && // attribute\n\t\t\tvnode.attrs.contentEditable == null // property\n\t\t)) return false\n\t\tvar children = vnode.children\n\t\tif (children != null && children.length === 1 && children[0].tag === \"<\") {\n\t\t\tvar content = children[0].children\n\t\t\tif (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\n\t\t}\n\t\telse if (children != null && children.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted.\")\n\t\treturn true\n\t}\n\n\t//remove\n\tfunction removeNodes(parent, vnodes, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) removeNode(parent, vnode)\n\t\t}\n\t}\n\tfunction removeNode(parent, vnode) {\n\t\tvar mask = 0\n\t\tvar original = vnode.state\n\t\tvar stateResult, attrsResult\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeremove === \"function\") {\n\t\t\tvar result = callHook.call(vnode.state.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\tmask = 1\n\t\t\t\tstateResult = result\n\t\t\t}\n\t\t}\n\t\tif (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\n\t\t\tvar result = callHook.call(vnode.attrs.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tmask |= 2\n\t\t\t\tattrsResult = result\n\t\t\t}\n\t\t}\n\t\tcheckState(vnode, original)\n\n\t\t// If we can, try to fast-path it and avoid all the overhead of awaiting\n\t\tif (!mask) {\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t} else {\n\t\t\tif (stateResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 1) { mask &= 2; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tstateResult.then(next, next)\n\t\t\t}\n\t\t\tif (attrsResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 2) { mask &= 1; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tattrsResult.then(next, next)\n\t\t\t}\n\t\t}\n\n\t\tfunction reallyRemove() {\n\t\t\tcheckState(vnode, original)\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t}\n\t}\n\tfunction removeHTML(parent, vnode) {\n\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\tparent.removeChild(vnode.instance[i])\n\t\t}\n\t}\n\tfunction removeChild(parent, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === \"<\") {\n\t\t\t\tremoveHTML(parent, vnode)\n\t\t\t} else {\n\t\t\t\tif (vnode.tag !== \"[\") {\n\t\t\t\t\tparent.removeChild(vnode.dom)\n\t\t\t\t\tif (!Array.isArray(vnode.children)) break\n\t\t\t\t}\n\t\t\t\tif (vnode.children.length === 1) {\n\t\t\t\t\tvnode = vnode.children[0]\n\t\t\t\t\tif (vnode != null) continue\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\t\tif (child != null) removeChild(parent, child)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\tfunction onremove(vnode) {\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onremove === \"function\") callHook.call(vnode.state.onremove, vnode)\n\t\tif (vnode.attrs && typeof vnode.attrs.onremove === \"function\") callHook.call(vnode.attrs.onremove, vnode)\n\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\tif (vnode.instance != null) onremove(vnode.instance)\n\t\t} else {\n\t\t\tvar children = vnode.children\n\t\t\tif (Array.isArray(children)) {\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar child = children[i]\n\t\t\t\t\tif (child != null) onremove(child)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//attrs\n\tfunction setAttrs(vnode, attrs, ns) {\n\t\t// If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n\t\t//\n\t\t// Also, the DOM does things to inputs based on the value, so it needs set first.\n\t\t// See: https://github.com/MithrilJS/mithril.js/issues/2622\n\t\tif (vnode.tag === \"input\" && attrs.type != null) vnode.dom.setAttribute(\"type\", attrs.type)\n\t\tvar isFileInput = attrs != null && vnode.tag === \"input\" && attrs.type === \"file\"\n\t\tfor (var key in attrs) {\n\t\t\tsetAttr(vnode, key, null, attrs[key], ns, isFileInput)\n\t\t}\n\t}\n\tfunction setAttr(vnode, key, old, value, ns, isFileInput) {\n\t\tif (key === \"key\" || key === \"is\" || value == null || isLifecycleMethod(key) || (old === value && !isFormAttribute(vnode, key)) && typeof value !== \"object\" || key === \"type\" && vnode.tag === \"input\") return\n\t\tif (key[0] === \"o\" && key[1] === \"n\") return updateEvent(vnode, key, value)\n\t\tif (key.slice(0, 6) === \"xlink:\") vnode.dom.setAttributeNS(\"http://www.w3.org/1999/xlink\", key.slice(6), value)\n\t\telse if (key === \"style\") updateStyle(vnode.dom, old, value)\n\t\telse if (hasPropertyKey(vnode, key, ns)) {\n\t\t\tif (key === \"value\") {\n\t\t\t\t// Only do the coercion if we're actually going to check the value.\n\t\t\t\t/* eslint-disable no-implicit-coercion */\n\t\t\t\t//setting input[value] to same value by typing on focused element moves cursor to end in Chrome\n\t\t\t\t//setting input[type=file][value] to same value causes an error to be generated if it's non-empty\n\t\t\t\tif ((vnode.tag === \"input\" || vnode.tag === \"textarea\") && vnode.dom.value === \"\" + value && (isFileInput || vnode.dom === activeElement())) return\n\t\t\t\t//setting select[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"select\" && old !== null && vnode.dom.value === \"\" + value) return\n\t\t\t\t//setting option[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"option\" && old !== null && vnode.dom.value === \"\" + value) return\n\t\t\t\t//setting input[type=file][value] to different value is an error if it's non-empty\n\t\t\t\t// Not ideal, but it at least works around the most common source of uncaught exceptions for now.\n\t\t\t\tif (isFileInput && \"\" + value !== \"\") { console.error(\"`value` is read-only on file inputs!\"); return }\n\t\t\t\t/* eslint-enable no-implicit-coercion */\n\t\t\t}\n\t\t\tvnode.dom[key] = value\n\t\t} else {\n\t\t\tif (typeof value === \"boolean\") {\n\t\t\t\tif (value) vnode.dom.setAttribute(key, \"\")\n\t\t\t\telse vnode.dom.removeAttribute(key)\n\t\t\t}\n\t\t\telse vnode.dom.setAttribute(key === \"className\" ? \"class\" : key, value)\n\t\t}\n\t}\n\tfunction removeAttr(vnode, key, old, ns) {\n\t\tif (key === \"key\" || key === \"is\" || old == null || isLifecycleMethod(key)) return\n\t\tif (key[0] === \"o\" && key[1] === \"n\") updateEvent(vnode, key, undefined)\n\t\telse if (key === \"style\") updateStyle(vnode.dom, old, null)\n\t\telse if (\n\t\t\thasPropertyKey(vnode, key, ns)\n\t\t\t&& key !== \"className\"\n\t\t\t&& key !== \"title\" // creates \"null\" as title\n\t\t\t&& !(key === \"value\" && (\n\t\t\t\tvnode.tag === \"option\"\n\t\t\t\t|| vnode.tag === \"select\" && vnode.dom.selectedIndex === -1 && vnode.dom === activeElement()\n\t\t\t))\n\t\t\t&& !(vnode.tag === \"input\" && key === \"type\")\n\t\t) {\n\t\t\tvnode.dom[key] = null\n\t\t} else {\n\t\t\tvar nsLastIndex = key.indexOf(\":\")\n\t\t\tif (nsLastIndex !== -1) key = key.slice(nsLastIndex + 1)\n\t\t\tif (old !== false) vnode.dom.removeAttribute(key === \"className\" ? \"class\" : key)\n\t\t}\n\t}\n\tfunction setLateSelectAttrs(vnode, attrs) {\n\t\tif (\"value\" in attrs) {\n\t\t\tif(attrs.value === null) {\n\t\t\t\tif (vnode.dom.selectedIndex !== -1) vnode.dom.value = null\n\t\t\t} else {\n\t\t\t\tvar normalized = \"\" + attrs.value // eslint-disable-line no-implicit-coercion\n\t\t\t\tif (vnode.dom.value !== normalized || vnode.dom.selectedIndex === -1) {\n\t\t\t\t\tvnode.dom.value = normalized\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (\"selectedIndex\" in attrs) setAttr(vnode, \"selectedIndex\", null, attrs.selectedIndex, undefined)\n\t}\n\tfunction updateAttrs(vnode, old, attrs, ns) {\n\t\tif (old && old === attrs) {\n\t\t\tconsole.warn(\"Don't reuse attrs object, use new object for every redraw, this will throw in next major\")\n\t\t}\n\t\tif (attrs != null) {\n\t\t\t// If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n\t\t\t//\n\t\t\t// Also, the DOM does things to inputs based on the value, so it needs set first.\n\t\t\t// See: https://github.com/MithrilJS/mithril.js/issues/2622\n\t\t\tif (vnode.tag === \"input\" && attrs.type != null) vnode.dom.setAttribute(\"type\", attrs.type)\n\t\t\tvar isFileInput = vnode.tag === \"input\" && attrs.type === \"file\"\n\t\t\tfor (var key in attrs) {\n\t\t\t\tsetAttr(vnode, key, old && old[key], attrs[key], ns, isFileInput)\n\t\t\t}\n\t\t}\n\t\tvar val\n\t\tif (old != null) {\n\t\t\tfor (var key in old) {\n\t\t\t\tif (((val = old[key]) != null) && (attrs == null || attrs[key] == null)) {\n\t\t\t\t\tremoveAttr(vnode, key, val, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction isFormAttribute(vnode, attr) {\n\t\treturn attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === activeElement() || vnode.tag === \"option\" && vnode.dom.parentNode === $doc.activeElement\n\t}\n\tfunction isLifecycleMethod(attr) {\n\t\treturn attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\"\n\t}\n\tfunction hasPropertyKey(vnode, key, ns) {\n\t\t// Filter out namespaced keys\n\t\treturn ns === undefined && (\n\t\t\t// If it's a custom element, just keep it.\n\t\t\tvnode.tag.indexOf(\"-\") > -1 || vnode.attrs != null && vnode.attrs.is ||\n\t\t\t// If it's a normal element, let's try to avoid a few browser bugs.\n\t\t\tkey !== \"href\" && key !== \"list\" && key !== \"form\" && key !== \"width\" && key !== \"height\"// && key !== \"type\"\n\t\t\t// Defer the property check until *after* we check everything.\n\t\t) && key in vnode.dom\n\t}\n\n\t//style\n\tvar uppercaseRegex = /[A-Z]/g\n\tfunction toLowerCase(capital) { return \"-\" + capital.toLowerCase() }\n\tfunction normalizeKey(key) {\n\t\treturn key[0] === \"-\" && key[1] === \"-\" ? key :\n\t\t\tkey === \"cssFloat\" ? \"float\" :\n\t\t\t\tkey.replace(uppercaseRegex, toLowerCase)\n\t}\n\tfunction updateStyle(element, old, style) {\n\t\tif (old === style) {\n\t\t\t// Styles are equivalent, do nothing.\n\t\t} else if (style == null) {\n\t\t\t// New style is missing, just clear it.\n\t\t\telement.style.cssText = \"\"\n\t\t} else if (typeof style !== \"object\") {\n\t\t\t// New style is a string, let engine deal with patching.\n\t\t\telement.style.cssText = style\n\t\t} else if (old == null || typeof old !== \"object\") {\n\t\t\t// `old` is missing or a string, `style` is an object.\n\t\t\telement.style.cssText = \"\"\n\t\t\t// Add new style properties\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null) element.style.setProperty(normalizeKey(key), String(value))\n\t\t\t}\n\t\t} else {\n\t\t\t// Both old & new are (different) objects.\n\t\t\t// Update style properties that have changed\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null && (value = String(value)) !== String(old[key])) {\n\t\t\t\t\telement.style.setProperty(normalizeKey(key), value)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove style properties that no longer exist\n\t\t\tfor (var key in old) {\n\t\t\t\tif (old[key] != null && style[key] == null) {\n\t\t\t\t\telement.style.removeProperty(normalizeKey(key))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Here's an explanation of how this works:\n\t// 1. The event names are always (by design) prefixed by `on`.\n\t// 2. The EventListener interface accepts either a function or an object\n\t//    with a `handleEvent` method.\n\t// 3. The object does not inherit from `Object.prototype`, to avoid\n\t//    any potential interference with that (e.g. setters).\n\t// 4. The event name is remapped to the handler before calling it.\n\t// 5. In function-based event handlers, `ev.target === this`. We replicate\n\t//    that below.\n\t// 6. In function-based event handlers, `return false` prevents the default\n\t//    action and stops event propagation. We replicate that below.\n\tfunction EventDict() {\n\t\t// Save this, so the current redraw is correctly tracked.\n\t\tthis._ = currentRedraw\n\t}\n\tEventDict.prototype = Object.create(null)\n\tEventDict.prototype.handleEvent = function (ev) {\n\t\tvar handler = this[\"on\" + ev.type]\n\t\tvar result\n\t\tif (typeof handler === \"function\") result = handler.call(ev.currentTarget, ev)\n\t\telse if (typeof handler.handleEvent === \"function\") handler.handleEvent(ev)\n\t\tif (this._ && ev.redraw !== false) (0, this._)()\n\t\tif (result === false) {\n\t\t\tev.preventDefault()\n\t\t\tev.stopPropagation()\n\t\t}\n\t}\n\n\t//event\n\tfunction updateEvent(vnode, key, value) {\n\t\tif (vnode.events != null) {\n\t\t\tvnode.events._ = currentRedraw\n\t\t\tif (vnode.events[key] === value) return\n\t\t\tif (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n\t\t\t\tif (vnode.events[key] == null) vnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = value\n\t\t\t} else {\n\t\t\t\tif (vnode.events[key] != null) vnode.dom.removeEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = undefined\n\t\t\t}\n\t\t} else if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n\t\t\tvnode.events = new EventDict()\n\t\t\tvnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\tvnode.events[key] = value\n\t\t}\n\t}\n\n\t//lifecycle\n\tfunction initLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.oninit === \"function\") callHook.call(source.oninit, vnode)\n\t\tif (typeof source.oncreate === \"function\") hooks.push(callHook.bind(source.oncreate, vnode))\n\t}\n\tfunction updateLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.onupdate === \"function\") hooks.push(callHook.bind(source.onupdate, vnode))\n\t}\n\tfunction shouldNotUpdate(vnode, old) {\n\t\tdo {\n\t\t\tif (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") {\n\t\t\t\tvar force = callHook.call(vnode.attrs.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeupdate === \"function\") {\n\t\t\t\tvar force = callHook.call(vnode.state.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\treturn false\n\t\t} while (false); // eslint-disable-line no-constant-condition\n\t\tvnode.dom = old.dom\n\t\tvnode.domSize = old.domSize\n\t\tvnode.instance = old.instance\n\t\t// One would think having the actual latest attributes would be ideal,\n\t\t// but it doesn't let us properly diff based on our current internal\n\t\t// representation. We have to save not only the old DOM info, but also\n\t\t// the attributes used to create it, as we diff *that*, not against the\n\t\t// DOM directly (with a few exceptions in `setAttr`). And, of course, we\n\t\t// need to save the children and text as they are conceptually not\n\t\t// unlike special \"attributes\" internally.\n\t\tvnode.attrs = old.attrs\n\t\tvnode.children = old.children\n\t\tvnode.text = old.text\n\t\treturn true\n\t}\n\n\tvar currentDOM\n\n\treturn function(dom, vnodes, redraw) {\n\t\tif (!dom) throw new TypeError(\"DOM element being rendered to does not exist.\")\n\t\tif (currentDOM != null && dom.contains(currentDOM)) {\n\t\t\tthrow new TypeError(\"Node is currently being rendered to and thus is locked.\")\n\t\t}\n\t\tvar prevRedraw = currentRedraw\n\t\tvar prevDOM = currentDOM\n\t\tvar hooks = []\n\t\tvar active = activeElement()\n\t\tvar namespace = dom.namespaceURI\n\n\t\tcurrentDOM = dom\n\t\tcurrentRedraw = typeof redraw === \"function\" ? redraw : undefined\n\t\ttry {\n\t\t\t// First time rendering into a node clears it out\n\t\t\tif (dom.vnodes == null) dom.textContent = \"\"\n\t\t\tvnodes = Vnode.normalizeChildren(Array.isArray(vnodes) ? vnodes : [vnodes])\n\t\t\tupdateNodes(dom, dom.vnodes, vnodes, hooks, null, namespace === \"http://www.w3.org/1999/xhtml\" ? undefined : namespace)\n\t\t\tdom.vnodes = vnodes\n\t\t\t// `document.activeElement` can return null: https://html.spec.whatwg.org/multipage/interaction.html#dom-document-activeelement\n\t\t\tif (active != null && activeElement() !== active && typeof active.focus === \"function\") active.focus()\n\t\t\tfor (var i = 0; i < hooks.length; i++) hooks[i]()\n\t\t} finally {\n\t\t\tcurrentRedraw = prevRedraw\n\t\t\tcurrentDOM = prevDOM\n\t\t}\n\t}\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function(render, schedule, console) {\n\tvar subscriptions = []\n\tvar pending = false\n\tvar offset = -1\n\n\tfunction sync() {\n\t\tfor (offset = 0; offset < subscriptions.length; offset += 2) {\n\t\t\ttry { render(subscriptions[offset], Vnode(subscriptions[offset + 1]), redraw) }\n\t\t\tcatch (e) { console.error(e) }\n\t\t}\n\t\toffset = -1\n\t}\n\n\tfunction redraw() {\n\t\tif (!pending) {\n\t\t\tpending = true\n\t\t\tschedule(function() {\n\t\t\t\tpending = false\n\t\t\t\tsync()\n\t\t\t})\n\t\t}\n\t}\n\n\tredraw.sync = sync\n\n\tfunction mount(root, component) {\n\t\tif (component != null && component.view == null && typeof component !== \"function\") {\n\t\t\tthrow new TypeError(\"m.mount expects a component, not a vnode.\")\n\t\t}\n\n\t\tvar index = subscriptions.indexOf(root)\n\t\tif (index >= 0) {\n\t\t\tsubscriptions.splice(index, 2)\n\t\t\tif (index <= offset) offset -= 2\n\t\t\trender(root, [])\n\t\t}\n\n\t\tif (component != null) {\n\t\t\tsubscriptions.push(root, component)\n\t\t\trender(root, Vnode(component), redraw)\n\t\t}\n\t}\n\n\treturn {mount: mount, redraw: redraw}\n}\n","\"use strict\"\n\nvar buildPathname = require(\"../pathname/build\")\nvar hasOwn = require(\"../util/hasOwn\")\n\nmodule.exports = function($window, Promise, oncompletion) {\n\tvar callbackCount = 0\n\n\tfunction PromiseProxy(executor) {\n\t\treturn new Promise(executor)\n\t}\n\n\t// In case the global Promise is some userland library's where they rely on\n\t// `foo instanceof this.constructor`, `this.constructor.resolve(value)`, or\n\t// similar. Let's *not* break them.\n\tPromiseProxy.prototype = Promise.prototype\n\tPromiseProxy.__proto__ = Promise // eslint-disable-line no-proto\n\n\tfunction makeRequest(factory) {\n\t\treturn function(url, args) {\n\t\t\tif (typeof url !== \"string\") { args = url; url = url.url }\n\t\t\telse if (args == null) args = {}\n\t\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\t\tfactory(buildPathname(url, args.params), args, function (data) {\n\t\t\t\t\tif (typeof args.type === \"function\") {\n\t\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tdata[i] = new args.type(data[i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse data = new args.type(data)\n\t\t\t\t\t}\n\t\t\t\t\tresolve(data)\n\t\t\t\t}, reject)\n\t\t\t})\n\t\t\tif (args.background === true) return promise\n\t\t\tvar count = 0\n\t\t\tfunction complete() {\n\t\t\t\tif (--count === 0 && typeof oncompletion === \"function\") oncompletion()\n\t\t\t}\n\n\t\t\treturn wrap(promise)\n\n\t\t\tfunction wrap(promise) {\n\t\t\t\tvar then = promise.then\n\t\t\t\t// Set the constructor, so engines know to not await or resolve\n\t\t\t\t// this as a native promise. At the time of writing, this is\n\t\t\t\t// only necessary for V8, but their behavior is the correct\n\t\t\t\t// behavior per spec. See this spec issue for more details:\n\t\t\t\t// https://github.com/tc39/ecma262/issues/1577. Also, see the\n\t\t\t\t// corresponding comment in `request/tests/test-request.js` for\n\t\t\t\t// a bit more background on the issue at hand.\n\t\t\t\tpromise.constructor = PromiseProxy\n\t\t\t\tpromise.then = function() {\n\t\t\t\t\tcount++\n\t\t\t\t\tvar next = then.apply(promise, arguments)\n\t\t\t\t\tnext.then(complete, function(e) {\n\t\t\t\t\t\tcomplete()\n\t\t\t\t\t\tif (count === 0) throw e\n\t\t\t\t\t})\n\t\t\t\t\treturn wrap(next)\n\t\t\t\t}\n\t\t\t\treturn promise\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasHeader(args, name) {\n\t\tfor (var key in args.headers) {\n\t\t\tif (hasOwn.call(args.headers, key) && key.toLowerCase() === name) return true\n\t\t}\n\t\treturn false\n\t}\n\n\treturn {\n\t\trequest: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar method = args.method != null ? args.method.toUpperCase() : \"GET\"\n\t\t\tvar body = args.body\n\t\t\tvar assumeJSON = (args.serialize == null || args.serialize === JSON.serialize) && !(body instanceof $window.FormData || body instanceof $window.URLSearchParams)\n\t\t\tvar responseType = args.responseType || (typeof args.extract === \"function\" ? \"\" : \"json\")\n\n\t\t\tvar xhr = new $window.XMLHttpRequest(), aborted = false, isTimeout = false\n\t\t\tvar original = xhr, replacedAbort\n\t\t\tvar abort = xhr.abort\n\n\t\t\txhr.abort = function() {\n\t\t\t\taborted = true\n\t\t\t\tabort.call(this)\n\t\t\t}\n\n\t\t\txhr.open(method, url, args.async !== false, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined)\n\n\t\t\tif (assumeJSON && body != null && !hasHeader(args, \"content-type\")) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t\t}\n\t\t\tif (typeof args.deserialize !== \"function\" && !hasHeader(args, \"accept\")) {\n\t\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\n\t\t\t}\n\t\t\tif (args.withCredentials) xhr.withCredentials = args.withCredentials\n\t\t\tif (args.timeout) xhr.timeout = args.timeout\n\t\t\txhr.responseType = responseType\n\n\t\t\tfor (var key in args.headers) {\n\t\t\t\tif (hasOwn.call(args.headers, key)) {\n\t\t\t\t\txhr.setRequestHeader(key, args.headers[key])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.onreadystatechange = function(ev) {\n\t\t\t\t// Don't throw errors on xhr.abort().\n\t\t\t\tif (aborted) return\n\n\t\t\t\tif (ev.target.readyState === 4) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar success = (ev.target.status >= 200 && ev.target.status < 300) || ev.target.status === 304 || (/^file:\\/\\//i).test(url)\n\t\t\t\t\t\t// When the response type isn't \"\" or \"text\",\n\t\t\t\t\t\t// `xhr.responseText` is the wrong thing to use.\n\t\t\t\t\t\t// Browsers do the right thing and throw here, and we\n\t\t\t\t\t\t// should honor that and do the right thing by\n\t\t\t\t\t\t// preferring `xhr.response` where possible/practical.\n\t\t\t\t\t\tvar response = ev.target.response, message\n\n\t\t\t\t\t\tif (responseType === \"json\") {\n\t\t\t\t\t\t\t// For IE and Edge, which don't implement\n\t\t\t\t\t\t\t// `responseType: \"json\"`.\n\t\t\t\t\t\t\tif (!ev.target.responseType && typeof args.extract !== \"function\") {\n\t\t\t\t\t\t\t\t// Handle no-content which will not parse.\n\t\t\t\t\t\t\t\ttry { response = JSON.parse(ev.target.responseText) }\n\t\t\t\t\t\t\t\tcatch (e) { response = null }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!responseType || responseType === \"text\") {\n\t\t\t\t\t\t\t// Only use this default if it's text. If a parsed\n\t\t\t\t\t\t\t// document is needed on old IE and friends (all\n\t\t\t\t\t\t\t// unsupported), the user should use a custom\n\t\t\t\t\t\t\t// `config` instead. They're already using this at\n\t\t\t\t\t\t\t// their own risk.\n\t\t\t\t\t\t\tif (response == null) response = ev.target.responseText\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof args.extract === \"function\") {\n\t\t\t\t\t\t\tresponse = args.extract(ev.target, args)\n\t\t\t\t\t\t\tsuccess = true\n\t\t\t\t\t\t} else if (typeof args.deserialize === \"function\") {\n\t\t\t\t\t\t\tresponse = args.deserialize(response)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (success) resolve(response)\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar completeErrorResponse = function() {\n\t\t\t\t\t\t\t\ttry { message = ev.target.responseText }\n\t\t\t\t\t\t\t\tcatch (e) { message = response }\n\t\t\t\t\t\t\t\tvar error = new Error(message)\n\t\t\t\t\t\t\t\terror.code = ev.target.status\n\t\t\t\t\t\t\t\terror.response = response\n\t\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (xhr.status === 0) {\n\t\t\t\t\t\t\t\t// Use setTimeout to push this code block onto the event queue\n\t\t\t\t\t\t\t\t// This allows `xhr.ontimeout` to run in the case that there is a timeout\n\t\t\t\t\t\t\t\t// Without this setTimeout, `xhr.ontimeout` doesn't have a chance to reject\n\t\t\t\t\t\t\t\t// as `xhr.onreadystatechange` will run before it\n\t\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t\tif (isTimeout) return\n\t\t\t\t\t\t\t\t\tcompleteErrorResponse()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t} else completeErrorResponse()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\treject(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.ontimeout = function (ev) {\n\t\t\t\tisTimeout = true\n\t\t\t\tvar error = new Error(\"Request timed out\")\n\t\t\t\terror.code = ev.target.status\n\t\t\t\treject(error)\n\t\t\t}\n\n\t\t\tif (typeof args.config === \"function\") {\n\t\t\t\txhr = args.config(xhr, args, url) || xhr\n\n\t\t\t\t// Propagate the `abort` to any replacement XHR as well.\n\t\t\t\tif (xhr !== original) {\n\t\t\t\t\treplacedAbort = xhr.abort\n\t\t\t\t\txhr.abort = function() {\n\t\t\t\t\t\taborted = true\n\t\t\t\t\t\treplacedAbort.call(this)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (body == null) xhr.send()\n\t\t\telse if (typeof args.serialize === \"function\") xhr.send(args.serialize(body))\n\t\t\telse if (body instanceof $window.FormData || body instanceof $window.URLSearchParams) xhr.send(body)\n\t\t\telse xhr.send(JSON.stringify(body))\n\t\t}),\n\t\tjsonp: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar callbackName = args.callbackName || \"_mithril_\" + Math.round(Math.random() * 1e16) + \"_\" + callbackCount++\n\t\t\tvar script = $window.document.createElement(\"script\")\n\t\t\t$window[callbackName] = function(data) {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\tresolve(data)\n\t\t\t}\n\t\t\tscript.onerror = function() {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\treject(new Error(\"JSONP request failed\"))\n\t\t\t}\n\t\t\tscript.src = url + (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") +\n\t\t\t\tencodeURIComponent(args.callbackKey || \"callback\") + \"=\" +\n\t\t\t\tencodeURIComponent(callbackName)\n\t\t\t$window.document.documentElement.appendChild(script)\n\t\t}),\n\t}\n}\n","\"use strict\"\n\nvar buildQueryString = require(\"../querystring/build\")\nvar assign = require(\"../util/assign\")\n\n// Returns `path` from `template` + `params`\nmodule.exports = function(template, params) {\n\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(template)) {\n\t\tthrow new SyntaxError(\"Template parameter names must be separated by either a '/', '-', or '.'.\")\n\t}\n\tif (params == null) return template\n\tvar queryIndex = template.indexOf(\"?\")\n\tvar hashIndex = template.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? template.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = template.slice(0, pathEnd)\n\tvar query = {}\n\n\tassign(query, params)\n\n\tvar resolved = path.replace(/:([^\\/\\.-]+)(\\.{3})?/g, function(m, key, variadic) {\n\t\tdelete query[key]\n\t\t// If no such parameter exists, don't interpolate it.\n\t\tif (params[key] == null) return m\n\t\t// Escape normal parameters, but not variadic ones.\n\t\treturn variadic ? params[key] : encodeURIComponent(String(params[key]))\n\t})\n\n\t// In case the template substitution adds new query/hash parameters.\n\tvar newQueryIndex = resolved.indexOf(\"?\")\n\tvar newHashIndex = resolved.indexOf(\"#\")\n\tvar newQueryEnd = newHashIndex < 0 ? resolved.length : newHashIndex\n\tvar newPathEnd = newQueryIndex < 0 ? newQueryEnd : newQueryIndex\n\tvar result = resolved.slice(0, newPathEnd)\n\n\tif (queryIndex >= 0) result += template.slice(queryIndex, queryEnd)\n\tif (newQueryIndex >= 0) result += (queryIndex < 0 ? \"?\" : \"&\") + resolved.slice(newQueryIndex, newQueryEnd)\n\tvar querystring = buildQueryString(query)\n\tif (querystring) result += (queryIndex < 0 && newQueryIndex < 0 ? \"?\" : \"&\") + querystring\n\tif (hashIndex >= 0) result += template.slice(hashIndex)\n\tif (newHashIndex >= 0) result += (hashIndex < 0 ? \"\" : \"&\") + resolved.slice(newHashIndex)\n\treturn result\n}\n","\"use strict\"\n\nmodule.exports = function(object) {\n\tif (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\"\n\n\tvar args = []\n\tfor (var key in object) {\n\t\tdestructure(key, object[key])\n\t}\n\n\treturn args.join(\"&\")\n\n\tfunction destructure(key, value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tdestructure(key + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse if (Object.prototype.toString.call(value) === \"[object Object]\") {\n\t\t\tfor (var i in value) {\n\t\t\t\tdestructure(key + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse args.push(encodeURIComponent(key) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"))\n\t}\n}\n","// This exists so I'm only saving it once.\n\"use strict\"\n\nvar hasOwn = require(\"./hasOwn\")\n\nmodule.exports = Object.assign || function(target, source) {\n\tfor (var key in source) {\n\t\tif (hasOwn.call(source, key)) target[key] = source[key]\n\t}\n}\n","// This exists so I'm only saving it once.\n\"use strict\"\n\nmodule.exports = {}.hasOwnProperty\n","\"use strict\"\n\nvar mountRedraw = require(\"./mount-redraw\")\n\nmodule.exports = require(\"./api/router\")(typeof window !== \"undefined\" ? window : null, mountRedraw)\n","\"use strict\"\n\nvar render = require(\"./render\")\n\nmodule.exports = require(\"./api/mount-redraw\")(render, typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : null, typeof console !== \"undefined\" ? console : null)\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar m = require(\"../render/hyperscript\")\nvar Promise = require(\"../promise/promise\")\n\nvar buildPathname = require(\"../pathname/build\")\nvar parsePathname = require(\"../pathname/parse\")\nvar compileTemplate = require(\"../pathname/compileTemplate\")\nvar assign = require(\"../util/assign\")\nvar censor = require(\"../util/censor\")\n\nvar sentinel = {}\n\nfunction decodeURIComponentSave(component) {\n\ttry {\n\t\treturn decodeURIComponent(component)\n\t} catch(e) {\n\t\treturn component\n\t}\n}\n\nmodule.exports = function($window, mountRedraw) {\n\tvar callAsync = $window == null\n\t\t// In case Mithril.js' loaded globally without the DOM, let's not break\n\t\t? null\n\t\t: typeof $window.setImmediate === \"function\" ? $window.setImmediate : $window.setTimeout\n\tvar p = Promise.resolve()\n\n\tvar scheduled = false\n\n\t// state === 0: init\n\t// state === 1: scheduled\n\t// state === 2: done\n\tvar ready = false\n\tvar state = 0\n\n\tvar compiled, fallbackRoute\n\n\tvar currentResolver = sentinel, component, attrs, currentPath, lastUpdate\n\n\tvar RouterRoot = {\n\t\tonbeforeupdate: function() {\n\t\t\tstate = state ? 2 : 1\n\t\t\treturn !(!state || sentinel === currentResolver)\n\t\t},\n\t\tonremove: function() {\n\t\t\t$window.removeEventListener(\"popstate\", fireAsync, false)\n\t\t\t$window.removeEventListener(\"hashchange\", resolveRoute, false)\n\t\t},\n\t\tview: function() {\n\t\t\tif (!state || sentinel === currentResolver) return\n\t\t\t// Wrap in a fragment to preserve existing key semantics\n\t\t\tvar vnode = [Vnode(component, attrs.key, attrs)]\n\t\t\tif (currentResolver) vnode = currentResolver.render(vnode[0])\n\t\t\treturn vnode\n\t\t},\n\t}\n\n\tvar SKIP = route.SKIP = {}\n\n\tfunction resolveRoute() {\n\t\tscheduled = false\n\t\t// Consider the pathname holistically. The prefix might even be invalid,\n\t\t// but that's not our problem.\n\t\tvar prefix = $window.location.hash\n\t\tif (route.prefix[0] !== \"#\") {\n\t\t\tprefix = $window.location.search + prefix\n\t\t\tif (route.prefix[0] !== \"?\") {\n\t\t\t\tprefix = $window.location.pathname + prefix\n\t\t\t\tif (prefix[0] !== \"/\") prefix = \"/\" + prefix\n\t\t\t}\n\t\t}\n\t\t// This seemingly useless `.concat()` speeds up the tests quite a bit,\n\t\t// since the representation is consistently a relatively poorly\n\t\t// optimized cons string.\n\t\tvar path = prefix.concat()\n\t\t\t.replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponentSave)\n\t\t\t.slice(route.prefix.length)\n\t\tvar data = parsePathname(path)\n\n\t\tassign(data.params, $window.history.state)\n\n\t\tfunction reject(e) {\n\t\t\tconsole.error(e)\n\t\t\tsetPath(fallbackRoute, null, {replace: true})\n\t\t}\n\n\t\tloop(0)\n\t\tfunction loop(i) {\n\t\t\t// state === 0: init\n\t\t\t// state === 1: scheduled\n\t\t\t// state === 2: done\n\t\t\tfor (; i < compiled.length; i++) {\n\t\t\t\tif (compiled[i].check(data)) {\n\t\t\t\t\tvar payload = compiled[i].component\n\t\t\t\t\tvar matchedRoute = compiled[i].route\n\t\t\t\t\tvar localComp = payload\n\t\t\t\t\tvar update = lastUpdate = function(comp) {\n\t\t\t\t\t\tif (update !== lastUpdate) return\n\t\t\t\t\t\tif (comp === SKIP) return loop(i + 1)\n\t\t\t\t\t\tcomponent = comp != null && (typeof comp.view === \"function\" || typeof comp === \"function\")? comp : \"div\"\n\t\t\t\t\t\tattrs = data.params, currentPath = path, lastUpdate = null\n\t\t\t\t\t\tcurrentResolver = payload.render ? payload : null\n\t\t\t\t\t\tif (state === 2) mountRedraw.redraw()\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tstate = 2\n\t\t\t\t\t\t\tmountRedraw.redraw.sync()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// There's no understating how much I *wish* I could\n\t\t\t\t\t// use `async`/`await` here...\n\t\t\t\t\tif (payload.view || typeof payload === \"function\") {\n\t\t\t\t\t\tpayload = {}\n\t\t\t\t\t\tupdate(localComp)\n\t\t\t\t\t}\n\t\t\t\t\telse if (payload.onmatch) {\n\t\t\t\t\t\tp.then(function () {\n\t\t\t\t\t\t\treturn payload.onmatch(data.params, path, matchedRoute)\n\t\t\t\t\t\t}).then(update, path === fallbackRoute ? null : reject)\n\t\t\t\t\t}\n\t\t\t\t\telse update(\"div\")\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (path === fallbackRoute) {\n\t\t\t\tthrow new Error(\"Could not resolve default route \" + fallbackRoute + \".\")\n\t\t\t}\n\t\t\tsetPath(fallbackRoute, null, {replace: true})\n\t\t}\n\t}\n\n\t// Set it unconditionally so `m.route.set` and `m.route.Link` both work,\n\t// even if neither `pushState` nor `hashchange` are supported. It's\n\t// cleared if `hashchange` is used, since that makes it automatically\n\t// async.\n\tfunction fireAsync() {\n\t\tif (!scheduled) {\n\t\t\tscheduled = true\n\t\t\t// TODO: just do `mountRedraw.redraw()` here and elide the timer\n\t\t\t// dependency. Note that this will muck with tests a *lot*, so it's\n\t\t\t// not as easy of a change as it sounds.\n\t\t\tcallAsync(resolveRoute)\n\t\t}\n\t}\n\n\tfunction setPath(path, data, options) {\n\t\tpath = buildPathname(path, data)\n\t\tif (ready) {\n\t\t\tfireAsync()\n\t\t\tvar state = options ? options.state : null\n\t\t\tvar title = options ? options.title : null\n\t\t\tif (options && options.replace) $window.history.replaceState(state, title, route.prefix + path)\n\t\t\telse $window.history.pushState(state, title, route.prefix + path)\n\t\t}\n\t\telse {\n\t\t\t$window.location.href = route.prefix + path\n\t\t}\n\t}\n\n\tfunction route(root, defaultRoute, routes) {\n\t\tif (!root) throw new TypeError(\"DOM element being rendered to does not exist.\")\n\n\t\tcompiled = Object.keys(routes).map(function(route) {\n\t\t\tif (route[0] !== \"/\") throw new SyntaxError(\"Routes must start with a '/'.\")\n\t\t\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(route)) {\n\t\t\t\tthrow new SyntaxError(\"Route parameter names must be separated with either '/', '.', or '-'.\")\n\t\t\t}\n\t\t\treturn {\n\t\t\t\troute: route,\n\t\t\t\tcomponent: routes[route],\n\t\t\t\tcheck: compileTemplate(route),\n\t\t\t}\n\t\t})\n\t\tfallbackRoute = defaultRoute\n\t\tif (defaultRoute != null) {\n\t\t\tvar defaultData = parsePathname(defaultRoute)\n\n\t\t\tif (!compiled.some(function (i) { return i.check(defaultData) })) {\n\t\t\t\tthrow new ReferenceError(\"Default route doesn't match any known routes.\")\n\t\t\t}\n\t\t}\n\n\t\tif (typeof $window.history.pushState === \"function\") {\n\t\t\t$window.addEventListener(\"popstate\", fireAsync, false)\n\t\t} else if (route.prefix[0] === \"#\") {\n\t\t\t$window.addEventListener(\"hashchange\", resolveRoute, false)\n\t\t}\n\n\t\tready = true\n\t\tmountRedraw.mount(root, RouterRoot)\n\t\tresolveRoute()\n\t}\n\troute.set = function(path, data, options) {\n\t\tif (lastUpdate != null) {\n\t\t\toptions = options || {}\n\t\t\toptions.replace = true\n\t\t}\n\t\tlastUpdate = null\n\t\tsetPath(path, data, options)\n\t}\n\troute.get = function() {return currentPath}\n\troute.prefix = \"#!\"\n\troute.Link = {\n\t\tview: function(vnode) {\n\t\t\t// Omit the used parameters from the rendered element - they are\n\t\t\t// internal. Also, censor the various lifecycle methods.\n\t\t\t//\n\t\t\t// We don't strip the other parameters because for convenience we\n\t\t\t// let them be specified in the selector as well.\n\t\t\tvar child = m(\n\t\t\t\tvnode.attrs.selector || \"a\",\n\t\t\t\tcensor(vnode.attrs, [\"options\", \"params\", \"selector\", \"onclick\"]),\n\t\t\t\tvnode.children\n\t\t\t)\n\t\t\tvar options, onclick, href\n\n\t\t\t// Let's provide a *right* way to disable a route link, rather than\n\t\t\t// letting people screw up accessibility on accident.\n\t\t\t//\n\t\t\t// The attribute is coerced so users don't get surprised over\n\t\t\t// `disabled: 0` resulting in a button that's somehow routable\n\t\t\t// despite being visibly disabled.\n\t\t\tif (child.attrs.disabled = Boolean(child.attrs.disabled)) {\n\t\t\t\tchild.attrs.href = null\n\t\t\t\tchild.attrs[\"aria-disabled\"] = \"true\"\n\t\t\t\t// If you *really* do want add `onclick` on a disabled link, use\n\t\t\t\t// an `oncreate` hook to add it.\n\t\t\t} else {\n\t\t\t\toptions = vnode.attrs.options\n\t\t\t\tonclick = vnode.attrs.onclick\n\t\t\t\t// Easier to build it now to keep it isomorphic.\n\t\t\t\thref = buildPathname(child.attrs.href, vnode.attrs.params)\n\t\t\t\tchild.attrs.href = route.prefix + href\n\t\t\t\tchild.attrs.onclick = function(e) {\n\t\t\t\t\tvar result\n\t\t\t\t\tif (typeof onclick === \"function\") {\n\t\t\t\t\t\tresult = onclick.call(e.currentTarget, e)\n\t\t\t\t\t} else if (onclick == null || typeof onclick !== \"object\") {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t} else if (typeof onclick.handleEvent === \"function\") {\n\t\t\t\t\t\tonclick.handleEvent(e)\n\t\t\t\t\t}\n\n\t\t\t\t\t// Adapted from React Router's implementation:\n\t\t\t\t\t// https://github.com/ReactTraining/react-router/blob/520a0acd48ae1b066eb0b07d6d4d1790a1d02482/packages/react-router-dom/modules/Link.js\n\t\t\t\t\t//\n\t\t\t\t\t// Try to be flexible and intuitive in how we handle links.\n\t\t\t\t\t// Fun fact: links aren't as obvious to get right as you\n\t\t\t\t\t// would expect. There's a lot more valid ways to click a\n\t\t\t\t\t// link than this, and one might want to not simply click a\n\t\t\t\t\t// link, but right click or command-click it to copy the\n\t\t\t\t\t// link target, etc. Nope, this isn't just for blind people.\n\t\t\t\t\tif (\n\t\t\t\t\t\t// Skip if `onclick` prevented default\n\t\t\t\t\t\tresult !== false && !e.defaultPrevented &&\n\t\t\t\t\t\t// Ignore everything but left clicks\n\t\t\t\t\t\t(e.button === 0 || e.which === 0 || e.which === 1) &&\n\t\t\t\t\t\t// Let the browser handle `target=_blank`, etc.\n\t\t\t\t\t\t(!e.currentTarget.target || e.currentTarget.target === \"_self\") &&\n\t\t\t\t\t\t// No modifier keys\n\t\t\t\t\t\t!e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey\n\t\t\t\t\t) {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\te.redraw = false\n\t\t\t\t\t\troute.set(href, null, options)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn child\n\t\t},\n\t}\n\troute.param = function(key) {\n\t\treturn attrs && key != null ? attrs[key] : attrs\n\t}\n\n\treturn route\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar hyperscriptVnode = require(\"./hyperscriptVnode\")\nvar hasOwn = require(\"../util/hasOwn\")\n\nvar selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\nvar selectorCache = {}\n\nfunction isEmpty(object) {\n\tfor (var key in object) if (hasOwn.call(object, key)) return false\n\treturn true\n}\n\nfunction compileSelector(selector) {\n\tvar match, tag = \"div\", classes = [], attrs = {}\n\twhile (match = selectorParser.exec(selector)) {\n\t\tvar type = match[1], value = match[2]\n\t\tif (type === \"\" && value !== \"\") tag = value\n\t\telse if (type === \"#\") attrs.id = value\n\t\telse if (type === \".\") classes.push(value)\n\t\telse if (match[3][0] === \"[\") {\n\t\t\tvar attrValue = match[6]\n\t\t\tif (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")\n\t\t\tif (match[4] === \"class\") classes.push(attrValue)\n\t\t\telse attrs[match[4]] = attrValue === \"\" ? attrValue : attrValue || true\n\t\t}\n\t}\n\tif (classes.length > 0) attrs.className = classes.join(\" \")\n\treturn selectorCache[selector] = {tag: tag, attrs: attrs}\n}\n\nfunction execSelector(state, vnode) {\n\tvar attrs = vnode.attrs\n\tvar hasClass = hasOwn.call(attrs, \"class\")\n\tvar className = hasClass ? attrs.class : attrs.className\n\n\tvnode.tag = state.tag\n\tvnode.attrs = {}\n\n\tif (!isEmpty(state.attrs) && !isEmpty(attrs)) {\n\t\tvar newAttrs = {}\n\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key)) newAttrs[key] = attrs[key]\n\t\t}\n\n\t\tattrs = newAttrs\n\t}\n\n\tfor (var key in state.attrs) {\n\t\tif (hasOwn.call(state.attrs, key) && key !== \"className\" && !hasOwn.call(attrs, key)){\n\t\t\tattrs[key] = state.attrs[key]\n\t\t}\n\t}\n\tif (className != null || state.attrs.className != null) attrs.className =\n\t\tclassName != null\n\t\t\t? state.attrs.className != null\n\t\t\t\t? String(state.attrs.className) + \" \" + String(className)\n\t\t\t\t: className\n\t\t\t: state.attrs.className != null\n\t\t\t\t? state.attrs.className\n\t\t\t\t: null\n\n\tif (hasClass) attrs.class = null\n\n\tfor (var key in attrs) {\n\t\tif (hasOwn.call(attrs, key) && key !== \"key\") {\n\t\t\tvnode.attrs = attrs\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn vnode\n}\n\nfunction hyperscript(selector) {\n\tif (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") {\n\t\tthrow Error(\"The selector must be either a string or a component.\");\n\t}\n\n\tvar vnode = hyperscriptVnode.apply(1, arguments)\n\n\tif (typeof selector === \"string\") {\n\t\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\t\tif (selector !== \"[\") return execSelector(selectorCache[selector] || compileSelector(selector), vnode)\n\t}\n\n\tvnode.tag = selector\n\treturn vnode\n}\n\nmodule.exports = hyperscript\n","/* global window */\n\"use strict\"\n\nvar PromisePolyfill = require(\"./polyfill\")\n\nif (typeof window !== \"undefined\") {\n\tif (typeof window.Promise === \"undefined\") {\n\t\twindow.Promise = PromisePolyfill\n\t} else if (!window.Promise.prototype.finally) {\n\t\twindow.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = window.Promise\n} else if (typeof global !== \"undefined\") {\n\tif (typeof global.Promise === \"undefined\") {\n\t\tglobal.Promise = PromisePolyfill\n\t} else if (!global.Promise.prototype.finally) {\n\t\tglobal.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = global.Promise\n} else {\n\tmodule.exports = PromisePolyfill\n}\n","\"use strict\"\n\nvar parseQueryString = require(\"../querystring/parse\")\n\n// Returns `{path, params}` from `url`\nmodule.exports = function(url) {\n\tvar queryIndex = url.indexOf(\"?\")\n\tvar hashIndex = url.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\")\n\n\tif (!path) path = \"/\"\n\telse {\n\t\tif (path[0] !== \"/\") path = \"/\" + path\n\t\tif (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1)\n\t}\n\treturn {\n\t\tpath: path,\n\t\tparams: queryIndex < 0\n\t\t\t? {}\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\n\t}\n}\n","\"use strict\"\n\nfunction decodeURIComponentSave(str) {\n\ttry {\n\t\treturn decodeURIComponent(str)\n\t} catch(err) {\n\t\treturn str\n\t}\n}\n\nmodule.exports = function(string) {\n\tif (string === \"\" || string == null) return {}\n\tif (string.charAt(0) === \"?\") string = string.slice(1)\n\n\tvar entries = string.split(\"&\"), counters = {}, data = {}\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar entry = entries[i].split(\"=\")\n\t\tvar key = decodeURIComponentSave(entry[0])\n\t\tvar value = entry.length === 2 ? decodeURIComponentSave(entry[1]) : \"\"\n\n\t\tif (value === \"true\") value = true\n\t\telse if (value === \"false\") value = false\n\n\t\tvar levels = key.split(/\\]\\[?|\\[/)\n\t\tvar cursor = data\n\t\tif (key.indexOf(\"[\") > -1) levels.pop()\n\t\tfor (var j = 0; j < levels.length; j++) {\n\t\t\tvar level = levels[j], nextLevel = levels[j + 1]\n\t\t\tvar isNumber = nextLevel == \"\" || !isNaN(parseInt(nextLevel, 10))\n\t\t\tif (level === \"\") {\n\t\t\t\tvar key = levels.slice(0, j).join()\n\t\t\t\tif (counters[key] == null) {\n\t\t\t\t\tcounters[key] = Array.isArray(cursor) ? cursor.length : 0\n\t\t\t\t}\n\t\t\t\tlevel = counters[key]++\n\t\t\t}\n\t\t\t// Disallow direct prototype pollution\n\t\t\telse if (level === \"__proto__\") break\n\t\t\tif (j === levels.length - 1) cursor[level] = value\n\t\t\telse {\n\t\t\t\t// Read own properties exclusively to disallow indirect\n\t\t\t\t// prototype pollution\n\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(cursor, level)\n\t\t\t\tif (desc != null) desc = desc.value\n\t\t\t\tif (desc == null) cursor[level] = desc = isNumber ? [] : {}\n\t\t\t\tcursor = desc\n\t\t\t}\n\t\t}\n\t}\n\treturn data\n}\n","\"use strict\"\n\nvar parsePathname = require(\"./parse\")\n\n// Compiles a template into a function that takes a resolved path (without query\n// strings) and returns an object containing the template parameters with their\n// parsed values. This expects the input of the compiled template to be the\n// output of `parsePathname`. Note that it does *not* remove query parameters\n// specified in the template.\nmodule.exports = function(template) {\n\tvar templateData = parsePathname(template)\n\tvar templateKeys = Object.keys(templateData.params)\n\tvar keys = []\n\tvar regexp = new RegExp(\"^\" + templateData.path.replace(\n\t\t// I escape literal text so people can use things like `:file.:ext` or\n\t\t// `:lang-:locale` in routes. This is all merged into one pass so I\n\t\t// don't also accidentally escape `-` and make it harder to detect it to\n\t\t// ban it from template parameters.\n\t\t/:([^\\/.-]+)(\\.{3}|\\.(?!\\.)|-)?|[\\\\^$*+.()|\\[\\]{}]/g,\n\t\tfunction(m, key, extra) {\n\t\t\tif (key == null) return \"\\\\\" + m\n\t\t\tkeys.push({k: key, r: extra === \"...\"})\n\t\t\tif (extra === \"...\") return \"(.*)\"\n\t\t\tif (extra === \".\") return \"([^/]+)\\\\.\"\n\t\t\treturn \"([^/]+)\" + (extra || \"\")\n\t\t}\n\t) + \"$\")\n\treturn function(data) {\n\t\t// First, check the params. Usually, there isn't any, and it's just\n\t\t// checking a static set.\n\t\tfor (var i = 0; i < templateKeys.length; i++) {\n\t\t\tif (templateData.params[templateKeys[i]] !== data.params[templateKeys[i]]) return false\n\t\t}\n\t\t// If no interpolations exist, let's skip all the ceremony\n\t\tif (!keys.length) return regexp.test(data.path)\n\t\tvar values = regexp.exec(data.path)\n\t\tif (values == null) return false\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tdata.params[keys[i].k] = keys[i].r ? values[i + 1] : decodeURIComponent(values[i + 1])\n\t\t}\n\t\treturn true\n\t}\n}\n","\"use strict\"\n\n// Note: this is mildly perf-sensitive.\n//\n// It does *not* use `delete` - dynamic `delete`s usually cause objects to bail\n// out into dictionary mode and just generally cause a bunch of optimization\n// issues within engines.\n//\n// Ideally, I would've preferred to do this, if it weren't for the optimization\n// issues:\n//\n// ```js\n// const hasOwn = require(\"./hasOwn\")\n// const magic = [\n//     \"key\", \"oninit\", \"oncreate\", \"onbeforeupdate\", \"onupdate\",\n//     \"onbeforeremove\", \"onremove\",\n// ]\n// module.exports = (attrs, extras) => {\n//     const result = Object.assign(Object.create(null), attrs)\n//     for (const key of magic) delete result[key]\n//     if (extras != null) for (const key of extras) delete result[key]\n//     return result\n// }\n// ```\n\nvar hasOwn = require(\"./hasOwn\")\n// Words in RegExp literals are sometimes mangled incorrectly by the internal bundler, so use RegExp().\nvar magic = new RegExp(\"^(?:key|oninit|oncreate|onbeforeupdate|onupdate|onbeforeremove|onremove)$\")\n\nmodule.exports = function(attrs, extras) {\n\tvar result = {}\n\n\tif (extras != null) {\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key) && !magic.test(key) && extras.indexOf(key) < 0) {\n\t\t\t\tresult[key] = attrs[key]\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key) && !magic.test(key)) {\n\t\t\t\tresult[key] = attrs[key]\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result\n}\n","/* eslint-disable */\n;(function() {\n\"use strict\"\n/* eslint-enable */\nStream.SKIP = {}\nStream.lift = lift\nStream.scan = scan\nStream.merge = merge\nStream.combine = combine\nStream.scanMerge = scanMerge\nStream[\"fantasy-land/of\"] = Stream\n\nvar warnedHalt = false\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true\n\t\treturn Stream.SKIP\n\t}\n})\n\nfunction Stream(value) {\n\tvar dependentStreams = []\n\tvar dependentFns = []\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing()\n\t\t\t\tstream._state = \"active\"\n\t\t\t\t// Cloning the list to ensure it's still iterated in intended\n\t\t\t\t// order\n\t\t\t\tdependentStreams.slice().forEach(function(s, i) {\n\t\t\t\t\tif (open(s)) s(this[i](value))\n\t\t\t\t}, dependentFns.slice())\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\"\n\tstream._parents = []\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\"\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing()\n\t\t})\n\t}\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value))\n\t\ttarget._parents.push(stream)\n\t\tdependentStreams.push(target)\n\t\tdependentFns.push(fn)\n\t\treturn target\n\t}\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t}\n\n\tvar end\n\tfunction createEnd() {\n\t\tend = Stream()\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream)})\n\t\t\t\tstream._state = \"ended\"\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0\n\t\t\t}\n\t\t\treturn value\n\t\t})\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value }\n\n\tstream[\"fantasy-land/map\"] = stream.map\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) }\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child)\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1)\n\t\t\tdependentFns.splice(childIndex, 1)\n\t\t}\n\t}\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t})\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream.\")\n\t\treturn s._state === \"active\"\n\t})\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream()\n\n\tvar changed = []\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s)\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])))\n\t\t\t\tchanged = []\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t})\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true) })\n\t\t\tendStream.end(true)\n\t\t}\n\t\treturn undefined\n\t})\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v)\n\t\tif (next !== Stream.SKIP) acc = next\n\t\treturn next\n\t})\n\tstream(acc)\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] })\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1]\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream())\n\t\t})\n\n\t\treturn seed\n\t}, streams)\n\n\tstream(seed)\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0]\n\tvar streams = Array.prototype.slice.call(arguments, 1)\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nif (typeof module !== \"undefined\") module[\"exports\"] = Stream\nelse if (typeof window.m === \"function\" && !(\"stream\" in window.m)) window.m.stream = Stream\nelse window.m = {stream : Stream}\n\n}());\n","/**\n * WEBMIDI.js v3.1.6\n * A JavaScript library to kickstart your MIDI projects\n * https://webmidijs.org\n * Build generated on June 4th, 2023.\n *\n * © Copyright 2015-2023, Jean-Philippe Côté.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});class EventEmitter{constructor(e=!1){this.eventMap={},this.eventsSuspended=1==e}addListener(e,t,n={}){if(\"string\"==typeof e&&e.length<1||e instanceof String&&e.length<1||\"string\"!=typeof e&&!(e instanceof String)&&e!==EventEmitter.ANY_EVENT)throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");if(\"function\"!=typeof t)throw new TypeError(\"The callback must be a function.\");const r=new Listener(e,this,t,n);return this.eventMap[e]||(this.eventMap[e]=[]),n.prepend?this.eventMap[e].unshift(r):this.eventMap[e].push(r),r}addOneTimeListener(e,t,n={}){n.remaining=1,this.addListener(e,t,n)}static get ANY_EVENT(){return Symbol.for(\"Any event\")}hasListener(e,t){if(void 0===e)return!!(this.eventMap[EventEmitter.ANY_EVENT]&&this.eventMap[EventEmitter.ANY_EVENT].length>0)||Object.entries(this.eventMap).some(([,e])=>e.length>0);if(this.eventMap[e]&&this.eventMap[e].length>0){if(t instanceof Listener){return this.eventMap[e].filter(e=>e===t).length>0}if(\"function\"==typeof t){return this.eventMap[e].filter(e=>e.callback===t).length>0}return null==t}return!1}get eventNames(){return Object.keys(this.eventMap)}getListeners(e){return this.eventMap[e]||[]}suspendEvent(e){this.getListeners(e).forEach(e=>{e.suspended=!0})}unsuspendEvent(e){this.getListeners(e).forEach(e=>{e.suspended=!1})}getListenerCount(e){return this.getListeners(e).length}emit(e,...t){if(\"string\"!=typeof e&&!(e instanceof String))throw new TypeError(\"The 'event' parameter must be a string.\");if(this.eventsSuspended)return;let n=[],r=this.eventMap[EventEmitter.ANY_EVENT]||[];return this.eventMap[e]&&(r=r.concat(this.eventMap[e])),r.forEach(e=>{if(e.suspended)return;let r=[...t];Array.isArray(e.arguments)&&(r=r.concat(e.arguments)),e.remaining>0&&(n.push(e.callback.apply(e.context,r)),e.count++),--e.remaining<1&&e.remove()}),n}removeListener(e,t,n={}){if(void 0===e)return void(this.eventMap={});if(!this.eventMap[e])return;let r=this.eventMap[e].filter(e=>t&&e.callback!==t||n.remaining&&n.remaining!==e.remaining||n.context&&n.context!==e.context);r.length?this.eventMap[e]=r:delete this.eventMap[e]}async waitFor(e,t={}){return t.duration=parseInt(t.duration),(isNaN(t.duration)||t.duration<=0)&&(t.duration=1/0),new Promise((n,r)=>{let i,s=this.addListener(e,()=>{clearTimeout(i),n()},{remaining:1});t.duration!==1/0&&(i=setTimeout(()=>{s.remove(),r(\"The duration expired before the event was emitted.\")},t.duration))})}get eventCount(){return Object.keys(this.eventMap).length}}class Listener{constructor(e,t,n,r={}){if(\"string\"!=typeof e&&!(e instanceof String)&&e!==EventEmitter.ANY_EVENT)throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");if(!t)throw new ReferenceError(\"The 'target' parameter is mandatory.\");if(\"function\"!=typeof n)throw new TypeError(\"The 'callback' must be a function.\");void 0===r.arguments||Array.isArray(r.arguments)||(r.arguments=[r.arguments]),(r=Object.assign({context:t,remaining:1/0,arguments:void 0,duration:1/0},r)).duration!==1/0&&setTimeout(()=>this.remove(),r.duration),this.arguments=r.arguments,this.callback=n,this.context=r.context,this.count=0,this.event=e,this.remaining=parseInt(r.remaining)>=1?parseInt(r.remaining):1/0,this.suspended=!1,this.target=t}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}\n/**\n * The `Enumerations` class contains enumerations and arrays of elements used throughout the\n * library. All its properties are static and should be referenced using the class name. For\n * example: `Enumerations.CHANNEL_MESSAGES`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */class Enumerations{static get MIDI_CHANNEL_MESSAGES(){return this.validation&&console.warn(\"The MIDI_CHANNEL_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MESSAGES enum instead.\"),Enumerations.CHANNEL_MESSAGES}static get CHANNEL_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,programchange:12,channelaftertouch:13,pitchbend:14}}static get CHANNEL_NUMBERS(){return[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get MIDI_CHANNEL_NUMBERS(){return this.validation&&console.warn(\"The MIDI_CHANNEL_NUMBERS array has been deprecated. Use the Enumerations.CHANNEL_NUMBERS array instead.\"),[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn(\"The MIDI_CHANNEL_MODE_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MODE_MESSAGES enum instead.\"),Enumerations.CHANNEL_MODE_MESSAGES}static get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn(\"The MIDI_CONTROL_CHANGE_MESSAGES enum has been deprecated. Use the Enumerations.CONTROL_CHANGE_MESSAGES array instead.\"),{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,controller3:3,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,controller9:9,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,controller14:14,controller15:15,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,controller20:20,controller21:21,controller22:22,controller23:23,controller24:24,controller25:25,controller26:26,controller27:27,controller28:28,controller29:29,controller30:30,controller31:31,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,controller35:35,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,controller41:41,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,controller46:46,controller47:47,controller48:48,controller49:49,controller50:50,controller51:51,controller52:52,controller53:53,controller54:54,controller55:55,controller56:56,controller57:57,controller58:58,controller59:59,controller60:60,controller61:61,controller62:62,controller63:63,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,controller84:84,controller85:85,controller86:86,controller87:87,controller88:88,controller89:89,controller90:90,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101,controller102:102,controller103:103,controller104:104,controller105:105,controller106:106,controller107:107,controller108:108,controller109:109,controller110:110,controller111:111,controller112:112,controller113:113,controller114:114,controller115:115,controller116:116,controller117:117,controller118:118,controller119:119,allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get CONTROL_CHANGE_MESSAGES(){return[{number:0,name:\"bankselectcoarse\",description:\"Bank Select (Coarse)\",position:\"msb\"},{number:1,name:\"modulationwheelcoarse\",description:\"Modulation Wheel (Coarse)\",position:\"msb\"},{number:2,name:\"breathcontrollercoarse\",description:\"Breath Controller (Coarse)\",position:\"msb\"},{number:3,name:\"controller3\",description:\"Undefined\",position:\"msb\"},{number:4,name:\"footcontrollercoarse\",description:\"Foot Controller (Coarse)\",position:\"msb\"},{number:5,name:\"portamentotimecoarse\",description:\"Portamento Time (Coarse)\",position:\"msb\"},{number:6,name:\"dataentrycoarse\",description:\"Data Entry (Coarse)\",position:\"msb\"},{number:7,name:\"volumecoarse\",description:\"Channel Volume (Coarse)\",position:\"msb\"},{number:8,name:\"balancecoarse\",description:\"Balance (Coarse)\",position:\"msb\"},{number:9,name:\"controller9\",description:\"Controller 9 (Coarse)\",position:\"msb\"},{number:10,name:\"pancoarse\",description:\"Pan (Coarse)\",position:\"msb\"},{number:11,name:\"expressioncoarse\",description:\"Expression Controller (Coarse)\",position:\"msb\"},{number:12,name:\"effectcontrol1coarse\",description:\"Effect Control 1 (Coarse)\",position:\"msb\"},{number:13,name:\"effectcontrol2coarse\",description:\"Effect Control 2 (Coarse)\",position:\"msb\"},{number:14,name:\"controller14\",description:\"Undefined\",position:\"msb\"},{number:15,name:\"controller15\",description:\"Undefined\",position:\"msb\"},{number:16,name:\"generalpurposecontroller1\",description:\"General Purpose Controller 1 (Coarse)\",position:\"msb\"},{number:17,name:\"generalpurposecontroller2\",description:\"General Purpose Controller 2 (Coarse)\",position:\"msb\"},{number:18,name:\"generalpurposecontroller3\",description:\"General Purpose Controller 3 (Coarse)\",position:\"msb\"},{number:19,name:\"generalpurposecontroller4\",description:\"General Purpose Controller 4 (Coarse)\",position:\"msb\"},{number:20,name:\"controller20\",description:\"Undefined\",position:\"msb\"},{number:21,name:\"controller21\",description:\"Undefined\",position:\"msb\"},{number:22,name:\"controller22\",description:\"Undefined\",position:\"msb\"},{number:23,name:\"controller23\",description:\"Undefined\",position:\"msb\"},{number:24,name:\"controller24\",description:\"Undefined\",position:\"msb\"},{number:25,name:\"controller25\",description:\"Undefined\",position:\"msb\"},{number:26,name:\"controller26\",description:\"Undefined\",position:\"msb\"},{number:27,name:\"controller27\",description:\"Undefined\",position:\"msb\"},{number:28,name:\"controller28\",description:\"Undefined\",position:\"msb\"},{number:29,name:\"controller29\",description:\"Undefined\",position:\"msb\"},{number:30,name:\"controller30\",description:\"Undefined\",position:\"msb\"},{number:31,name:\"controller31\",description:\"Undefined\",position:\"msb\"},{number:32,name:\"bankselectfine\",description:\"Bank Select (Fine)\",position:\"lsb\"},{number:33,name:\"modulationwheelfine\",description:\"Modulation Wheel (Fine)\",position:\"lsb\"},{number:34,name:\"breathcontrollerfine\",description:\"Breath Controller (Fine)\",position:\"lsb\"},{number:35,name:\"controller35\",description:\"Undefined\",position:\"lsb\"},{number:36,name:\"footcontrollerfine\",description:\"Foot Controller (Fine)\",position:\"lsb\"},{number:37,name:\"portamentotimefine\",description:\"Portamento Time (Fine)\",position:\"lsb\"},{number:38,name:\"dataentryfine\",description:\"Data Entry (Fine)\",position:\"lsb\"},{number:39,name:\"channelvolumefine\",description:\"Channel Volume (Fine)\",position:\"lsb\"},{number:40,name:\"balancefine\",description:\"Balance (Fine)\",position:\"lsb\"},{number:41,name:\"controller41\",description:\"Undefined\",position:\"lsb\"},{number:42,name:\"panfine\",description:\"Pan (Fine)\",position:\"lsb\"},{number:43,name:\"expressionfine\",description:\"Expression Controller (Fine)\",position:\"lsb\"},{number:44,name:\"effectcontrol1fine\",description:\"Effect control 1 (Fine)\",position:\"lsb\"},{number:45,name:\"effectcontrol2fine\",description:\"Effect control 2 (Fine)\",position:\"lsb\"},{number:46,name:\"controller46\",description:\"Undefined\",position:\"lsb\"},{number:47,name:\"controller47\",description:\"Undefined\",position:\"lsb\"},{number:48,name:\"controller48\",description:\"General Purpose Controller 1 (Fine)\",position:\"lsb\"},{number:49,name:\"controller49\",description:\"General Purpose Controller 2 (Fine)\",position:\"lsb\"},{number:50,name:\"controller50\",description:\"General Purpose Controller 3 (Fine)\",position:\"lsb\"},{number:51,name:\"controller51\",description:\"General Purpose Controller 4 (Fine)\",position:\"lsb\"},{number:52,name:\"controller52\",description:\"Undefined\",position:\"lsb\"},{number:53,name:\"controller53\",description:\"Undefined\",position:\"lsb\"},{number:54,name:\"controller54\",description:\"Undefined\",position:\"lsb\"},{number:55,name:\"controller55\",description:\"Undefined\",position:\"lsb\"},{number:56,name:\"controller56\",description:\"Undefined\",position:\"lsb\"},{number:57,name:\"controller57\",description:\"Undefined\",position:\"lsb\"},{number:58,name:\"controller58\",description:\"Undefined\",position:\"lsb\"},{number:59,name:\"controller59\",description:\"Undefined\",position:\"lsb\"},{number:60,name:\"controller60\",description:\"Undefined\",position:\"lsb\"},{number:61,name:\"controller61\",description:\"Undefined\",position:\"lsb\"},{number:62,name:\"controller62\",description:\"Undefined\",position:\"lsb\"},{number:63,name:\"controller63\",description:\"Undefined\",position:\"lsb\"},{number:64,name:\"damperpedal\",description:\"Damper Pedal On/Off\"},{number:65,name:\"portamento\",description:\"Portamento On/Off\"},{number:66,name:\"sostenuto\",description:\"Sostenuto On/Off\"},{number:67,name:\"softpedal\",description:\"Soft Pedal On/Off\"},{number:68,name:\"legatopedal\",description:\"Legato Pedal On/Off\"},{number:69,name:\"hold2\",description:\"Hold 2 On/Off\"},{number:70,name:\"soundvariation\",description:\"Sound Variation\",position:\"lsb\"},{number:71,name:\"resonance\",description:\"Resonance\",position:\"lsb\"},{number:72,name:\"releasetime\",description:\"Release Time\",position:\"lsb\"},{number:73,name:\"attacktime\",description:\"Attack Time\",position:\"lsb\"},{number:74,name:\"brightness\",description:\"Brightness\",position:\"lsb\"},{number:75,name:\"decaytime\",description:\"Decay Time\",position:\"lsb\"},{number:76,name:\"vibratorate\",description:\"Vibrato Rate\",position:\"lsb\"},{number:77,name:\"vibratodepth\",description:\"Vibrato Depth\",position:\"lsb\"},{number:78,name:\"vibratodelay\",description:\"Vibrato Delay\",position:\"lsb\"},{number:79,name:\"controller79\",description:\"Undefined\",position:\"lsb\"},{number:80,name:\"generalpurposecontroller5\",description:\"General Purpose Controller 5\",position:\"lsb\"},{number:81,name:\"generalpurposecontroller6\",description:\"General Purpose Controller 6\",position:\"lsb\"},{number:82,name:\"generalpurposecontroller7\",description:\"General Purpose Controller 7\",position:\"lsb\"},{number:83,name:\"generalpurposecontroller8\",description:\"General Purpose Controller 8\",position:\"lsb\"},{number:84,name:\"portamentocontrol\",description:\"Portamento Control\",position:\"lsb\"},{number:85,name:\"controller85\",description:\"Undefined\"},{number:86,name:\"controller86\",description:\"Undefined\"},{number:87,name:\"controller87\",description:\"Undefined\"},{number:88,name:\"highresolutionvelocityprefix\",description:\"High Resolution Velocity Prefix\",position:\"lsb\"},{number:89,name:\"controller89\",description:\"Undefined\"},{number:90,name:\"controller90\",description:\"Undefined\"},{number:91,name:\"effect1depth\",description:\"Effects 1 Depth (Reverb Send Level)\"},{number:92,name:\"effect2depth\",description:\"Effects 2 Depth\"},{number:93,name:\"effect3depth\",description:\"Effects 3 Depth (Chorus Send Level)\"},{number:94,name:\"effect4depth\",description:\"Effects 4 Depth\"},{number:95,name:\"effect5depth\",description:\"Effects 5 Depth\"},{number:96,name:\"dataincrement\",description:\"Data Increment\"},{number:97,name:\"datadecrement\",description:\"Data Decrement\"},{number:98,name:\"nonregisteredparameterfine\",description:\"Non-Registered Parameter Number (Fine)\",position:\"lsb\"},{number:99,name:\"nonregisteredparametercoarse\",description:\"Non-Registered Parameter Number (Coarse)\",position:\"msb\"},{number:100,name:\"registeredparameterfine\",description:\"Registered Parameter Number (Fine)\",position:\"lsb\"},{number:101,name:\"registeredparametercoarse\",description:\"Registered Parameter Number (Coarse)\",position:\"msb\"},{number:102,name:\"controller102\",description:\"Undefined\"},{number:103,name:\"controller103\",description:\"Undefined\"},{number:104,name:\"controller104\",description:\"Undefined\"},{number:105,name:\"controller105\",description:\"Undefined\"},{number:106,name:\"controller106\",description:\"Undefined\"},{number:107,name:\"controller107\",description:\"Undefined\"},{number:108,name:\"controller108\",description:\"Undefined\"},{number:109,name:\"controller109\",description:\"Undefined\"},{number:110,name:\"controller110\",description:\"Undefined\"},{number:111,name:\"controller111\",description:\"Undefined\"},{number:112,name:\"controller112\",description:\"Undefined\"},{number:113,name:\"controller113\",description:\"Undefined\"},{number:114,name:\"controller114\",description:\"Undefined\"},{number:115,name:\"controller115\",description:\"Undefined\"},{number:116,name:\"controller116\",description:\"Undefined\"},{number:117,name:\"controller117\",description:\"Undefined\"},{number:118,name:\"controller118\",description:\"Undefined\"},{number:119,name:\"controller119\",description:\"Undefined\"},{number:120,name:\"allsoundoff\",description:\"All Sound Off\"},{number:121,name:\"resetallcontrollers\",description:\"Reset All Controllers\"},{number:122,name:\"localcontrol\",description:\"Local Control On/Off\"},{number:123,name:\"allnotesoff\",description:\"All Notes Off\"},{number:124,name:\"omnimodeoff\",description:\"Omni Mode Off\"},{number:125,name:\"omnimodeon\",description:\"Omni Mode On\"},{number:126,name:\"monomodeon\",description:\"Mono Mode On\"},{number:127,name:\"polymodeon\",description:\"Poly Mode On\"}]}static get REGISTERED_PARAMETERS(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}static get MIDI_REGISTERED_PARAMETERS(){return this.validation&&console.warn(\"The MIDI_REGISTERED_PARAMETERS enum has been deprecated. Use the Enumerations.REGISTERED_PARAMETERS enum instead.\"),Enumerations.MIDI_REGISTERED_PARAMETERS}static get SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}static get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn(\"The MIDI_SYSTEM_MESSAGES enum has been deprecated. Use the Enumerations.SYSTEM_MESSAGES enum instead.\"),Enumerations.SYSTEM_MESSAGES}static get CHANNEL_EVENTS(){return[\"noteoff\",\"controlchange\",\"noteon\",\"keyaftertouch\",\"programchange\",\"channelaftertouch\",\"pitchbend\",\"allnotesoff\",\"allsoundoff\",\"localcontrol\",\"monomode\",\"omnimode\",\"resetallcontrollers\",\"nrpn\",\"nrpn-dataentrycoarse\",\"nrpn-dataentryfine\",\"nrpn-dataincrement\",\"nrpn-datadecrement\",\"rpn\",\"rpn-dataentrycoarse\",\"rpn-dataentryfine\",\"rpn-dataincrement\",\"rpn-datadecrement\",\"nrpn-databuttonincrement\",\"nrpn-databuttondecrement\",\"rpn-databuttonincrement\",\"rpn-databuttondecrement\"]}}\n/**\n * The `Note` class represents a single musical note such as `\"D3\"`, `\"G#4\"`, `\"F-1\"`, `\"Gb7\"`, etc.\n *\n * `Note` objects can be played back on a single channel by calling\n * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same\n * output, by calling [`Output.playNote()`]{@link Output#playNote}.\n *\n * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.\n * These can be changed by passing in the appropriate option. It is also possible to set a\n * system-wide default for attack and release velocities by using the\n * [`WebMidi.defaults`](WebMidi#defaults) property.\n *\n * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and\n * [`rawRelease`](#rawRelease) to both get and set the values.\n *\n * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped\n * when the duration has elapsed by sending a `\"noteoff\"` event. By default, the duration is set to\n * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a\n * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},\n * [`Output.stopNote()`]{@link Output#stopNote} or similar.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */class Note{constructor(e,t={}){this.duration=wm.defaults.note.duration,this.attack=wm.defaults.note.attack,this.release=wm.defaults.note.release,null!=t.duration&&(this.duration=t.duration),null!=t.attack&&(this.attack=t.attack),null!=t.rawAttack&&(this.attack=Utilities.from7bitToFloat(t.rawAttack)),null!=t.release&&(this.release=t.release),null!=t.rawRelease&&(this.release=Utilities.from7bitToFloat(t.rawRelease)),Number.isInteger(e)?this.identifier=Utilities.toNoteIdentifier(e):this.identifier=e}get identifier(){return this._name+(this._accidental||\"\")+this._octave}set identifier(e){const t=Utilities.getNoteDetails(e);if(wm.validation&&!e)throw new Error(\"Invalid note identifier\");this._name=t.name,this._accidental=t.accidental,this._octave=t.octave}get name(){return this._name}set name(e){if(wm.validation&&(e=e.toUpperCase(),![\"C\",\"D\",\"E\",\"F\",\"G\",\"A\",\"B\"].includes(e)))throw new Error(\"Invalid name value\");this._name=e}get accidental(){return this._accidental}set accidental(e){if(wm.validation&&(e=e.toLowerCase(),![\"#\",\"##\",\"b\",\"bb\"].includes(e)))throw new Error(\"Invalid accidental value\");this._accidental=e}get octave(){return this._octave}set octave(e){if(wm.validation&&(e=parseInt(e),isNaN(e)))throw new Error(\"Invalid octave value\");this._octave=e}get duration(){return this._duration}set duration(e){if(wm.validation&&(e=parseFloat(e),isNaN(e)||null===e||e<0))throw new RangeError(\"Invalid duration value.\");this._duration=e}get attack(){return this._attack}set attack(e){if(wm.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError(\"Invalid attack value.\");this._attack=e}get release(){return this._release}set release(e){if(wm.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError(\"Invalid release value.\");this._release=e}get rawAttack(){return Utilities.fromFloatTo7Bit(this._attack)}set rawAttack(e){this._attack=Utilities.from7bitToFloat(e)}get rawRelease(){return Utilities.fromFloatTo7Bit(this._release)}set rawRelease(e){this._release=Utilities.from7bitToFloat(e)}get number(){return Utilities.toNoteNumber(this.identifier)}getOffsetNumber(e=0,t=0){return wm.validation&&(e=parseInt(e)||0,t=parseInt(t)||0),Math.min(Math.max(this.number+12*e+t,0),127)}}\n/**\n * The `Utilities` class contains general-purpose utility methods. All methods are static and\n * should be called using the class name. For example: `Utilities.getNoteDetails(\"C4\")`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */class Utilities{\n/**\n   * Returns a MIDI note number matching the identifier passed in the form of a string. The\n   * identifier must include the octave number. The identifier also optionally include a sharp (#),\n   * a double sharp (##), a flat (b) or a double flat (bb) symbol. For example, these are all valid\n   * identifiers: C5, G4, D#-1, F0, Gb7, Eb-1, Abb4, B##6, etc.\n   *\n   * When converting note identifiers to numbers, C4 is considered to be middle C (MIDI note number\n   * 60) as per the scientific pitch notation standard.\n   *\n   * The resulting note number can be offset by using the `octaveOffset` parameter.\n   *\n   * @param identifier {string} The identifier in the form of a letter, followed by an optional \"#\",\n   * \"##\", \"b\" or \"bb\" followed by the octave number. For exemple: C5, G4, D#-1, F0, Gb7, Eb-1,\n   * Abb4, B##6, etc.\n   *\n   * @param {number} [octaveOffset=0] A integer to offset the octave by.\n   *\n   * @returns {number} The MIDI note number (an integer between 0 and 127).\n   *\n   * @throws RangeError Invalid 'octaveOffset' value\n   *\n   * @throws TypeError Invalid note identifier\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   * @static\n   */\nstatic toNoteNumber(e,t=0){if(t=null==t?0:parseInt(t),isNaN(t))throw new RangeError(\"Invalid 'octaveOffset' value\");\"string\"!=typeof e&&(e=\"\");const n=this.getNoteDetails(e);if(!n)throw new TypeError(\"Invalid note identifier\");let r=12*(n.octave+1+t);if(r+={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[n.name],n.accidental&&(n.accidental.startsWith(\"b\")?r-=n.accidental.length:r+=n.accidental.length),r<0||r>127)throw new RangeError(\"Invalid octaveOffset value\");return r}static getNoteDetails(e){Number.isInteger(e)&&(e=this.toNoteIdentifier(e));const t=e.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)$/i);if(!t)throw new TypeError(\"Invalid note identifier\");const n=t[1].toUpperCase(),r=parseInt(t[3]);let i=t[2].toLowerCase();i=\"\"===i?void 0:i;return{accidental:i,identifier:n+(i||\"\")+r,name:n,octave:r}}static sanitizeChannels(e){let t;if(wm.validation)if(\"all\"===e)t=[\"all\"];else if(\"none\"===e)return[];return t=Array.isArray(e)?e:[e],t.indexOf(\"all\")>-1&&(t=Enumerations.MIDI_CHANNEL_NUMBERS),t.map((function(e){return parseInt(e)})).filter((function(e){return e>=1&&e<=16}))}static toTimestamp(e){let t=!1;const n=parseFloat(e);return!isNaN(n)&&(\"string\"==typeof e&&\"+\"===e.substring(0,1)?n>=0&&(t=wm.time+n):n>=0&&(t=n),t)}static guessNoteNumber(e,t){t=parseInt(t)||0;let n=!1;if(Number.isInteger(e)&&e>=0&&e<=127)n=parseInt(e);else if(parseInt(e)>=0&&parseInt(e)<=127)n=parseInt(e);else if(\"string\"==typeof e||e instanceof String)try{n=this.toNoteNumber(e.trim(),t)}catch(e){return!1}return n}static toNoteIdentifier(e,t){if(e=parseInt(e),isNaN(e)||e<0||e>127)throw new RangeError(\"Invalid note number\");if(t=null==t?0:parseInt(t),isNaN(t))throw new RangeError(\"Invalid octaveOffset value\");const n=Math.floor(e/12-1)+t;return[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"][e%12]+n.toString()}static buildNote(e,t={}){if(t.octaveOffset=parseInt(t.octaveOffset)||0,e instanceof Note)return e;let n=this.guessNoteNumber(e,t.octaveOffset);if(!1===n)throw new TypeError(`The input could not be parsed as a note (${e})`);return t.octaveOffset=void 0,new Note(n,t)}static buildNoteArray(e,t={}){let n=[];return Array.isArray(e)||(e=[e]),e.forEach(e=>{n.push(this.buildNote(e,t))}),n}static from7bitToFloat(e){return e===1/0&&(e=127),e=parseInt(e)||0,Math.min(Math.max(e/127,0),1)}static fromFloatTo7Bit(e){return e===1/0&&(e=1),e=parseFloat(e)||0,Math.min(Math.max(Math.round(127*e),0),127)}static fromMsbLsbToFloat(e,t=0){wm.validation&&(e=Math.min(Math.max(parseInt(e)||0,0),127),t=Math.min(Math.max(parseInt(t)||0,0),127));const n=((e<<7)+t)/16383;return Math.min(Math.max(n,0),1)}static fromFloatToMsbLsb(e){wm.validation&&(e=Math.min(Math.max(parseFloat(e)||0,0),1));const t=Math.round(16383*e);return{msb:t>>7,lsb:127&t}}static offsetNumber(e,t=0,n=0){if(wm.validation){if(e=parseInt(e),isNaN(e))throw new Error(\"Invalid note number\");t=parseInt(t)||0,n=parseInt(n)||0}return Math.min(Math.max(e+12*t+n,0),127)}static getPropertyByValue(e,t){return Object.keys(e).find(n=>e[n]===t)}static getCcNameByNumber(e){if(!wm.validation||(e=parseInt(e))>=0&&e<=127)return Enumerations.CONTROL_CHANGE_MESSAGES[e].name}static getCcNumberByName(e){let t=Enumerations.CONTROL_CHANGE_MESSAGES.find(t=>t.name===e);return t?t.number:Enumerations.MIDI_CONTROL_CHANGE_MESSAGES[e]}static getChannelModeByNumber(e){if(!(e>=120&&e<=127))return!1;for(let t in Enumerations.CHANNEL_MODE_MESSAGES)if(Enumerations.CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===Enumerations.CHANNEL_MODE_MESSAGES[t])return t;return!1}static get isNode(){return\"undefined\"!=typeof process&&null!=process.versions&&null!=process.versions.node}static get isBrowser(){return\"undefined\"!=typeof window&&void 0!==window.document}}\n/**\n * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are\n * provided by an [`Output`](Output) port which, itself, is made available by a device. The\n * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `OutputChannel` objects can be found inside the parent output's\n * [`channels`]{@link Output#channels} property.\n *\n * @param {Output} output The [`Output`](Output) this channel belongs to.\n * @param {number} number The MIDI channel number (`1` - `16`).\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */class OutputChannel extends EventEmitter{constructor(e,t){super(),this._output=e,this._number=t,this._octaveOffset=0}destroy(){this._output=null,this._number=null,this._octaveOffset=0,this.removeListener()}send(e,t={time:0}){return this.output.send(e,t),this}sendKeyAftertouch(e,t,n={}){if(wm.validation){if(n.useRawValue&&(n.rawValue=n.useRawValue),isNaN(parseFloat(t)))throw new RangeError(\"Invalid key aftertouch value.\");if(n.rawValue){if(!(t>=0&&t<=127&&Number.isInteger(t)))throw new RangeError(\"Key aftertouch raw value must be an integer between 0 and 127.\")}else if(!(t>=0&&t<=1))throw new RangeError(\"Key aftertouch value must be a float between 0 and 1.\")}n.rawValue||(t=Utilities.fromFloatTo7Bit(t));const r=wm.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Array.isArray(e)||(e=[e]),Utilities.buildNoteArray(e).forEach(e=>{this.send([(Enumerations.CHANNEL_MESSAGES.keyaftertouch<<4)+(this.number-1),e.getOffsetNumber(r),t],{time:Utilities.toTimestamp(n.time)})}),this}\n/**\n   * Sends a MIDI **control change** message to the channel at the scheduled time. The control\n   * change message to send can be specified numerically (`0` to `127`) or by using one of the\n   * following common names:\n   *\n   * | Number | Name                          |\n   * |--------|-------------------------------|\n   * | 0      |`bankselectcoarse`             |\n   * | 1      |`modulationwheelcoarse`        |\n   * | 2      |`breathcontrollercoarse`       |\n   * | 4      |`footcontrollercoarse`         |\n   * | 5      |`portamentotimecoarse`         |\n   * | 6      |`dataentrycoarse`              |\n   * | 7      |`volumecoarse`                 |\n   * | 8      |`balancecoarse`                |\n   * | 10     |`pancoarse`                    |\n   * | 11     |`expressioncoarse`             |\n   * | 12     |`effectcontrol1coarse`         |\n   * | 13     |`effectcontrol2coarse`         |\n   * | 18     |`generalpurposeslider3`        |\n   * | 19     |`generalpurposeslider4`        |\n   * | 32     |`bankselectfine`               |\n   * | 33     |`modulationwheelfine`          |\n   * | 34     |`breathcontrollerfine`         |\n   * | 36     |`footcontrollerfine`           |\n   * | 37     |`portamentotimefine`           |\n   * | 38     |`dataentryfine`                |\n   * | 39     |`volumefine`                   |\n   * | 40     |`balancefine`                  |\n   * | 42     |`panfine`                      |\n   * | 43     |`expressionfine`               |\n   * | 44     |`effectcontrol1fine`           |\n   * | 45     |`effectcontrol2fine`           |\n   * | 64     |`holdpedal`                    |\n   * | 65     |`portamento`                   |\n   * | 66     |`sustenutopedal`               |\n   * | 67     |`softpedal`                    |\n   * | 68     |`legatopedal`                  |\n   * | 69     |`hold2pedal`                   |\n   * | 70     |`soundvariation`               |\n   * | 71     |`resonance`                    |\n   * | 72     |`soundreleasetime`             |\n   * | 73     |`soundattacktime`              |\n   * | 74     |`brightness`                   |\n   * | 75     |`soundcontrol6`                |\n   * | 76     |`soundcontrol7`                |\n   * | 77     |`soundcontrol8`                |\n   * | 78     |`soundcontrol9`                |\n   * | 79     |`soundcontrol10`               |\n   * | 80     |`generalpurposebutton1`        |\n   * | 81     |`generalpurposebutton2`        |\n   * | 82     |`generalpurposebutton3`        |\n   * | 83     |`generalpurposebutton4`        |\n   * | 91     |`reverblevel`                  |\n   * | 92     |`tremololevel`                 |\n   * | 93     |`choruslevel`                  |\n   * | 94     |`celestelevel`                 |\n   * | 95     |`phaserlevel`                  |\n   * | 96     |`dataincrement`                |\n   * | 97     |`datadecrement`                |\n   * | 98     |`nonregisteredparametercoarse` |\n   * | 99     |`nonregisteredparameterfine`   |\n   * | 100    |`registeredparametercoarse`    |\n   * | 101    |`registeredparameterfine`      |\n   * | 120    |`allsoundoff`                  |\n   * | 121    |`resetallcontrollers`          |\n   * | 122    |`localcontrol`                 |\n   * | 123    |`allnotesoff`                  |\n   * | 124    |`omnimodeoff`                  |\n   * | 125    |`omnimodeon`                   |\n   * | 126    |`monomodeon`                   |\n   * | 127    |`polymodeon`                   |\n   *\n   * As you can see above, not all control change message have a matching name. This does not mean\n   * you cannot use the others. It simply means you will need to use their number\n   * (`0` to `127`) instead of their name. While you can still use them, numbers `120` to `127` are\n   * usually reserved for *channel mode* messages. See\n   * [`sendChannelMode()`]{@link OutputChannel#sendChannelMode} method for more info.\n   *\n   * To view a detailed list of all available **control change** messages, please consult \"Table 3 -\n   * Control Change Messages\" from the [MIDI Messages](\n   * https://www.midi.org/specifications/item/table-3-control-change-messages-data-bytes-2)\n   * specification.\n   *\n   * **Note**: messages #0-31 (MSB) are paired with messages #32-63 (LSB). For example, message #1\n   * (`modulationwheelcoarse`) can be accompanied by a second control change message for\n   * `modulationwheelfine` to achieve a greater level of precision. if you want to specify both MSB\n   * and LSB for messages between `0` and `31`, you can do so by passing a 2-value array as the\n   * second parameter.\n   *\n   * @param {number|string} controller The MIDI controller name or number (`0` - `127`).\n   *\n   * @param {number|number[]} value The value to send (0-127). You can also use a two-position array\n   * for controllers 0 to 31. In this scenario, the first value will be sent as usual and the second\n   * value will be sent to the matching LSB controller (which is obtained by adding 32 to the first\n   * controller)\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 127.\n   * @throws {RangeError} Invalid controller name.\n   * @throws {TypeError} The value array must have a length of 2.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   */sendControlChange(e,t,n={}){if(\"string\"==typeof e&&(e=Utilities.getCcNumberByName(e)),Array.isArray(t)||(t=[t]),wm.validation){if(void 0===e)throw new TypeError(\"Control change must be identified with a valid name or an integer between 0 and 127.\");if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new TypeError(\"Control change number must be an integer between 0 and 127.\");if(2===(t=t.map(e=>{const t=Math.min(Math.max(parseInt(e),0),127);if(isNaN(t))throw new TypeError(\"Values must be integers between 0 and 127\");return t})).length&&e>=32)throw new TypeError(\"To use a value array, the controller must be between 0 and 31\")}return t.forEach((r,i)=>{this.send([(Enumerations.CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e+32*i,t[i]],{time:Utilities.toTimestamp(n.time)})}),this}_selectNonRegisteredParameter(e,t={}){return this.sendControlChange(99,e[0],t),this.sendControlChange(98,e[1],t),this}_deselectRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_deselectNonRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_selectRegisteredParameter(e,t={}){return this.sendControlChange(101,e[0],t),this.sendControlChange(100,e[1],t),this}_setCurrentParameter(e,t={}){return e=[].concat(e),this.sendControlChange(6,e[0],t),e.length<2||this.sendControlChange(38,e[1],t),this}sendRpnDecrement(e,t={}){if(Array.isArray(e)||(e=Enumerations.REGISTERED_PARAMETERS[e]),wm.validation){if(void 0===e)throw new TypeError(\"The specified registered parameter is invalid.\");let t=!1;if(Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach(n=>{Enumerations.REGISTERED_PARAMETERS[n][0]===e[0]&&Enumerations.REGISTERED_PARAMETERS[n][1]===e[1]&&(t=!0)}),!t)throw new TypeError(\"The specified registered parameter is invalid.\")}return this._selectRegisteredParameter(e,t),this.sendControlChange(97,0,t),this._deselectRegisteredParameter(t),this}sendRpnIncrement(e,t={}){if(Array.isArray(e)||(e=Enumerations.REGISTERED_PARAMETERS[e]),wm.validation){if(void 0===e)throw new TypeError(\"The specified registered parameter is invalid.\");let t=!1;if(Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach(n=>{Enumerations.REGISTERED_PARAMETERS[n][0]===e[0]&&Enumerations.REGISTERED_PARAMETERS[n][1]===e[1]&&(t=!0)}),!t)throw new TypeError(\"The specified registered parameter is invalid.\")}return this._selectRegisteredParameter(e,t),this.sendControlChange(96,0,t),this._deselectRegisteredParameter(t),this}playNote(e,t={}){this.sendNoteOn(e,t);const n=Array.isArray(e)?e:[e];for(let e of n)if(parseInt(e.duration)>0){const n={time:(Utilities.toTimestamp(t.time)||wm.time)+parseInt(e.duration),release:e.release,rawRelease:e.rawRelease};this.sendNoteOff(e,n)}else if(parseInt(t.duration)>0){const n={time:(Utilities.toTimestamp(t.time)||wm.time)+parseInt(t.duration),release:t.release,rawRelease:t.rawRelease};this.sendNoteOff(e,n)}return this}sendNoteOff(e,t={}){if(wm.validation){if(null!=t.rawRelease&&!(t.rawRelease>=0&&t.rawRelease<=127))throw new RangeError(\"The 'rawRelease' option must be an integer between 0 and 127\");if(null!=t.release&&!(t.release>=0&&t.release<=1))throw new RangeError(\"The 'release' option must be an number between 0 and 1\");t.rawVelocity&&(t.rawRelease=t.velocity,console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.\")),t.velocity&&(t.release=t.velocity,console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\"))}let n=64;null!=t.rawRelease?n=t.rawRelease:isNaN(t.release)||(n=Math.round(127*t.release));const r=wm.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Utilities.buildNoteArray(e,{rawRelease:parseInt(n)}).forEach(e=>{this.send([(Enumerations.CHANNEL_MESSAGES.noteoff<<4)+(this.number-1),e.getOffsetNumber(r),e.rawRelease],{time:Utilities.toTimestamp(t.time)})}),this}stopNote(e,t={}){return this.sendNoteOff(e,t)}sendNoteOn(e,t={}){if(wm.validation){if(null!=t.rawAttack&&!(t.rawAttack>=0&&t.rawAttack<=127))throw new RangeError(\"The 'rawAttack' option must be an integer between 0 and 127\");if(null!=t.attack&&!(t.attack>=0&&t.attack<=1))throw new RangeError(\"The 'attack' option must be an number between 0 and 1\");t.rawVelocity&&(t.rawAttack=t.velocity,t.rawRelease=t.release,console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.\")),t.velocity&&(t.attack=t.velocity,console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\"))}let n=64;null!=t.rawAttack?n=t.rawAttack:isNaN(t.attack)||(n=Math.round(127*t.attack));const r=wm.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Utilities.buildNoteArray(e,{rawAttack:n}).forEach(e=>{this.send([(Enumerations.CHANNEL_MESSAGES.noteon<<4)+(this.number-1),e.getOffsetNumber(r),e.rawAttack],{time:Utilities.toTimestamp(t.time)})}),this}sendChannelMode(e,t=0,n={}){if(\"string\"==typeof e&&(e=Enumerations.CHANNEL_MODE_MESSAGES[e]),wm.validation){if(void 0===e)throw new TypeError(\"Invalid channel mode message name or number.\");if(isNaN(e)||!(e>=120&&e<=127))throw new TypeError(\"Invalid channel mode message number.\");if(isNaN(parseInt(t))||t<0||t>127)throw new RangeError(\"Value must be an integer between 0 and 127.\")}return this.send([(Enumerations.CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e,t],{time:Utilities.toTimestamp(n.time)}),this}sendOmniMode(e,t={}){return void 0===e||e?this.sendChannelMode(\"omnimodeon\",0,t):this.sendChannelMode(\"omnimodeoff\",0,t),this}sendChannelAftertouch(e,t={}){if(wm.validation){if(isNaN(parseFloat(e)))throw new RangeError(\"Invalid channel aftertouch value.\");if(t.rawValue){if(!(e>=0&&e<=127&&Number.isInteger(e)))throw new RangeError(\"Channel aftertouch raw value must be an integer between 0 and 127.\")}else if(!(e>=0&&e<=1))throw new RangeError(\"Channel aftertouch value must be a float between 0 and 1.\")}return this.send([(Enumerations.CHANNEL_MESSAGES.channelaftertouch<<4)+(this.number-1),Math.round(127*e)],{time:Utilities.toTimestamp(t.time)}),this}sendMasterTuning(e,t={}){if(e=parseFloat(e)||0,wm.validation&&!(e>-65&&e<64))throw new RangeError(\"The value must be a decimal number larger than -65 and smaller than 64.\");let n=Math.floor(e)+64,r=e-Math.floor(e);r=Math.round((r+1)/2*16383);let i=r>>7&127,s=127&r;return this.sendRpnValue(\"channelcoarsetuning\",n,t),this.sendRpnValue(\"channelfinetuning\",[i,s],t),this}sendModulationRange(e,t,n={}){if(wm.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");if(!(null==t||Number.isInteger(t)&&t>=0&&t<=127))throw new RangeError(\"If specified, the cents value must be an integer between 0 and 127.\")}return t>=0&&t<=127||(t=0),this.sendRpnValue(\"modulationrange\",[e,t],n),this}sendNrpnValue(e,t,n={}){if(t=[].concat(t),wm.validation){if(!Array.isArray(e)||!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError(\"The specified NRPN is invalid.\");if(!(e[0]>=0&&e[0]<=127))throw new RangeError(\"The first byte of the NRPN must be between 0 and 127.\");if(!(e[1]>=0&&e[1]<=127))throw new RangeError(\"The second byte of the NRPN must be between 0 and 127.\");t.forEach(e=>{if(!(e>=0&&e<=127))throw new RangeError(\"The data bytes of the NRPN must be between 0 and 127.\")})}return this._selectNonRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectNonRegisteredParameter(n),this}sendPitchBend(e,t={}){if(wm.validation)if(t.rawValue&&Array.isArray(e)){if(!(e[0]>=0&&e[0]<=127))throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");if(!(e[1]>=0&&e[1]<=127))throw new RangeError(\"The pitch bend LSB must be an integer between 0 and 127.\")}else if(t.rawValue&&!Array.isArray(e)){if(!(e>=0&&e<=127))throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\")}else{if(isNaN(e)||null===e)throw new RangeError(\"Invalid pitch bend value.\");if(!(e>=-1&&e<=1))throw new RangeError(\"The pitch bend value must be a float between -1 and 1.\")}let n=0,r=0;if(t.rawValue&&Array.isArray(e))n=e[0],r=e[1];else if(t.rawValue&&!Array.isArray(e))n=e;else{const t=Utilities.fromFloatToMsbLsb((e+1)/2);n=t.msb,r=t.lsb}return this.send([(Enumerations.CHANNEL_MESSAGES.pitchbend<<4)+(this.number-1),r,n],{time:Utilities.toTimestamp(t.time)}),this}sendPitchBendRange(e,t,n={}){if(wm.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError(\"The cents value must be an integer between 0 and 127.\")}return this.sendRpnValue(\"pitchbendrange\",[e,t],n),this}sendProgramChange(e,t={}){if(e=parseInt(e)||0,wm.validation&&!(e>=0&&e<=127))throw new RangeError(\"The program number must be between 0 and 127.\");return this.send([(Enumerations.CHANNEL_MESSAGES.programchange<<4)+(this.number-1),e],{time:Utilities.toTimestamp(t.time)}),this}sendRpnValue(e,t,n={}){if(Array.isArray(e)||(e=Enumerations.REGISTERED_PARAMETERS[e]),wm.validation){if(!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError(\"The specified NRPN is invalid.\");if(!(e[0]>=0&&e[0]<=127))throw new RangeError(\"The first byte of the RPN must be between 0 and 127.\");if(!(e[1]>=0&&e[1]<=127))throw new RangeError(\"The second byte of the RPN must be between 0 and 127.\");[].concat(t).forEach(e=>{if(!(e>=0&&e<=127))throw new RangeError(\"The data bytes of the RPN must be between 0 and 127.\")})}return this._selectRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectRegisteredParameter(n),this}sendTuningBank(e,t={}){if(wm.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError(\"The tuning bank number must be between 0 and 127.\");return this.sendRpnValue(\"tuningbank\",e,t),this}sendTuningProgram(e,t={}){if(wm.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError(\"The tuning program number must be between 0 and 127.\");return this.sendRpnValue(\"tuningprogram\",e,t),this}sendLocalControl(e,t={}){return e?this.sendChannelMode(\"localcontrol\",127,t):this.sendChannelMode(\"localcontrol\",0,t)}sendAllNotesOff(e={}){return this.sendChannelMode(\"allnotesoff\",0,e)}sendAllSoundOff(e={}){return this.sendChannelMode(\"allsoundoff\",0,e)}sendResetAllControllers(e={}){return this.sendChannelMode(\"resetallcontrollers\",0,e)}sendPolyphonicMode(e,t={}){return\"mono\"===e?this.sendChannelMode(\"monomodeon\",0,t):this.sendChannelMode(\"polymodeon\",0,t)}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError(\"The 'octaveOffset' property must be an integer.\");this._octaveOffset=e}get output(){return this._output}get number(){return this._number}}\n/**\n * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).\n * A port is made available by a MIDI device. A MIDI device can advertise several input and output\n * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)\n * property.\n *\n * The `Output` object is automatically instantiated by the library according to the host's MIDI\n * subsystem and should not be directly instantiated.\n *\n * You can access all available `Output` objects by referring to the\n * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as\n * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or\n * [`WebMidi.getOutputById()`](WebMidi#getOutputById).\n *\n * @fires Output#opened\n * @fires Output#disconnected\n * @fires Output#closed\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */class Output extends EventEmitter{constructor(e){super(),this._midiOutput=e,this._octaveOffset=0,this.channels=[];for(let e=1;e<=16;e++)this.channels[e]=new OutputChannel(this,e);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiOutput&&(this._midiOutput.onstatechange=null),await this.close(),this._midiOutput=null}_onStateChange(e){let t={timestamp:wm.time};\"open\"===e.port.connection?(t.type=\"opened\",t.target=this,t.port=t.target,this.emit(\"opened\",t)):\"closed\"===e.port.connection&&\"connected\"===e.port.state?(t.type=\"closed\",t.target=this,t.port=t.target,this.emit(\"closed\",t)):\"closed\"===e.port.connection&&\"disconnected\"===e.port.state?(t.type=\"disconnected\",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit(\"disconnected\",t)):\"pending\"===e.port.connection&&\"disconnected\"===e.port.state||console.warn(\"This statechange event was not caught:\",e.port.connection,e.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}\n/**\n   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be\n   * sent immediately. The message should be an array of 8 bit unsigned integers (0-225), a\n   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}\n   * object or a [`Message`](Message) object.\n   *\n   * It is usually not necessary to use this method directly as you can use one of the simpler\n   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),\n   * [`sendControlChange()`](#sendControlChange), etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param message {number[]|Uint8Array|Message} An array of 8bit unsigned integers, a `Uint8Array`\n   * object (not available in Node.js) containing the message bytes or a `Message` object.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   */send(e,t={time:0},n=0){if(e instanceof Message&&(e=Utilities.isNode?e.data:e.rawData),e instanceof Uint8Array&&Utilities.isNode&&(e=Array.from(e)),wm.validation){if(Array.isArray(e)||e instanceof Uint8Array||(e=[e],Array.isArray(t)&&(e=e.concat(t)),t=isNaN(n)?{time:0}:{time:n}),!(parseInt(e[0])>=128&&parseInt(e[0])<=255))throw new RangeError(\"The first byte (status) must be an integer between 128 and 255.\");e.slice(1).forEach(e=>{if(!((e=parseInt(e))>=0&&e<=255))throw new RangeError(\"Data bytes must be integers between 0 and 255.\")}),t||(t={time:0})}return this._midiOutput.send(e,Utilities.toTimestamp(t.time)),this}sendSysex(e,t=[],n={}){if(e=[].concat(e),t instanceof Uint8Array){const r=new Uint8Array(1+e.length+t.length+1);r[0]=Enumerations.SYSTEM_MESSAGES.sysex,r.set(Uint8Array.from(e),1),r.set(t,1+e.length),r[r.length-1]=Enumerations.SYSTEM_MESSAGES.sysexend,this.send(r,{time:n.time})}else{const r=e.concat(t,Enumerations.SYSTEM_MESSAGES.sysexend);this.send([Enumerations.SYSTEM_MESSAGES.sysex].concat(r),{time:n.time})}return this}clear(){return this._midiOutput.clear?this._midiOutput.clear():wm.validation&&console.warn(\"The 'clear()' method has not yet been implemented in your environment.\"),this}sendTimecodeQuarterFrame(e,t={}){if(wm.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError(\"The value must be an integer between 0 and 127.\");return this.send([Enumerations.SYSTEM_MESSAGES.timecode,e],{time:t.time}),this}sendSongPosition(e=0,t={}){var n=(e=Math.floor(e)||0)>>7&127,r=127&e;return this.send([Enumerations.SYSTEM_MESSAGES.songposition,n,r],{time:t.time}),this}sendSongSelect(e=0,t={}){if(wm.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError(\"The program value must be between 0 and 127\");return this.send([Enumerations.SYSTEM_MESSAGES.songselect,e],{time:t.time}),this}sendTuneRequest(e={}){return this.send([Enumerations.SYSTEM_MESSAGES.tunerequest],{time:e.time}),this}sendClock(e={}){return this.send([Enumerations.SYSTEM_MESSAGES.clock],{time:e.time}),this}sendStart(e={}){return this.send([Enumerations.SYSTEM_MESSAGES.start],{time:e.time}),this}sendContinue(e={}){return this.send([Enumerations.SYSTEM_MESSAGES.continue],{time:e.time}),this}sendStop(e={}){return this.send([Enumerations.SYSTEM_MESSAGES.stop],{time:e.time}),this}sendActiveSensing(e={}){return this.send([Enumerations.SYSTEM_MESSAGES.activesensing],{time:e.time}),this}sendReset(e={}){return this.send([Enumerations.SYSTEM_MESSAGES.reset],{time:e.time}),this}sendTuningRequest(e={}){return wm.validation&&console.warn(\"The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead.\"),this.sendTuneRequest(e)}sendKeyAftertouch(e,t,n={}){return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendKeyAftertouch(e,t,n)}),this}sendControlChange(e,t,n={},r={}){if(wm.validation&&(Array.isArray(n)||Number.isInteger(n)||\"all\"===n)){const e=n;(n=r).channels=e,\"all\"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendControlChange(e,t,n)}),this}sendPitchBendRange(e=0,t=0,n={}){return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendPitchBendRange(e,t,n)}),this}setPitchBendRange(e=0,t=0,n=\"all\",r={}){return wm.validation&&(console.warn(\"The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead.\"),r.channels=n,\"all\"===r.channels&&(r.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendPitchBendRange(e,t,r)}sendRpnValue(e,t,n={}){return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendRpnValue(e,t,n)}),this}setRegisteredParameter(e,t=[],n=\"all\",r={}){return wm.validation&&(console.warn(\"The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead.\"),r.channels=n,\"all\"===r.channels&&(r.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendRpnValue(e,t,r)}sendChannelAftertouch(e,t={},n={}){if(wm.validation&&(Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendChannelAftertouch(e,t)}),this}sendPitchBend(e,t={},n={}){if(wm.validation&&(Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendPitchBend(e,t)}),this}sendProgramChange(e=0,t={},n={}){if(wm.validation&&(Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendProgramChange(e,t)}),this}sendModulationRange(e,t,n={}){return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendModulationRange(e,t,n)}),this}setModulationRange(e=0,t=0,n=\"all\",r={}){return wm.validation&&(console.warn(\"The setModulationRange() method is deprecated. Use sendModulationRange() instead.\"),r.channels=n,\"all\"===r.channels&&(r.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendModulationRange(e,t,r)}sendMasterTuning(e,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendMasterTuning(e,t)}),this}setMasterTuning(e,t={},n={}){return wm.validation&&(console.warn(\"The setMasterTuning() method is deprecated. Use sendMasterTuning() instead.\"),n.channels=t,\"all\"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendMasterTuning(e,n)}sendTuningProgram(e,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendTuningProgram(e,t)}),this}setTuningProgram(e,t=\"all\",n={}){return wm.validation&&(console.warn(\"The setTuningProgram() method is deprecated. Use sendTuningProgram() instead.\"),n.channels=t,\"all\"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendTuningProgram(e,n)}sendTuningBank(e=0,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendTuningBank(e,t)}),this}setTuningBank(e,t=\"all\",n={}){return wm.validation&&(console.warn(\"The setTuningBank() method is deprecated. Use sendTuningBank() instead.\"),n.channels=t,\"all\"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendTuningBank(e,n)}sendChannelMode(e,t=0,n={},r={}){if(wm.validation&&(Array.isArray(n)||Number.isInteger(n)||\"all\"===n)){const e=n;(n=r).channels=e,\"all\"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendChannelMode(e,t,n)}),this}sendAllSoundOff(e={}){return null==e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllSoundOff(e)}),this}sendAllNotesOff(e={}){return null==e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllNotesOff(e)}),this}sendResetAllControllers(e={},t={}){if(wm.validation&&(Array.isArray(e)||Number.isInteger(e)||\"all\"===e)){const n=e;(e=t).channels=n,\"all\"===e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendResetAllControllers(e)}),this}sendPolyphonicMode(e,t={},n={}){if(wm.validation&&(Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendPolyphonicMode(e,t)}),this}sendLocalControl(e,t={},n={}){if(wm.validation&&(Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendLocalControl(e,t)}),this}sendOmniMode(e,t={},n={}){if(wm.validation&&(Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendOmniMode(e,t)}),this}sendNrpnValue(e,t,n={}){return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendNrpnValue(e,t,n)}),this}setNonRegisteredParameter(e,t=[],n=\"all\",r={}){return wm.validation&&(console.warn(\"The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead.\"),r.channels=n,\"all\"===r.channels&&(r.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendNrpnValue(e,t,r)}sendRpnIncrement(e,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendRpnIncrement(e,t)}),this}incrementRegisteredParameter(e,t=\"all\",n={}){return wm.validation&&(console.warn(\"The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead.\"),n.channels=t,\"all\"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendRpnIncrement(e,n)}sendRpnDecrement(e,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendRpnDecrement(e,t)}),this}decrementRegisteredParameter(e,t=\"all\",n={}){return wm.validation&&(console.warn(\"The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead.\"),n.channels=t,\"all\"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendRpnDecrement(e,n)}sendNoteOff(e,t={},n={}){if(wm.validation&&(Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendNoteOff(e,t)}),this}stopNote(e,t){return this.sendNoteOff(e,t)}playNote(e,t={},n={}){if(wm.validation&&(t.rawVelocity&&console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' instead.\"),t.velocity&&console.warn(\"The 'velocity' option is deprecated. Use 'velocity' instead.\"),Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].playNote(e,t)}),this}sendNoteOn(e,t={},n={}){if(wm.validation&&(Array.isArray(t)||Number.isInteger(t)||\"all\"===t)){const e=t;(t=n).channels=e,\"all\"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendNoteOn(e,t)}),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError(\"The 'octaveOffset' property must be an integer.\");this._octaveOffset=e}}\n/**\n * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you\n * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object\n * to all the outputs listed in its [`destinations`](#destinations) property.\n *\n * If specific channels or message types have been defined in the [`channels`](#channels) or\n * [`types`](#types) properties, only messages matching the channels/types will be forwarded.\n *\n * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as\n * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */class Forwarder{constructor(e=[],t={}){this.destinations=[],this.types=[...Object.keys(Enumerations.SYSTEM_MESSAGES),...Object.keys(Enumerations.CHANNEL_MESSAGES)],this.channels=Enumerations.MIDI_CHANNEL_NUMBERS,this.suspended=!1,Array.isArray(e)||(e=[e]),t.types&&!Array.isArray(t.types)&&(t.types=[t.types]),t.channels&&!Array.isArray(t.channels)&&(t.channels=[t.channels]),wm.validation&&(e.forEach(e=>{if(!(e instanceof Output))throw new TypeError(\"Destinations must be of type 'Output'.\")}),void 0!==t.types&&t.types.forEach(e=>{if(!Enumerations.SYSTEM_MESSAGES.hasOwnProperty(e)&&!Enumerations.CHANNEL_MESSAGES.hasOwnProperty(e))throw new TypeError(\"Type must be a valid message type.\")}),void 0!==t.channels&&t.channels.forEach(e=>{if(!Enumerations.MIDI_CHANNEL_NUMBERS.includes(e))throw new TypeError(\"MIDI channel must be between 1 and 16.\")})),this.destinations=e,t.types&&(this.types=t.types),t.channels&&(this.channels=t.channels)}forward(e){this.suspended||this.types.includes(e.type)&&(e.channel&&!this.channels.includes(e.channel)||this.destinations.forEach(t=>{(!wm.validation||t instanceof Output)&&t.send(e)}))}}\n/**\n * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input\n * device. This object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)\n * property.\n *\n * @fires InputChannel#midimessage\n * @fires InputChannel#unknownmessage\n *\n * @fires InputChannel#noteoff\n * @fires InputChannel#noteon\n * @fires InputChannel#keyaftertouch\n * @fires InputChannel#programchange\n * @fires InputChannel#channelaftertouch\n * @fires InputChannel#pitchbend\n *\n * @fires InputChannel#allnotesoff\n * @fires InputChannel#allsoundoff\n * @fires InputChannel#localcontrol\n * @fires InputChannel#monomode\n * @fires InputChannel#omnimode\n * @fires InputChannel#resetallcontrollers\n *\n * @fires InputChannel#event:nrpn\n * @fires InputChannel#event:nrpn-dataentrycoarse\n * @fires InputChannel#event:nrpn-dataentryfine\n * @fires InputChannel#event:nrpn-dataincrement\n * @fires InputChannel#event:nrpn-datadecrement\n * @fires InputChannel#event:rpn\n * @fires InputChannel#event:rpn-dataentrycoarse\n * @fires InputChannel#event:rpn-dataentryfine\n * @fires InputChannel#event:rpn-dataincrement\n * @fires InputChannel#event:rpn-datadecrement\n *\n * @fires InputChannel#controlchange\n * @fires InputChannel#event:controlchange-controllerxxx\n * @fires InputChannel#event:controlchange-bankselectcoarse\n * @fires InputChannel#event:controlchange-modulationwheelcoarse\n * @fires InputChannel#event:controlchange-breathcontrollercoarse\n * @fires InputChannel#event:controlchange-footcontrollercoarse\n * @fires InputChannel#event:controlchange-portamentotimecoarse\n * @fires InputChannel#event:controlchange-dataentrycoarse\n * @fires InputChannel#event:controlchange-volumecoarse\n * @fires InputChannel#event:controlchange-balancecoarse\n * @fires InputChannel#event:controlchange-pancoarse\n * @fires InputChannel#event:controlchange-expressioncoarse\n * @fires InputChannel#event:controlchange-effectcontrol1coarse\n * @fires InputChannel#event:controlchange-effectcontrol2coarse\n * @fires InputChannel#event:controlchange-generalpurposecontroller1\n * @fires InputChannel#event:controlchange-generalpurposecontroller2\n * @fires InputChannel#event:controlchange-generalpurposecontroller3\n * @fires InputChannel#event:controlchange-generalpurposecontroller4\n * @fires InputChannel#event:controlchange-bankselectfine\n * @fires InputChannel#event:controlchange-modulationwheelfine\n * @fires InputChannel#event:controlchange-breathcontrollerfine\n * @fires InputChannel#event:controlchange-footcontrollerfine\n * @fires InputChannel#event:controlchange-portamentotimefine\n * @fires InputChannel#event:controlchange-dataentryfine\n * @fires InputChannel#event:controlchange-channelvolumefine\n * @fires InputChannel#event:controlchange-balancefine\n * @fires InputChannel#event:controlchange-panfine\n * @fires InputChannel#event:controlchange-expressionfine\n * @fires InputChannel#event:controlchange-effectcontrol1fine\n * @fires InputChannel#event:controlchange-effectcontrol2fine\n * @fires InputChannel#event:controlchange-damperpedal\n * @fires InputChannel#event:controlchange-portamento\n * @fires InputChannel#event:controlchange-sostenuto\n * @fires InputChannel#event:controlchange-softpedal\n * @fires InputChannel#event:controlchange-legatopedal\n * @fires InputChannel#event:controlchange-hold2\n * @fires InputChannel#event:controlchange-soundvariation\n * @fires InputChannel#event:controlchange-resonance\n * @fires InputChannel#event:controlchange-releasetime\n * @fires InputChannel#event:controlchange-attacktime\n * @fires InputChannel#event:controlchange-brightness\n * @fires InputChannel#event:controlchange-decaytime\n * @fires InputChannel#event:controlchange-vibratorate\n * @fires InputChannel#event:controlchange-vibratodepth\n * @fires InputChannel#event:controlchange-vibratodelay\n * @fires InputChannel#event:controlchange-generalpurposecontroller5\n * @fires InputChannel#event:controlchange-generalpurposecontroller6\n * @fires InputChannel#event:controlchange-generalpurposecontroller7\n * @fires InputChannel#event:controlchange-generalpurposecontroller8\n * @fires InputChannel#event:controlchange-portamentocontrol\n * @fires InputChannel#event:controlchange-highresolutionvelocityprefix\n * @fires InputChannel#event:controlchange-effect1depth\n * @fires InputChannel#event:controlchange-effect2depth\n * @fires InputChannel#event:controlchange-effect3depth\n * @fires InputChannel#event:controlchange-effect4depth\n * @fires InputChannel#event:controlchange-effect5depth\n * @fires InputChannel#event:controlchange-dataincrement\n * @fires InputChannel#event:controlchange-datadecrement\n * @fires InputChannel#event:controlchange-nonregisteredparameterfine\n * @fires InputChannel#event:controlchange-nonregisteredparametercoarse\n * @fires InputChannel#event:controlchange-registeredparameterfine\n * @fires InputChannel#event:controlchange-registeredparametercoarse\n * @fires InputChannel#event:controlchange-allsoundoff\n * @fires InputChannel#event:controlchange-resetallcontrollers\n * @fires InputChannel#event:controlchange-localcontrol\n * @fires InputChannel#event:controlchange-allnotesoff\n * @fires InputChannel#event:controlchange-omnimodeoff\n * @fires InputChannel#event:controlchange-omnimodeon\n * @fires InputChannel#event:controlchange-monomodeon\n * @fires InputChannel#event:controlchange-polymodeon\n * @fires InputChannel#event:\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */class InputChannel extends EventEmitter{constructor(e,t){super(),this._input=e,this._number=t,this._octaveOffset=0,this._nrpnBuffer=[],this._rpnBuffer=[],this.parameterNumberEventsEnabled=!0,this.notesState=new Array(128).fill(!1)}destroy(){this._input=null,this._number=null,this._octaveOffset=0,this._nrpnBuffer=[],this.notesState=new Array(128).fill(!1),this.parameterNumberEventsEnabled=!1,this.removeListener()}_processMidiMessageEvent(e){const t=Object.assign({},e);t.port=this.input,t.target=this,t.type=\"midimessage\",this.emit(t.type,t),this._parseEventForStandardMessages(t)}_parseEventForStandardMessages(e){const t=Object.assign({},e);t.type=t.message.type||\"unknownmessage\";const n=e.message.dataBytes[0],r=e.message.dataBytes[1];if(\"noteoff\"===t.type||\"noteon\"===t.type&&0===r)this.notesState[n]=!1,t.type=\"noteoff\",t.note=new Note(Utilities.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+wm.octaveOffset),{rawAttack:0,rawRelease:r}),t.value=Utilities.from7bitToFloat(r),t.rawValue=r,t.velocity=t.note.release,t.rawVelocity=t.note.rawRelease;else if(\"noteon\"===t.type)this.notesState[n]=!0,t.note=new Note(Utilities.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+wm.octaveOffset),{rawAttack:r}),t.value=Utilities.from7bitToFloat(r),t.rawValue=r,t.velocity=t.note.attack,t.rawVelocity=t.note.rawAttack;else if(\"keyaftertouch\"===t.type)t.note=new Note(Utilities.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+wm.octaveOffset)),t.value=Utilities.from7bitToFloat(r),t.rawValue=r,t.identifier=t.note.identifier,t.key=t.note.number,t.rawKey=n;else if(\"controlchange\"===t.type){t.controller={number:n,name:Enumerations.CONTROL_CHANGE_MESSAGES[n].name,description:Enumerations.CONTROL_CHANGE_MESSAGES[n].description,position:Enumerations.CONTROL_CHANGE_MESSAGES[n].position},t.subtype=t.controller.name||\"controller\"+n,t.value=Utilities.from7bitToFloat(r),t.rawValue=r;const e=Object.assign({},t);e.type=`${t.type}-controller${n}`,delete e.subtype,this.emit(e.type,e);const i=Object.assign({},t);i.type=t.type+\"-\"+Enumerations.CONTROL_CHANGE_MESSAGES[n].name,delete i.subtype,0!==i.type.indexOf(\"controller\")&&this.emit(i.type,i),t.message.dataBytes[0]>=120&&this._parseChannelModeMessage(t),this.parameterNumberEventsEnabled&&this._isRpnOrNrpnController(t.message.dataBytes[0])&&this._parseEventForParameterNumber(t)}else\"programchange\"===t.type?(t.value=n,t.rawValue=t.value):\"channelaftertouch\"===t.type?(t.value=Utilities.from7bitToFloat(n),t.rawValue=n):\"pitchbend\"===t.type?(t.value=((r<<7)+n-8192)/8192,t.rawValue=(r<<7)+n):t.type=\"unknownmessage\";this.emit(t.type,t)}_parseChannelModeMessage(e){const t=Object.assign({},e);t.type=t.controller.name,\"localcontrol\"===t.type&&(t.value=127===t.message.data[2],t.rawValue=t.message.data[2]),\"omnimodeon\"===t.type?(t.type=\"omnimode\",t.value=!0,t.rawValue=t.message.data[2]):\"omnimodeoff\"===t.type&&(t.type=\"omnimode\",t.value=!1,t.rawValue=t.message.data[2]),\"monomodeon\"===t.type?(t.type=\"monomode\",t.value=!0,t.rawValue=t.message.data[2]):\"polymodeon\"===t.type&&(t.type=\"monomode\",t.value=!1,t.rawValue=t.message.data[2]),this.emit(t.type,t)}_parseEventForParameterNumber(e){const t=e.message.dataBytes[0],n=e.message.dataBytes[1];99===t||101===t?(this._nrpnBuffer=[],this._rpnBuffer=[],99===t?this._nrpnBuffer=[e.message]:127!==n&&(this._rpnBuffer=[e.message])):98===t||100===t?98===t?(this._rpnBuffer=[],1===this._nrpnBuffer.length?this._nrpnBuffer.push(e.message):this._nrpnBuffer=[]):(this._nrpnBuffer=[],1===this._rpnBuffer.length&&127!==n?this._rpnBuffer.push(e.message):this._rpnBuffer=[]):6!==t&&38!==t&&96!==t&&97!==t||(2===this._rpnBuffer.length?this._dispatchParameterNumberEvent(\"rpn\",this._rpnBuffer[0].dataBytes[1],this._rpnBuffer[1].dataBytes[1],e):2===this._nrpnBuffer.length?this._dispatchParameterNumberEvent(\"nrpn\",this._nrpnBuffer[0].dataBytes[1],this._nrpnBuffer[1].dataBytes[1],e):(this._nrpnBuffer=[],this._rpnBuffer=[]))}_isRpnOrNrpnController(e){return 6===e||38===e||96===e||97===e||98===e||99===e||100===e||101===e}_dispatchParameterNumberEvent(e,t,n,r){e=\"nrpn\"===e?\"nrpn\":\"rpn\";const i={target:r.target,timestamp:r.timestamp,message:r.message,parameterMsb:t,parameterLsb:n,value:Utilities.from7bitToFloat(r.message.dataBytes[1]),rawValue:r.message.dataBytes[1]};i.parameter=\"rpn\"===e?Object.keys(Enumerations.REGISTERED_PARAMETERS).find(e=>Enumerations.REGISTERED_PARAMETERS[e][0]===t&&Enumerations.REGISTERED_PARAMETERS[e][1]===n):(t<<7)+n;const s=Enumerations.CONTROL_CHANGE_MESSAGES[r.message.dataBytes[0]].name;i.type=`${e}-${s}`,this.emit(i.type,i);const a=Object.assign({},i);\"nrpn-dataincrement\"===a.type?a.type=\"nrpn-databuttonincrement\":\"nrpn-datadecrement\"===a.type?a.type=\"nrpn-databuttondecrement\":\"rpn-dataincrement\"===a.type?a.type=\"rpn-databuttonincrement\":\"rpn-datadecrement\"===a.type&&(a.type=\"rpn-databuttondecrement\"),this.emit(a.type,a),i.type=e,i.subtype=s,this.emit(i.type,i)}getChannelModeByNumber(e){return wm.validation&&(console.warn(\"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"),e=Math.floor(e)),Utilities.getChannelModeByNumber(e)}getCcNameByNumber(e){if(wm.validation&&(console.warn(\"The 'getCcNameByNumber()' method has been moved to the 'Utilities' class.\"),!((e=parseInt(e))>=0&&e<=127)))throw new RangeError(\"Invalid control change number.\");return Utilities.getCcNameByNumber(e)}getNoteState(e){e instanceof Note&&(e=e.identifier);const t=Utilities.guessNoteNumber(e,wm.octaveOffset+this.input.octaveOffset+this.octaveOffset);return this.notesState[t]}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError(\"The 'octaveOffset' property must be an integer.\");this._octaveOffset=e}get input(){return this._input}get number(){return this._number}get nrpnEventsEnabled(){return this.parameterNumberEventsEnabled}set nrpnEventsEnabled(e){this.validation&&(e=!!e),this.parameterNumberEventsEnabled=e}}\n/**\n * The `Message` class represents a single MIDI message. It has several properties that make it\n * easy to make sense of the binary data it contains.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */class Message{constructor(e){this.rawData=e,this.data=Array.from(this.rawData),this.statusByte=this.rawData[0],this.rawDataBytes=this.rawData.slice(1),this.dataBytes=this.data.slice(1),this.isChannelMessage=!1,this.isSystemMessage=!1,this.command=void 0,this.channel=void 0,this.manufacturerId=void 0,this.type=void 0,this.statusByte<240?(this.isChannelMessage=!0,this.command=this.statusByte>>4,this.channel=1+(15&this.statusByte)):(this.isSystemMessage=!0,this.command=this.statusByte),this.isChannelMessage?this.type=Utilities.getPropertyByValue(Enumerations.CHANNEL_MESSAGES,this.command):this.isSystemMessage&&(this.type=Utilities.getPropertyByValue(Enumerations.SYSTEM_MESSAGES,this.command)),this.statusByte===Enumerations.SYSTEM_MESSAGES.sysex&&(0===this.dataBytes[0]?(this.manufacturerId=this.dataBytes.slice(0,3),this.dataBytes=this.dataBytes.slice(3,this.rawDataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(3,this.rawDataBytes.length-1)):(this.manufacturerId=[this.dataBytes[0]],this.dataBytes=this.dataBytes.slice(1,this.dataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(1,this.rawDataBytes.length-1)))}}\n/**\n * The `Input` class represents a single MIDI input port. This object is automatically instantiated\n * by the library according to the host's MIDI subsystem and does not need to be directly\n * instantiated. Instead, you can access all `Input` objects by referring to the\n * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as\n * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and\n * [`WebMidi.getInputById()`](WebMidi#getInputById).\n *\n * Note that a single MIDI device may expose several inputs and/or outputs.\n *\n * **Important**: the `Input` class does not directly fire channel-specific MIDI messages\n * (such as [`noteon`](InputChannel#event:noteon) or\n * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)\n * object does that. However, you can still use the\n * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple\n * [`InputChannel`](InputChannel) objects at once.\n *\n * @fires Input#opened\n * @fires Input#disconnected\n * @fires Input#closed\n * @fires Input#midimessage\n *\n * @fires Input#sysex\n * @fires Input#timecode\n * @fires Input#songposition\n * @fires Input#songselect\n * @fires Input#tunerequest\n * @fires Input#clock\n * @fires Input#start\n * @fires Input#continue\n * @fires Input#stop\n * @fires Input#activesensing\n * @fires Input#reset\n *\n * @fires Input#unknownmidimessage\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */class Input extends EventEmitter{constructor(e){super(),this._midiInput=e,this._octaveOffset=0,this.channels=[];for(let e=1;e<=16;e++)this.channels[e]=new InputChannel(this,e);this._forwarders=[],this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._forwarders=[],this._midiInput&&(this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null),await this.close(),this._midiInput=null}_onStateChange(e){let t={timestamp:wm.time,target:this,port:this};\"open\"===e.port.connection?(t.type=\"opened\",this.emit(\"opened\",t)):\"closed\"===e.port.connection&&\"connected\"===e.port.state?(t.type=\"closed\",this.emit(\"closed\",t)):\"closed\"===e.port.connection&&\"disconnected\"===e.port.state?(t.type=\"disconnected\",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit(\"disconnected\",t)):\"pending\"===e.port.connection&&\"disconnected\"===e.port.state||console.warn(\"This statechange event was not caught: \",e.port.connection,e.port.state)}_onMidiMessage(e){const t=new Message(e.data),n={port:this,target:this,message:t,timestamp:e.timeStamp,type:\"midimessage\",data:t.data,rawData:t.data,statusByte:t.data[0],dataBytes:t.dataBytes};this.emit(\"midimessage\",n),t.isSystemMessage?this._parseEvent(n):t.isChannelMessage&&this.channels[t.channel]._processMidiMessageEvent(n),this._forwarders.forEach(e=>e.forward(t))}_parseEvent(e){const t=Object.assign({},e);t.type=t.message.type||\"unknownmidimessage\",\"songselect\"===t.type&&(t.song=e.data[1]+1,t.value=e.data[1],t.rawValue=t.value),this.emit(t.type,t)}async open(){try{await this._midiInput.open()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}async close(){if(!this._midiInput)return Promise.resolve(this);try{await this._midiInput.close()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}getChannelModeByNumber(){wm.validation&&console.warn(\"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\")}addListener(e,t,n={}){if(wm.validation&&\"function\"==typeof n){let e=null!=t?[].concat(t):void 0;t=n,n={channels:e}}if(Enumerations.CHANNEL_EVENTS.includes(e)){void 0===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS);let r=[];return Utilities.sanitizeChannels(n.channels).forEach(i=>{r.push(this.channels[i].addListener(e,t,n))}),r}return super.addListener(e,t,n)}addOneTimeListener(e,t,n={}){return n.remaining=1,this.addListener(e,t,n)}on(e,t,n,r){return this.addListener(e,t,n,r)}hasListener(e,t,n={}){if(wm.validation&&\"function\"==typeof n){let e=[].concat(t);t=n,n={channels:e}}return Enumerations.CHANNEL_EVENTS.includes(e)?(void 0===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).every(n=>this.channels[n].hasListener(e,t))):super.hasListener(e,t)}removeListener(e,t,n={}){if(wm.validation&&\"function\"==typeof n){let e=[].concat(t);t=n,n={channels:e}}if(void 0===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),null==e)return Utilities.sanitizeChannels(n.channels).forEach(e=>{this.channels[e]&&this.channels[e].removeListener()}),super.removeListener();Enumerations.CHANNEL_EVENTS.includes(e)?Utilities.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].removeListener(e,t,n)}):super.removeListener(e,t,n)}addForwarder(e,t={}){let n;return n=e instanceof Forwarder?e:new Forwarder(e,t),this._forwarders.push(n),n}removeForwarder(e){this._forwarders=this._forwarders.filter(t=>t!==e)}hasForwarder(e){return this._forwarders.includes(e)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError(\"The 'octaveOffset' property must be an integer.\");this._octaveOffset=e}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return wm.validation&&console.warn(\"The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class.\"),!1}}if(Utilities.isNode){try{window.navigator}catch(err){let jzz;eval('jzz = require(\"jzz\")'),global.navigator=jzz}try{performance}catch(err){let performance;eval('performance = require(\"perf_hooks\").performance'),global.performance=performance}}\n/**\n * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it\n * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.\n *\n * When using the WebMidi.js library, you should know that the `WebMidi` class has already been\n * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should\n * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6\n * module) version, you get an already-instantiated object when you import the module.\n *\n * @fires WebMidi#connected\n * @fires WebMidi#disabled\n * @fires WebMidi#disconnected\n * @fires WebMidi#enabled\n * @fires WebMidi#error\n * @fires WebMidi#midiaccessgranted\n * @fires WebMidi#portschanged\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */class WebMidi extends EventEmitter{constructor(){super(),this.defaults={note:{attack:Utilities.from7bitToFloat(64),release:Utilities.from7bitToFloat(64),duration:1/0}},this.interface=null,this.validation=!0,this._inputs=[],this._disconnectedInputs=[],this._outputs=[],this._disconnectedOutputs=[],this._stateChangeQueue=[],this._octaveOffset=0}async enable(e={},t=!1){if(this.validation=!1!==e.validation,this.validation&&(\"function\"==typeof e&&(e={callback:e,sysex:t}),t&&(e.sysex=!0)),this.enabled)return\"function\"==typeof e.callback&&e.callback(),Promise.resolve();const n={timestamp:this.time,target:this,type:\"error\",error:void 0},r={timestamp:this.time,target:this,type:\"midiaccessgranted\"},i={timestamp:this.time,target:this,type:\"enabled\"};try{\"function\"==typeof e.requestMIDIAccessFunction?this.interface=await e.requestMIDIAccessFunction({sysex:e.sysex,software:e.software}):this.interface=await navigator.requestMIDIAccess({sysex:e.sysex,software:e.software})}catch(t){return n.error=t,this.emit(\"error\",n),\"function\"==typeof e.callback&&e.callback(t),Promise.reject(t)}this.emit(\"midiaccessgranted\",r),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{await this._updateInputsAndOutputs()}catch(t){return n.error=t,this.emit(\"error\",n),\"function\"==typeof e.callback&&e.callback(t),Promise.reject(t)}return this.emit(\"enabled\",i),\"function\"==typeof e.callback&&e.callback(),Promise.resolve(this)}async disable(){return this.interface&&(this.interface.onstatechange=void 0),this._destroyInputsAndOutputs().then(()=>{navigator&&\"function\"==typeof navigator.close&&navigator.close(),this.interface=null;let e={timestamp:this.time,target:this,type:\"disabled\"};this.emit(\"disabled\",e),this.removeListener()})}getInputById(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");if(!e)return}if(t.disconnected){for(let t=0;t<this._disconnectedInputs.length;t++)if(this._disconnectedInputs[t].id===e.toString())return this._disconnectedInputs[t]}else for(let t=0;t<this.inputs.length;t++)if(this.inputs[t].id===e.toString())return this.inputs[t]}getInputByName(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");if(!e)return;e=e.toString()}if(t.disconnected){for(let t=0;t<this._disconnectedInputs.length;t++)if(~this._disconnectedInputs[t].name.indexOf(e))return this._disconnectedInputs[t]}else for(let t=0;t<this.inputs.length;t++)if(~this.inputs[t].name.indexOf(e))return this.inputs[t]}getOutputByName(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");if(!e)return;e=e.toString()}if(t.disconnected){for(let t=0;t<this._disconnectedOutputs.length;t++)if(~this._disconnectedOutputs[t].name.indexOf(e))return this._disconnectedOutputs[t]}else for(let t=0;t<this.outputs.length;t++)if(~this.outputs[t].name.indexOf(e))return this.outputs[t]}getOutputById(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");if(!e)return}if(t.disconnected){for(let t=0;t<this._disconnectedOutputs.length;t++)if(this._disconnectedOutputs[t].id===e.toString())return this._disconnectedOutputs[t]}else for(let t=0;t<this.outputs.length;t++)if(this.outputs[t].id===e.toString())return this.outputs[t]}noteNameToNumber(e){return this.validation&&console.warn(\"The noteNameToNumber() method is deprecated. Use Utilities.toNoteNumber() instead.\"),Utilities.toNoteNumber(e,this.octaveOffset)}getOctave(e){return this.validation&&(console.warn(\"The getOctave()is deprecated. Use Utilities.getNoteDetails() instead\"),e=parseInt(e)),!isNaN(e)&&e>=0&&e<=127&&Utilities.getNoteDetails(Utilities.offsetNumber(e,this.octaveOffset)).octave}sanitizeChannels(e){return this.validation&&console.warn(\"The sanitizeChannels() method has been moved to the utilities class.\"),Utilities.sanitizeChannels(e)}toMIDIChannels(e){return this.validation&&console.warn(\"The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead.\"),Utilities.sanitizeChannels(e)}guessNoteNumber(e){return this.validation&&console.warn(\"The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead.\"),Utilities.guessNoteNumber(e,this.octaveOffset)}getValidNoteArray(e,t={}){return this.validation&&console.warn(\"The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()\"),Utilities.buildNoteArray(e,t)}convertToTimestamp(e){return this.validation&&console.warn(\"The convertToTimestamp() method has been moved to Utilities.toTimestamp().\"),Utilities.toTimestamp(e)}async _destroyInputsAndOutputs(){let e=[];return this.inputs.forEach(t=>e.push(t.destroy())),this.outputs.forEach(t=>e.push(t.destroy())),Promise.all(e).then(()=>{this._inputs=[],this._outputs=[]})}_onInterfaceStateChange(e){this._updateInputsAndOutputs();let t={timestamp:e.timeStamp,type:e.port.state,target:this};if(\"connected\"===e.port.state&&\"open\"===e.port.connection){\"output\"===e.port.type?t.port=this.getOutputById(e.port.id):\"input\"===e.port.type&&(t.port=this.getInputById(e.port.id)),this.emit(e.port.state,t);const n=Object.assign({},t);n.type=\"portschanged\",this.emit(n.type,n)}else if(\"disconnected\"===e.port.state&&\"pending\"===e.port.connection){\"input\"===e.port.type?t.port=this.getInputById(e.port.id,{disconnected:!0}):\"output\"===e.port.type&&(t.port=this.getOutputById(e.port.id,{disconnected:!0})),this.emit(e.port.state,t);const n=Object.assign({},t);n.type=\"portschanged\",this.emit(n.type,n)}}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){if(!this.interface)return;for(let e=this._inputs.length-1;e>=0;e--){const t=this._inputs[e];Array.from(this.interface.inputs.values()).find(e=>e===t._midiInput)||(this._disconnectedInputs.push(t),this._inputs.splice(e,1))}let e=[];return this.interface.inputs.forEach(t=>{if(!this._inputs.find(e=>e._midiInput===t)){let n=this._disconnectedInputs.find(e=>e._midiInput===t);n||(n=new Input(t)),this._inputs.push(n),e.push(n.open())}}),Promise.all(e)}async _updateOutputs(){if(!this.interface)return;for(let e=this._outputs.length-1;e>=0;e--){const t=this._outputs[e];Array.from(this.interface.outputs.values()).find(e=>e===t._midiOutput)||(this._disconnectedOutputs.push(t),this._outputs.splice(e,1))}let e=[];return this.interface.outputs.forEach(t=>{if(!this._outputs.find(e=>e._midiOutput===t)){let n=this._disconnectedOutputs.find(e=>e._midiOutput===t);n||(n=new Output(t)),this._outputs.push(n),e.push(n.open())}}),Promise.all(e)}get enabled(){return null!==this.interface}get inputs(){return this._inputs}get isNode(){return this.validation&&console.warn(\"WebMidi.isNode has been deprecated. Use Utilities.isNode instead.\"),Utilities.isNode}get isBrowser(){return this.validation&&console.warn(\"WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead.\"),Utilities.isBrowser}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError(\"The 'octaveOffset' property must be an integer.\");this._octaveOffset=e}get outputs(){return this._outputs}get supported(){return\"undefined\"!=typeof navigator&&navigator.requestMIDIAccess}get sysexEnabled(){return!(!this.interface||!this.interface.sysexEnabled)}get time(){return performance.now()}get version(){return\"3.1.6\"}get flavour(){return\"cjs\"}get CHANNEL_EVENTS(){return this.validation&&console.warn(\"The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS.\"),Enumerations.CHANNEL_EVENTS}get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn(\"The MIDI_SYSTEM_MESSAGES enum has been moved to Enumerations.SYSTEM_MESSAGES.\"),Enumerations.SYSTEM_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn(\"The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to Enumerations.CHANNEL_MODE_MESSAGES.\"),Enumerations.CHANNEL_MODE_MESSAGES}get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn(\"The MIDI_CONTROL_CHANGE_MESSAGES enum has been replaced by the Enumerations.CONTROL_CHANGE_MESSAGES array.\"),Enumerations.MIDI_CONTROL_CHANGE_MESSAGES}get MIDI_REGISTERED_PARAMETER(){return this.validation&&console.warn(\"The MIDI_REGISTERED_PARAMETER enum has been moved to Enumerations.REGISTERED_PARAMETERS.\"),Enumerations.REGISTERED_PARAMETERS}get NOTES(){return this.validation&&console.warn(\"The NOTES enum has been deprecated.\"),[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"]}}const wm=new WebMidi;wm.constructor=null,exports.Enumerations=Enumerations,exports.Forwarder=Forwarder,exports.Input=Input,exports.InputChannel=InputChannel,exports.Message=Message,exports.Note=Note,exports.Output=Output,exports.OutputChannel=OutputChannel,exports.Utilities=Utilities,exports.WebMidi=wm;\n//# sourceMappingURL=webmidi.cjs.min.js.map\n","/**\n * The `EventEmitter` class provides methods to implement the _observable_ design pattern. This\n * pattern allows one to _register_ a function to execute when a specific event is _emitted_ by the\n * emitter.\n *\n * It is intended to be an abstract class meant to be extended by (or mixed into) other objects.\n */\nexport class EventEmitter {\n\n  /**\n   * Creates a new `EventEmitter`object.\n   *\n   * @param {boolean} [eventsSuspended=false] Whether the `EventEmitter` is initially in a suspended\n   * state (i.e. not executing callbacks).\n   */\n  constructor(eventsSuspended = false) {\n\n    /**\n     * An object containing a property for each event with at least one registered listener. Each\n     * event property contains an array of all the [`Listener`]{@link Listener} objects registered\n     * for the event.\n     *\n     * @type {Object}\n     * @readonly\n     */\n    this.eventMap = {};\n\n    /**\n     * Whether or not the execution of callbacks is currently suspended for this emitter.\n     *\n     * @type {boolean}\n     */\n    this.eventsSuspended = eventsSuspended == true ? true : false;\n\n  }\n\n  /**\n   * The callback function is executed when the associated event is triggered via [`emit()`](#emit).\n   * The [`emit()`](#emit) method relays all additional arguments it received to the callback\n   * functions. Since [`emit()`](#emit) can be passed a variable number of arguments, it is up to\n   * the developer to make sure the arguments match those of the associated callback. In addition,\n   * the callback also separately receives all the arguments present in the listener's\n   * [`arguments`](Listener#arguments) property. This makes it easy to pass data from where the\n   * listener is added to where the listener is executed.\n   *\n   * @callback EventEmitter~callback\n   * @param {...*} [args] A variable number of arguments matching the ones (if any) that were passed\n   * to the [`emit()`](#emit) method (except, the first one) followed by the arguments found in the\n   * listener's [`arguments`](Listener#arguments) array.\n   */\n\n  /**\n   * Adds a listener for the specified event. It returns the [`Listener`]{@link Listener} object\n   * that was created and attached to the event.\n   *\n   * To attach a global listener that will be triggered for any events, use\n   * [`EventEmitter.ANY_EVENT`]{@link #ANY_EVENT} as the first parameter. Note that a global\n   * listener will also be triggered by non-registered events.\n   *\n   * @param {string|Symbol} event The event to listen to.\n   * @param {EventEmitter~callback} callback The callback function to execute when the event occurs.\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=this] The value of `this` in the callback function.\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus executed first.\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   * @param {number} [options.remaining=Infinity] The number of times after which the callback\n   * should automatically be removed.\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`]{@link Listener#arguments}\n   * property of the [`Listener`]{@link Listener} object and can be retrieved or modified as\n   * desired.\n   *\n   * @returns {Listener} The newly created [`Listener`]{@link Listener} object.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {TypeError} The `callback` parameter must be a function.\n   */\n  addListener(event, callback, options = {}) {\n\n    if (\n      (typeof event === \"string\" && event.length < 1) ||\n      (event instanceof String && event.length < 1) ||\n      (typeof event !== \"string\" && !(event instanceof String) && event !== EventEmitter.ANY_EVENT)\n    ) {\n      throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n    }\n\n    if (typeof callback !== \"function\") throw new TypeError(\"The callback must be a function.\");\n\n    const listener = new Listener(event, this, callback, options);\n\n    if (!this.eventMap[event]) this.eventMap[event] = [];\n\n    if (options.prepend) {\n      this.eventMap[event].unshift(listener);\n    } else {\n      this.eventMap[event].push(listener);\n    }\n\n    return listener;\n\n  }\n\n  /**\n   * Adds a one-time listener for the specified event. The listener will be executed once and then\n   * destroyed. It returns the [`Listener`]{@link Listener} object that was created and attached\n   * to the event.\n   *\n   * To attach a global listener that will be triggered for any events, use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the first parameter. Note that a\n   * global listener will also be triggered by non-registered events.\n   *\n   * @param {string|Symbol} event The event to listen to\n   * @param {EventEmitter~callback} callback The callback function to execute when the event occurs\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=this] The context to invoke the callback function in.\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus executed first.\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`]{@link Listener#arguments}\n   * property of the [`Listener`]{@link Listener} object and can be retrieved or modified as\n   * desired.\n   *\n   * @returns {Listener} The newly created [`Listener`]{@link Listener} object.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {TypeError} The `callback` parameter must be a function.\n   */\n  addOneTimeListener(event, callback, options = {}) {\n    options.remaining = 1;\n    this.addListener(event, callback, options);\n  }\n\n  /**\n   * Identifier to use when adding or removing a listener that should be triggered when any events\n   * occur.\n   *\n   * @type {Symbol}\n   */\n  static get ANY_EVENT() {\n    return Symbol.for(\"Any event\");\n  }\n\n  /**\n   * Returns `true` if the specified event has at least one registered listener. If no event is\n   * specified, the method returns `true` if any event has at least one listener registered (this\n   * includes global listeners registered to\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}).\n   *\n   * Note: to specifically check for global listeners added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}, use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} [event=(any event)] The event to check\n   * @param {function|Listener} [callback=(any callback)] The actual function that was added to the\n   * event or the {@link Listener} object returned by `addListener()`.\n   * @returns {boolean}\n   */\n  hasListener(event, callback) {\n\n    if (event === undefined) {\n\n      // Check for ANY_EVENT\n      if (\n        this.eventMap[EventEmitter.ANY_EVENT] && this.eventMap[EventEmitter.ANY_EVENT].length > 0\n      ) {\n        return true;\n      }\n\n      // Check for any regular events\n      return Object.entries(this.eventMap).some(([, value]) => {\n        return value.length > 0;\n      });\n\n    } else {\n\n      if (this.eventMap[event] && this.eventMap[event].length > 0) {\n\n        if (callback instanceof Listener) {\n          let result = this.eventMap[event].filter(listener => listener === callback);\n          return result.length > 0;\n        } else if (typeof callback === \"function\") {\n          let result = this.eventMap[event].filter(listener => listener.callback === callback);\n          return result.length > 0;\n        } else if (callback != undefined) {\n          return false;\n        }\n\n        return true;\n\n      } else {\n        return false;\n      }\n\n\n    }\n\n  }\n\n  /**\n   * An array of all the unique event names for which the emitter has at least one registered\n   * listener.\n   *\n   * Note: this excludes global events registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} because they are not tied to a\n   * specific event.\n   *\n   * @type {string[]}\n   * @readonly\n   */\n  get eventNames() {\n    return Object.keys(this.eventMap);\n  }\n\n  /**\n   * Returns an array of all the [`Listener`]{@link Listener} objects that have been registered for\n   * a specific event.\n   *\n   * Please note that global events (those added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}) are not returned for \"regular\"\n   * events. To get the list of global listeners, specifically use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} event The event to get listeners for.\n   * @returns {Listener[]} An array of [`Listener`]{@link Listener} objects.\n   */\n  getListeners(event) {\n    return this.eventMap[event] || [];\n  }\n\n  /**\n   * Suspends execution of all callbacks functions registered for the specified event type.\n   *\n   * You can suspend execution of callbacks registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} by passing\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} to `suspendEvent()`. Beware that this\n   * will not suspend all callbacks but only those registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}. While this may seem counter-intuitive\n   * at first glance, it allows the selective suspension of global listeners while leaving other\n   * listeners alone. If you truly want to suspends all callbacks for a specific\n   * [`EventEmitter`]{@link EventEmitter}, simply set its `eventsSuspended` property to `true`.\n   *\n   * @param {string|Symbol} event The event name (or `EventEmitter.ANY_EVENT`) for which to suspend\n   * execution of all callback functions.\n   */\n  suspendEvent(event) {\n    this.getListeners(event).forEach(listener => {\n      listener.suspended = true;\n    });\n  }\n\n  /**\n   * Resumes execution of all suspended callback functions registered for the specified event type.\n   *\n   * You can resume execution of callbacks registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} by passing\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} to `unsuspendEvent()`. Beware that\n   * this will not resume all callbacks but only those registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}. While this may seem\n   * counter-intuitive, it allows the selective unsuspension of global listeners while leaving other\n   * callbacks alone.\n   *\n   * @param {string|Symbol} event The event name (or `EventEmitter.ANY_EVENT`) for which to resume\n   * execution of all callback functions.\n   */\n  unsuspendEvent(event) {\n    this.getListeners(event).forEach(listener => {\n      listener.suspended = false;\n    });\n  }\n\n  /**\n   * Returns the number of listeners registered for a specific event.\n   *\n   * Please note that global events (those added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}) do not count towards the remaining\n   * number for a \"regular\" event. To get the number of global listeners, specifically use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} event The event which is usually a string but can also be the special\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} symbol.\n   * @returns {number} An integer representing the number of listeners registered for the specified\n   * event.\n   */\n  getListenerCount(event) {\n    return this.getListeners(event).length;\n  }\n\n  /**\n   * Executes the callback function of all the [`Listener`]{@link Listener} objects registered for\n   * a given event. The callback functions are passed the additional arguments passed to `emit()`\n   * (if any) followed by the arguments present in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object (if any).\n   *\n   * If the [`eventsSuspended`]{@link #eventsSuspended} property is `true` or the\n   * [`Listener.suspended`]{@link Listener#suspended} property is `true`, the callback functions\n   * will not be executed.\n   *\n   * This function returns an array containing the return values of each of the callbacks.\n   *\n   * It should be noted that the regular listeners are triggered first followed by the global\n   * listeners (those added with [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}).\n   *\n   * @param {string} event The event\n   * @param {...*} args Arbitrary number of arguments to pass along to the callback functions\n   *\n   * @returns {Array} An array containing the return value of each of the executed listener\n   * functions.\n   *\n   * @throws {TypeError} The `event` parameter must be a string.\n   */\n  emit(event, ...args) {\n\n    if (typeof event !== \"string\" && !(event instanceof String)) {\n      throw new TypeError(\"The 'event' parameter must be a string.\");\n    }\n\n    if (this.eventsSuspended) return;\n\n    // We collect return values from all listeners here\n    let results = [];\n\n    // We must make sure that we do not have undefined otherwise concat() will add an undefined\n    // entry in the array.\n    let listeners = this.eventMap[EventEmitter.ANY_EVENT] || [];\n    if (this.eventMap[event]) listeners = listeners.concat(this.eventMap[event]);\n\n    listeners.forEach(listener => {\n\n      // This is the per-listener suspension check\n      if (listener.suspended) return;\n\n      let params = [...args];\n      if (Array.isArray(listener.arguments)) params = params.concat(listener.arguments);\n\n      if (listener.remaining > 0) {\n        results.push(listener.callback.apply(listener.context, params));\n        listener.count++;\n      }\n\n      if (--listener.remaining < 1) listener.remove();\n\n    });\n\n    return results;\n\n  }\n\n  /**\n   * Removes all the listeners that were added to the object upon which the method is called and\n   * that match the specified criterias. If no parameters are passed, all listeners added to this\n   * object will be removed. If only the `event` parameter is passed, all listeners for that event\n   * will be removed from that object. You can remove global listeners by using\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the first parameter.\n   *\n   * To use more granular options, you must at least define the `event`. Then, you can specify the\n   * callback to match or one or more of the additional options.\n   *\n   * @param {string} [event] The event name.\n   * @param {EventEmitter~callback} [callback] Only remove the listeners that match this exact\n   * callback function.\n   * @param {Object} [options]\n   * @param {*} [options.context] Only remove the listeners that have this exact context.\n   * @param {number} [options.remaining] Only remove the listener if it has exactly that many\n   * remaining times to be executed.\n   */\n  removeListener(event, callback, options = {}) {\n\n    if (event === undefined) {\n      this.eventMap = {};\n      return;\n    } else if (!this.eventMap[event]) {\n      return;\n    }\n\n    // Find listeners that do not match the criterias (those are the ones we will keep)\n    let listeners = this.eventMap[event].filter(listener => {\n\n      return (callback && listener.callback !== callback) ||\n        (options.remaining && options.remaining !== listener.remaining) ||\n        (options.context && options.context !== listener.context);\n\n    });\n\n    if (listeners.length) {\n      this.eventMap[event] = listeners;\n    } else {\n      delete this.eventMap[event];\n    }\n\n  }\n\n  /**\n   * The `waitFor()` method is an async function which returns a promise. The promise is fulfilled\n   * when the specified event occurs. The event can be a regular event or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} (if you want to resolve as soon as any\n   * event is emitted).\n   *\n   * If the `duration` option is set, the promise will only be fulfilled if the event is emitted\n   * within the specified duration. If the event has not been fulfilled after the specified\n   * duration, the promise is rejected. This makes it super easy to wait for an event and timeout\n   * after a certain time if the event is not triggered.\n   *\n   * @param {string|Symbol} event The event to wait for\n   * @param {Object} [options={}]\n   * @param {number} [options.duration=Infinity] The number of milliseconds to wait before the\n   * promise is automatically rejected.\n   */\n  async waitFor(event, options = {}) {\n\n    options.duration = parseInt(options.duration);\n    if (isNaN(options.duration) || options.duration <= 0) options.duration = Infinity;\n\n    return new Promise((resolve, reject) => {\n\n      let timeout;\n\n      let listener = this.addListener(event, () => {\n        clearTimeout(timeout);\n        resolve();\n      }, {remaining: 1});\n\n      if (options.duration !== Infinity) {\n        timeout = setTimeout(() => {\n          listener.remove();\n          reject(\"The duration expired before the event was emitted.\");\n        }, options.duration);\n      }\n\n    });\n\n  }\n\n  /**\n   * The number of unique events that have registered listeners.\n   *\n   * Note: this excludes global events registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} because they are not tied to a\n   * specific event.\n   *\n   * @type {number}\n   * @readonly\n   */\n  get eventCount() {\n    return Object.keys(this.eventMap).length;\n  }\n\n}\n\n/**\n * The `Listener` class represents a single event listener object. Such objects keep all relevant\n * contextual information such as the event being listened to, the object the listener was attached\n * to, the callback function and so on.\n *\n */\nexport class Listener {\n\n  /**\n   * Creates a new `Listener` object\n   *\n   * @param {string|Symbol} event The event being listened to\n   * @param {EventEmitter} target The [`EventEmitter`]{@link EventEmitter} object that the listener\n   * is attached to.\n   * @param {EventEmitter~callback} callback The function to call when the listener is triggered\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=target] The context to invoke the listener in (a.k.a. the\n   * value of `this` inside the callback function).\n   * @param {number} [options.remaining=Infinity] The remaining number of times after which the\n   * callback should automatically be removed.\n   * @param {array} [options.arguments] An array of arguments that will be passed separately to the\n   * callback function upon execution. The array is stored in the [`arguments`]{@link #arguments}\n   * property and can be retrieved or modified as desired.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {ReferenceError} The `target` parameter is mandatory.\n   * @throws {TypeError} The `callback` must be a function.\n   */\n  constructor(event, target, callback, options = {}) {\n\n    if (\n      typeof event !== \"string\" &&\n      !(event instanceof String) &&\n      event !== EventEmitter.ANY_EVENT\n    ) {\n      throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n    }\n\n    if (!target) {\n      throw new ReferenceError(\"The 'target' parameter is mandatory.\");\n    }\n\n    if (typeof callback !== \"function\") {\n      throw new TypeError(\"The 'callback' must be a function.\");\n    }\n\n    // Convert single value argument to array\n    if (options.arguments !== undefined && !Array.isArray(options.arguments)) {\n      options.arguments = [options.arguments];\n    }\n\n    // Define default options and merge declared options into them,\n    options = Object.assign({\n      context: target,\n      remaining: Infinity,\n      arguments: undefined,\n      duration: Infinity,\n    }, options);\n\n    // Make sure it is eventually deleted if a duration is supplied\n    if (options.duration !== Infinity) {\n      setTimeout(() => this.remove(), options.duration);\n    }\n\n    /**\n     * An array of arguments to pass to the callback function upon execution.\n     * @type {array}\n     */\n    this.arguments = options.arguments;\n\n    /**\n     * The callback function to execute.\n     * @type {Function}\n     */\n    this.callback = callback;\n\n    /**\n     * The context to execute the callback function in (a.k.a. the value of `this` inside the\n     * callback function)\n     * @type {Object}\n     */\n    this.context = options.context;\n\n    /**\n     * The number of times the listener function was executed.\n     * @type {number}\n     */\n    this.count = 0;\n\n    /**\n     * The event name.\n     * @type {string}\n     */\n    this.event = event;\n\n    /**\n     * The remaining number of times after which the callback should automatically be removed.\n     * @type {number}\n     */\n    this.remaining = parseInt(options.remaining) >= 1 ? parseInt(options.remaining) : Infinity;\n\n    /**\n     * Whether this listener is currently suspended or not.\n     * @type {boolean}\n     */\n    this.suspended = false;\n\n    /**\n     * The object that the event is attached to (or that emitted the event).\n     * @type {EventEmitter}\n     */\n    this.target = target;\n\n  }\n\n  /**\n   * Removes the listener from its target.\n   */\n  remove() {\n    this.target.removeListener(\n      this.event,\n      this.callback,\n      {context: this.context, remaining: this.remaining}\n    );\n  }\n\n}\n","/**\n * The `Enumerations` class contains enumerations and arrays of elements used throughout the\n * library. All its properties are static and should be referenced using the class name. For\n * example: `Enumerations.CHANNEL_MESSAGES`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Enumerations {\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_MESSAGES instead)\n   * @private\n   * @static\n   */\n  static get MIDI_CHANNEL_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MESSAGES;\n\n  }\n\n  /**\n   * Enumeration of all MIDI channel message names and their associated 4-bit numerical value:\n   *\n   * | Message Name        | Hexadecimal | Decimal |\n   * |---------------------|-------------|---------|\n   * | `noteoff`           | 0x8         | 8       |\n   * | `noteon`            | 0x9         | 9       |\n   * | `keyaftertouch`     | 0xA         | 10      |\n   * | `controlchange`     | 0xB         | 11      |\n   * | `programchange`     | 0xC         | 12      |\n   * | `channelaftertouch` | 0xD         | 13      |\n   * | `pitchbend`         | 0xE         | 14      |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_MESSAGES() {\n\n    return {\n      noteoff: 0x8,           // 8\n      noteon: 0x9,            // 9\n      keyaftertouch: 0xA,     // 10\n      controlchange: 0xB,     // 11\n      programchange: 0xC,     // 12\n      channelaftertouch: 0xD, // 13\n      pitchbend: 0xE          // 14\n    };\n\n  }\n\n  /**\n   * A simple array of the 16 valid MIDI channel numbers (`1` to `16`):\n   *\n   * @type {number[]}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_NUMBERS() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n  }\n\n  /**\n   * @type {number[]}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_NUMBERS instead)\n   * @private\n   * @static\n   */\n  static get MIDI_CHANNEL_NUMBERS() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_NUMBERS array has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_NUMBERS array instead.\"\n      );\n    }\n\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n\n  }\n\n  /**\n   * Enumeration of all MIDI channel mode message names and their associated numerical value:\n   *\n   *\n   * | Message Name          | Hexadecimal | Decimal |\n   * |-----------------------|-------------|---------|\n   * | `allsoundoff`         | 0x78        | 120     |\n   * | `resetallcontrollers` | 0x79        | 121     |\n   * | `localcontrol`        | 0x7A        | 122     |\n   * | `allnotesoff`         | 0x7B        | 123     |\n   * | `omnimodeoff`         | 0x7C        | 124     |\n   * | `omnimodeon`          | 0x7D        | 125     |\n   * | `monomodeon`          | 0x7E        | 126     |\n   * | `polymodeon`          | 0x7F        | 127     |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_MODE_MESSAGES() {\n\n    return {\n      allsoundoff: 120,\n      resetallcontrollers: 121,\n      localcontrol: 122,\n      allnotesoff: 123,\n      omnimodeoff: 124,\n      omnimodeon: 125,\n      monomodeon: 126,\n      polymodeon: 127\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_MODE_MESSAGES instead)\n   * @private\n   * @readonly\n   * @static\n   */\n  static get MIDI_CHANNEL_MODE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MODE_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_MODE_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MODE_MESSAGES;\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @static\n   * @private\n   * @deprecated since version 3.0.26 (use `CONTROL_CHANGE_MESSAGES` instead)\n   */\n  static get MIDI_CONTROL_CHANGE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CONTROL_CHANGE_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CONTROL_CHANGE_MESSAGES array instead.\"\n      );\n    }\n\n    return {\n\n      bankselectcoarse: 0,\n      modulationwheelcoarse: 1,\n      breathcontrollercoarse: 2,\n      controller3: 3,\n      footcontrollercoarse: 4,\n      portamentotimecoarse: 5,\n      dataentrycoarse: 6,\n      volumecoarse: 7,\n      balancecoarse: 8,\n      controller9: 9,\n      pancoarse: 10,\n      expressioncoarse: 11,\n      effectcontrol1coarse: 12,\n      effectcontrol2coarse: 13,\n      controller14: 14,\n      controller15: 15,\n      generalpurposeslider1: 16,\n      generalpurposeslider2: 17,\n      generalpurposeslider3: 18,\n      generalpurposeslider4: 19,\n      controller20: 20,\n      controller21: 21,\n      controller22: 22,\n      controller23: 23,\n      controller24: 24,\n      controller25: 25,\n      controller26: 26,\n      controller27: 27,\n      controller28: 28,\n      controller29: 29,\n      controller30: 30,\n      controller31: 31,\n      bankselectfine: 32,\n      modulationwheelfine: 33,\n      breathcontrollerfine: 34,\n      controller35: 35,\n      footcontrollerfine: 36,\n      portamentotimefine: 37,\n      dataentryfine: 38,\n      volumefine: 39,\n      balancefine: 40,\n      controller41: 41,\n      panfine: 42,\n      expressionfine: 43,\n      effectcontrol1fine: 44,\n      effectcontrol2fine: 45,\n      controller46: 46,\n      controller47: 47,\n      controller48: 48,\n      controller49: 49,\n      controller50: 50,\n      controller51: 51,\n      controller52: 52,\n      controller53: 53,\n      controller54: 54,\n      controller55: 55,\n      controller56: 56,\n      controller57: 57,\n      controller58: 58,\n      controller59: 59,\n      controller60: 60,\n      controller61: 61,\n      controller62: 62,\n      controller63: 63,\n      holdpedal: 64,\n      portamento: 65,\n      sustenutopedal: 66,\n      softpedal: 67,\n      legatopedal: 68,\n      hold2pedal: 69,\n      soundvariation: 70,\n      resonance: 71,\n      soundreleasetime: 72,\n      soundattacktime: 73,\n      brightness: 74,\n      soundcontrol6: 75,\n      soundcontrol7: 76,\n      soundcontrol8: 77,\n      soundcontrol9: 78,\n      soundcontrol10: 79,\n      generalpurposebutton1: 80,\n      generalpurposebutton2: 81,\n      generalpurposebutton3: 82,\n      generalpurposebutton4: 83,\n      controller84: 84,\n      controller85: 85,\n      controller86: 86,\n      controller87: 87,\n      controller88: 88,\n      controller89: 89,\n      controller90: 90,\n      reverblevel: 91,\n      tremololevel: 92,\n      choruslevel: 93,\n      celestelevel: 94,\n      phaserlevel: 95,\n      databuttonincrement: 96,\n      databuttondecrement: 97,\n      nonregisteredparametercoarse: 98,\n      nonregisteredparameterfine: 99,\n      registeredparametercoarse: 100,\n      registeredparameterfine: 101,\n      controller102: 102,\n      controller103: 103,\n      controller104: 104,\n      controller105: 105,\n      controller106: 106,\n      controller107: 107,\n      controller108: 108,\n      controller109: 109,\n      controller110: 110,\n      controller111: 111,\n      controller112: 112,\n      controller113: 113,\n      controller114: 114,\n      controller115: 115,\n      controller116: 116,\n      controller117: 117,\n      controller118: 118,\n      controller119: 119,\n      allsoundoff: 120,\n      resetallcontrollers: 121,\n      localcontrol: 122,\n      allnotesoff: 123,\n      omnimodeoff: 124,\n      omnimodeon: 125,\n      monomodeon: 126,\n      polymodeon: 127\n\n    };\n\n  }\n\n  /**\n   * An array of objects, ordered by control number, describing control change messages. Each object\n   * in the array has 3 properties with some objects having a fourth one (`position`) :\n   *\n   *  * `number`: MIDI control number (0-127);\n   *  * `name`: name of emitted event (eg: `bankselectcoarse`, `choruslevel`, etc) that can be\n   *  listened to;\n   *  * `description`: user-friendly description of the controller's purpose;\n   *  * `position` (optional): whether this controller's value should be considered an `msb` or\n   *  `lsb`\n   *\n   * Not all controllers have a predefined function. For those that don't, `name` is the word\n   * \"controller\" followed by the number (e.g. `controller112`).\n   *\n   * | Event name                     | Control Number |\n   * |--------------------------------|----------------|\n   * | `bankselectcoarse`             | 0              |\n   * | `modulationwheelcoarse`        | 1              |\n   * | `breathcontrollercoarse`       | 2              |\n   * | `controller3`                  | 3              |\n   * | `footcontrollercoarse`         | 4              |\n   * | `portamentotimecoarse`         | 5              |\n   * | `dataentrycoarse`              | 6              |\n   * | `volumecoarse`                 | 7              |\n   * | `balancecoarse`                | 8              |\n   * | `controller9`                  | 9              |\n   * | `pancoarse`                    | 10             |\n   * | `expressioncoarse`             | 11             |\n   * | `effectcontrol1coarse`         | 12             |\n   * | `effectcontrol2coarse`         | 13             |\n   * | `controller14`                 | 14             |\n   * | `controller15`                 | 15             |\n   * | `generalpurposecontroller1`    | 16             |\n   * | `generalpurposecontroller2`    | 17             |\n   * | `generalpurposecontroller3`    | 18             |\n   * | `generalpurposecontroller4`    | 19             |\n   * | `controller20`                 | 20             |\n   * | `controller21`                 | 21             |\n   * | `controller22`                 | 22             |\n   * | `controller23`                 | 23             |\n   * | `controller24`                 | 24             |\n   * | `controller25`                 | 25             |\n   * | `controller26`                 | 26             |\n   * | `controller27`                 | 27             |\n   * | `controller28`                 | 28             |\n   * | `controller29`                 | 29             |\n   * | `controller30`                 | 30             |\n   * | `controller31`                 | 31             |\n   * | `bankselectfine`               | 32             |\n   * | `modulationwheelfine`          | 33             |\n   * | `breathcontrollerfine`         | 34             |\n   * | `controller35`                 | 35             |\n   * | `footcontrollerfine`           | 36             |\n   * | `portamentotimefine`           | 37             |\n   * | `dataentryfine`                | 38             |\n   * | `channelvolumefine`            | 39             |\n   * | `balancefine`                  | 40             |\n   * | `controller41`                 | 41             |\n   * | `panfine`                      | 42             |\n   * | `expressionfine`               | 43             |\n   * | `effectcontrol1fine`           | 44             |\n   * | `effectcontrol2fine`           | 45             |\n   * | `controller46`                 | 46             |\n   * | `controller47`                 | 47             |\n   * | `controller48`                 | 48             |\n   * | `controller49`                 | 49             |\n   * | `controller50`                 | 50             |\n   * | `controller51`                 | 51             |\n   * | `controller52`                 | 52             |\n   * | `controller53`                 | 53             |\n   * | `controller54`                 | 54             |\n   * | `controller55`                 | 55             |\n   * | `controller56`                 | 56             |\n   * | `controller57`                 | 57             |\n   * | `controller58`                 | 58             |\n   * | `controller59`                 | 59             |\n   * | `controller60`                 | 60             |\n   * | `controller61`                 | 61             |\n   * | `controller62`                 | 62             |\n   * | `controller63`                 | 63             |\n   * | `damperpedal`                  | 64             |\n   * | `portamento`                   | 65             |\n   * | `sostenuto`                    | 66             |\n   * | `softpedal`                    | 67             |\n   * | `legatopedal`                  | 68             |\n   * | `hold2`                        | 69             |\n   * | `soundvariation`               | 70             |\n   * | `resonance`                    | 71             |\n   * | `releasetime`                  | 72             |\n   * | `attacktime`                   | 73             |\n   * | `brightness`                   | 74             |\n   * | `decaytime`                    | 75             |\n   * | `vibratorate`                  | 76             |\n   * | `vibratodepth`                 | 77             |\n   * | `vibratodelay`                 | 78             |\n   * | `controller79`                 | 79             |\n   * | `generalpurposecontroller5`    | 80             |\n   * | `generalpurposecontroller6`    | 81             |\n   * | `generalpurposecontroller7`    | 82             |\n   * | `generalpurposecontroller8`    | 83             |\n   * | `portamentocontrol`            | 84             |\n   * | `controller85`                 | 85             |\n   * | `controller86`                 | 86             |\n   * | `controller87`                 | 87             |\n   * | `highresolutionvelocityprefix` | 88             |\n   * | `controller89`                 | 89             |\n   * | `controller90`                 | 90             |\n   * | `effect1depth`                 | 91             |\n   * | `effect2depth`                 | 92             |\n   * | `effect3depth`                 | 93             |\n   * | `effect4depth`                 | 94             |\n   * | `effect5depth`                 | 95             |\n   * | `dataincrement`                | 96             |\n   * | `datadecrement`                | 97             |\n   * | `nonregisteredparameterfine`   | 98             |\n   * | `nonregisteredparametercoarse` | 99             |\n   * | `nonregisteredparameterfine`   | 100            |\n   * | `registeredparametercoarse`    | 101            |\n   * | `controller102`                | 102            |\n   * | `controller103`                | 103            |\n   * | `controller104`                | 104            |\n   * | `controller105`                | 105            |\n   * | `controller106`                | 106            |\n   * | `controller107`                | 107            |\n   * | `controller108`                | 108            |\n   * | `controller109`                | 109            |\n   * | `controller110`                | 110            |\n   * | `controller111`                | 111            |\n   * | `controller112`                | 112            |\n   * | `controller113`                | 113            |\n   * | `controller114`                | 114            |\n   * | `controller115`                | 115            |\n   * | `controller116`                | 116            |\n   * | `controller117`                | 117            |\n   * | `controller118`                | 118            |\n   * | `controller119`                | 119            |\n   * | `allsoundoff`                  | 120            |\n   * | `resetallcontrollers`          | 121            |\n   * | `localcontrol`                 | 122            |\n   * | `allnotesoff`                  | 123            |\n   * | `omnimodeoff`                  | 124            |\n   * | `omnimodeon`                   | 125            |\n   * | `monomodeon`                   | 126            |\n   * | `polymodeon`                   | 127            |\n   *\n   * @type {object[]}\n   * @readonly\n   * @static\n   * @since 3.1\n   */\n  static get CONTROL_CHANGE_MESSAGES() {\n\n    return [\n      {\n        number: 0,\n        name: \"bankselectcoarse\",\n        description: \"Bank Select (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 1,\n        name: \"modulationwheelcoarse\",\n        description: \"Modulation Wheel (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 2,\n        name: \"breathcontrollercoarse\",\n        description: \"Breath Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 3,\n        name: \"controller3\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 4,\n        name: \"footcontrollercoarse\",\n        description: \"Foot Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 5,\n        name: \"portamentotimecoarse\",\n        description: \"Portamento Time (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 6,\n        name: \"dataentrycoarse\",\n        description: \"Data Entry (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 7,\n        name: \"volumecoarse\",\n        description: \"Channel Volume (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 8,\n        name: \"balancecoarse\",\n        description: \"Balance (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 9,\n        name: \"controller9\",\n        description: \"Controller 9 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 10,\n        name: \"pancoarse\",\n        description: \"Pan (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 11,\n        name: \"expressioncoarse\",\n        description: \"Expression Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 12,\n        name: \"effectcontrol1coarse\",\n        description: \"Effect Control 1 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 13,\n        name: \"effectcontrol2coarse\",\n        description: \"Effect Control 2 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 14,\n        name: \"controller14\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 15,\n        name: \"controller15\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 16,\n        name: \"generalpurposecontroller1\",\n        description: \"General Purpose Controller 1 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 17,\n        name: \"generalpurposecontroller2\",\n        description: \"General Purpose Controller 2 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 18,\n        name: \"generalpurposecontroller3\",\n        description: \"General Purpose Controller 3 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 19,\n        name: \"generalpurposecontroller4\",\n        description: \"General Purpose Controller 4 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 20,\n        name: \"controller20\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 21,\n        name: \"controller21\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 22,\n        name: \"controller22\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 23,\n        name: \"controller23\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 24,\n        name: \"controller24\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 25,\n        name: \"controller25\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 26,\n        name: \"controller26\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 27,\n        name: \"controller27\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 28,\n        name: \"controller28\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 29,\n        name: \"controller29\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 30,\n        name: \"controller30\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 31,\n        name: \"controller31\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 32,\n        name: \"bankselectfine\",\n        description: \"Bank Select (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 33,\n        name: \"modulationwheelfine\",\n        description: \"Modulation Wheel (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 34,\n        name: \"breathcontrollerfine\",\n        description: \"Breath Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 35,\n        name: \"controller35\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 36,\n        name: \"footcontrollerfine\",\n        description: \"Foot Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 37,\n        name: \"portamentotimefine\",\n        description: \"Portamento Time (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 38,\n        name: \"dataentryfine\",\n        description: \"Data Entry (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 39,\n        name: \"channelvolumefine\",\n        description: \"Channel Volume (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 40,\n        name: \"balancefine\",\n        description: \"Balance (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 41,\n        name: \"controller41\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 42,\n        name: \"panfine\",\n        description: \"Pan (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 43,\n        name: \"expressionfine\",\n        description: \"Expression Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 44,\n        name: \"effectcontrol1fine\",\n        description: \"Effect control 1 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 45,\n        name: \"effectcontrol2fine\",\n        description: \"Effect control 2 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 46,\n        name: \"controller46\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 47,\n        name: \"controller47\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 48,\n        name: \"controller48\",\n        description: \"General Purpose Controller 1 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 49,\n        name: \"controller49\",\n        description: \"General Purpose Controller 2 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 50,\n        name: \"controller50\",\n        description: \"General Purpose Controller 3 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 51,\n        name: \"controller51\",\n        description: \"General Purpose Controller 4 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 52,\n        name: \"controller52\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 53,\n        name: \"controller53\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 54,\n        name: \"controller54\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 55,\n        name: \"controller55\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 56,\n        name: \"controller56\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 57,\n        name: \"controller57\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 58,\n        name: \"controller58\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 59,\n        name: \"controller59\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 60,\n        name: \"controller60\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 61,\n        name: \"controller61\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 62,\n        name: \"controller62\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 63,\n        name: \"controller63\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 64,\n        name: \"damperpedal\",\n        description: \"Damper Pedal On/Off\"\n      },\n      {\n        number: 65,\n        name: \"portamento\",\n        description: \"Portamento On/Off\"\n      },\n      {\n        number: 66,\n        name: \"sostenuto\",\n        description: \"Sostenuto On/Off\"\n      },\n      {\n        number: 67,\n        name: \"softpedal\",\n        description: \"Soft Pedal On/Off\"\n      },\n      {\n        number: 68,\n        name: \"legatopedal\",\n        description: \"Legato Pedal On/Off\"\n      },\n      {\n        number: 69,\n        name: \"hold2\",\n        description: \"Hold 2 On/Off\"\n      },\n      {\n        number: 70,\n        name: \"soundvariation\",\n        description: \"Sound Variation\",\n        position: \"lsb\"\n      },\n      {\n        number: 71,\n        name: \"resonance\",\n        description: \"Resonance\",\n        position: \"lsb\"\n      },\n      {\n        number: 72,\n        name: \"releasetime\",\n        description: \"Release Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 73,\n        name: \"attacktime\",\n        description: \"Attack Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 74,\n        name: \"brightness\",\n        description: \"Brightness\",\n        position: \"lsb\"\n      },\n      {\n        number: 75,\n        name: \"decaytime\",\n        description: \"Decay Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 76,\n        name: \"vibratorate\",\n        description: \"Vibrato Rate\",\n        position: \"lsb\"\n      },\n      {\n        number: 77,\n        name: \"vibratodepth\",\n        description: \"Vibrato Depth\",\n        position: \"lsb\"\n      },\n      {\n        number: 78,\n        name: \"vibratodelay\",\n        description: \"Vibrato Delay\",\n        position: \"lsb\"\n      },\n      {\n        number: 79,\n        name: \"controller79\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 80,\n        name: \"generalpurposecontroller5\",\n        description: \"General Purpose Controller 5\",\n        position: \"lsb\"\n      },\n      {\n        number: 81,\n        name: \"generalpurposecontroller6\",\n        description: \"General Purpose Controller 6\",\n        position: \"lsb\"\n      },\n      {\n        number: 82,\n        name: \"generalpurposecontroller7\",\n        description: \"General Purpose Controller 7\",\n        position: \"lsb\"\n      },\n      {\n        number: 83,\n        name: \"generalpurposecontroller8\",\n        description: \"General Purpose Controller 8\",\n        position: \"lsb\"\n      },\n      {\n        number: 84,\n        name: \"portamentocontrol\",\n        description: \"Portamento Control\",\n        position: \"lsb\"\n      },\n      {\n        number: 85,\n        name: \"controller85\",\n        description: \"Undefined\"\n      },\n      {\n        number: 86,\n        name: \"controller86\",\n        description: \"Undefined\"\n      },\n      {\n        number: 87,\n        name: \"controller87\",\n        description: \"Undefined\"\n      },\n      {\n        number: 88,\n        name: \"highresolutionvelocityprefix\",\n        description: \"High Resolution Velocity Prefix\",\n        position: \"lsb\"\n      },\n      {\n        number: 89,\n        name: \"controller89\",\n        description: \"Undefined\"\n      },\n      {\n        number: 90,\n        name: \"controller90\",\n        description: \"Undefined\"\n      },\n      {\n        number: 91,\n        name: \"effect1depth\",\n        description: \"Effects 1 Depth (Reverb Send Level)\"\n      },\n      {\n        number: 92,\n        name: \"effect2depth\",\n        description: \"Effects 2 Depth\"\n      },\n      {\n        number: 93,\n        name: \"effect3depth\",\n        description: \"Effects 3 Depth (Chorus Send Level)\"\n      },\n      {\n        number: 94,\n        name: \"effect4depth\",\n        description: \"Effects 4 Depth\"\n      },\n      {\n        number: 95,\n        name: \"effect5depth\",\n        description: \"Effects 5 Depth\"\n      },\n      {\n        number: 96,\n        name: \"dataincrement\",\n        description: \"Data Increment\"\n      },\n      {\n        number: 97,\n        name: \"datadecrement\",\n        description: \"Data Decrement\"\n      },\n      {\n        number: 98,\n        name: \"nonregisteredparameterfine\",\n        description: \"Non-Registered Parameter Number (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 99,\n        name: \"nonregisteredparametercoarse\",\n        description: \"Non-Registered Parameter Number (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 100,\n        name: \"registeredparameterfine\",\n        description: \"Registered Parameter Number (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 101,\n        name: \"registeredparametercoarse\",\n        description: \"Registered Parameter Number (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 102,\n        name: \"controller102\",\n        description: \"Undefined\"\n      },\n      {\n        number: 103,\n        name: \"controller103\",\n        description: \"Undefined\"\n      },\n      {\n        number: 104,\n        name: \"controller104\",\n        description: \"Undefined\"\n      },\n      {\n        number: 105,\n        name: \"controller105\",\n        description: \"Undefined\"\n      },\n      {\n        number: 106,\n        name: \"controller106\",\n        description: \"Undefined\"\n      },\n      {\n        number: 107,\n        name: \"controller107\",\n        description: \"Undefined\"\n      },\n      {\n        number: 108,\n        name: \"controller108\",\n        description: \"Undefined\"\n      },\n      {\n        number: 109,\n        name: \"controller109\",\n        description: \"Undefined\"\n      },\n      {\n        number: 110,\n        name: \"controller110\",\n        description: \"Undefined\"\n      },\n      {\n        number: 111,\n        name: \"controller111\",\n        description: \"Undefined\"\n      },\n      {\n        number: 112,\n        name: \"controller112\",\n        description: \"Undefined\"\n      },\n      {\n        number: 113,\n        name: \"controller113\",\n        description: \"Undefined\"\n      },\n      {\n        number: 114,\n        name: \"controller114\",\n        description: \"Undefined\"\n      },\n      {\n        number: 115,\n        name: \"controller115\",\n        description: \"Undefined\"\n      },\n      {\n        number: 116,\n        name: \"controller116\",\n        description: \"Undefined\"\n      },\n      {\n        number: 117,\n        name: \"controller117\",\n        description: \"Undefined\"\n      },\n      {\n        number: 118,\n        name: \"controller118\",\n        description: \"Undefined\"\n      },\n      {\n        number: 119,\n        name: \"controller119\",\n        description: \"Undefined\"\n      },\n      {\n        number: 120,\n        name: \"allsoundoff\",\n        description: \"All Sound Off\"\n      },\n      {\n        number: 121,\n        name: \"resetallcontrollers\",\n        description: \"Reset All Controllers\"\n      },\n      {\n        number: 122,\n        name: \"localcontrol\",\n        description: \"Local Control On/Off\"\n      },\n      {\n        number: 123,\n        name: \"allnotesoff\",\n        description: \"All Notes Off\"\n      },\n      {\n        number: 124,\n        name: \"omnimodeoff\",\n        description: \"Omni Mode Off\"\n      },\n      {\n        number: 125,\n        name: \"omnimodeon\",\n        description: \"Omni Mode On\"\n      },\n      {\n        number: 126,\n        name: \"monomodeon\",\n        description: \"Mono Mode On\"\n      },\n      {\n        number: 127,\n        name: \"polymodeon\",\n        description: \"Poly Mode On\"\n      },\n    ];\n\n  }\n\n  /**\n   * Enumeration of all MIDI registered parameters and their associated pair of numerical values.\n   * MIDI registered parameters extend the original list of control change messages. Currently,\n   * there are only a limited number of them:\n   *\n   *\n   * | Control Function             | [LSB, MSB]   |\n   * |------------------------------|--------------|\n   * | `pitchbendrange`             | [0x00, 0x00] |\n   * | `channelfinetuning`          | [0x00, 0x01] |\n   * | `channelcoarsetuning`        | [0x00, 0x02] |\n   * | `tuningprogram`              | [0x00, 0x03] |\n   * | `tuningbank`                 | [0x00, 0x04] |\n   * | `modulationrange`            | [0x00, 0x05] |\n   * | `azimuthangle`               | [0x3D, 0x00] |\n   * | `elevationangle`             | [0x3D, 0x01] |\n   * | `gain`                       | [0x3D, 0x02] |\n   * | `distanceratio`              | [0x3D, 0x03] |\n   * | `maximumdistance`            | [0x3D, 0x04] |\n   * | `maximumdistancegain`        | [0x3D, 0x05] |\n   * | `referencedistanceratio`     | [0x3D, 0x06] |\n   * | `panspreadangle`             | [0x3D, 0x07] |\n   * | `rollangle`                  | [0x3D, 0x08] |\n   *\n   * @enum {Object.<string, number[]>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get REGISTERED_PARAMETERS() {\n\n    return {\n      pitchbendrange: [0x00, 0x00],\n      channelfinetuning: [0x00, 0x01],\n      channelcoarsetuning: [0x00, 0x02],\n      tuningprogram: [0x00, 0x03],\n      tuningbank: [0x00, 0x04],\n\n      modulationrange: [0x00, 0x05],\n      azimuthangle: [0x3D, 0x00],\n      elevationangle: [0x3D, 0x01],\n      gain: [0x3D, 0x02],\n      distanceratio: [0x3D, 0x03],\n      maximumdistance: [0x3D, 0x04],\n      maximumdistancegain: [0x3D, 0x05],\n      referencedistanceratio: [0x3D, 0x06],\n      panspreadangle: [0x3D, 0x07],\n      rollangle: [0x3D, 0x08]\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number[]>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.REGISTERED_PARAMETERS instead)\n   * @private\n   * @static\n   */\n  static get MIDI_REGISTERED_PARAMETERS() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_REGISTERED_PARAMETERS enum has been deprecated. Use the \" +\n        \"Enumerations.REGISTERED_PARAMETERS enum instead.\"\n      );\n    }\n\n    return Enumerations.MIDI_REGISTERED_PARAMETERS;\n\n  }\n\n  /**\n   * Enumeration of all valid MIDI system messages and matching numerical values. This library also\n   * uses two additional custom messages.\n   *\n   * **System Common Messages**\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `sysex`                | 0xF0        |  240    |\n   * | `timecode`             | 0xF1        |  241    |\n   * | `songposition`         | 0xF2        |  242    |\n   * | `songselect`           | 0xF3        |  243    |\n   * | `tunerequest`          | 0xF6        |  246    |\n   * | `sysexend`             | 0xF7        |  247    |\n   *\n   * The `sysexend` message is never actually received. It simply ends a sysex stream.\n   *\n   * **System Real-Time Messages**\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `clock`                | 0xF8        |  248    |\n   * | `start`                | 0xFA        |  250    |\n   * | `continue`             | 0xFB        |  251    |\n   * | `stop`                 | 0xFC        |  252    |\n   * | `activesensing`        | 0xFE        |  254    |\n   * | `reset`                | 0xFF        |  255    |\n   *\n   * Values 249 and 253 are relayed by the\n   * [Web MIDI API](https://developer.mozilla.org/en-US/docs/Web/API/Web_MIDI_API) but they do not\n   * serve any specific purpose. The\n   * [MIDI 1.0 spec](https://www.midi.org/specifications/item/table-1-summary-of-midi-message)\n   * simply states that they are undefined/reserved.\n   *\n   * **Custom Messages**\n   *\n   * These two messages are mostly for internal use. They are not MIDI messages and cannot be sent\n   * or forwarded.\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `midimessage`          |             |  0      |\n   * | `unknownsystemmessage` |             |  -1     |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get SYSTEM_MESSAGES() {\n\n    return {\n\n      // System common messages\n      sysex: 0xF0,            // 240\n      timecode: 0xF1,         // 241\n      songposition: 0xF2,     // 242\n      songselect: 0xF3,       // 243\n      tunerequest: 0xF6,      // 246\n      tuningrequest: 0xF6,    // for backwards-compatibility (deprecated in version 3.0)\n      sysexend: 0xF7,         // 247 (never actually received - simply ends a sysex)\n\n      // System real-time messages\n      clock: 0xF8,            // 248\n      start: 0xFA,            // 250\n      continue: 0xFB,         // 251\n      stop: 0xFC,             // 252\n      activesensing: 0xFE,    // 254\n      reset: 0xFF,            // 255\n\n      // Custom WebMidi.js messages\n      midimessage: 0,\n      unknownsystemmessage: -1\n\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.SYSTEM_MESSAGES instead)\n   * @private\n   * @static\n   */\n  static get MIDI_SYSTEM_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_SYSTEM_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.SYSTEM_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.SYSTEM_MESSAGES;\n\n  }\n\n  /**\n   * Array of channel-specific event names that can be listened for. This includes channel mode\n   * events and RPN/NRPN events.\n   *\n   * @type {string[]}\n   * @readonly\n   */\n  static get CHANNEL_EVENTS() {\n\n    return [\n\n      // MIDI channel message events\n      \"noteoff\",\n      \"controlchange\",\n      \"noteon\",\n      \"keyaftertouch\",\n      \"programchange\",\n      \"channelaftertouch\",\n      \"pitchbend\",\n\n      // MIDI channel mode events\n      \"allnotesoff\",\n      \"allsoundoff\",\n      \"localcontrol\",\n      \"monomode\",\n      \"omnimode\",\n      \"resetallcontrollers\",\n\n      // RPN/NRPN events\n      \"nrpn\",\n      \"nrpn-dataentrycoarse\",\n      \"nrpn-dataentryfine\",\n      \"nrpn-dataincrement\",\n      \"nrpn-datadecrement\",\n      \"rpn\",\n      \"rpn-dataentrycoarse\",\n      \"rpn-dataentryfine\",\n      \"rpn-dataincrement\",\n      \"rpn-datadecrement\",\n\n      // Legacy (remove in v4)\n      \"nrpn-databuttonincrement\",\n      \"nrpn-databuttondecrement\",\n      \"rpn-databuttonincrement\",\n      \"rpn-databuttondecrement\",\n\n    ];\n  }\n\n}\n","import {WebMidi} from \"./WebMidi.js\";\nimport {Utilities} from \"./Utilities.js\";\n\n/**\n * The `Note` class represents a single musical note such as `\"D3\"`, `\"G#4\"`, `\"F-1\"`, `\"Gb7\"`, etc.\n *\n * `Note` objects can be played back on a single channel by calling\n * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same\n * output, by calling [`Output.playNote()`]{@link Output#playNote}.\n *\n * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.\n * These can be changed by passing in the appropriate option. It is also possible to set a\n * system-wide default for attack and release velocities by using the\n * [`WebMidi.defaults`](WebMidi#defaults) property.\n *\n * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and\n * [`rawRelease`](#rawRelease) to both get and set the values.\n *\n * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped\n * when the duration has elapsed by sending a `\"noteoff\"` event. By default, the duration is set to\n * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a\n * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},\n * [`Output.stopNote()`]{@link Output#stopNote} or similar.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Note {\n\n  /**\n   * Creates a `Note` object.\n   *\n   * @param value {string|number} The value used to create the note. If an identifier string is used,\n   * it must start with the note letter, optionally followed by an accidental and followed by the\n   * octave number (`\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`, etc.). If a number is used, it must be an\n   * integer between 0 and 127. In this case, middle C is considered to be C4 (note number 60).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should be\n   * explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @throws {Error} Invalid note identifier\n   * @throws {RangeError} Invalid name value\n   * @throws {RangeError} Invalid accidental value\n   * @throws {RangeError} Invalid octave value\n   * @throws {RangeError} Invalid duration value\n   * @throws {RangeError} Invalid attack value\n   * @throws {RangeError} Invalid release value\n   */\n  constructor(value, options = {}) {\n\n    // Assign property defaults\n    this.duration = WebMidi.defaults.note.duration;\n    this.attack = WebMidi.defaults.note.attack;\n    this.release = WebMidi.defaults.note.release;\n\n    // Assign property values from options (validation occurs in setter)\n    if (options.duration != undefined) this.duration = options.duration;\n    if (options.attack != undefined) this.attack = options.attack;\n    if (options.rawAttack != undefined) this.attack = Utilities.from7bitToFloat(options.rawAttack);\n    if (options.release != undefined) this.release = options.release;\n    if (options.rawRelease != undefined) {\n      this.release = Utilities.from7bitToFloat(options.rawRelease);\n    }\n\n    // Assign note depending on the way it was specified (name or number)\n    if (Number.isInteger(value)) {\n      this.identifier = Utilities.toNoteIdentifier(value);\n    } else {\n      this.identifier = value;\n    }\n\n  }\n\n  /**\n   * The name, optional accidental and octave of the note, as a string.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get identifier() {\n    return this._name + (this._accidental || \"\") + this._octave;\n  }\n  set identifier(value) {\n\n    const fragments = Utilities.getNoteDetails(value);\n\n    if (WebMidi.validation) {\n      if (!value) throw new Error(\"Invalid note identifier\");\n    }\n\n    this._name = fragments.name;\n    this._accidental = fragments.accidental;\n    this._octave = fragments.octave;\n\n  }\n\n  /**\n   * The name (letter) of the note. If you need the full name with octave and accidental, you can\n   * use the [`identifier`]{@link Note#identifier} property instead.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n\n    if (WebMidi.validation) {\n      value = value.toUpperCase();\n      if (![\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"].includes(value)) {\n        throw new Error(\"Invalid name value\");\n      }\n    }\n\n    this._name = value;\n\n  }\n\n  /**\n   * The accidental (#, ##, b or bb) of the note.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get accidental() {\n    return this._accidental;\n  }\n  set accidental(value) {\n\n    if (WebMidi.validation) {\n      value = value.toLowerCase();\n      if (![\"#\", \"##\", \"b\", \"bb\"].includes(value)) throw new Error(\"Invalid accidental value\");\n    }\n\n    this._accidental = value;\n\n  }\n\n  /**\n   * The octave of the note.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get octave() {\n    return this._octave;\n  }\n  set octave(value) {\n\n    if (WebMidi.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new Error(\"Invalid octave value\");\n    }\n\n    this._octave = value;\n\n  }\n\n  /**\n   * The duration of the note as a positive decimal number representing the number of milliseconds\n   * that the note should play for.\n   *\n   * @type {number}\n   * @since 3.0.0\n   */\n  get duration() {\n    return this._duration;\n  }\n  set duration(value) {\n\n    if (WebMidi.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || value === null || value < 0) {\n        throw new RangeError(\"Invalid duration value.\");\n      }\n    }\n\n    this._duration = value;\n\n  }\n\n  /**\n   * The attack velocity of the note as an integer between 0 and 1.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get attack() {\n    return this._attack;\n  }\n  set attack(value) {\n\n    if (WebMidi.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || !(value >= 0 && value <= 1)) {\n        throw new RangeError(\"Invalid attack value.\");\n      }\n    }\n\n    this._attack = value;\n\n  }\n\n  /**\n   * The release velocity of the note as an integer between 0 and 1.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get release() {\n    return this._release;\n  }\n  set release(value) {\n\n    if (WebMidi.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || !(value >= 0 && value <= 1)) {\n        throw new RangeError(\"Invalid release value.\");\n      }\n    }\n\n    this._release = value;\n\n  }\n\n  /**\n   * The attack velocity of the note as a positive integer between 0 and 127.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get rawAttack() {\n    return Utilities.fromFloatTo7Bit(this._attack);\n  }\n  set rawAttack(value) {\n    this._attack = Utilities.from7bitToFloat(value);\n  }\n\n  /**\n   * The release velocity of the note as a positive integer between 0 and 127.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get rawRelease() {\n    return Utilities.fromFloatTo7Bit(this._release);\n  }\n  set rawRelease(value) {\n    this._release = Utilities.from7bitToFloat(value);\n  }\n\n  /**\n   * The MIDI number of the note (`0` - `127`). This number is derived from the note identifier\n   * using C4 as a reference for middle C.\n   *\n   * @type {number}\n   * @readonly\n   * @since 3.0.0\n   */\n  get number() {\n    return Utilities.toNoteNumber(this.identifier);\n  }\n\n  /**\n   * Returns a MIDI note number offset by octave and/or semitone. If the calculated value is less\n   * than 0, 0 will be returned. If the calculated value is more than 127, 127 will be returned. If\n   * an invalid value is supplied, 0 will be used.\n   *\n   * @param [octaveOffset] {number} An integer to offset the note number by octave.\n   * @param [semitoneOffset] {number} An integer to offset the note number by semitone.\n   * @returns {number} An integer between 0 and 127\n   */\n  getOffsetNumber(octaveOffset = 0, semitoneOffset = 0) {\n\n    if (WebMidi.validation) {\n      octaveOffset = parseInt(octaveOffset) || 0;\n      semitoneOffset = parseInt(semitoneOffset) || 0;\n    }\n\n    return Math.min(Math.max(this.number + (octaveOffset * 12) + semitoneOffset, 0), 127);\n\n  }\n\n}\n","import {Note} from \"./Note.js\";\nimport {WebMidi} from \"./WebMidi.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/**\n * The `Utilities` class contains general-purpose utility methods. All methods are static and\n * should be called using the class name. For example: `Utilities.getNoteDetails(\"C4\")`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Utilities {\n\n  /**\n   * Returns a MIDI note number matching the identifier passed in the form of a string. The\n   * identifier must include the octave number. The identifier also optionally include a sharp (#),\n   * a double sharp (##), a flat (b) or a double flat (bb) symbol. For example, these are all valid\n   * identifiers: C5, G4, D#-1, F0, Gb7, Eb-1, Abb4, B##6, etc.\n   *\n   * When converting note identifiers to numbers, C4 is considered to be middle C (MIDI note number\n   * 60) as per the scientific pitch notation standard.\n   *\n   * The resulting note number can be offset by using the `octaveOffset` parameter.\n   *\n   * @param identifier {string} The identifier in the form of a letter, followed by an optional \"#\",\n   * \"##\", \"b\" or \"bb\" followed by the octave number. For exemple: C5, G4, D#-1, F0, Gb7, Eb-1,\n   * Abb4, B##6, etc.\n   *\n   * @param {number} [octaveOffset=0] A integer to offset the octave by.\n   *\n   * @returns {number} The MIDI note number (an integer between 0 and 127).\n   *\n   * @throws RangeError Invalid 'octaveOffset' value\n   *\n   * @throws TypeError Invalid note identifier\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   * @static\n   */\n  static toNoteNumber(identifier, octaveOffset = 0) {\n\n    // Validation\n    octaveOffset = octaveOffset == undefined ? 0 : parseInt(octaveOffset);\n    if (isNaN(octaveOffset)) throw new RangeError(\"Invalid 'octaveOffset' value\");\n    if (typeof identifier !== \"string\") identifier = \"\";\n\n    const fragments = this.getNoteDetails(identifier);\n    if (!fragments) throw new TypeError(\"Invalid note identifier\");\n\n    const notes = { C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 };\n    let result = (fragments.octave + 1 + octaveOffset) * 12;\n    result += notes[fragments.name];\n\n    if (fragments.accidental) {\n      if (fragments.accidental.startsWith(\"b\")) {\n        result -= fragments.accidental.length;\n      } else {\n        result += fragments.accidental.length;\n      }\n    }\n\n    if (result < 0 || result > 127) throw new RangeError(\"Invalid octaveOffset value\");\n\n    return result;\n\n  }\n\n  /**\n   * Given a proper note identifier (`C#4`, `Gb-1`, etc.) or a valid MIDI note number (0-127), this\n   * method returns an object containing broken down details about the specified note (uppercase\n   * letter, accidental and octave).\n   *\n   * When a number is specified, the translation to note is done using a value of 60 for middle C\n   * (C4 = middle C).\n   *\n   * @param value {string|number} A note identifier A  atring (\"C#4\", \"Gb-1\", etc.) or a MIDI note\n   * number (0-127).\n   *\n   * @returns {{accidental: string, identifier: string, name: string, octave: number }}\n   *\n   * @throws TypeError Invalid note identifier\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static getNoteDetails(value) {\n\n    if (Number.isInteger(value)) value = this.toNoteIdentifier(value);\n\n    const matches = value.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)$/i);\n    if (!matches) throw new TypeError(\"Invalid note identifier\");\n\n    const name = matches[1].toUpperCase();\n    const octave = parseInt(matches[3]);\n    let accidental = matches[2].toLowerCase();\n    accidental = accidental === \"\" ? undefined : accidental;\n\n    const fragments = {\n      accidental: accidental,\n      identifier: name + (accidental || \"\") + octave,\n      name: name,\n      octave: octave\n    };\n\n    return fragments;\n\n  }\n\n  /**\n   * Returns a sanitized array of valid MIDI channel numbers (1-16). The parameter should be a\n   * single integer or an array of integers.\n   *\n   * For backwards-compatibility, passing `undefined` as a parameter to this method results in all\n   * channels being returned (1-16). Otherwise, parameters that cannot successfully be parsed to\n   * integers between 1 and 16 are silently ignored.\n   *\n   * @param [channel] {number|number[]} An integer or an array of integers to parse as channel\n   * numbers.\n   *\n   * @returns {number[]} An array of 0 or more valid MIDI channel numbers.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static sanitizeChannels(channel) {\n\n    let channels;\n\n    if (WebMidi.validation) {\n\n      if (channel === \"all\") { // backwards-compatibility\n        channels = [\"all\"];\n      } else if (channel === \"none\") { // backwards-compatibility\n        return [];\n      }\n\n    }\n\n    if (!Array.isArray(channel)) {\n      channels = [channel];\n    } else {\n      channels = channel;\n    }\n\n    // In order to preserve backwards-compatibility, we let this assignment as it is.\n    if (channels.indexOf(\"all\") > -1) {\n      channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n    }\n\n    return channels\n      .map(function(ch) {\n        return parseInt(ch);\n      })\n      .filter(function(ch) {\n        return (ch >= 1 && ch <= 16);\n      });\n\n  }\n\n  /**\n   * Returns a valid timestamp, relative to the navigation start of the document, derived from the\n   * `time` parameter. If the parameter is a string starting with the \"+\" sign and followed by a\n   * number, the resulting timestamp will be the sum of the current timestamp plus that number. If\n   * the parameter is a positive number, it will be returned as is. Otherwise, false will be\n   * returned.\n   *\n   * @param [time] {number|string} The time string (e.g. `\"+2000\"`) or number to parse\n   * @return {number|false} A positive number or `false` (if the time cannot be converted)\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static toTimestamp(time) {\n\n    let value = false;\n\n    const parsed = parseFloat(time);\n    if (isNaN(parsed)) return false;\n\n    if (typeof time === \"string\" && time.substring(0, 1) === \"+\") {\n      if (parsed >= 0) value = WebMidi.time + parsed;\n    } else {\n      if (parsed >= 0) value = parsed;\n    }\n\n    return value;\n\n  }\n\n  /**\n   * Returns a valid MIDI note number (0-127) given the specified input. The input usually is a\n   * string containing a note identifier (`\"C3\"`, `\"F#4\"`, `\"D-2\"`, `\"G8\"`, etc.). If an integer\n   * between 0 and 127 is passed, it will simply be returned as is (for convenience). Other strings\n   * will be parsed for integer value, if possible.\n   *\n   * If the input is an identifier, the resulting note number is offset by the `octaveOffset`\n   * parameter. For example, if you pass in \"C4\" (note number 60) and the `octaveOffset` value is\n   * -2, the resulting MIDI note number will be 36.\n   *\n   * @param input {string|number} A string or number to extract the MIDI note number from.\n   * @param octaveOffset {number} An integer to offset the octave by\n   *\n   * @returns {number|false} A valid MIDI note number (0-127) or `false` if the input could not\n   * successfully be parsed to a note number.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static guessNoteNumber(input, octaveOffset) {\n\n    // Validate and, if necessary, assign default\n    octaveOffset = parseInt(octaveOffset) || 0;\n\n    let output = false;\n\n    // Check input type\n    if (Number.isInteger(input) && input >= 0 && input <= 127) {        // uint\n      output = parseInt(input);\n    } else if (parseInt(input) >= 0 && parseInt(input) <= 127) {        // float or uint as string\n      output = parseInt(input);\n    } else if (typeof input === \"string\" || input instanceof String) {  // string\n      try {\n        output = this.toNoteNumber(input.trim(), octaveOffset);\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return output;\n\n  }\n\n  /**\n   * Returns an identifier string representing a note name (with optional accidental) followed by an\n   * octave number. The octave can be offset by using the `octaveOffset` parameter.\n   *\n   * @param {number} number The MIDI note number to convert to a note identifier\n   * @param {number} octaveOffset An offset to apply to the resulting octave\n   *\n   * @returns {string}\n   *\n   * @throws RangeError Invalid note number\n   * @throws RangeError Invalid octaveOffset value\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static toNoteIdentifier(number, octaveOffset) {\n\n    number = parseInt(number);\n    if (isNaN(number) || number < 0 || number > 127) throw new RangeError(\"Invalid note number\");\n\n    octaveOffset = octaveOffset == undefined ? 0 : parseInt(octaveOffset);\n    if (isNaN(octaveOffset)) throw new RangeError(\"Invalid octaveOffset value\");\n\n    const notes = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n    const octave = Math.floor(number / 12 - 1) + octaveOffset;\n    return notes[number % 12] + octave.toString();\n\n  }\n\n  /**\n   * Converts the `input` parameter to a valid [`Note`]{@link Note} object. The input usually is an\n   * unsigned integer (0-127) or a note identifier (`\"C4\"`, `\"G#5\"`, etc.). If the input is a\n   * [`Note`]{@link Note} object, it will be returned as is.\n   *\n   * If the input is a note number or identifier, it is possible to specify options by providing the\n   * `options` parameter.\n   *\n   * @param [input] {number|string|Note}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should\n   * be explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.octaveOffset=0] An integer to offset the octave by. **This is only\n   * used when the input value is a note identifier.**\n   *\n   * @returns {Note}\n   *\n   * @throws TypeError The input could not be parsed to a note\n   *\n   * @since version 3.0.0\n   * @static\n   */\n  static buildNote(input, options= {}) {\n\n    options.octaveOffset = parseInt(options.octaveOffset) || 0;\n\n    // If it's already a Note, we're done\n    if (input instanceof Note) return input;\n\n    let number = this.guessNoteNumber(input, options.octaveOffset);\n\n    if (number === false) { // We use a comparison b/c the note can be 0 (which equates to false)\n      throw new TypeError(`The input could not be parsed as a note (${input})`);\n    }\n\n    // If we got here, we have a proper note number. Before creating the new note, we strip out\n    // 'octaveOffset' because it has already been factored in when calling guessNoteNumber().\n    options.octaveOffset = undefined;\n    return new Note(number, options);\n\n  }\n\n  /**\n   * Converts an input value, which can be an unsigned integer (0-127), a note identifier, a\n   * [`Note`]{@link Note}  object or an array of the previous types, to an array of\n   * [`Note`]{@link Note}  objects.\n   *\n   * [`Note`]{@link Note}  objects are returned as is. For note numbers and identifiers, a\n   * [`Note`]{@link Note} object is created with the options specified. An error will be thrown when\n   * encountering invalid input.\n   *\n   * Note: if both the `attack` and `rawAttack` options are specified, the later has priority. The\n   * same goes for `release` and `rawRelease`.\n   *\n   * @param [notes] {number|string|Note|number[]|string[]|Note[]}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should\n   * be explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.octaveOffset=0] An integer to offset the octave by. **This is only\n   * used when the input value is a note identifier.**\n   *\n   * @returns {Note[]}\n   *\n   * @throws TypeError An element could not be parsed as a note.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static buildNoteArray(notes, options = {}) {\n\n    let result = [];\n    if (!Array.isArray(notes)) notes = [notes];\n\n    notes.forEach(note => {\n      result.push(this.buildNote(note, options));\n    });\n\n    return result;\n\n  }\n\n  /**\n   * Returns a number between 0 and 1 representing the ratio of the input value divided by 127 (7\n   * bit). The returned value is restricted between 0 and 1 even if the input is greater than 127 or\n   * smaller than 0.\n   *\n   * Passing `Infinity` will return `1` and passing `-Infinity` will return `0`. Otherwise, when the\n   * input value cannot be converted to an integer, the method returns 0.\n   *\n   * @param value {number} A positive integer between 0 and 127 (inclusive)\n   * @returns {number} A number between 0 and 1 (inclusive)\n   * @static\n   */\n  static from7bitToFloat(value) {\n    if (value === Infinity) value = 127;\n    value = parseInt(value) || 0;\n    return Math.min(Math.max(value / 127, 0), 1);\n  }\n\n  /**\n   * Returns an integer between 0 and 127 which is the result of multiplying the input value by\n   * 127. The input value should be a number between 0 and 1 (inclusively). The returned value is\n   * restricted between 0 and 127 even if the input is greater than 1 or smaller than 0.\n   *\n   * Passing `Infinity` will return `127` and passing `-Infinity` will return `0`. Otherwise, when\n   * the input value cannot be converted to a number, the method returns 0.\n   *\n   * @param value {number} A positive float between 0 and 1 (inclusive)\n   * @returns {number} A number between 0 and 127 (inclusive)\n   * @static\n   */\n  static fromFloatTo7Bit(value) {\n    if (value === Infinity) value = 1;\n    value = parseFloat(value) || 0;\n    return Math.min(Math.max(Math.round(value * 127), 0), 127);\n  }\n\n  /**\n   * Combines and converts MSB and LSB values (0-127) to a float between 0 and 1. The returned value\n   * is within between 0 and 1 even if the result is greater than 1 or smaller than 0.\n   *\n   * @param msb {number} The most significant byte as a integer between 0 and 127.\n   * @param [lsb=0] {number} The least significant byte as a integer between 0 and 127.\n   * @returns {number} A float between 0 and 1.\n   */\n  static fromMsbLsbToFloat(msb, lsb = 0) {\n\n    if (WebMidi.validation) {\n      msb = Math.min(Math.max(parseInt(msb) || 0, 0), 127);\n      lsb = Math.min(Math.max(parseInt(lsb) || 0, 0), 127);\n    }\n\n    const value = ((msb << 7) + lsb) / 16383;\n    return Math.min(Math.max(value, 0), 1);\n\n  }\n\n  /**\n   * Extracts 7bit MSB and LSB values from the supplied float.\n   *\n   * @param value {number} A float between 0 and 1\n   * @returns {{lsb: number, msb: number}}\n   */\n  static fromFloatToMsbLsb(value) {\n\n    if (WebMidi.validation) {\n      value = Math.min(Math.max(parseFloat(value) || 0, 0), 1);\n    }\n\n    const multiplied = Math.round(value * 16383);\n\n    return {\n      msb: multiplied >> 7,\n      lsb: multiplied & 0x7F\n    };\n\n  }\n\n  /**\n   * Returns the supplied MIDI note number offset by the requested octave and semitone values. If\n   * the calculated value is less than 0, 0 will be returned. If the calculated value is more than\n   * 127, 127 will be returned. If an invalid offset value is supplied, 0 will be used.\n   *\n   * @param number {number} The MIDI note to offset as an integer between 0 and 127.\n   * @param octaveOffset {number} An integer to offset the note by (in octave)\n   * @param octaveOffset {number} An integer to offset the note by (in semitones)\n   * @returns {number} An integer between 0 and 127\n   *\n   * @throws {Error} Invalid note number\n   * @static\n   */\n  static offsetNumber(number, octaveOffset = 0, semitoneOffset = 0) {\n\n    if (WebMidi.validation) {\n      number = parseInt(number);\n      if (isNaN(number)) throw new Error(\"Invalid note number\");\n      octaveOffset = parseInt(octaveOffset) || 0;\n      semitoneOffset = parseInt(semitoneOffset) || 0;\n    }\n\n    return Math.min(Math.max(number + (octaveOffset * 12) + semitoneOffset, 0), 127);\n\n  }\n\n  /**\n   * Returns the name of the first property of the supplied object whose value is equal to the one\n   * supplied. If nothing is found, `undefined` is returned.\n   *\n   * @param object {object} The object to look for the property in.\n   * @param value {*} Any value that can be expected to be found in the object's properties.\n   * @returns {string|undefined} The name of the matching property or `undefined` if nothing is\n   * found.\n   * @static\n   */\n  static getPropertyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  }\n\n  /**\n   * Returns the name of a control change message matching the specified number (0-127). Some valid\n   * control change numbers do not have a specific name or purpose assigned in the MIDI\n   * [spec](https://midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2).\n   * In these cases, the method returns `controllerXXX` (where XXX is the number).\n   *\n   * @param {number} number An integer (0-127) representing the control change message\n   * @returns {string|undefined} The matching control change name or `undefined` if no match was\n   * found.\n   *\n   * @static\n   */\n  static getCcNameByNumber(number) {\n\n    if (WebMidi.validation) {\n      number = parseInt(number);\n      if (!(number >= 0 && number <= 127)) return undefined;\n    }\n\n    return Enumerations.CONTROL_CHANGE_MESSAGES[number].name;\n\n  }\n\n  /**\n   * Returns the number of a control change message matching the specified name.\n   *\n   * @param {string} name A string representing the control change message\n   * @returns {string|undefined} The matching control change number or `undefined` if no match was\n   * found.\n   *\n   * @since 3.1\n   * @static\n   */\n  static getCcNumberByName(name) {\n    let message = Enumerations.CONTROL_CHANGE_MESSAGES.find(element => element.name === name);\n    if (message) {\n      return message.number;\n    } else {\n      // Legacy (remove in v4)\n      return Enumerations.MIDI_CONTROL_CHANGE_MESSAGES[name];\n    }\n  }\n\n  /**\n   * Returns the channel mode name matching the specified number. If no match is found, the function\n   * returns `false`.\n   *\n   * @param {number} number An integer representing the channel mode message (120-127)\n   * @returns {string|false} The name of the matching channel mode or `false` if no match could be\n   * found.\n   *\n   * @since 2.0.0\n   */\n  static getChannelModeByNumber(number) {\n\n    if ( !(number >= 120 && number <= 127) ) return false;\n\n    for (let cm in Enumerations.CHANNEL_MODE_MESSAGES) {\n\n      if (\n        Enumerations.CHANNEL_MODE_MESSAGES.hasOwnProperty(cm) &&\n        number === Enumerations.CHANNEL_MODE_MESSAGES[cm]\n      ) {\n        return cm;\n      }\n\n    }\n\n    return false;\n\n  }\n\n  /**\n   * Indicates whether the execution environment is Node.js (`true`) or not (`false`)\n   * @type {boolean}\n   */\n  static get isNode() {\n    return typeof process !== \"undefined\" &&\n      process.versions != null &&\n      process.versions.node != null;\n  }\n\n  /**\n   * Indicates whether the execution environment is a browser (`true`) or not (`false`)\n   * @type {boolean}\n   */\n  static get isBrowser() {\n    return typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n  }\n\n}\n","import {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {WebMidi} from \"./WebMidi.js\";\nimport {Utilities} from \"./Utilities.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/**\n * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are\n * provided by an [`Output`](Output) port which, itself, is made available by a device. The\n * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `OutputChannel` objects can be found inside the parent output's\n * [`channels`]{@link Output#channels} property.\n *\n * @param {Output} output The [`Output`](Output) this channel belongs to.\n * @param {number} number The MIDI channel number (`1` - `16`).\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class OutputChannel extends EventEmitter {\n\n  /**\n   * Creates an `OutputChannel` object.\n   *\n   * @param {Output} output The [`Output`](Output) this channel belongs to.\n   * @param {number} number The MIDI channel number (`1` - `16`).\n   */\n  constructor(output, number) {\n\n    super();\n\n    /**\n     * @type {Output}\n     * @private\n     */\n    this._output = output;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._number = number;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n  }\n\n  /**\n   * Unlinks the MIDI subsystem, removes all listeners attached to the channel and nulls the channel\n   * number. This method is mostly for internal use. It has not been prefixed with an underscore\n   * since it is called by other objects such as the `Output` object.\n   *\n   * @private\n   */\n  destroy() {\n    this._output = null;\n    this._number = null;\n    this._octaveOffset = 0;\n    this.removeListener();\n  }\n\n  /**\n   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be\n   * sent immediately. The message should be an array of 8-bit unsigned integers (`0` - `225`),\n   * a\n   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}\n   * object or a [`Message`](Message) object.\n   *\n   * It is usually not necessary to use this method directly as you can use one of the simpler\n   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),\n   * [`sendControlChange()`](#sendControlChange), etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param message {number[]|Uint8Array|Message} A `Message` object, an array of 8-bit unsigned\n   * integers or a `Uint8Array` object (not available in Node.js) containing the message bytes.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.\n   *\n   * @throws {RangeError} Data bytes must be integers between 0 and 255.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  send(message, options = {time: 0}) {\n    this.output.send(message, options);\n    return this;\n  }\n\n  /**\n   * Sends a MIDI **key aftertouch** message at the scheduled time. This is a key-specific\n   * aftertouch. For a channel-wide aftertouch message, use\n   * [`sendChannelAftertouch()`]{@link #sendChannelAftertouch}.\n   *\n   * @param target {number|Note|string|number[]|Note[]|string[]} The note(s) for which you are sending\n   * an aftertouch value. The notes can be specified by using a MIDI note number (`0` - `127`), a\n   * [`Note`](Note) object, a note identifier (e.g. `C3`, `G#4`, `F-1`, `Db7`) or an array of the\n   * previous types. When using a note identifier, octave range must be between `-1` and `9`. The\n   * lowest note is `C-1` (MIDI note number `0`) and the highest note is `G9` (MIDI note number\n   * `127`).\n   *\n   * When using a note identifier, the octave value will be offset by the local\n   * [`octaveOffset`](#octaveOffset) and by\n   * [`Output.octaveOffset`](Output#octaveOffset) and [`WebMidi.octaveOffset`](WebMidi#octaveOffset)\n   * (if those values are not `0`). When using a key number, `octaveOffset` values are ignored.\n   *\n   * @param [pressure=0.5] {number} The pressure level (between `0` and `1`). An invalid pressure\n   * value will silently trigger the default behaviour. If the `rawValue` option is set to `true`,\n   * the pressure is defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @throws RangeError Invalid key aftertouch value.\n   */\n  sendKeyAftertouch(target, pressure, options = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy support\n      if (options.useRawValue) options.rawValue = options.useRawValue;\n\n      if (isNaN(parseFloat(pressure))) {\n        throw new RangeError(\"Invalid key aftertouch value.\");\n      }\n      if (options.rawValue) {\n        if (!(pressure >= 0 && pressure <= 127 && Number.isInteger(pressure))) {\n          throw new RangeError(\"Key aftertouch raw value must be an integer between 0 and 127.\");\n        }\n      } else {\n        if (!(pressure >= 0 && pressure <= 1)) {\n          throw new RangeError(\"Key aftertouch value must be a float between 0 and 1.\");\n        }\n      }\n\n    }\n\n    // Normalize pressure to integer\n    if (!options.rawValue) pressure = Utilities.fromFloatTo7Bit(pressure);\n\n    // Plot total offset\n    const offset = WebMidi.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    // Make sure we are dealing with an array\n    if (!Array.isArray(target)) target = [target];\n\n    Utilities.buildNoteArray(target).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.keyaftertouch << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          pressure\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **control change** message to the channel at the scheduled time. The control\n   * change message to send can be specified numerically (`0` to `127`) or by using one of the\n   * following common names:\n   *\n   * | Number | Name                          |\n   * |--------|-------------------------------|\n   * | 0      |`bankselectcoarse`             |\n   * | 1      |`modulationwheelcoarse`        |\n   * | 2      |`breathcontrollercoarse`       |\n   * | 4      |`footcontrollercoarse`         |\n   * | 5      |`portamentotimecoarse`         |\n   * | 6      |`dataentrycoarse`              |\n   * | 7      |`volumecoarse`                 |\n   * | 8      |`balancecoarse`                |\n   * | 10     |`pancoarse`                    |\n   * | 11     |`expressioncoarse`             |\n   * | 12     |`effectcontrol1coarse`         |\n   * | 13     |`effectcontrol2coarse`         |\n   * | 18     |`generalpurposeslider3`        |\n   * | 19     |`generalpurposeslider4`        |\n   * | 32     |`bankselectfine`               |\n   * | 33     |`modulationwheelfine`          |\n   * | 34     |`breathcontrollerfine`         |\n   * | 36     |`footcontrollerfine`           |\n   * | 37     |`portamentotimefine`           |\n   * | 38     |`dataentryfine`                |\n   * | 39     |`volumefine`                   |\n   * | 40     |`balancefine`                  |\n   * | 42     |`panfine`                      |\n   * | 43     |`expressionfine`               |\n   * | 44     |`effectcontrol1fine`           |\n   * | 45     |`effectcontrol2fine`           |\n   * | 64     |`holdpedal`                    |\n   * | 65     |`portamento`                   |\n   * | 66     |`sustenutopedal`               |\n   * | 67     |`softpedal`                    |\n   * | 68     |`legatopedal`                  |\n   * | 69     |`hold2pedal`                   |\n   * | 70     |`soundvariation`               |\n   * | 71     |`resonance`                    |\n   * | 72     |`soundreleasetime`             |\n   * | 73     |`soundattacktime`              |\n   * | 74     |`brightness`                   |\n   * | 75     |`soundcontrol6`                |\n   * | 76     |`soundcontrol7`                |\n   * | 77     |`soundcontrol8`                |\n   * | 78     |`soundcontrol9`                |\n   * | 79     |`soundcontrol10`               |\n   * | 80     |`generalpurposebutton1`        |\n   * | 81     |`generalpurposebutton2`        |\n   * | 82     |`generalpurposebutton3`        |\n   * | 83     |`generalpurposebutton4`        |\n   * | 91     |`reverblevel`                  |\n   * | 92     |`tremololevel`                 |\n   * | 93     |`choruslevel`                  |\n   * | 94     |`celestelevel`                 |\n   * | 95     |`phaserlevel`                  |\n   * | 96     |`dataincrement`                |\n   * | 97     |`datadecrement`                |\n   * | 98     |`nonregisteredparametercoarse` |\n   * | 99     |`nonregisteredparameterfine`   |\n   * | 100    |`registeredparametercoarse`    |\n   * | 101    |`registeredparameterfine`      |\n   * | 120    |`allsoundoff`                  |\n   * | 121    |`resetallcontrollers`          |\n   * | 122    |`localcontrol`                 |\n   * | 123    |`allnotesoff`                  |\n   * | 124    |`omnimodeoff`                  |\n   * | 125    |`omnimodeon`                   |\n   * | 126    |`monomodeon`                   |\n   * | 127    |`polymodeon`                   |\n   *\n   * As you can see above, not all control change message have a matching name. This does not mean\n   * you cannot use the others. It simply means you will need to use their number\n   * (`0` to `127`) instead of their name. While you can still use them, numbers `120` to `127` are\n   * usually reserved for *channel mode* messages. See\n   * [`sendChannelMode()`]{@link OutputChannel#sendChannelMode} method for more info.\n   *\n   * To view a detailed list of all available **control change** messages, please consult \"Table 3 -\n   * Control Change Messages\" from the [MIDI Messages](\n   * https://www.midi.org/specifications/item/table-3-control-change-messages-data-bytes-2)\n   * specification.\n   *\n   * **Note**: messages #0-31 (MSB) are paired with messages #32-63 (LSB). For example, message #1\n   * (`modulationwheelcoarse`) can be accompanied by a second control change message for\n   * `modulationwheelfine` to achieve a greater level of precision. if you want to specify both MSB\n   * and LSB for messages between `0` and `31`, you can do so by passing a 2-value array as the\n   * second parameter.\n   *\n   * @param {number|string} controller The MIDI controller name or number (`0` - `127`).\n   *\n   * @param {number|number[]} value The value to send (0-127). You can also use a two-position array\n   * for controllers 0 to 31. In this scenario, the first value will be sent as usual and the second\n   * value will be sent to the matching LSB controller (which is obtained by adding 32 to the first\n   * controller)\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 127.\n   * @throws {RangeError} Invalid controller name.\n   * @throws {TypeError} The value array must have a length of 2.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   */\n  sendControlChange(controller, value, options = {}) {\n\n    if (typeof controller === \"string\") {\n      controller = Utilities.getCcNumberByName(controller);\n    }\n\n    if (!Array.isArray(value)) value = [value];\n\n    if (WebMidi.validation) {\n\n      if (controller === undefined) {\n        throw new TypeError(\n          \"Control change must be identified with a valid name or an integer between 0 and 127.\"\n        );\n      }\n\n      if (!Number.isInteger(controller) || !(controller >= 0 && controller <= 127)) {\n        throw new TypeError(\"Control change number must be an integer between 0 and 127.\");\n      }\n\n      value = value.map(item => {\n        const output = Math.min(Math.max(parseInt(item), 0), 127);\n        if (isNaN(output)) throw new TypeError(\"Values must be integers between 0 and 127\");\n        return output;\n      });\n\n      if (value.length === 2 && controller >= 32) {\n        throw new TypeError(\"To use a value array, the controller must be between 0 and 31\");\n      }\n\n    }\n\n    value.forEach((item, index) => {\n\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1),\n          controller + (index * 32),\n          value[index]\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Selects a MIDI non-registered parameter so it is affected by upcoming data entry, data\n   * increment and data decrement messages.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes that identify\n   * the registered parameter. The NRPN MSB (99 or 0x63) is a position 0. The NRPN LSB (98 or 0x62)\n   * is at position 1.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _selectNonRegisteredParameter(parameter, options = {}) {\n\n    // parameter[0] = Math.floor(parameter[0]);\n    // if (!(parameter[0] >= 0 && parameter[0] <= 127)) {\n    //   throw new RangeError(\"The control63 value must be between 0 and 127.\");\n    // }\n    //\n    // parameter[1] = Math.floor(parameter[1]);\n    // if (!(parameter[1] >= 0 && parameter[1] <= 127)) {\n    //   throw new RangeError(\"The control62 value must be between 0 and 127.\");\n    // }\n\n    this.sendControlChange(0x63, parameter[0], options);\n    this.sendControlChange(0x62, parameter[1], options);\n\n    return this;\n\n  }\n\n  /**\n   * Deselects the currently active MIDI registered parameter so it is no longer affected by data\n   * entry, data increment and data decrement messages.\n   *\n   * Current best practice recommends doing that after each call to\n   * [_setCurrentParameter()]{@link #_setCurrentParameter}.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _deselectRegisteredParameter(options = {}) {\n    this.sendControlChange(0x65, 0x7F, options);\n    this.sendControlChange(0x64, 0x7F, options);\n    return this;\n  }\n\n  /**\n   * Deselects the currently active MIDI non-registered parameter so it is no longer affected by\n   * data entry, data increment and data decrement messages.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _deselectNonRegisteredParameter(options = {}) {\n    this.sendControlChange(0x65, 0x7F, options);\n    this.sendControlChange(0x64, 0x7F, options);\n    return this;\n  }\n\n  /**\n   * Selects a MIDI registered parameter so it is affected by upcoming data entry, data increment\n   * and data decrement messages.\n   *\n   * @private\n   *\n   * @param parameter {number[]} A two-position array of integers specifying the two control bytes\n   * (0x65, 0x64) that identify the registered parameter. The integers must be between 0 and 127.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _selectRegisteredParameter(parameter, options = {}) {\n    this.sendControlChange(0x65, parameter[0], options);\n    this.sendControlChange(0x64, parameter[1], options);\n    return this;\n  }\n\n  /**\n   * Sets the value of the currently selected MIDI registered parameter.\n   *\n   * @private\n   *\n   * @param data {number|number[]}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _setCurrentParameter(data, options = {}) {\n\n    data = [].concat(data);\n\n    // MSB\n    // data[0] = parseInt(data[0]);\n    // if (!isNaN(data[0]) && data[0] >= 0 && data[0] <= 127) {\n    this.sendControlChange(0x06, data[0], options);\n    // } else {\n    //   throw new RangeError(\"The msb value must be between 0 and 127.\");\n    // }\n\n    if (data.length < 2) return this;\n\n    // LSB\n    // data[1] = parseInt(data[1]);\n\n    // if (!isNaN(data[1]) && data[1] >= 0 && data[1] <= 127) {\n    this.sendControlChange(0x26, data[1], options);\n    // } else {\n    //   throw new RangeError(\"The lsb value must be between 0 and 127.\");\n    // }\n\n    return this;\n\n  }\n\n  /**\n   * Decrements the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified registered parameter is invalid.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnDecrement(parameter, options = {}) {\n\n    if (!Array.isArray(parameter)) parameter = Enumerations.REGISTERED_PARAMETERS[parameter];\n\n    if (WebMidi.validation) {\n\n      if (parameter === undefined) {\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      }\n\n      let valid = false;\n\n      Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach(p => {\n        if (\n          Enumerations.REGISTERED_PARAMETERS[p][0] === parameter[0] &&\n          Enumerations.REGISTERED_PARAMETERS[p][1] === parameter[1]\n        ) {\n          valid = true;\n        }\n      });\n\n      if (!valid) throw new TypeError(\"The specified registered parameter is invalid.\");\n\n    }\n\n    this._selectRegisteredParameter(parameter, options);\n    this.sendControlChange(0x61, 0, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Increments the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified registered parameter is invalid.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnIncrement(parameter, options = {}) {\n\n    if (!Array.isArray(parameter)) parameter = Enumerations.REGISTERED_PARAMETERS[parameter];\n\n    if (WebMidi.validation) {\n\n      if (parameter === undefined) {\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      }\n\n      let valid = false;\n\n      Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach(p => {\n        if (\n          Enumerations.REGISTERED_PARAMETERS[p][0] === parameter[0] &&\n          Enumerations.REGISTERED_PARAMETERS[p][1] === parameter[1]\n        ) {\n          valid = true;\n        }\n      });\n\n      if (!valid) throw new TypeError(\"The specified registered parameter is invalid.\");\n\n    }\n\n    this._selectRegisteredParameter(parameter, options);\n    this.sendControlChange(0x60, 0, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Plays a note or an array of notes on the channel. The first parameter is the note to play. It\n   * can be a single value or an array of the following valid values:\n   *\n   *  - A [`Note`]{@link Note} object\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *\n   * The `playNote()` method sends a **note on** MIDI message for all specified notes. If a\n   * `duration` is set in the `options` parameter or in the [`Note`]{@link Note} object's\n   * [`duration`]{@link Note#duration} property, it will also schedule a **note off** message\n   * to end the note after said duration. If no `duration` is set, the note will simply play until\n   * a matching **note off** message is sent with [`stopNote()`]{@link OutputChannel#stopNote} or\n   * [`sendNoteOff()`]{@link OutputChannel#sendNoteOff}.\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the durations and velocities defined in the\n   * [`Note`]{@link Note} objects have precedence over the ones specified via the method's `options`\n   * parameter.\n   *\n   * **Note**: per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`,\n   * `F-1`, `Db7`), a [`Note`]{@link Note} object or an array of the previous types. When using a\n   * note identifier, the octave range must be between `-1` and `9`. The lowest note is `C-1` (MIDI\n   * note number `0`) and the highest note is `G9` (MIDI note number `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration] A positive decimal number larger than `0` representing the\n   * number of milliseconds to wait before sending a **note off** message. If invalid or left\n   * undefined, only a **note on** message will be sent.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`). If the `rawAttack` option is also defined, it will have priority. An invalid velocity\n   * value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The attack velocity at which to play the note (between\n   * `0` and `127`). This has priority over the `attack` property. An invalid velocity value will\n   * silently trigger the default of 64.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawRelease` option is also defined, it will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`. This is only used with the\n   * **note off** event triggered when `options.duration` is set.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note (between `0`\n   * and `127`). This has priority over the `release` property. An invalid velocity value will\n   * silently trigger the default of 64. This is only used with the **note off** event triggered\n   * when `options.duration` is set.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  playNote(note, options = {}) {\n\n    // Send note on and, optionally, note off message (if duration is a positive number)\n    this.sendNoteOn(note, options);\n\n    const notes = Array.isArray(note) ? note : [note];\n\n    for(let note of notes) {\n      if (parseInt(note.duration) > 0) {\n        const noteOffOptions = {\n          time: (Utilities.toTimestamp(options.time) || WebMidi.time) + parseInt(note.duration),\n          release: note.release,\n          rawRelease: note.rawRelease\n        };\n        this.sendNoteOff(note, noteOffOptions);\n      } else if (parseInt(options.duration) > 0) {\n        const noteOffOptions = {\n          time: (Utilities.toTimestamp(options.time) || WebMidi.time) + parseInt(options.duration),\n          release: options.release,\n          rawRelease: options.rawRelease\n        };\n        this.sendNoteOff(note, noteOffOptions);\n      }\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified notes on the channel. The first parameter is the\n   * note. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`]{@link Note} object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the release velocity defined in the\n   * [`Note`]{@link Note} objects has precedence over the one specified via the method's `options`\n   * parameter.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types. When using a note name, octave\n   * range must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNoteOff(note, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (\n        options.rawRelease != undefined &&\n        !(options.rawRelease >= 0 && options.rawRelease <= 127)\n      ) {\n        throw new RangeError(\"The 'rawRelease' option must be an integer between 0 and 127\");\n      }\n\n      if (options.release != undefined && !(options.release >= 0 && options.release <= 1)) {\n        throw new RangeError(\"The 'release' option must be an number between 0 and 1\");\n      }\n\n      // Legacy compatibility warnings\n      if (options.rawVelocity) {\n        options.rawRelease = options.velocity;\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.\");\n      }\n      if (options.velocity) {\n        options.release = options.velocity;\n        console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\");\n      }\n\n    }\n\n    let nVelocity = 64;\n\n    if (options.rawRelease != undefined) {\n      nVelocity = options.rawRelease;\n    } else {\n      if (!isNaN(options.release)) nVelocity = Math.round(options.release * 127);\n    }\n\n    // Plot total octave offset\n    const offset = WebMidi.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    Utilities.buildNoteArray(note, {rawRelease: parseInt(nVelocity)}).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.noteoff << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          n.rawRelease,\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number. The first parameter is the\n   * note to stop. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  stopNote(note, options = {}) {\n    return this.sendNoteOff(note, options);\n  }\n\n  /**\n   * Sends a **note on** message for the specified note(s) on the channel. The first parameter is\n   * the note. It can be a single value or an array of the following valid values:\n   *\n   *  - A [`Note`]{@link Note} object\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *\n   *  When passing a [`Note`]{@link Note}object or a note name, the `octaveOffset` will be applied.\n   *  This is not the case when using a note number. In this case, we assume you know exactly which\n   *  MIDI note number should be sent out.\n   *\n   * The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the attack velocity defined in the\n   * [`Note`]{@link Note} objects has precedence over the one specified via the method's `options`\n   * parameter. Also, the `duration` is ignored. If you want to also send a **note off** message,\n   * use the [`playNote()`]{@link #playNote} method instead.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`).  If the `rawAttack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The velocity at which to release the note (between `0`\n   * and `127`). If the `attack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `64`.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNoteOn(note, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (options.rawAttack != undefined && !(options.rawAttack >= 0 && options.rawAttack <= 127)) {\n        throw new RangeError(\"The 'rawAttack' option must be an integer between 0 and 127\");\n      }\n\n      if (options.attack != undefined && !(options.attack >= 0 && options.attack <= 1)) {\n        throw new RangeError(\"The 'attack' option must be an number between 0 and 1\");\n      }\n\n      // Legacy compatibility warnings\n      if (options.rawVelocity) {\n        options.rawAttack = options.velocity;\n        options.rawRelease = options.release;\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.\");\n      }\n      if (options.velocity) {\n        options.attack = options.velocity;\n        console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\");\n      }\n\n    }\n\n    let nVelocity = 64;\n\n    if (options.rawAttack != undefined) {\n      nVelocity = options.rawAttack;\n    } else {\n      if (!isNaN(options.attack)) nVelocity = Math.round(options.attack * 127);\n    }\n\n    // Plot total octave offset\n    const offset = WebMidi.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    Utilities.buildNoteArray(note, {rawAttack: nVelocity}).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.noteon << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          n.rawAttack\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel mode** message. The channel mode message to send can be specified\n   * numerically or by using one of the following common names:\n   *\n   * |  Type                |Number| Shortcut Method                                               |\n   * | ---------------------|------|-------------------------------------------------------------- |\n   * | `allsoundoff`        | 120  | [`sendAllSoundOff()`]{@link #sendAllSoundOff}                 |\n   * | `resetallcontrollers`| 121  | [`sendResetAllControllers()`]{@link #sendResetAllControllers} |\n   * | `localcontrol`       | 122  | [`sendLocalControl()`]{@link #sendLocalControl}               |\n   * | `allnotesoff`        | 123  | [`sendAllNotesOff()`]{@link #sendAllNotesOff}                 |\n   * | `omnimodeoff`        | 124  | [`sendOmniMode(false)`]{@link #sendOmniMode}                  |\n   * | `omnimodeon`         | 125  | [`sendOmniMode(true)`]{@link #sendOmniMode}                   |\n   * | `monomodeon`         | 126  | [`sendPolyphonicMode(\"mono\")`]{@link #sendPolyphonicMode}     |\n   * | `polymodeon`         | 127  | [`sendPolyphonicMode(\"poly\")`]{@link #sendPolyphonicMode}     |\n   *\n   * **Note**: as you can see above, to make it easier, all channel mode messages also have a matching\n   * helper method.\n   *\n   * It should be noted that, per the MIDI specification, only `localcontrol` and `monomodeon` may\n   * require a value that's not zero. For that reason, the `value` parameter is optional and\n   * defaults to 0.\n   *\n   * @param {number|string} command The numerical identifier of the channel mode message (integer\n   * between `120` and `127`) or its name as a string.\n   *\n   * @param {number} [value=0] The value to send (integer between `0` - `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendChannelMode(command, value = 0, options = {}) {\n\n    // Normalize command to integer\n    if (typeof command === \"string\") command = Enumerations.CHANNEL_MODE_MESSAGES[command];\n\n    if (WebMidi.validation) {\n\n      if (command === undefined) {\n        throw new TypeError(\"Invalid channel mode message name or number.\");\n      }\n\n      if (isNaN(command) || !(command >= 120 && command <= 127)) {\n        throw new TypeError(\"Invalid channel mode message number.\");\n      }\n\n      if (isNaN(parseInt(value)) || value < 0 || value > 127) {\n        throw new RangeError(\"Value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1),\n        command,\n        value\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sets OMNI mode to `\"on\"` or `\"off\"`. MIDI's OMNI mode causes the instrument to respond to\n   * messages from all channels.\n   *\n   * It should be noted that support for OMNI mode is not as common as it used to be.\n   *\n   * @param [state=true] {boolean} Whether to activate OMNI mode (`true`) or not (`false`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendOmniMode(state, options = {}) {\n\n    if (state === undefined || state) {\n      this.sendChannelMode(\"omnimodeon\", 0, options);\n    } else {\n      this.sendChannelMode(\"omnimodeoff\", 0, options);\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel aftertouch** message. For key-specific aftertouch, you should instead\n   * use [`sendKeyAftertouch()`]{@link #sendKeyAftertouch}.\n   *\n   * @param [pressure] {number} The pressure level (between `0` and `1`). If the `rawValue` option\n   * is set to `true`, the pressure can be defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @throws RangeError Invalid channel aftertouch value.\n   */\n  sendChannelAftertouch(pressure, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (isNaN(parseFloat(pressure))) {\n        throw new RangeError(\"Invalid channel aftertouch value.\");\n      }\n\n      if (options.rawValue) {\n        if (!(pressure >= 0 && pressure <= 127 && Number.isInteger(pressure))) {\n          throw new RangeError(\n            \"Channel aftertouch raw value must be an integer between 0 and 127.\")\n          ;\n        }\n      } else {\n        if (!(pressure >= 0 && pressure <= 1)) {\n          throw new RangeError(\"Channel aftertouch value must be a float between 0 and 1.\");\n        }\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.channelaftertouch << 4) + (this.number - 1),\n        Math.round(pressure * 127)\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **master tuning** message. The value is decimal and must be larger than -65 semitones\n   * and smaller than 64 semitones.\n   *\n   * Because of the way the MIDI specification works, the decimal portion of the value will be\n   * encoded with a resolution of 14bit. The integer portion must be between -64 and 63\n   * inclusively. This function actually generates two MIDI messages: a **Master Coarse Tuning** and\n   * a **Master Fine Tuning** RPN messages.\n   *\n   * @param [value=0.0] {number} The desired decimal adjustment value in semitones (-65 < x < 64)\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The value must be a decimal number between larger than -65 and smaller\n   * than 64.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendMasterTuning(value, options = {}) {\n\n    // @todo allow passing value as msb/lsb pair (the same as pitch bend range)\n\n    value = parseFloat(value) || 0.0;\n\n    if (WebMidi.validation) {\n\n      if (!(value > -65 && value < 64)) {\n        throw new RangeError(\n          \"The value must be a decimal number larger than -65 and smaller than 64.\"\n        );\n      }\n\n    }\n\n    let coarse = Math.floor(value) + 64;\n    let fine = value - Math.floor(value);\n\n    // Calculate MSB and LSB for fine adjustment (14bit resolution)\n    fine = Math.round((fine + 1) / 2 * 16383);\n    let msb = (fine >> 7) & 0x7F;\n    let lsb = fine & 0x7F;\n\n    this.sendRpnValue(\"channelcoarsetuning\", coarse, options);\n    this.sendRpnValue(\"channelfinetuning\", [msb, lsb], options);\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **modulation depth range** message to adjust the depth of the modulation wheel's range.\n   * The range can be specified with the `semitones` parameter, the `cents` parameter or by\n   * specifying both parameters at the same time.\n   *\n   * @param {number} semitones The desired adjustment value in semitones (integer between 0 and\n   * 127).\n   *\n   * @param {number} [cents=0] The desired adjustment value in cents (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendModulationRange(semitones, cents, options = {}) {\n\n    // @todo allow passing value as msb/lsb pair (the same as pitch bend range)\n    // when passing a single argument, semitones and cents shoud be combined\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(semitones) || !(semitones >= 0 && semitones <= 127)) {\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      }\n\n      if (!(cents == undefined) && (!Number.isInteger(cents) || !(cents >= 0 && cents <= 127))) {\n        throw new RangeError(\"If specified, the cents value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    // Default value for cents\n    if (!(cents >= 0 && cents <= 127)) cents = 0;\n\n    this.sendRpnValue(\"modulationrange\", [semitones, cents], options);\n\n    return this;\n\n  }\n\n  /**\n   * Sets a non-registered parameter (NRPN) to the specified value. The NRPN is selected by passing\n   * in a two-position array specifying the values of the two control bytes. The value is specified\n   * by passing in a single integer (most cases) or an array of two integers.\n   *\n   * NRPNs are not standardized in any way. Each manufacturer is free to implement them any way\n   * they see fit. For example, according to the Roland GS specification, you can control the\n   * **vibrato rate** using NRPN (1, 8). Therefore, to set the **vibrato rate** value to **123** you\n   * would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].channels[0].sendNrpnValue([1, 8], 123);\n   * ```\n   *\n   * In some rarer cases, you need to send two values with your NRPN messages. In such cases, you\n   * would use a 2-position array. For example, for its **ClockBPM** parameter (2, 63), Novation\n   * uses a 14-bit value that combines an MSB and an LSB (7-bit values). So, for example, if the\n   * value to send was 10, you could use:\n   *\n   * ```js\n   * WebMidi.outputs[0].channels[0].sendNrpnValue([2, 63], [0, 10]);\n   * ```\n   *\n   * For further implementation details, refer to the manufacturer's documentation.\n   *\n   * @param nrpn {number[]} A two-position array specifying the two control bytes (0x63,\n   * 0x62) that identify the non-registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An integer or an array of integers with a length of 1 or 2\n   * specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The control value must be between 0 and 127.\n   * @throws {RangeError} The msb value must be between 0 and 127\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNrpnValue(nrpn, data, options = {}) {\n\n    data = [].concat(data);\n\n    if (WebMidi.validation) {\n\n      if (!Array.isArray(nrpn) || !Number.isInteger(nrpn[0]) || !Number.isInteger(nrpn[1])) {\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      }\n\n      if (!(nrpn[0] >= 0 && nrpn[0] <= 127)) {\n        throw new RangeError(\"The first byte of the NRPN must be between 0 and 127.\");\n      }\n\n      if (!(nrpn[1] >= 0 && nrpn[1] <= 127)) {\n        throw new RangeError(\"The second byte of the NRPN must be between 0 and 127.\");\n      }\n\n      data.forEach(value => {\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The data bytes of the NRPN must be between 0 and 127.\");\n        }\n      });\n\n    }\n\n    this._selectNonRegisteredParameter(nrpn, options);\n    this._setCurrentParameter(data, options);\n    this._deselectNonRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **pitch bend** message at the scheduled time. The resulting bend is relative to\n   * the pitch bend range that has been defined. The range can be set with\n   * [`sendPitchBendRange()`]{@link #sendPitchBendRange}. So, for example, if the pitch\n   * bend range has been set to 12 semitones, using a bend value of -1 will bend the note 1 octave\n   * below its nominal value.\n   *\n   * @param {number|number[]} [value] The intensity of the bend (between -1.0 and 1.0). A value of\n   * zero means no bend. If the `rawValue` option is set to `true`, the intensity of the bend can be\n   * defined by either using a single integer between 0 and 127 (MSB) or an array of two integers\n   * between 0 and 127 representing, respectively, the MSB (most significant byte) and the LSB\n   * (least significant byte). The MSB is expressed in semitones with `64` meaning no bend. A value\n   * lower than `64` bends downwards while a value higher than `64` bends upwards. The LSB is\n   * expressed in cents (1/100 of a semitone). An LSB of `64` also means no bend.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered as a float between -1.0 and 1.0 (default) or as raw integer between 0 and 127 (or\n   * an array of 2 integers if using both MSB and LSB).\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPitchBend(value, options = {}) {\n\n    // @todo standardize the way msb/lsb are passed in\n\n    if (WebMidi.validation) {\n\n      if (options.rawValue && Array.isArray(value)) {\n\n        if (!(value[0] >= 0 && value[0] <= 127)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n        if (!(value[1] >= 0 && value[1] <= 127)) {\n          throw new RangeError(\"The pitch bend LSB must be an integer between 0 and 127.\");\n        }\n\n      } else if (options.rawValue && !Array.isArray(value)) {\n\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n\n      } else {\n\n        if (isNaN(value) || value === null) {\n          throw new RangeError(\"Invalid pitch bend value.\");\n        }\n\n        if (!(value >= -1 && value <= 1)) {\n          throw new RangeError(\"The pitch bend value must be a float between -1 and 1.\");\n        }\n\n      }\n\n    }\n\n    let msb = 0;\n    let lsb = 0;\n\n    // Calculate MSB and LSB for both scenarios\n    if (options.rawValue && Array.isArray(value)) {\n      msb = value[0];\n      lsb = value[1];\n    } else if (options.rawValue && !Array.isArray(value)) {\n      msb = value;\n    } else {\n      const result = Utilities.fromFloatToMsbLsb((value + 1) / 2); // b/c value is -1 to 1\n      msb = result.msb;\n      lsb = result.lsb;\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.pitchbend << 4) + (this.number - 1),\n        lsb,\n        msb\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **pitch bend range** message at the scheduled time to adjust the range used by the\n   * pitch bend lever. The range is specified by using the `semitones` and `cents` parameters. For\n   * example, setting the `semitones` parameter to `12` means that the pitch bend range will be 12\n   * semitones above and below the nominal pitch.\n   *\n   * @param semitones {number} The desired adjustment value in semitones (between 0 and 127). While\n   * nothing imposes that in the specification, it is very common for manufacturers to limit the\n   * range to 2 octaves (-12 semitones to 12 semitones).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The semitones value must be an integer between 0 and 127.\n   * @throws {RangeError} The cents value must be an integer between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPitchBendRange(semitones, cents, options = {}) {\n\n    // @todo use single value as parameter or pair of msb/lsb\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(semitones) || !(semitones >= 0 && semitones <= 127)) {\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      }\n\n      if (!Number.isInteger(cents) || !(cents >= 0 && cents <= 127)) {\n        throw new RangeError(\"The cents value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"pitchbendrange\", [semitones, cents], options);\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **program change** message at the scheduled time.\n   *\n   * @param [program=1] {number} The MIDI patch (program) number (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 1 is greater\n   * than 0xFF.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   */\n  sendProgramChange(program, options = {}) {\n\n    program = parseInt(program) || 0;\n\n    if (WebMidi.validation) {\n\n      if (!(program >= 0 && program <= 127)) {\n        throw new RangeError(\"The program number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.programchange << 4) + (this.number - 1),\n        program\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sets the specified MIDI registered parameter to the desired value. The value is defined with\n   * up to two bytes of data (msb, lsb) that each can go from 0 to 127.\n   *\n   * MIDI\n   * [registered parameters](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * extend the original list of control change messages. The MIDI 1.0 specification lists only a\n   * limited number of them:\n   *\n   * | Numbers      | Function                 |\n   * |--------------|--------------------------|\n   * | (0x00, 0x00) | `pitchbendrange`         |\n   * | (0x00, 0x01) | `channelfinetuning`      |\n   * | (0x00, 0x02) | `channelcoarsetuning`    |\n   * | (0x00, 0x03) | `tuningprogram`          |\n   * | (0x00, 0x04) | `tuningbank`             |\n   * | (0x00, 0x05) | `modulationrange`        |\n   * | (0x3D, 0x00) | `azimuthangle`           |\n   * | (0x3D, 0x01) | `elevationangle`         |\n   * | (0x3D, 0x02) | `gain`                   |\n   * | (0x3D, 0x03) | `distanceratio`          |\n   * | (0x3D, 0x04) | `maximumdistance`        |\n   * | (0x3D, 0x05) | `maximumdistancegain`    |\n   * | (0x3D, 0x06) | `referencedistanceratio` |\n   * | (0x3D, 0x07) | `panspreadangle`         |\n   * | (0x3D, 0x08) | `rollangle`              |\n   *\n   * Note that the **Tuning Program** and **Tuning Bank** parameters are part of the *MIDI Tuning\n   * Standard*, which is not widely implemented.\n   *\n   * @param rpn {string|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (e.g. `[0x65, 0x64]`) that identify the\n   * registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An single integer or an array of integers with a maximum\n   * length of 2 specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnValue(rpn, data, options = {}) {\n\n    if (!Array.isArray(rpn)) rpn = Enumerations.REGISTERED_PARAMETERS[rpn];\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(rpn[0]) || !Number.isInteger(rpn[1])) {\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      }\n\n      if (!(rpn[0] >= 0 && rpn[0] <= 127)) {\n        throw new RangeError(\"The first byte of the RPN must be between 0 and 127.\");\n      }\n\n      if (!(rpn[1] >= 0 && rpn[1] <= 127)) {\n        throw new RangeError(\"The second byte of the RPN must be between 0 and 127.\");\n      }\n\n      [].concat(data).forEach(value => {\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The data bytes of the RPN must be between 0 and 127.\");\n        }\n      });\n\n    }\n\n    this._selectRegisteredParameter(rpn, options);\n    this._setCurrentParameter(data, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning bank to use. Note that the **Tuning Bank** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning bank (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The bank value must be between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendTuningBank(value, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The tuning bank number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"tuningbank\", value, options);\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning program to use. Note that the **Tuning Program** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning program (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The program value must be between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendTuningProgram(value, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The tuning program number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"tuningprogram\", value, options);\n    return this;\n\n  }\n\n  /**\n   * Turns local control on or off. Local control is usually enabled by default. If you disable it,\n   * the instrument will no longer trigger its own sounds. It will only send the MIDI messages to\n   * its out port.\n   *\n   * @param [state=false] {boolean} Whether to activate local control (`true`) or disable it\n   * (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendLocalControl(state, options = {}) {\n    if (state) {\n      return this.sendChannelMode(\"localcontrol\", 127, options);\n    } else {\n      return this.sendChannelMode(\"localcontrol\", 0, options);\n    }\n  }\n\n  /**\n   * Sends an **all notes off** channel mode message. This will make all currently playing notes\n   * fade out just as if their key had been released. This is different from the\n   * [`sendAllSoundOff()`]{@link #sendAllSoundOff} method which mutes all sounds immediately.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendAllNotesOff(options = {}) {\n    return this.sendChannelMode(\"allnotesoff\", 0, options);\n  }\n\n  /**\n   * Sends an **all sound off** channel mode message. This will silence all sounds playing on that\n   * channel but will not prevent new sounds from being triggered.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendAllSoundOff(options = {}) {\n    return this.sendChannelMode(\"allsoundoff\", 0, options);\n  }\n\n  /**\n   * Sends a **reset all controllers** channel mode message. This resets all controllers, such as\n   * the pitch bend, to their default value.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendResetAllControllers(options = {}) {\n    return this.sendChannelMode(\"resetallcontrollers\", 0, options);\n  }\n\n  /**\n   * Sets the polyphonic mode. In `\"poly\"` mode (usually the default), multiple notes can be played\n   * and heard at the same time. In `\"mono\"` mode, only one note will be heard at once even if\n   * multiple notes are being played.\n   *\n   * @param {string} [mode=poly] The mode to use: `\"mono\"` or `\"poly\"`.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPolyphonicMode(mode, options = {}) {\n    if (mode === \"mono\") {\n      return this.sendChannelMode(\"monomodeon\", 0, options);\n    } else {\n      return this.sendChannelMode(\"polymodeon\", 0, options);\n    }\n  }\n\n  /**\n   * An integer to offset the reported octave of outgoing note-specific messages (`noteon`,\n   * `noteoff` and `keyaftertouch`). By default, middle C (MIDI note number 60) is placed on the 4th\n   * octave (C4).\n   *\n   * Note that this value is combined with the global offset value defined in\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) and with the parent value defined in\n   * [`Output.octaveOffset`]{@link Output#octaveOffset}.\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * The parent [`Output`]{@link Output} this channel belongs to.\n   * @type {Output}\n   * @since 3.0\n   */\n  get output() {\n    return this._output;\n  }\n\n  /**\n   * This channel's MIDI number (`1` - `16`).\n   * @type {number}\n   * @since 3.0\n   */\n  get number() {\n    return this._number;\n  }\n\n}\n","import {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {OutputChannel} from \"./OutputChannel.js\";\nimport {Enumerations, Message, WebMidi} from \"./WebMidi.js\";\nimport {Utilities} from \"./Utilities.js\";\n\n/**\n * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).\n * A port is made available by a MIDI device. A MIDI device can advertise several input and output\n * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)\n * property.\n *\n * The `Output` object is automatically instantiated by the library according to the host's MIDI\n * subsystem and should not be directly instantiated.\n *\n * You can access all available `Output` objects by referring to the\n * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as\n * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or\n * [`WebMidi.getOutputById()`](WebMidi#getOutputById).\n *\n * @fires Output#opened\n * @fires Output#disconnected\n * @fires Output#closed\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nexport class Output extends EventEmitter {\n\n  /**\n   * Creates an `Output` object.\n   *\n   * @param {MIDIOutput} midiOutput [`MIDIOutput`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIOutput)\n   * object as provided by the MIDI subsystem.\n   */\n  constructor(midiOutput) {\n\n    super();\n\n    /**\n     * A reference to the `MIDIOutput` object\n     * @type {MIDIOutput}\n     * @private\n     */\n    this._midiOutput = midiOutput;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * Array containing the 16 [`OutputChannel`]{@link OutputChannel} objects available provided by\n     * this `Output`. The channels are numbered 1 through 16.\n     *\n     * @type {OutputChannel[]}\n     */\n    this.channels = [];\n    for (let i = 1; i <= 16; i++) this.channels[i] = new OutputChannel(this, i);\n\n    this._midiOutput.onstatechange = this._onStateChange.bind(this);\n\n  }\n\n  /**\n   * Destroys the `Output`. All listeners are removed, all channels are destroyed and the MIDI\n   * subsystem is unlinked.\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    this.removeListener();\n    this.channels.forEach(ch => ch.destroy());\n    this.channels = [];\n    if (this._midiOutput) this._midiOutput.onstatechange = null;\n    await this.close();\n    this._midiOutput = null;\n  }\n\n  /**\n   * @private\n   */\n  _onStateChange(e) {\n\n    let event = {\n      timestamp: WebMidi.time\n    };\n\n    if (e.port.connection === \"open\") {\n\n      /**\n       * Event emitted when the {@link Output} has been opened by calling the\n       * [open()]{@link Output#open} method.\n       *\n       * @event Output#opened\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"opened\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {Output} port The port that was opened\n       */\n      event.type = \"opened\";\n      event.target = this;\n      event.port = event.target; // for consistency\n      this.emit(\"opened\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"connected\") {\n\n      /**\n       * Event emitted when the {@link Output} has been closed by calling the\n       * [close()]{@link Output#close} method.\n       *\n       * @event Output#closed\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"closed\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {Output} port The port that was closed\n       */\n      event.type = \"closed\";\n      event.target = this;\n      event.port = event.target; // for consistency\n      this.emit(\"closed\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"disconnected\") {\n\n      /**\n       * Event emitted when the {@link Output} becomes unavailable. This event is typically fired\n       * when the MIDI device is unplugged.\n       *\n       * @event Output#disconnected\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp0 when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"disconnected\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {object} port Object with properties describing the {@link Output} that was\n       * disconnected. This is not the actual `Output` as it is no longer available.\n       */\n      event.type = \"disconnected\";\n      event.port = {\n        connection: e.port.connection,\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n      this.emit(\"disconnected\", event);\n\n    } else if (e.port.connection === \"pending\" && e.port.state === \"disconnected\") {\n      // I don't see the need to forward that...\n    } else {\n      console.warn(\"This statechange event was not caught:\", e.port.connection, e.port.state);\n    }\n\n  }\n\n  /**\n   * Opens the output for usage. When the library is enabled, all ports are automatically opened.\n   * This method is only useful for ports that have been manually closed.\n   *\n   * @returns {Promise<Output>} The promise is fulfilled with the `Output` object.\n   */\n  async open() {\n\n    // Explicitly opens the port for usage. This is not mandatory. When the port is not explicitly\n    // opened, it is implicitly opened (asynchronously) when calling `send()` on the `MIDIOutput`.\n    // We do it explicitly so that 'connected' events are dispatched immediately and we are ready to\n    // send.\n    try {\n      await this._midiOutput.open();\n      return Promise.resolve(this);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n  }\n\n  /**\n   * Closes the output connection. When an output is closed, it cannot be used to send MIDI messages\n   * until the output is opened again by calling [`open()`]{@link #open}. You can check\n   * the connection status by looking at the [`connection`]{@link #connection} property.\n   *\n   * @returns {Promise<void>}\n   */\n  async close() {\n\n    // We close the port. This triggers a 'statechange' event which we listen to to re-trigger the\n    // 'closed' event.\n    if (this._midiOutput) {\n      await this._midiOutput.close();\n    } else {\n      await Promise.resolve();\n    }\n\n  }\n\n  /**\n   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be\n   * sent immediately. The message should be an array of 8 bit unsigned integers (0-225), a\n   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}\n   * object or a [`Message`](Message) object.\n   *\n   * It is usually not necessary to use this method directly as you can use one of the simpler\n   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),\n   * [`sendControlChange()`](#sendControlChange), etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param message {number[]|Uint8Array|Message} An array of 8bit unsigned integers, a `Uint8Array`\n   * object (not available in Node.js) containing the message bytes or a `Message` object.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   */\n  send(message, options = {time: 0}, legacy = 0) {\n\n    // If a Message object is passed in we extract the message data (the jzz plugin used on Node.js\n    // does not support using Uint8Array).\n    if (message instanceof Message) {\n      message = Utilities.isNode ? message.data : message.rawData;\n    }\n\n    // If the data is a Uint8Array and we are on Node, we must convert it to array so it works with\n    // the jzz module.\n    if (message instanceof Uint8Array && Utilities.isNode) {\n      message = Array.from(message);\n    }\n\n    // Validation\n    if (WebMidi.validation) {\n\n      // If message is neither an array nor a Uint8Array, then we are in legacy mode\n      if (!Array.isArray(message) && !(message instanceof Uint8Array)) {\n        message = [message];\n        if (Array.isArray(options)) message = message.concat(options);\n        options = isNaN(legacy) ? {time: 0} : {time: legacy};\n      }\n\n      if (!(parseInt(message[0]) >= 128 && parseInt(message[0]) <= 255)) {\n        throw new RangeError(\"The first byte (status) must be an integer between 128 and 255.\");\n      }\n\n      message.slice(1).forEach(value => {\n        value = parseInt(value);\n        if (!(value >= 0 && value <= 255)) {\n          throw new RangeError(\"Data bytes must be integers between 0 and 255.\");\n        }\n      });\n\n      if (!options) options = {time: 0};\n\n    }\n\n    // Send message and return `Output` for chaining\n    this._midiOutput.send(message, Utilities.toTimestamp(options.time));\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI [**system exclusive**]{@link\n    * https://www.midi.org/specifications-old/item/table-4-universal-system-exclusive-messages}\n   * (*sysex*) message. There are two categories of system exclusive messages: manufacturer-specific\n   * messages and universal messages. Universal messages are further divided into three subtypes:\n   *\n   *   * Universal non-commercial (for research and testing): `0x7D`\n   *   * Universal non-realtime: `0x7E`\n   *   * Universal realtime: `0x7F`\n   *\n   * The method's first parameter (`identification`) identifies the type of message. If the value of\n   * `identification` is `0x7D` (125), `0x7E` (126) or `0x7F` (127), the message will be identified\n   * as a **universal non-commercial**, **universal non-realtime** or **universal realtime** message\n   * (respectively).\n   *\n   * If the `identification` value is an array or an integer between 0 and 124, it will be used to\n   * identify the manufacturer targeted by the message. The *MIDI Manufacturers Association*\n   * maintains a full list of\n   * [Manufacturer ID Numbers](https://www.midi.org/specifications-old/item/manufacturer-id-numbers).\n   *\n   * The `data` parameter should only contain the data of the message. When sending out the actual\n   * MIDI message, WEBMIDI.js will automatically prepend the data with the **sysex byte** (`0xF0`)\n   * and the identification byte(s). It will also automatically terminate the message with the\n   * **sysex end byte** (`0xF7`).\n   *\n   * To use the `sendSysex()` method, system exclusive message support must have been enabled. To\n   * do so, you must set the `sysex` option to `true` when calling\n   * [`WebMidi.enable()`]{@link WebMidi#enable}:\n   *\n   * ```js\n   * WebMidi.enable({sysex: true})\n   *   .then(() => console.log(\"System exclusive messages are enabled\");\n   * ```\n   *\n   * ##### Examples of manufacturer-specific system exclusive messages\n   *\n   * If you want to send a sysex message to a Korg device connected to the first output, you would\n   * use the following code:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(0x42, [0x1, 0x2, 0x3, 0x4, 0x5]);\n   * ```\n   * In this case `0x42` is the ID of the manufacturer (Korg) and `[0x1, 0x2, 0x3, 0x4, 0x5]` is the\n   * data being sent.\n   *\n   * The parameters can be specified using any number notation (decimal, hex, binary, etc.).\n   * Therefore, the code above is equivalent to this code:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(66, [1, 2, 3, 4, 5]);\n   * ```\n   *\n   * Some manufacturers are identified using 3 bytes. In this case, you would use a 3-position array\n   * as the first parameter. For example, to send the same sysex message to a\n   * *Native Instruments* device:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex([0x00, 0x21, 0x09], [0x1, 0x2, 0x3, 0x4, 0x5]);\n   * ```\n   *\n   * There is no limit for the length of the data array. However, it is generally suggested to keep\n   * system exclusive messages to 64Kb or less.\n   *\n   * ##### Example of universal system exclusive message\n   *\n   * If you want to send a universal sysex message, simply assign the correct identification number\n   * in the first parameter. Number `0x7D` (125) is for non-commercial, `0x7E` (126) is for\n   * non-realtime and `0x7F` (127) is for realtime.\n   *\n   * So, for example, if you wanted to send an identity request non-realtime message (`0x7E`), you\n   * could use the following:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(0x7E, [0x7F, 0x06, 0x01]);\n   * ```\n   *\n   * For more details on the format of universal messages, consult the list of\n   * [universal sysex messages](https://www.midi.org/specifications-old/item/table-4-universal-system-exclusive-messages).\n   *\n   * @param {number|number[]} identification An unsigned integer or an array of three unsigned\n   * integers between `0` and `127` that either identify the manufacturer or sets the message to be\n   * a **universal non-commercial message** (`0x7D`), a **universal non-realtime message** (`0x7E`)\n   * or a **universal realtime message** (`0x7F`). The *MIDI Manufacturers Association* maintains a\n   * full list of\n   * [Manufacturer ID Numbers](https://www.midi.org/specifications-old/item/manufacturer-id-numbers).\n   *\n   * @param {number[]|Uint8Array} [data] A `Uint8Array` or an array of unsigned integers between `0`\n   * and `127`. This is the data you wish to transfer.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {DOMException} Failed to execute 'send' on 'MIDIOutput': System exclusive message is\n   * not allowed.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index x is greater\n   * than 0xFF.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendSysex(identification, data= [], options = {}) {\n\n    identification = [].concat(identification);\n\n    // Check if data is Uint8Array\n    if (data instanceof Uint8Array) {\n      const merged = new Uint8Array(1 + identification.length + data.length + 1);\n      merged[0] = Enumerations.SYSTEM_MESSAGES.sysex;\n      merged.set(Uint8Array.from(identification), 1);\n      merged.set(data, 1 + identification.length);\n      merged[merged.length - 1] = Enumerations.SYSTEM_MESSAGES.sysexend;\n      this.send(merged, {time: options.time});\n    } else {\n      const merged = identification.concat(data, Enumerations.SYSTEM_MESSAGES.sysexend);\n      this.send([Enumerations.SYSTEM_MESSAGES.sysex].concat(merged), {time: options.time});\n    }\n\n    return this;\n\n  };\n\n  /**\n   * Clears all messages that have been queued but not yet delivered.\n   *\n   * **Warning**: this method has been defined in the specification but has not been implemented\n   * yet. As soon as browsers implement it, it will work.\n   *\n   * You can check out the current status of this feature for Chromium (Chrome) here:\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=471798\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  clear() {\n\n    if (this._midiOutput.clear) {\n\n      this._midiOutput.clear();\n\n    } else {\n\n      if (WebMidi.validation) {\n        console.warn(\n          \"The 'clear()' method has not yet been implemented in your environment.\"\n        );\n      }\n\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **timecode quarter frame** message. Please note that no processing is being done\n   * on the data. It is up to the developer to format the data according to the\n   * [MIDI Timecode](https://en.wikipedia.org/wiki/MIDI_timecode) format.\n   *\n   * @param value {number} The quarter frame message content (integer between 0 and 127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendTimecodeQuarterFrame(value, options = {}) {\n\n    if (WebMidi.validation) {\n      value = parseInt(value);\n      if (isNaN(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The value must be an integer between 0 and 127.\");\n      }\n    }\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.timecode,\n        value\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  };\n\n  /**\n   * Sends a **song position** MIDI message. The value is expressed in MIDI beats (between `0` and\n   * `16383`) which are 16th note. Position `0` is always the start of the song.\n   *\n   * @param {number} [value=0] The MIDI beat to cue to (integer between `0` and `16383`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendSongPosition(value = 0, options = {}) {\n\n    // @todo allow passing in 2-entries array for msb/lsb\n\n    value = Math.floor(value) || 0;\n\n    var msb = (value >> 7) & 0x7F;\n    var lsb = value & 0x7F;\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.songposition,\n        msb,\n        lsb\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **song select** MIDI message.\n   *\n   * @param {number} [value=0] The number of the song to select (integer between `0` and `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws The song number must be between 0 and 127.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendSongSelect(value = 0, options = {}) {\n\n    if (WebMidi.validation) {\n\n      value = parseInt(value);\n\n      if (isNaN(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The program value must be between 0 and 127\");\n      }\n\n    }\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.songselect,\n        value\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **tune request** real-time message.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuneRequest(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.tunerequest],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **clock** real-time message. According to the standard, there are 24 MIDI clocks\n   * for every quarter note.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendClock(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.clock],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **start** real-time message. A MIDI Start message starts the playback of the current\n   * song at beat 0. To start playback elsewhere in the song, use the\n   * [`sendContinue()`]{@link #sendContinue} method.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendStart(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.start],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **continue** real-time message. This resumes song playback where it was previously\n   * stopped or where it was last cued with a song position message. To start playback from the\n   * start, use the [`sendStart()`]{@link Output#sendStart}` method.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendContinue(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.continue],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **stop** real-time message. This tells the device connected to this output to stop\n   * playback immediately (or at the scheduled time, if specified).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendStop(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.stop],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **active sensing** real-time message. This tells the device connected to this port\n   * that the connection is still good. Active sensing messages are often sent every 300 ms if there\n   * was no other activity on the MIDI port.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendActiveSensing(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.activesensing],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **reset** real-time message. This tells the device connected to this output that it\n   * should reset itself to a default state.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendReset(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.reset],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendTuningRequest(options = {}) {\n\n    if (WebMidi.validation) {\n      console.warn(\n        \"The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead.\"\n      );\n    }\n\n    return this.sendTuneRequest(options);\n\n  }\n\n  /**\n   * Sends a MIDI **key aftertouch** message to the specified channel(s) at the scheduled time. This\n   * is a key-specific aftertouch. For a channel-wide aftertouch message, use\n   * [`setChannelAftertouch()`]{@link #setChannelAftertouch}.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) for which you are sending\n   * an aftertouch value. The notes can be specified by using a MIDI note number (`0` - `127`), a\n   * [`Note`](Note) object, a note identifier (e.g. `C3`, `G#4`, `F-1`, `Db7`) or an array of the\n   * previous types. When using a note identifier, octave range must be between `-1` and `9`. The\n   * lowest note is `C-1` (MIDI note number `0`) and the highest note is `G9` (MIDI note number\n   * `127`).\n   *\n   * @param [pressure=0.5] {number} The pressure level (between 0 and 1). An invalid pressure value\n   * will silently trigger the default behaviour. If the `rawValue` option is set to `true`, the\n   * pressure can be defined by using an integer between 0 and 127.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendKeyAftertouch(note, pressure, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendKeyAftertouch(note, pressure, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a MIDI **control change** message to the specified channel(s) at the scheduled time. The\n   * control change message to send can be specified numerically (0-127) or by using one of the\n   * following common names:\n   *\n   * | Number | Name                          |\n   * |--------|-------------------------------|\n   * | 0      |`bankselectcoarse`             |\n   * | 1      |`modulationwheelcoarse`        |\n   * | 2      |`breathcontrollercoarse`       |\n   * | 4      |`footcontrollercoarse`         |\n   * | 5      |`portamentotimecoarse`         |\n   * | 6      |`dataentrycoarse`              |\n   * | 7      |`volumecoarse`                 |\n   * | 8      |`balancecoarse`                |\n   * | 10     |`pancoarse`                    |\n   * | 11     |`expressioncoarse`             |\n   * | 12     |`effectcontrol1coarse`         |\n   * | 13     |`effectcontrol2coarse`         |\n   * | 18     |`generalpurposeslider3`        |\n   * | 19     |`generalpurposeslider4`        |\n   * | 32     |`bankselectfine`               |\n   * | 33     |`modulationwheelfine`          |\n   * | 34     |`breathcontrollerfine`         |\n   * | 36     |`footcontrollerfine`           |\n   * | 37     |`portamentotimefine`           |\n   * | 38     |`dataentryfine`                |\n   * | 39     |`volumefine`                   |\n   * | 40     |`balancefine`                  |\n   * | 42     |`panfine`                      |\n   * | 43     |`expressionfine`               |\n   * | 44     |`effectcontrol1fine`           |\n   * | 45     |`effectcontrol2fine`           |\n   * | 64     |`holdpedal`                    |\n   * | 65     |`portamento`                   |\n   * | 66     |`sustenutopedal`               |\n   * | 67     |`softpedal`                    |\n   * | 68     |`legatopedal`                  |\n   * | 69     |`hold2pedal`                   |\n   * | 70     |`soundvariation`               |\n   * | 71     |`resonance`                    |\n   * | 72     |`soundreleasetime`             |\n   * | 73     |`soundattacktime`              |\n   * | 74     |`brightness`                   |\n   * | 75     |`soundcontrol6`                |\n   * | 76     |`soundcontrol7`                |\n   * | 77     |`soundcontrol8`                |\n   * | 78     |`soundcontrol9`                |\n   * | 79     |`soundcontrol10`               |\n   * | 80     |`generalpurposebutton1`        |\n   * | 81     |`generalpurposebutton2`        |\n   * | 82     |`generalpurposebutton3`        |\n   * | 83     |`generalpurposebutton4`        |\n   * | 91     |`reverblevel`                  |\n   * | 92     |`tremololevel`                 |\n   * | 93     |`choruslevel`                  |\n   * | 94     |`celestelevel`                 |\n   * | 95     |`phaserlevel`                  |\n   * | 96     |`dataincrement`                |\n   * | 97     |`datadecrement`                |\n   * | 98     |`nonregisteredparametercoarse` |\n   * | 99     |`nonregisteredparameterfine`   |\n   * | 100    |`registeredparametercoarse`    |\n   * | 101    |`registeredparameterfine`      |\n   * | 120    |`allsoundoff`                  |\n   * | 121    |`resetallcontrollers`          |\n   * | 122    |`localcontrol`                 |\n   * | 123    |`allnotesoff`                  |\n   * | 124    |`omnimodeoff`                  |\n   * | 125    |`omnimodeon`                   |\n   * | 126    |`monomodeon`                   |\n   * | 127    |`polymodeon`                   |\n   *\n   * Note: as you can see above, not all control change message have a matching name. This does not\n   * mean you cannot use the others. It simply means you will need to use their number (`0` - `127`)\n   * instead of their name. While you can still use them, numbers `120` to `127` are usually\n   * reserved for *channel mode* messages. See [`sendChannelMode()`]{@link #sendChannelMode} method\n   * for more info.\n   *\n   * To view a list of all available **control change** messages, please consult [Table 3 - Control\n   * Change Messages](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * from the MIDI specification.\n   *\n   * @param controller {number|string} The MIDI controller name or number (0-127).\n   *\n   * @param [value=0] {number} The value to send (0-127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 127.\n   * @throws {RangeError} Invalid controller name.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendControlChange(controller, value, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendControlChange(controller, value, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a **pitch bend range** message to the specified channel(s) at the scheduled time so that\n   * they adjust the range used by their pitch bend lever. The range is specified by using the\n   * `semitones` and `cents` parameters. For example, setting the `semitones` parameter to `12`\n   * means that the pitch bend range will be 12 semitones above and below the nominal pitch.\n   *\n   * @param {number} [semitones=0] The desired adjustment value in semitones (between `0` and `127`).\n   * While nothing imposes that in the specification, it is very common for manufacturers to limit\n   * the range to 2 octaves (-12 semitones to 12 semitones).\n   *\n   * @param {number} [cents=0] The desired adjustment value in cents (integer between `0` and\n   * `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127.\n   * @throws {RangeError} The lsb value must be between 0 and 127.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPitchBendRange(semitones= 0, cents = 0, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPitchBendRange(semitones, cents, options);\n    });\n\n    return this;\n\n  }\n\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setPitchBendRange(semitones = 0, cents = 0, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendPitchBendRange(semitones, cents, options);\n\n  }\n\n  /**\n   * Sets the specified MIDI registered parameter to the desired value. The value is defined with\n   * up to two bytes of data (msb, lsb) that each can go from `0` to `127`.\n   *\n   * MIDI\n   * [registered parameters](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * extend the original list of control change messages. The MIDI 1.0 specification lists only a\n   * limited number of them:\n   *\n   * | Numbers      | Function                 |\n   * |--------------|--------------------------|\n   * | (0x00, 0x00) | `pitchbendrange`         |\n   * | (0x00, 0x01) | `channelfinetuning`      |\n   * | (0x00, 0x02) | `channelcoarsetuning`    |\n   * | (0x00, 0x03) | `tuningprogram`          |\n   * | (0x00, 0x04) | `tuningbank`             |\n   * | (0x00, 0x05) | `modulationrange`        |\n   * | (0x3D, 0x00) | `azimuthangle`           |\n   * | (0x3D, 0x01) | `elevationangle`         |\n   * | (0x3D, 0x02) | `gain`                   |\n   * | (0x3D, 0x03) | `distanceratio`          |\n   * | (0x3D, 0x04) | `maximumdistance`        |\n   * | (0x3D, 0x05) | `maximumdistancegain`    |\n   * | (0x3D, 0x06) | `referencedistanceratio` |\n   * | (0x3D, 0x07) | `panspreadangle`         |\n   * | (0x3D, 0x08) | `rollangle`              |\n   *\n   * Note that the `tuningprogram` and `tuningbank` parameters are part of the *MIDI Tuning\n   * Standard*, which is not widely implemented.\n   *\n   * @param parameter {string|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (e.g. `[0x65, 0x64]`) that identify the\n   * registered parameter.\n   *\n   * @param [data=[]] {number|number[]} A single integer or an array of integers with a maximum\n   * length of 2 specifying the desired data.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnValue(parameter, data, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnValue(parameter, data, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setRegisteredParameter(parameter, data = [], channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnValue(parameter, data, options);\n\n  }\n\n  /**\n   * Sends a MIDI **channel aftertouch** message to the specified channel(s). For key-specific\n   * aftertouch, you should instead use [`setKeyAftertouch()`]{@link #setKeyAftertouch}.\n   *\n   * @param [pressure=0.5] {number} The pressure level (between `0` and `1`). An invalid pressure\n   * value will silently trigger the default behaviour. If the `rawValue` option is set to `true`,\n   * the pressure can be defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   * @since 3.0.0\n   */\n  sendChannelAftertouch(pressure, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendChannelAftertouch(pressure, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **pitch bend** message to the specified channel(s) at the scheduled time.\n   *\n   * The resulting bend is relative to the pitch bend range that has been defined. The range can be\n   * set with [`sendPitchBendRange()`]{@link #sendPitchBendRange}. So, for example, if the pitch\n   * bend range has been set to 12 semitones, using a bend value of `-1` will bend the note 1 octave\n   * below its nominal value.\n   *\n   * @param {number|number[]} value The intensity of the bend (between `-1.0` and `1.0`). A value of\n   * `0` means no bend. If an invalid value is specified, the nearest valid value will be used\n   * instead. If the `rawValue` option is set to `true`, the intensity of the bend can be defined by\n   * either using a single integer between `0` and `127` (MSB) or an array of two integers between\n   * `0` and `127` representing, respectively, the MSB (most significant byte) and the LSB (least\n   * significant byte). The MSB is expressed in semitones with `64` meaning no bend. A value lower\n   * than `64` bends downwards while a value higher than `64` bends upwards. The LSB is expressed\n   * in cents (1/100 of a semitone). An LSB of `64` also means no bend.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered as a float between `-1.0` and `1.0` (default) or as raw integer between `0` and\n   * 127` (or an array of 2 integers if using both MSB and LSB).\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPitchBend(value, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPitchBend(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **program change** message to the specified channel(s) at the scheduled time.\n   *\n   * @param {number} [program=0] The MIDI patch (program) number (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 1 is greater\n   * than 0xFF.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendProgramChange(program = 0, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendProgramChange(program, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **modulation depth range** message to the specified channel(s) so that they adjust the\n   * depth of their modulation wheel's range. The range can be specified with the `semitones`\n   * parameter, the `cents` parameter or by specifying both parameters at the same time.\n   *\n   * @param [semitones=0] {number} The desired adjustment value in semitones (integer between\n   * 0 and 127).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127\n   * @throws {RangeError} The lsb value must be between 0 and 127\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendModulationRange(semitones, cents, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendModulationRange(semitones, cents, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setModulationRange(semitones = 0, cents = 0, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setModulationRange() method is deprecated. Use sendModulationRange() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendModulationRange(semitones, cents, options);\n\n  }\n\n  /**\n   * Sends a master tuning message to the specified channel(s). The value is decimal and must be\n   * larger than `-65` semitones and smaller than `64` semitones.\n   *\n   * Because of the way the MIDI specification works, the decimal portion of the value will be\n   * encoded with a resolution of 14bit. The integer portion must be between -64 and 63\n   * inclusively. This function actually generates two MIDI messages: a **Master Coarse Tuning** and\n   * a **Master Fine Tuning** RPN messages.\n   *\n   * @param [value=0.0] {number} The desired decimal adjustment value in semitones (-65 < x < 64)\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The value must be a decimal number between larger than -65 and smaller\n   * than 64.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendMasterTuning(value, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendMasterTuning(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setMasterTuning(value, channel = {}, options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setMasterTuning() method is deprecated. Use sendMasterTuning() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendMasterTuning(value, options);\n\n  }\n\n  /**\n   * Sets the MIDI tuning program to use. Note that the **Tuning Program** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning program (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The program value must be between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuningProgram(value, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendTuningProgram(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setTuningProgram(value, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setTuningProgram() method is deprecated. Use sendTuningProgram() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendTuningProgram(value, options);\n\n  }\n\n  /**\n   * Sets the MIDI tuning bank to use. Note that the **Tuning Bank** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param {number} [value=0] The desired tuning bank (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The bank value must be between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuningBank(value= 0, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendTuningBank(value, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setTuningBank(parameter, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setTuningBank() method is deprecated. Use sendTuningBank() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendTuningBank(parameter, options);\n\n  }\n\n  /**\n   * Sends a MIDI **channel mode** message to the specified channel(s). The channel mode message to\n   * send can be specified numerically or by using one of the following common names:\n   *\n   * |  Type                |Number| Shortcut Method                                               |\n   * | ---------------------|------|-------------------------------------------------------------- |\n   * | `allsoundoff`        | 120  | [`sendAllSoundOff()`]{@link #sendAllSoundOff}                 |\n   * | `resetallcontrollers`| 121  | [`sendResetAllControllers()`]{@link #sendResetAllControllers} |\n   * | `localcontrol`       | 122  | [`sendLocalControl()`]{@link #sendLocalControl}               |\n   * | `allnotesoff`        | 123  | [`sendAllNotesOff()`]{@link #sendAllNotesOff}                 |\n   * | `omnimodeoff`        | 124  | [`sendOmniMode(false)`]{@link #sendOmniMode}                  |\n   * | `omnimodeon`         | 125  | [`sendOmniMode(true)`]{@link #sendOmniMode}                   |\n   * | `monomodeon`         | 126  | [`sendPolyphonicMode(\"mono\")`]{@link #sendPolyphonicMode}     |\n   * | `polymodeon`         | 127  | [`sendPolyphonicMode(\"poly\")`]{@link #sendPolyphonicMode}     |\n   *\n   * Note: as you can see above, to make it easier, all channel mode messages also have a matching\n   * helper method.\n   *\n   * It should also be noted that, per the MIDI specification, only `localcontrol` and `monomodeon`\n   * may require a value that's not zero. For that reason, the `value` parameter is optional and\n   * defaults to 0.\n   *\n   * @param {number|string} command The numerical identifier of the channel mode message (integer\n   * between 120-127) or its name as a string.\n   *\n   * @param {number} [value=0] The value to send (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   */\n  sendChannelMode(command, value = 0, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendChannelMode(command, value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **all sound off** channel mode message. This will silence all sounds playing on that\n   * channel but will not prevent new sounds from being triggered.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   *\n   * @since 3.0.0\n   */\n  sendAllSoundOff(options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendAllSoundOff(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **all notes off** channel mode message. This will make all currently playing notes\n   * fade out just as if their key had been released. This is different from the\n   * [`turnSoundOff()`]{@link #turnSoundOff} method which mutes all sounds immediately.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   *\n   * @since 3.0.0\n   */\n  sendAllNotesOff(options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendAllNotesOff(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **reset all controllers** channel mode message. This resets all controllers, such as\n   * the pitch bend, to their default value.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   */\n  sendResetAllControllers(options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendResetAllControllers(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets the polyphonic mode. In `poly` mode (usually the default), multiple notes can be played\n   * and heard at the same time. In `mono` mode, only one note will be heard at once even if\n   * multiple notes are being played.\n   *\n   * @param mode {string} The mode to use: `mono` or `poly`.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPolyphonicMode(mode, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPolyphonicMode(mode, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Turns local control on or off. Local control is usually enabled by default. If you disable it,\n   * the instrument will no longer trigger its own sounds. It will only send the MIDI messages to\n   * its out port.\n   *\n   * @param [state=false] {boolean} Whether to activate local control (`true`) or disable it\n   * (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendLocalControl(state, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendLocalControl(state, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets OMNI mode to **on** or **off** for the specified channel(s). MIDI's OMNI mode causes the\n   * instrument to respond to messages from all channels.\n   *\n   * It should be noted that support for OMNI mode is not as common as it used to be.\n   *\n   * @param [state] {boolean} Whether to activate OMNI mode (`true`) or not (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendOmniMode(state, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendOmniMode(state, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets a non-registered parameter to the specified value. The NRPN is selected by passing a\n   * two-position array specifying the values of the two control bytes. The value is specified by\n   * passing a single integer (most cases) or an array of two integers.\n   *\n   * NRPNs are not standardized in any way. Each manufacturer is free to implement them any way\n   * they see fit. For example, according to the Roland GS specification, you can control the\n   * **vibrato rate** using NRPN (`1`, `8`). Therefore, to set the **vibrato rate** value to `123`\n   * you would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([1, 8], 123);\n   * ```\n   *\n   * You probably want to should select a channel so the message is not sent to all channels. For\n   * instance, to send to channel `1` of the first output port, you would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([1, 8], 123, 1);\n   * ```\n   *\n   * In some rarer cases, you need to send two values with your NRPN messages. In such cases, you\n   * would use a 2-position array. For example, for its **ClockBPM** parameter (`2`, `63`), Novation\n   * uses a 14-bit value that combines an MSB and an LSB (7-bit values). So, for example, if the\n   * value to send was `10`, you could use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([2, 63], [0, 10], 1);\n   * ```\n   *\n   * For further implementation details, refer to the manufacturer's documentation.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes (`0x63`,\n   * `0x62`) that identify the non-registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An integer or an array of integers with a length of 1 or 2\n   * specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The control value must be between 0 and 127.\n   * @throws {RangeError} The msb value must be between 0 and 127\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNrpnValue(parameter, data, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNrpnValue(parameter, data, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setNonRegisteredParameter(parameter, data = [], channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendNrpnValue(parameter, data, options);\n\n  }\n\n  /**\n   * Increments the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this method:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnIncrement(parameter, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnIncrement(parameter, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  incrementRegisteredParameter(parameter, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnIncrement(parameter, options);\n\n  }\n\n  /**\n   * Decrements the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this method:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified parameter is not available.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnDecrement(parameter, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnDecrement(parameter, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  decrementRegisteredParameter(parameter, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnDecrement(parameter, options);\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number on the specified channel(s).\n   * The first parameter is the note to stop. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`,\n   * `F-1`, `Db7`) or an array of the previous types. When using a note identifier, octave range\n   * must be between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest\n   * note is `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNoteOff(note, options= {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNoteOff(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number on the specified channel(s).\n   * The first parameter is the note to stop. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  stopNote(note, options) {\n    return this.sendNoteOff(note, options);\n  }\n\n  /**\n   * Plays a note or an array of notes on one or more channels of this output. If you intend to play\n   * notes on a single channel, you should probably use\n   * [`OutputChannel.playNote()`](OutputChannel#playNote) instead.\n   *\n   * The first parameter is the note to play. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`]{@link Note} object\n   *\n   * The `playNote()` method sends a **note on** MIDI message for all specified notes on all\n   * specified channels. If no channel is specified, it will send to all channels. If a `duration`\n   * is set in the `options` parameter or in the [`Note`]{@link Note} object's\n   * [`duration`]{@link Note#duration} property, it will also schedule a **note off** message to end\n   * the note after said duration. If no `duration` is set, the note will simply play until a\n   * matching **note off** message is sent with [`stopNote()`]{@link #stopNote}.\n   *\n   * The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the durations and velocities defined in the\n   * [`Note`]{@link Note} objects have precedence over the ones specified via the method's `options`\n   * parameter.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types. When using a note identifier,\n   * octave range must be between -1 and 9. The lowest note is C-1 (MIDI note number `0`) and the\n   * highest note is G9 (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.duration=undefined] The number of milliseconds after which a\n   * **note off** message will be scheduled. If left undefined, only a **note on** message is sent.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`). If the `rawAttack` option is also defined, it will have priority. An invalid velocity\n   * value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The attack velocity at which to play the note (between\n   * `0` and `127`). This has priority over the `attack` property. An invalid velocity value will\n   * silently trigger the default of 64.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawRelease` option is also defined, it will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`. This is only used with the\n   * **note off** event triggered when `options.duration` is set.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note (between `0`\n   * and `127`). This has priority over the `release` property. An invalid velocity value will\n   * silently trigger the default of 64. This is only used with the **note off** event triggered\n   * when `options.duration` is set.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  playNote(note, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy-compatibility warnings\n      if (options.rawVelocity) {\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' instead.\");\n      }\n\n      if (options.velocity) {\n        console.warn(\"The 'velocity' option is deprecated. Use 'velocity' instead.\");\n      }\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].playNote(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note on** message for the specified MIDI note number on the specified channel(s). The\n   * first parameter is the number. It can be a single value or an array of the following valid\n   * values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`).  If the `rawAttack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The velocity at which to release the note (between `0`\n   * and `127`). If the `attack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNoteOn(note, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    // This actually supports passing a Note object even if, semantically, this does not make sense.\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNoteOn(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Name of the MIDI output.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get name() {\n    return this._midiOutput.name;\n  }\n\n  /**\n   * ID string of the MIDI output. The ID is host-specific. Do not expect the same ID on different\n   * platforms. For example, Google Chrome and the Jazz-Plugin report completely different IDs for\n   * the same port.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._midiOutput.id;\n  }\n\n  /**\n   * Output port's connection state: `pending`, `open` or `closed`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get connection() {\n    return this._midiOutput.connection;\n  }\n\n  /**\n   * Name of the manufacturer of the device that makes this output port available.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get manufacturer() {\n    return this._midiOutput.manufacturer;\n  }\n\n  /**\n   * State of the output port: `connected` or `disconnected`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get state() {\n    return this._midiOutput.state;\n  }\n\n  /**\n   * Type of the output port (it will always be: `output`).\n   *\n   * @type {string}\n   * @readonly\n   */\n  get type() {\n    return this._midiOutput.type;\n  }\n\n  /**\n   * An integer to offset the octave of outgoing notes. By default, middle C (MIDI note number 60)\n   * is placed on the 4th octave (C4).\n   *\n   * Note that this value is combined with the global offset value defined in\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) (if any).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n}\n","import {Enumerations} from \"./Enumerations.js\";\nimport {Output} from \"./Output.js\";\nimport {WebMidi} from \"./WebMidi.js\";\n\n/**\n * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you\n * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object\n * to all the outputs listed in its [`destinations`](#destinations) property.\n *\n * If specific channels or message types have been defined in the [`channels`](#channels) or\n * [`types`](#types) properties, only messages matching the channels/types will be forwarded.\n *\n * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as\n * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Forwarder {\n\n  /**\n   * Creates a `Forwarder` object.\n   *\n   * @param {Output|Output[]} [destinations=\\[\\]] An [`Output`](Output) object, or an array of such\n   * objects, to forward the message to.\n   *\n   * @param {object} [options={}]\n   * @param {string|string[]} [options.types=(all messages)] A MIDI message type or an array of such\n   * types (`\"noteon\"`, `\"controlchange\"`, etc.), that the specified message must match in order to\n   * be forwarded. If this option is not specified, all types of messages will be forwarded. Valid\n   * messages are the ones found in either\n   * [`SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES)\n   * or [`CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * A MIDI channel number or an array of channel numbers that the message must match in order to be\n   * forwarded. By default all MIDI channels are included (`1` to `16`).\n   */\n  constructor(destinations = [], options = {}) {\n\n    /**\n     * An array of [`Output`](Output) objects to forward the message to.\n     * @type {Output[]}\n     */\n    this.destinations = [];\n\n    /**\n     * An array of message types (`\"noteon\"`, `\"controlchange\"`, etc.) that must be matched in order\n     * for messages to be forwarded. By default, this array includes all\n     * [`Enumerations.SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES) and\n     * [`Enumerations.CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n     * @type {string[]}\n     */\n    this.types = [\n      ...Object.keys(Enumerations.SYSTEM_MESSAGES),\n      ...Object.keys(Enumerations.CHANNEL_MESSAGES)\n    ];\n\n    /**\n     * An array of MIDI channel numbers that the message must match in order to be forwarded. By\n     * default, this array includes all MIDI channels (`1` to `16`).\n     * @type {number[]}\n     */\n    this.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    /**\n     * Indicates whether message forwarding is currently suspended or not in this forwarder.\n     * @type {boolean}\n     */\n    this.suspended = false;\n\n    // Make sure parameters are arrays\n    if (!Array.isArray(destinations)) destinations = [destinations];\n    if (options.types && !Array.isArray(options.types)) options.types = [options.types];\n    if (options.channels && !Array.isArray(options.channels)) options.channels = [options.channels];\n\n    if (WebMidi.validation) {\n\n      // Validate destinations\n      destinations.forEach(destination => {\n        if ( !(destination instanceof Output) ) {\n          throw new TypeError(\"Destinations must be of type 'Output'.\");\n        }\n      });\n\n      // Validate types\n      if (options.types !== undefined) {\n\n        options.types.forEach(type => {\n          if (\n            ! Enumerations.SYSTEM_MESSAGES.hasOwnProperty(type) &&\n            ! Enumerations.CHANNEL_MESSAGES.hasOwnProperty(type)\n          ) {\n            throw new TypeError(\"Type must be a valid message type.\");\n          }\n        });\n\n      }\n\n      // Validate channels\n      if (options.channels !== undefined) {\n\n        options.channels.forEach(channel => {\n          if (! Enumerations.MIDI_CHANNEL_NUMBERS.includes(channel) ) {\n            throw new TypeError(\"MIDI channel must be between 1 and 16.\");\n          }\n        });\n\n      }\n\n    }\n\n    this.destinations = destinations;\n    if (options.types) this.types = options.types;\n    if (options.channels) this.channels = options.channels;\n\n  }\n\n  /**\n   * Sends the specified message to the forwarder's destination(s) if it matches the specified\n   * type(s) and channel(s).\n   *\n   * @param {Message} message The [`Message`](Message) object to forward.\n   */\n  forward(message) {\n\n    // Abort if forwarding is currently suspended\n    if (this.suspended) return;\n\n    // Abort if this message type should not be forwarded\n    if (!this.types.includes(message.type)) return;\n\n    // Abort if this channel should not be forwarded\n    if (message.channel && !this.channels.includes(message.channel)) return;\n\n    // Forward\n    this.destinations.forEach(destination => {\n      if (WebMidi.validation && !(destination instanceof Output)) return;\n      destination.send(message);\n    });\n\n  }\n\n}\n","import {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {WebMidi} from \"./WebMidi.js\";\nimport {Utilities} from \"./Utilities.js\";\nimport {Note} from \"./Note.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/**\n * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input\n * device. This object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)\n * property.\n *\n * @fires InputChannel#midimessage\n * @fires InputChannel#unknownmessage\n *\n * @fires InputChannel#noteoff\n * @fires InputChannel#noteon\n * @fires InputChannel#keyaftertouch\n * @fires InputChannel#programchange\n * @fires InputChannel#channelaftertouch\n * @fires InputChannel#pitchbend\n *\n * @fires InputChannel#allnotesoff\n * @fires InputChannel#allsoundoff\n * @fires InputChannel#localcontrol\n * @fires InputChannel#monomode\n * @fires InputChannel#omnimode\n * @fires InputChannel#resetallcontrollers\n *\n * @fires InputChannel#event:nrpn\n * @fires InputChannel#event:nrpn-dataentrycoarse\n * @fires InputChannel#event:nrpn-dataentryfine\n * @fires InputChannel#event:nrpn-dataincrement\n * @fires InputChannel#event:nrpn-datadecrement\n * @fires InputChannel#event:rpn\n * @fires InputChannel#event:rpn-dataentrycoarse\n * @fires InputChannel#event:rpn-dataentryfine\n * @fires InputChannel#event:rpn-dataincrement\n * @fires InputChannel#event:rpn-datadecrement\n *\n * @fires InputChannel#controlchange\n * @fires InputChannel#event:controlchange-controllerxxx\n * @fires InputChannel#event:controlchange-bankselectcoarse\n * @fires InputChannel#event:controlchange-modulationwheelcoarse\n * @fires InputChannel#event:controlchange-breathcontrollercoarse\n * @fires InputChannel#event:controlchange-footcontrollercoarse\n * @fires InputChannel#event:controlchange-portamentotimecoarse\n * @fires InputChannel#event:controlchange-dataentrycoarse\n * @fires InputChannel#event:controlchange-volumecoarse\n * @fires InputChannel#event:controlchange-balancecoarse\n * @fires InputChannel#event:controlchange-pancoarse\n * @fires InputChannel#event:controlchange-expressioncoarse\n * @fires InputChannel#event:controlchange-effectcontrol1coarse\n * @fires InputChannel#event:controlchange-effectcontrol2coarse\n * @fires InputChannel#event:controlchange-generalpurposecontroller1\n * @fires InputChannel#event:controlchange-generalpurposecontroller2\n * @fires InputChannel#event:controlchange-generalpurposecontroller3\n * @fires InputChannel#event:controlchange-generalpurposecontroller4\n * @fires InputChannel#event:controlchange-bankselectfine\n * @fires InputChannel#event:controlchange-modulationwheelfine\n * @fires InputChannel#event:controlchange-breathcontrollerfine\n * @fires InputChannel#event:controlchange-footcontrollerfine\n * @fires InputChannel#event:controlchange-portamentotimefine\n * @fires InputChannel#event:controlchange-dataentryfine\n * @fires InputChannel#event:controlchange-channelvolumefine\n * @fires InputChannel#event:controlchange-balancefine\n * @fires InputChannel#event:controlchange-panfine\n * @fires InputChannel#event:controlchange-expressionfine\n * @fires InputChannel#event:controlchange-effectcontrol1fine\n * @fires InputChannel#event:controlchange-effectcontrol2fine\n * @fires InputChannel#event:controlchange-damperpedal\n * @fires InputChannel#event:controlchange-portamento\n * @fires InputChannel#event:controlchange-sostenuto\n * @fires InputChannel#event:controlchange-softpedal\n * @fires InputChannel#event:controlchange-legatopedal\n * @fires InputChannel#event:controlchange-hold2\n * @fires InputChannel#event:controlchange-soundvariation\n * @fires InputChannel#event:controlchange-resonance\n * @fires InputChannel#event:controlchange-releasetime\n * @fires InputChannel#event:controlchange-attacktime\n * @fires InputChannel#event:controlchange-brightness\n * @fires InputChannel#event:controlchange-decaytime\n * @fires InputChannel#event:controlchange-vibratorate\n * @fires InputChannel#event:controlchange-vibratodepth\n * @fires InputChannel#event:controlchange-vibratodelay\n * @fires InputChannel#event:controlchange-generalpurposecontroller5\n * @fires InputChannel#event:controlchange-generalpurposecontroller6\n * @fires InputChannel#event:controlchange-generalpurposecontroller7\n * @fires InputChannel#event:controlchange-generalpurposecontroller8\n * @fires InputChannel#event:controlchange-portamentocontrol\n * @fires InputChannel#event:controlchange-highresolutionvelocityprefix\n * @fires InputChannel#event:controlchange-effect1depth\n * @fires InputChannel#event:controlchange-effect2depth\n * @fires InputChannel#event:controlchange-effect3depth\n * @fires InputChannel#event:controlchange-effect4depth\n * @fires InputChannel#event:controlchange-effect5depth\n * @fires InputChannel#event:controlchange-dataincrement\n * @fires InputChannel#event:controlchange-datadecrement\n * @fires InputChannel#event:controlchange-nonregisteredparameterfine\n * @fires InputChannel#event:controlchange-nonregisteredparametercoarse\n * @fires InputChannel#event:controlchange-registeredparameterfine\n * @fires InputChannel#event:controlchange-registeredparametercoarse\n * @fires InputChannel#event:controlchange-allsoundoff\n * @fires InputChannel#event:controlchange-resetallcontrollers\n * @fires InputChannel#event:controlchange-localcontrol\n * @fires InputChannel#event:controlchange-allnotesoff\n * @fires InputChannel#event:controlchange-omnimodeoff\n * @fires InputChannel#event:controlchange-omnimodeon\n * @fires InputChannel#event:controlchange-monomodeon\n * @fires InputChannel#event:controlchange-polymodeon\n * @fires InputChannel#event:\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class InputChannel extends EventEmitter {\n\n  /**\n   * Creates an `InputChannel` object.\n   *\n   * @param {Input} input The [`Input`](Input) object this channel belongs to.\n   * @param {number} number The channel's MIDI number (1-16).\n   */\n  constructor(input, number) {\n\n    super();\n\n    /**\n     * @type {Input}\n     * @private\n     */\n    this._input = input;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._number = number;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * An array of messages that form the current NRPN sequence\n     * @private\n     * @type {Message[]}\n     */\n    this._nrpnBuffer = [];\n\n    /**\n     * An array of messages that form the current RPN sequence\n     * @private\n     * @type {Message[]}\n     */\n    this._rpnBuffer = [];\n\n    /**\n     * Indicates whether events for **Registered Parameter Number** and **Non-Registered Parameter\n     * Number** should be dispatched. RPNs and NRPNs are composed of a sequence of specific\n     * **control change** messages. When a valid sequence of such control change messages is\n     * received, an [`rpn`](#event-rpn) or [`nrpn`](#event-nrpn) event will fire.\n     *\n     * If an invalid or out-of-order **control change** message is received, it will fall through\n     * the collector logic and all buffered **control change** messages will be discarded as\n     * incomplete.\n     *\n     * @type {boolean}\n     */\n    this.parameterNumberEventsEnabled = true;\n\n    /**\n     * Contains the current playing state of all MIDI notes of this channel (0-127). The state is\n     * `true` for a currently playing note and `false` otherwise.\n     * @type {boolean[]}\n     */\n    this.notesState = new Array(128).fill(false);\n\n  }\n\n  /**\n   * Destroys the `InputChannel` by removing all listeners and severing the link with the MIDI\n   * subsystem's input.\n   */\n  destroy() {\n    this._input = null;\n    this._number = null;\n    this._octaveOffset = 0;\n    this._nrpnBuffer = [];\n    this.notesState = new Array(128).fill(false);\n    this.parameterNumberEventsEnabled = false;\n    this.removeListener();\n  }\n\n  /**\n   * @param e MIDIMessageEvent\n   * @private\n   */\n  _processMidiMessageEvent(e) {\n\n    // Create and emit a new 'midimessage' event based on the incoming one\n    const event = Object.assign({}, e);\n    event.port = this.input;\n    event.target = this;\n    event.type = \"midimessage\";\n\n    /**\n     * Event emitted when a MIDI message of any kind is received by an `InputChannel`\n     *\n     * @event InputChannel#midimessage\n     *\n     * @type {object}\n     *\n     * @property {string} type `midimessage`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n    this.emit(event.type, event);\n\n    // Parse the inbound event for regular MIDI messages\n    this._parseEventForStandardMessages(event);\n\n  }\n\n  /**\n   * Parses incoming channel events and emit standard MIDI message events (noteon, noteoff, etc.)\n   * @param e Event\n   * @private\n   */\n  _parseEventForStandardMessages(e) {\n\n    const event = Object.assign({}, e);\n    event.type = event.message.type || \"unknownmessage\";\n\n    const data1 = e.message.dataBytes[0];\n    const data2 = e.message.dataBytes[1];\n\n    if ( event.type === \"noteoff\" || (event.type === \"noteon\" && data2 === 0) ) {\n\n      this.notesState[data1] = false;\n      event.type = \"noteoff\"; // necessary for note on with 0 velocity\n\n      /**\n       * Event emitted when a **note off** MIDI message has been received on the channel.\n       *\n       * @event InputChannel#noteoff\n       *\n       * @type {object}\n       * @property {string} type `noteoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the incoming\n       * MIDI message.\n       * @property {number} timestamp The moment\n       * ([`DOMHighResTimeStamp`](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp))\n       * when the event occurred (in milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name,\n       * octave and release velocity.\n       * @property {number} value The release velocity amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The release velocity amount expressed as an integer (between 0\n       * and 127).\n       */\n\n      // The object created when a noteoff event arrives is a Note with an attack velocity of 0.\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + WebMidi.octaveOffset\n        ),\n        {\n          rawAttack: 0,\n          rawRelease: data2,\n        }\n      );\n\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // Those are kept for backwards-compatibility but are gone from the documentation. They will\n      // be removed in future versions (@deprecated).\n      event.velocity = event.note.release;\n      event.rawVelocity = event.note.rawRelease;\n\n    } else if (event.type === \"noteon\") {\n\n      this.notesState[data1] = true;\n\n      /**\n       * Event emitted when a **note on** MIDI message has been received.\n       *\n       * @event InputChannel#noteon\n       *\n       * @type {object}\n       * @property {string} type `noteon`\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name,\n       * octave and release velocity.\n       * @property {number} value The attack velocity amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The attack velocity amount expressed as an integer (between 0\n       * and 127).\n       */\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + WebMidi.octaveOffset\n        ),\n        { rawAttack: data2 }\n      );\n\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // Those are kept for backwards-compatibility but are gone from the documentation. They will\n      // be removed in future versions (@deprecated).\n      event.velocity = event.note.attack;\n      event.rawVelocity = event.note.rawAttack;\n\n    } else if (event.type === \"keyaftertouch\") {\n\n      /**\n       * Event emitted when a **key-specific aftertouch** MIDI message has been received.\n       *\n       * @event InputChannel#keyaftertouch\n       *\n       * @type {object}\n       * @property {string} type `\"keyaftertouch\"`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name\n       * and number.\n       * @property {number} value The aftertouch amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The aftertouch amount expressed as an integer (between 0 and\n       * 127).\n       */\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + WebMidi.octaveOffset\n        )\n      );\n\n      // Aftertouch value\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // @deprecated\n      event.identifier = event.note.identifier;\n      event.key = event.note.number;\n      event.rawKey = data1;\n\n    } else if (event.type === \"controlchange\") {\n\n      /**\n       * Event emitted when a **control change** MIDI message has been received.\n       *\n       * @event InputChannel#controlchange\n       *\n       * @type {object}\n       * @property {string} type `controlchange`\n       * @property {string} subtype The type of control change message that was received.\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      event.controller = {\n        number: data1,\n        name: Enumerations.CONTROL_CHANGE_MESSAGES[data1].name,\n        description: Enumerations.CONTROL_CHANGE_MESSAGES[data1].description,\n        position: Enumerations.CONTROL_CHANGE_MESSAGES[data1].position,\n      };\n\n      event.subtype = event.controller.name || \"controller\" + data1;\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      /**\n       * Event emitted when a **control change** MIDI message has been received and that message is\n       * targeting the controller numbered \"xxx\". Of course, \"xxx\" should be replaced by a valid\n       * controller number (0-127).\n       *\n       * @event InputChannel#controlchange-controllerxxx\n       *\n       * @type {object}\n       * @property {string} type `controlchange-controllerxxx`\n       * @property {string} subtype The type of control change message that was received.\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      const numberedEvent = Object.assign({}, event);\n      numberedEvent.type = `${event.type}-controller${data1}`;\n      delete numberedEvent.subtype;\n      this.emit(numberedEvent.type, numberedEvent);\n\n      /**\n       * Event emitted when a **controlchange-bankselectcoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-bankselectcoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-bankselectcoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-modulationwheelcoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-modulationwheelcoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-modulationwheelcoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-breathcontrollercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-breathcontrollercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-breathcontrollercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-footcontrollercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-footcontrollercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-footcontrollercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentotimecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentotimecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentotimecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataentrycoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataentrycoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataentrycoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-volumecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-volumecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-volumecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-balancecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-balancecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-balancecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-pancoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-pancoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-pancoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-expressioncoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-expressioncoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-expressioncoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol1coarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol1coarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol1coarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol2coarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol2coarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol2coarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller1** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller1\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller1`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller2** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller2\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller2`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller3** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller3\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller3`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller4** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller4\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller4`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-bankselectfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-bankselectfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-bankselectfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-modulationwheelfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-modulationwheelfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-modulationwheelfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-breathcontrollerfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-breathcontrollerfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-breathcontrollerfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-footcontrollerfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-footcontrollerfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-footcontrollerfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentotimefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentotimefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentotimefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataentryfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataentryfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataentryfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-channelvolumefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-channelvolumefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-channelvolumefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-balancefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-balancefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-balancefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-panfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-panfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-panfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-expressionfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-expressionfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-expressionfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol1fine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol1fine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol1fine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol2fine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol2fine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol2fine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-damperpedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-damperpedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-damperpedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamento** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamento\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamento`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-sostenuto** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-sostenuto\n       *\n       * @type {object}\n       * @property {string} type `controlchange-sostenuto`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-softpedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-softpedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-softpedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-legatopedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-legatopedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-legatopedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-hold2** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-hold2\n       *\n       * @type {object}\n       * @property {string} type `controlchange-hold2`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-soundvariation** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-soundvariation\n       *\n       * @type {object}\n       * @property {string} type `controlchange-soundvariation`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-resonance** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-resonance\n       *\n       * @type {object}\n       * @property {string} type `controlchange-resonance`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-releasetime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-releasetime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-releasetime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-attacktime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-attacktime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-attacktime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-brightness** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-brightness\n       *\n       * @type {object}\n       * @property {string} type `controlchange-brightness`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-decaytime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-decaytime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-decaytime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratorate** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratorate\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratorate`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratodepth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratodepth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratodepth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratodelay** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratodelay\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratodelay`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller5** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller5\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller5`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller6** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller6\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller6`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller7** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller7\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller7`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller8** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller8\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller8`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentocontrol** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentocontrol\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentocontrol`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-highresolutionvelocityprefix** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-highresolutionvelocityprefix\n       *\n       * @type {object}\n       * @property {string} type `controlchange-highresolutionvelocityprefix`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect1depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect1depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect1depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect2depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect2depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect2depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect3depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect3depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect3depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect4depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect4depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect4depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect5depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect5depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect5depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataincrement** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataincrement\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataincrement`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-datadecrement** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-datadecrement\n       *\n       * @type {object}\n       * @property {string} type `controlchange-datadecrement`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-nonregisteredparameterfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-nonregisteredparameterfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-nonregisteredparameterfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-nonregisteredparametercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-nonregisteredparametercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-nonregisteredparametercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-registeredparameterfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-registeredparameterfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-registeredparameterfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-registeredparametercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-registeredparametercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-registeredparametercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-allsoundoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-allsoundoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-allsoundoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-resetallcontrollers** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-resetallcontrollers\n       *\n       * @type {object}\n       * @property {string} type `controlchange-resetallcontrollers`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-localcontrol** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-localcontrol\n       *\n       * @type {object}\n       * @property {string} type `controlchange-localcontrol`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-allnotesoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-allnotesoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-allnotesoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-omnimodeoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-omnimodeoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-omnimodeoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-omnimodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-omnimodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-omnimodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-monomodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-monomodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-monomodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-polymodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-polymodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-polymodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      const namedEvent = Object.assign({}, event);\n      namedEvent.type = `${event.type}-` + Enumerations.CONTROL_CHANGE_MESSAGES[data1].name;\n      delete namedEvent.subtype;\n\n      // Dispatch controlchange-\"function\" events only if the \"function\" is defined (not the generic\n      // controllerXXX nomenclature)\n      if (namedEvent.type.indexOf(\"controller\") !== 0) {\n        this.emit(namedEvent.type, namedEvent);\n      }\n\n      // Trigger channel mode message events (if appropriate)\n      if (event.message.dataBytes[0] >= 120) this._parseChannelModeMessage(event);\n\n      // Parse the inbound event to see if its part of an RPN/NRPN sequence\n      if (\n        this.parameterNumberEventsEnabled &&\n        this._isRpnOrNrpnController(event.message.dataBytes[0])\n      ) {\n        this._parseEventForParameterNumber(event);\n      }\n\n    } else if (event.type === \"programchange\") {\n\n      /**\n       * Event emitted when a **program change** MIDI message has been received.\n       *\n       * @event InputChannel#programchange\n       *\n       * @type {object}\n       * @property {string} type `programchange`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as an integer between 0 and 127.\n       * @property {number} rawValue  The raw MIDI value expressed as an integer between 0 and 127.\n       */\n      event.value = data1;\n      event.rawValue = event.value;\n\n    } else if (event.type === \"channelaftertouch\") {\n\n      /**\n       * Event emitted when a control change MIDI message has been received.\n       *\n       * @event InputChannel#channelaftertouch\n       *\n       * @type {object}\n       * @property {string} type `channelaftertouch`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The raw MIDI value expressed as an integer between 0 and 127.\n       */\n      event.value = Utilities.from7bitToFloat(data1);\n      event.rawValue = data1;\n\n    } else if (event.type === \"pitchbend\") {\n\n      /**\n       * Event emitted when a pitch bend MIDI message has been received.\n       *\n       * @event InputChannel#pitchbend\n       *\n       * @type {object}\n       * @property {string} type `pitchbend`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The raw MIDI value expressed as an integer (between 0 and\n       * 16383).\n       */\n      event.value = ((data2 << 7) + data1 - 8192) / 8192;\n      event.rawValue = (data2 << 7) + data1;\n\n    } else {\n      event.type = \"unknownmessage\";\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * @param e {Object}\n   * @private\n   */\n  _parseChannelModeMessage(e) {\n\n    // Make a shallow copy of the incoming event so we can use it as the new event.\n    const event = Object.assign({}, e);\n    event.type = event.controller.name;\n\n    /**\n     * Event emitted when an \"all sound off\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#allsoundoff\n     *\n     * @type {object}\n     * @property {string} type `allsoundoff`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when a \"reset all controllers\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#resetallcontrollers\n     *\n     * @type {object}\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when a \"local control\" channel-mode MIDI message has been received. The value\n     * property of the event is set to either `true` (local control on) of `false` (local control\n     * off).\n     *\n     * @event InputChannel#localcontrol\n     *\n     * @type {object}\n     * @property {string} type `localcontrol`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value For local control on, the value is `true`. For local control off,\n     * the value is `false`.\n     * @property {boolean} rawValue For local control on, the value is `127`. For local control off,\n     * the value is `0`.\n     */\n    if (event.type === \"localcontrol\") {\n      event.value = event.message.data[2] === 127 ? true : false;\n      event.rawValue = event.message.data[2];\n    }\n\n    /**\n     * Event emitted when an \"all notes off\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#allnotesoff\n     *\n     * @type {object}\n     * @property {string} type `allnotesoff`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when an \"omni mode\" channel-mode MIDI message has been received. The value\n     * property of the event is set to either `true` (omni mode on) of `false` (omni mode off).\n     *\n     * @event InputChannel#omnimode\n     *\n     * @type {object}\n     * @property {string} type `\"omnimode\"`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value The value is `true` for omni mode on and false for omni mode off.\n     * @property {boolean} rawValue The raw MIDI value\n     */\n    if (event.type === \"omnimodeon\") {\n      event.type = \"omnimode\";\n      event.value = true;\n      event.rawValue = event.message.data[2];\n    } else if (event.type === \"omnimodeoff\") {\n      event.type = \"omnimode\";\n      event.value = false;\n      event.rawValue = event.message.data[2];\n    }\n\n\n    /**\n     * Event emitted when a \"mono/poly mode\" MIDI message has been received. The value property of\n     * the event is set to either `true` (mono mode on / poly mode off) or `false` (mono mode off /\n     * poly mode on).\n     *\n     * @event InputChannel#monomode\n     *\n     * @type {object}\n     * @property {string} type `monomode`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value The value is `true` for omni mode on and false for omni mode off.\n     * @property {boolean} rawValue The raw MIDI value\n     */\n    if (event.type === \"monomodeon\") {\n      event.type = \"monomode\";\n      event.value = true;\n      event.rawValue = event.message.data[2];\n    } else if (event.type === \"polymodeon\") {\n      event.type = \"monomode\";\n      event.value = false;\n      event.rawValue = event.message.data[2];\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * Parses inbound events to identify RPN/NRPN sequences.\n   * @param e Event\n   * @private\n   */\n  _parseEventForParameterNumber(event) {\n\n    // To make it more legible\n    const controller = event.message.dataBytes[0];\n    const value = event.message.dataBytes[1];\n\n    // A. Check if the message is the start of an RPN (101) or NRPN (99) parameter declaration.\n    if (controller === 99 || controller === 101) {\n\n      this._nrpnBuffer = [];\n      this._rpnBuffer = [];\n\n      if (controller === 99) {                          // 99\n        this._nrpnBuffer = [event.message];\n      } else {                                          // 101\n        // 127 is a reset so we ignore it\n        if (value !== 127) this._rpnBuffer = [event.message];\n      }\n\n    // B. Check if the message is the end of an RPN (100) or NRPN (98) parameter declaration.\n    } else if (controller === 98 || controller === 100) {\n\n      if (controller === 98) {                          // 98\n\n        // Flush the other buffer (they are mutually exclusive)\n        this._rpnBuffer = [];\n\n        // Check if we are in sequence\n        if (this._nrpnBuffer.length === 1) {\n          this._nrpnBuffer.push(event.message);\n        } else {\n          this._nrpnBuffer = []; // out of sequence\n        }\n\n      } else {                                          // 100\n\n        // Flush the other buffer (they are mutually exclusive)\n        this._nrpnBuffer = [];\n\n        // 127 is a reset so we ignore it\n        if (this._rpnBuffer.length === 1 && value !== 127) {\n          this._rpnBuffer.push(event.message);\n        } else {\n          this._rpnBuffer = []; // out of sequence or reset\n        }\n\n      }\n\n    // C. Check if the message is for data entry (6, 38, 96 or 97). Those messages trigger events.\n    } else if (\n      controller === 6 ||\n      controller === 38 ||\n      controller === 96 ||\n      controller === 97\n    ) {\n\n      if (this._rpnBuffer.length === 2) {\n        this._dispatchParameterNumberEvent(\n          \"rpn\",\n          this._rpnBuffer[0].dataBytes[1],\n          this._rpnBuffer[1].dataBytes[1],\n          event\n        );\n      } else if (this._nrpnBuffer.length === 2) {\n        this._dispatchParameterNumberEvent(\n          \"nrpn\",\n          this._nrpnBuffer[0].dataBytes[1],\n          this._nrpnBuffer[1].dataBytes[1],\n          event\n        );\n      } else {\n        this._nrpnBuffer = [];\n        this._rpnBuffer = [];\n      }\n\n    }\n\n  }\n\n  /**\n   * Indicates whether the specified controller can be part of an RPN or NRPN sequence\n   * @param controller\n   * @returns {boolean}\n   * @private\n   */\n  _isRpnOrNrpnController(controller) {\n\n    return controller === 6 ||\n      controller === 38 ||\n      controller === 96 ||\n      controller === 97 ||\n      controller === 98 ||\n      controller === 99 ||\n      controller === 100 ||\n      controller === 101;\n\n  }\n\n  /**\n   * @private\n   */\n  _dispatchParameterNumberEvent(type, paramMsb, paramLsb, e) {\n\n    type = type === \"nrpn\" ? \"nrpn\" : \"rpn\";\n\n    /**\n     * Event emitted when an **RPN data entry coarse** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataentrycoarse\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataentrycoarse`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data entry fine** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`EnumerationsREGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataentryfine\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataentryfine`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data increment** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataincrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataincrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data decrement** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-datadecrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-datadecrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data entry coarse** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataentrycoarse\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataentrycoarse`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data entry fine** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataentryfine\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataentryfine`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data increment** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataincrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataincrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data decrement** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-datadecrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-datadecrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    const event = {\n      target: e.target,\n      timestamp: e.timestamp,\n      message: e.message,\n      parameterMsb: paramMsb,\n      parameterLsb: paramLsb,\n      value: Utilities.from7bitToFloat(e.message.dataBytes[1]),\n      rawValue: e.message.dataBytes[1],\n    };\n\n    // Identify the parameter (by name for RPN and by number for NRPN)\n    if (type === \"rpn\") {\n\n      event.parameter = Object.keys(Enumerations.REGISTERED_PARAMETERS).find(key => {\n        return Enumerations.REGISTERED_PARAMETERS[key][0] === paramMsb &&\n          Enumerations.REGISTERED_PARAMETERS[key][1] === paramLsb;\n      });\n\n    } else {\n      event.parameter = (paramMsb << 7) + paramLsb;\n    }\n\n    // Type and subtype\n    const subtype = Enumerations.CONTROL_CHANGE_MESSAGES[e.message.dataBytes[0]].name;\n\n    // Emit specific event\n    event.type = `${type}-${subtype}`;\n    this.emit(event.type, event);\n\n    // Begin Legacy Block (remove in v4)\n    const legacyEvent = Object.assign({}, event);\n    if (legacyEvent.type === \"nrpn-dataincrement\") {\n      legacyEvent.type = \"nrpn-databuttonincrement\";\n    } else if (legacyEvent.type === \"nrpn-datadecrement\") {\n      legacyEvent.type = \"nrpn-databuttondecrement\";\n    } else if (legacyEvent.type === \"rpn-dataincrement\") {\n      legacyEvent.type = \"rpn-databuttonincrement\";\n    } else if (legacyEvent.type === \"rpn-datadecrement\") {\n      legacyEvent.type = \"rpn-databuttondecrement\";\n    }\n    this.emit(legacyEvent.type, legacyEvent);\n    // End Legacy Block\n\n    /**\n     * Event emitted when any NRPN message is received on the input. There are four subtypes of NRPN\n     * messages:\n     *\n     *   * `nrpn-dataentrycoarse`\n     *   * `nrpn-dataentryfine`\n     *   * `nrpn-dataincrement`\n     *   * `nrpn-datadecrement`\n     *\n     * The parameter to which the message applies can be found in the event's `parameter` property.\n     *\n     * @event InputChannel#nrpn\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn`\n     * @property {string} subtype The precise type of NRPN message that was received.\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} parameter The non-registered parameter number (0-16383)\n     * @property {number} parameterMsb The MSB portion of the non-registered parameter number\n     * (0-127)\n     * @property {number} parameterLsb: The LSB portion of the non-registered parameter number\n     * (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when any RPN message is received on the input. There are four subtypes of RPN\n     * messages:\n     *\n     *   * `rpn-dataentrycoarse`\n     *   * `rpn-dataentryfine`\n     *   * `rpn-dataincrement`\n     *   * `rpn-datadecrement`\n     *\n     * The parameter to which the message applies can be found in the event's `parameter` property.\n     * It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn`\n     * @property {string} subtype The precise type of RPN message that was received.\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    // Emit general event\n    event.type = type;\n    event.subtype = subtype;\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * @deprecated since version 3.\n   * @private\n   */\n  getChannelModeByNumber(number) {\n\n    if (WebMidi.validation) {\n      console.warn(\n        \"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n      number = Math.floor(number);\n    }\n\n    return Utilities.getChannelModeByNumber(number);\n\n  }\n\n  /**\n   * @deprecated since version 3.\n   * @private\n   */\n  getCcNameByNumber(number) {\n\n    if (WebMidi.validation) {\n      console.warn(\n        \"The 'getCcNameByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n      number = parseInt(number);\n      if ( !(number >= 0 && number <= 127) ) throw new RangeError(\"Invalid control change number.\");\n    }\n\n    return Utilities.getCcNameByNumber(number);\n\n  }\n\n  /**\n   * Returns the playing status of the specified note (`true` if the note is currently playing,\n   * `false` if it is not). The `note` parameter can be an unsigned integer (0-127), a note\n   * identifier (`\"C4\"`, `\"G#5\"`, etc.) or a [`Note`]{@link Note} object.\n   *\n   * IF the note is specified using an integer (0-127), no octave offset will be applied.\n   *\n   * @param {number|string|Note} note The note to get the state for. The\n   * [`octaveOffset`](#octaveOffset) (channel, input and global) will be factored in for note\n   * identifiers and [`Note`]{@link Note} objects.\n   * @returns {boolean}\n   * @since version 3.0.0\n   */\n  getNoteState(note) {\n\n    // If it's a note object, we simply use the identifier\n    if (note instanceof Note) note = note.identifier;\n\n    const number = Utilities.guessNoteNumber(\n      note,\n      WebMidi.octaveOffset + this.input.octaveOffset + this.octaveOffset\n    );\n\n    return this.notesState[number];\n\n  }\n\n  /**\n   * An integer to offset the reported octave of incoming note-specific messages (`noteon`,\n   * `noteoff` and `keyaftertouch`). By default, middle C (MIDI note number 60) is placed on the 4th\n   * octave (C4).\n   *\n   * If, for example, `octaveOffset` is set to 2, MIDI note number 60 will be reported as C6. If\n   * `octaveOffset` is set to -1, MIDI note number 60 will be reported as C3.\n   *\n   * Note that this value is combined with the global offset value defined by\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) object and with the value defined on the parent\n   * input object with [`Input.octaveOffset`](Input#octaveOffset).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * The [`Input`](Input) this channel belongs to.\n   * @type {Input}\n   * @since 3.0\n   */\n  get input() {\n    return this._input;\n  }\n\n  /**\n   * This channel's MIDI number (1-16).\n   * @type {number}\n   * @since 3.0\n   */\n  get number() {\n    return this._number;\n  }\n\n  /**\n   * Whether RPN/NRPN events are parsed and dispatched.\n   * @type {boolean}\n   * @since 3.0\n   * @deprecated Use parameterNumberEventsEnabled instead.\n   * @private\n   */\n  get nrpnEventsEnabled() {\n    return this.parameterNumberEventsEnabled;\n  }\n  set nrpnEventsEnabled(value) {\n\n    if (this.validation) {\n      value = !!value;\n    }\n\n    this.parameterNumberEventsEnabled = value;\n\n  }\n\n}\n","import {Utilities} from \"./Utilities.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/**\n * The `Message` class represents a single MIDI message. It has several properties that make it\n * easy to make sense of the binary data it contains.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Message {\n\n  /**\n   * Creates a new `Message` object from raw MIDI data.\n   *\n   * @param {Uint8Array} data The raw data of the MIDI message as a\n   * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n   * of integers between `0` and `255`.\n   */\n  constructor(data) {\n\n    /**\n     * A\n     * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n     * containing the bytes of the MIDI message. Each byte is an integer between `0` and `255`.\n     *\n     * @type {Uint8Array}\n     * @readonly\n     */\n    this.rawData = data;\n\n    /**\n     * An array containing all the bytes of the MIDI message. Each byte is an integer between `0`\n     * and `255`.\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.data = Array.from(this.rawData);\n\n    /**\n     * The MIDI status byte of the message as an integer between `0` and `255`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.statusByte = this.rawData[0];\n\n    /**\n     * A\n     * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n     * of the data byte(s) of the MIDI message. When the message is a system exclusive message\n     * (sysex), `rawDataBytes` explicitly excludes the manufacturer ID and the sysex end byte so\n     * only the actual data is included.\n     *\n     * @type {Uint8Array}\n     * @readonly\n     */\n    this.rawDataBytes = this.rawData.slice(1);\n\n    /**\n     * An array of the the data byte(s) of the MIDI message (as opposed to the status byte). When\n     * the message is a system exclusive message (sysex), `dataBytes` explicitly excludes the\n     * manufacturer ID and the sysex end byte so only the actual data is included.\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.dataBytes = this.data.slice(1);\n\n    /**\n     * A boolean indicating whether the MIDI message is a channel-specific message.\n     *\n     * @type {boolean}\n     * @readonly\n     */\n    this.isChannelMessage = false;\n\n    /**\n     * A boolean indicating whether the MIDI message is a system message (not specific to a\n     * channel).\n     *\n     * @type {boolean}\n     * @readonly\n     */\n    this.isSystemMessage = false;\n\n    /**\n     * An integer identifying the MIDI command. For channel-specific messages, the value is 4-bit\n     * and will be between `8` and `14`. For system messages, the value will be between `240` and\n     * `255`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.command = undefined;\n\n    /**\n     * The MIDI channel number (`1` - `16`) that the message is targeting. This is only for\n     * channel-specific messages. For system messages, this will be left `undefined`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.channel = undefined;\n\n    /**\n     * When the message is a system exclusive message (sysex), this property contains an array with\n     * either 1 or 3 entries that identify the manufacturer targeted by the message.\n     *\n     * To know how to translate these entries into manufacturer names, check out the official list:\n     * https://www.midi.org/specifications-old/item/manufacturer-id-numbers\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.manufacturerId = undefined;\n\n    /**\n     * The type of message as a string (`\"noteon\"`, `\"controlchange\"`, `\"sysex\"`, etc.)\n     *\n     * @type {string}\n     * @readonly\n     */\n    this.type = undefined;\n\n    // Assign values to property that vary according to whether they are channel-specific or system\n    if (this.statusByte < 240) {\n      this.isChannelMessage = true;\n      this.command = this.statusByte >> 4;\n      this.channel = (this.statusByte & 0b00001111) + 1;\n    } else {\n      this.isSystemMessage = true;\n      this.command = this.statusByte;\n    }\n\n    // Assign type (depending on whether the message is channel-specific or system)\n    if (this.isChannelMessage) {\n      this.type = Utilities.getPropertyByValue(Enumerations.CHANNEL_MESSAGES, this.command);\n    } else if (this.isSystemMessage) {\n      this.type = Utilities.getPropertyByValue(Enumerations.SYSTEM_MESSAGES, this.command);\n    }\n\n    // When the message is a sysex message, we add a manufacturer property and strip out the id from\n    // dataBytes and rawDataBytes.\n    if (this.statusByte === Enumerations.SYSTEM_MESSAGES.sysex) {\n\n      if (this.dataBytes[0] === 0) {\n        this.manufacturerId = this.dataBytes.slice(0, 3);\n        this.dataBytes = this.dataBytes.slice(3, this.rawDataBytes.length - 1);\n        this.rawDataBytes = this.rawDataBytes.slice(3, this.rawDataBytes.length - 1);\n      } else {\n        this.manufacturerId = [this.dataBytes[0]];\n        this.dataBytes = this.dataBytes.slice(1, this.dataBytes.length - 1);\n        this.rawDataBytes = this.rawDataBytes.slice(1, this.rawDataBytes.length - 1);\n      }\n\n    }\n\n  }\n\n}\n","import {Enumerations} from \"./Enumerations.js\";\nimport {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {Forwarder} from \"./Forwarder.js\";\nimport {InputChannel} from \"./InputChannel.js\";\nimport {Message} from \"./Message.js\";\nimport {Utilities} from \"./Utilities.js\";\nimport {WebMidi} from \"./WebMidi.js\";\n\n/**\n * The `Input` class represents a single MIDI input port. This object is automatically instantiated\n * by the library according to the host's MIDI subsystem and does not need to be directly\n * instantiated. Instead, you can access all `Input` objects by referring to the\n * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as\n * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and\n * [`WebMidi.getInputById()`](WebMidi#getInputById).\n *\n * Note that a single MIDI device may expose several inputs and/or outputs.\n *\n * **Important**: the `Input` class does not directly fire channel-specific MIDI messages\n * (such as [`noteon`](InputChannel#event:noteon) or\n * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)\n * object does that. However, you can still use the\n * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple\n * [`InputChannel`](InputChannel) objects at once.\n *\n * @fires Input#opened\n * @fires Input#disconnected\n * @fires Input#closed\n * @fires Input#midimessage\n *\n * @fires Input#sysex\n * @fires Input#timecode\n * @fires Input#songposition\n * @fires Input#songselect\n * @fires Input#tunerequest\n * @fires Input#clock\n * @fires Input#start\n * @fires Input#continue\n * @fires Input#stop\n * @fires Input#activesensing\n * @fires Input#reset\n *\n * @fires Input#unknownmidimessage\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nexport class Input extends EventEmitter {\n\n  /**\n   * Creates an `Input` object.\n   *\n   * @param {MIDIInput} midiInput [`MIDIInput`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIInput)\n   * object as provided by the MIDI subsystem (Web MIDI API).\n   */\n  constructor(midiInput) {\n\n    super();\n\n    /**\n     * Reference to the actual MIDIInput object\n     * @private\n     */\n    this._midiInput = midiInput;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * Array containing the 16 [`InputChannel`](InputChannel) objects available for this `Input`. The\n     * channels are numbered 1 through 16.\n     *\n     * @type {InputChannel[]}\n     */\n    this.channels = [];\n    for (let i = 1; i <= 16; i++) this.channels[i] = new InputChannel(this, i);\n\n    /**\n     * @type {Forwarder[]}\n     * @private\n     */\n    this._forwarders = [];\n\n    // Setup listeners\n    this._midiInput.onstatechange = this._onStateChange.bind(this);\n    this._midiInput.onmidimessage = this._onMidiMessage.bind(this);\n\n  }\n\n  /**\n   * Destroys the `Input` by removing all listeners, emptying the [`channels`](#channels) array and\n   * unlinking the MIDI subsystem. This is mostly for internal use.\n   *\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    this.removeListener();\n    this.channels.forEach(ch => ch.destroy());\n    this.channels = [];\n    this._forwarders = [];\n    if (this._midiInput) {\n      this._midiInput.onstatechange = null;\n      this._midiInput.onmidimessage = null;\n    }\n    await this.close();\n    this._midiInput = null;\n  }\n\n  /**\n   * Executed when a `\"statechange\"` event occurs.\n   *\n   * @param e\n   * @private\n   */\n  _onStateChange(e) {\n\n    let event = {\n      timestamp: WebMidi.time,\n      target: this,\n      port: this // for consistency\n    };\n\n    if (e.port.connection === \"open\") {\n\n      /**\n       * Event emitted when the `Input` has been opened by calling the [`open()`]{@link #open}\n       * method.\n       *\n       * @event Input#opened\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `opened`\n       * @property {Input} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       */\n      event.type = \"opened\";\n      this.emit(\"opened\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"connected\") {\n\n      /**\n       * Event emitted when the `Input` has been closed by calling the\n       * [`close()`]{@link #close} method.\n       *\n       * @event Input#closed\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `closed`\n       * @property {Input} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       */\n      event.type = \"closed\";\n      this.emit(\"closed\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"disconnected\") {\n\n      /**\n       * Event emitted when the `Input` becomes unavailable. This event is typically fired\n       * when the MIDI device is unplugged.\n       *\n       * @event Input#disconnected\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `disconnected`\n       * @property {Input} port Object with properties describing the {@link Input} that was\n       * disconnected. This is not the actual `Input` as it is no longer available.\n       * @property {Input} target The object that dispatched the event.\n       */\n      event.type = \"disconnected\";\n      event.port = {\n        connection: e.port.connection,\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n      this.emit(\"disconnected\", event);\n\n    } else if (e.port.connection === \"pending\" && e.port.state === \"disconnected\") {\n      // I don't see the need to forward that...\n    } else {\n      console.warn(\"This statechange event was not caught: \", e.port.connection, e.port.state);\n    }\n\n  }\n\n  /**\n   * Executed when a `\"midimessage\"` event is received\n   * @param e\n   * @private\n   */\n  _onMidiMessage(e) {\n\n    // Create Message object from MIDI data\n    const message = new Message(e.data);\n\n    /**\n     * Event emitted when any MIDI message is received on an `Input`.\n     *\n     * @event Input#midimessage\n     *\n     * @type {object}\n     *\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Input} target The object that dispatched the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `midimessage`\n     *\n     * @since 2.1\n     */\n    const event = {\n      port: this,\n      target: this,\n      message: message,\n      timestamp: e.timeStamp,\n      type: \"midimessage\",\n\n      data: message.data,           // @deprecated (will be removed in v4)\n      rawData: message.data,        // @deprecated (will be removed in v4)\n      statusByte: message.data[0],  // @deprecated (will be removed in v4)\n      dataBytes: message.dataBytes  // @deprecated (will be removed in v4)\n    };\n\n    this.emit(\"midimessage\", event);\n\n    // Messages are forwarded to InputChannel if they are channel messages or parsed locally for\n    // system messages.\n    if (message.isSystemMessage) {           // system messages\n      this._parseEvent(event);\n    } else if (message.isChannelMessage) {   // channel messages\n      this.channels[message.channel]._processMidiMessageEvent(event);\n    }\n\n    // Forward message if forwarders have been defined\n    this._forwarders.forEach(forwarder => forwarder.forward(message));\n\n  }\n\n  /**\n   * @private\n   */\n  _parseEvent(e) {\n\n    // Make a shallow copy of the incoming event so we can use it as the new event.\n    const event = Object.assign({}, e);\n    event.type = event.message.type || \"unknownmidimessage\";\n\n    // Add custom property for 'songselect'\n    if (event.type === \"songselect\") {\n      event.song = e.data[1] + 1; // deprecated\n      event.value = e.data[1];\n      event.rawValue = event.value;\n    }\n\n    // Emit event\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * Opens the input for usage. This is usually unnecessary as the port is opened automatically when\n   * WebMidi is enabled.\n   *\n   * @returns {Promise<Input>} The promise is fulfilled with the `Input` object.\n   */\n  async open() {\n\n    // Explicitly opens the port for usage. This is not mandatory. When the port is not explicitly\n    // opened, it is implicitly opened (asynchronously) when assigning a listener to the\n    // `onmidimessage` property of the `MIDIInput`. We do it explicitly so that 'connected' events\n    // are dispatched immediately and that we are ready to listen.\n    try {\n      await this._midiInput.open();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * Closes the input. When an input is closed, it cannot be used to listen to MIDI messages until\n   * the input is opened again by calling [`Input.open()`](Input#open).\n   *\n   * **Note**: if what you want to do is stop events from being dispatched, you should use\n   * [`eventsSuspended`](#eventsSuspended) instead.\n   *\n   * @returns {Promise<Input>} The promise is fulfilled with the `Input` object\n   */\n  async close() {\n\n    // We close the port. This triggers a statechange event which, in turn, will emit the 'closed'\n    // event.\n    if (!this._midiInput) return Promise.resolve(this);\n\n    try {\n      await this._midiInput.close();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since v3.0.0 (moved to 'Utilities' class)\n   */\n  getChannelModeByNumber() {\n    if (WebMidi.validation) {\n      console.warn(\n        \"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n    }\n  }\n\n  /**\n   * Adds an event listener that will trigger a function callback when the specified event is\n   * dispatched. The event usually is **input-wide** but can also be **channel-specific**.\n   *\n   * Input-wide events do not target a specific MIDI channel so it makes sense to listen for them\n   * at the `Input` level and not at the [`InputChannel`](InputChannel) level. Channel-specific\n   * events target a specific channel. Usually, in this case, you would add the listener to the\n   * [`InputChannel`](InputChannel) object. However, as a convenience, you can also listen to\n   * channel-specific events directly on an `Input`. This allows you to react to a channel-specific\n   * event no matter which channel it actually came through.\n   *\n   * When listening for an event, you simply need to specify the event name and the function to\n   * execute:\n   *\n   * ```javascript\n   * const listener = WebMidi.inputs[0].addListener(\"midimessage\", e => {\n   *   console.log(e);\n   * });\n   * ```\n   *\n   * Calling the function with an input-wide event (such as\n   * [`\"midimessage\"`]{@link #event:midimessage}), will return the [`Listener`](Listener) object\n   * that was created.\n   *\n   * If you call the function with a channel-specific event (such as\n   * [`\"noteon\"`]{@link InputChannel#event:noteon}), it will return an array of all\n   * [`Listener`](Listener) objects that were created (one for each channel):\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addListener(\"noteon\", someFunction);\n   * ```\n   *\n   * You can also specify which channels you want to add the listener to:\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addListener(\"noteon\", someFunction, {channels: [1, 2, 3]});\n   * ```\n   *\n   * In this case, `listeners` is an array containing 3 [`Listener`](Listener) objects. The order of\n   * the listeners in the array follows the order the channels were specified in.\n   *\n   * Note that, when adding channel-specific listeners, it is the [`InputChannel`](InputChannel)\n   * instance that actually gets a listener added and not the `Input` instance. You can check that\n   * by calling [`InputChannel.hasListener()`](InputChannel#hasListener()).\n   *\n   * There are 8 families of events you can listen to:\n   *\n   * 1. **MIDI System Common** Events (input-wide)\n   *\n   *    * [`songposition`]{@link Input#event:songposition}\n   *    * [`songselect`]{@link Input#event:songselect}\n   *    * [`sysex`]{@link Input#event:sysex}\n   *    * [`timecode`]{@link Input#event:timecode}\n   *    * [`tunerequest`]{@link Input#event:tunerequest}\n   *\n   * 2. **MIDI System Real-Time** Events (input-wide)\n   *\n   *    * [`clock`]{@link Input#event:clock}\n   *    * [`start`]{@link Input#event:start}\n   *    * [`continue`]{@link Input#event:continue}\n   *    * [`stop`]{@link Input#event:stop}\n   *    * [`activesensing`]{@link Input#event:activesensing}\n   *    * [`reset`]{@link Input#event:reset}\n   *\n   * 3. **State Change** Events (input-wide)\n   *\n   *    * [`opened`]{@link Input#event:opened}\n   *    * [`closed`]{@link Input#event:closed}\n   *    * [`disconnected`]{@link Input#event:disconnected}\n   *\n   * 4. **Catch-All** Events (input-wide)\n   *\n   *    * [`midimessage`]{@link Input#event:midimessage}\n   *    * [`unknownmidimessage`]{@link Input#event:unknownmidimessage}\n   *\n   * 5. **Channel Voice** Events (channel-specific)\n   *\n   *    * [`channelaftertouch`]{@link InputChannel#event:channelaftertouch}\n   *    * [`controlchange`]{@link InputChannel#event:controlchange}\n   *      * [`controlchange-controller0`]{@link InputChannel#event:controlchange-controller0}\n   *      * [`controlchange-controller1`]{@link InputChannel#event:controlchange-controller1}\n   *      * [`controlchange-controller2`]{@link InputChannel#event:controlchange-controller2}\n   *      * (...)\n   *      * [`controlchange-controller127`]{@link InputChannel#event:controlchange-controller127}\n   *    * [`keyaftertouch`]{@link InputChannel#event:keyaftertouch}\n   *    * [`noteoff`]{@link InputChannel#event:noteoff}\n   *    * [`noteon`]{@link InputChannel#event:noteon}\n   *    * [`pitchbend`]{@link InputChannel#event:pitchbend}\n   *    * [`programchange`]{@link InputChannel#event:programchange}\n   *\n   *    Note: you can listen for a specific control change message by using an event name like this:\n   *    `controlchange-controller23`, `controlchange-controller99`, `controlchange-controller122`,\n   *    etc.\n   *\n   * 6. **Channel Mode** Events (channel-specific)\n   *\n   *    * [`allnotesoff`]{@link InputChannel#event:allnotesoff}\n   *    * [`allsoundoff`]{@link InputChannel#event:allsoundoff}\n   *    * [`localcontrol`]{@link InputChannel#event:localcontrol}\n   *    * [`monomode`]{@link InputChannel#event:monomode}\n   *    * [`omnimode`]{@link InputChannel#event:omnimode}\n   *    * [`resetallcontrollers`]{@link InputChannel#event:resetallcontrollers}\n   *\n   * 7. **NRPN** Events (channel-specific)\n   *\n   *    * [`nrpn`]{@link InputChannel#event:nrpn}\n   *    * [`nrpn-dataentrycoarse`]{@link InputChannel#event:nrpn-dataentrycoarse}\n   *    * [`nrpn-dataentryfine`]{@link InputChannel#event:nrpn-dataentryfine}\n   *    * [`nrpn-dataincrement`]{@link InputChannel#event:nrpn-dataincrement}\n   *    * [`nrpn-datadecrement`]{@link InputChannel#event:nrpn-datadecrement}\n   *\n   * 8. **RPN** Events (channel-specific)\n   *\n   *    * [`rpn`]{@link InputChannel#event:rpn}\n   *    * [`rpn-dataentrycoarse`]{@link InputChannel#event:rpn-dataentrycoarse}\n   *    * [`rpn-dataentryfine`]{@link InputChannel#event:rpn-dataentryfine}\n   *    * [`rpn-dataincrement`]{@link InputChannel#event:rpn-dataincrement}\n   *    * [`rpn-datadecrement`]{@link InputChannel#event:rpn-datadecrement}\n   *\n   * @param event {string | EventEmitter.ANY_EVENT} The type of the event.\n   *\n   * @param listener {function} A callback function to execute when the specified event is detected.\n   * This function will receive an event parameter object. For details on this object's properties,\n   * check out the documentation for the various events (links above).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object and can be retrieved or modified as desired.\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * An integer between 1 and 16 or an array of such integers representing the MIDI channel(s) to\n   * listen on. If no channel is specified, all channels will be used. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {object} [options.context=this] The value of `this` in the callback function.\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   *\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus be triggered before others.\n   *\n   * @param {number} [options.remaining=Infinity] The number of times after which the callback\n   * should automatically be removed.\n   *\n   * @returns {Listener|Listener[]} If the event is input-wide, a single [`Listener`](Listener)\n   * object is returned. If the event is channel-specific, an array of all the\n   * [`Listener`](Listener) objects is returned (one for each channel).\n   */\n  addListener(event, listener, options = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = (listener != undefined) ? [].concat(listener) : undefined; // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    // Check if the event is channel-specific or input-wide\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      // If no channel defined, use all.\n      if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n      let listeners = [];\n\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        listeners.push(this.channels[ch].addListener(event, listener, options));\n      });\n\n      return listeners;\n\n    } else {\n\n      return super.addListener(event, listener, options);\n\n    }\n\n  }\n\n  /**\n   * Adds a one-time event listener that will trigger a function callback when the specified event\n   * happens. The event can be **channel-bound** or **input-wide**. Channel-bound events are\n   * dispatched by [`InputChannel`]{@link InputChannel} objects and are tied to a specific MIDI\n   * channel while input-wide events are dispatched by the `Input` object itself and are not tied\n   * to a specific channel.\n   *\n   * Calling the function with an input-wide event (such as\n   * [`\"midimessage\"`]{@link #event:midimessage}), will return the [`Listener`](Listener) object\n   * that was created.\n   *\n   * If you call the function with a channel-specific event (such as\n   * [`\"noteon\"`]{@link InputChannel#event:noteon}), it will return an array of all\n   * [`Listener`](Listener) objects that were created (one for each channel):\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addOneTimeListener(\"noteon\", someFunction);\n   * ```\n   *\n   * You can also specify which channels you want to add the listener to:\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addOneTimeListener(\"noteon\", someFunction, {channels: [1, 2, 3]});\n   * ```\n   *\n   * In this case, the `listeners` variable contains an array of 3 [`Listener`](Listener) objects.\n   *\n   * The code above will add a listener for the `\"noteon\"` event and call `someFunction` when the\n   * event is triggered on MIDI channels `1`, `2` or `3`.\n   *\n   * Note that, when adding events to channels, it is the [`InputChannel`](InputChannel) instance\n   * that actually gets a listener added and not the `Input` instance.\n   *\n   * Note: if you want to add a listener to a single MIDI channel you should probably do so directly\n   * on the [`InputChannel`](InputChannel) object itself.\n   *\n   * There are 8 families of events you can listen to:\n   *\n   * 1. **MIDI System Common** Events (input-wide)\n   *\n   *    * [`songposition`]{@link Input#event:songposition}\n   *    * [`songselect`]{@link Input#event:songselect}\n   *    * [`sysex`]{@link Input#event:sysex}\n   *    * [`timecode`]{@link Input#event:timecode}\n   *    * [`tunerequest`]{@link Input#event:tunerequest}\n   *\n   * 2. **MIDI System Real-Time** Events (input-wide)\n   *\n   *    * [`clock`]{@link Input#event:clock}\n   *    * [`start`]{@link Input#event:start}\n   *    * [`continue`]{@link Input#event:continue}\n   *    * [`stop`]{@link Input#event:stop}\n   *    * [`activesensing`]{@link Input#event:activesensing}\n   *    * [`reset`]{@link Input#event:reset}\n   *\n   * 3. **State Change** Events (input-wide)\n   *\n   *    * [`opened`]{@link Input#event:opened}\n   *    * [`closed`]{@link Input#event:closed}\n   *    * [`disconnected`]{@link Input#event:disconnected}\n   *\n   * 4. **Catch-All** Events (input-wide)\n   *\n   *    * [`midimessage`]{@link Input#event:midimessage}\n   *    * [`unknownmidimessage`]{@link Input#event:unknownmidimessage}\n   *\n   * 5. **Channel Voice** Events (channel-specific)\n   *\n   *    * [`channelaftertouch`]{@link InputChannel#event:channelaftertouch}\n   *    * [`controlchange`]{@link InputChannel#event:controlchange}\n   *      * [`controlchange-controller0`]{@link InputChannel#event:controlchange-controller0}\n   *      * [`controlchange-controller1`]{@link InputChannel#event:controlchange-controller1}\n   *      * [`controlchange-controller2`]{@link InputChannel#event:controlchange-controller2}\n   *      * (...)\n   *      * [`controlchange-controller127`]{@link InputChannel#event:controlchange-controller127}\n   *    * [`keyaftertouch`]{@link InputChannel#event:keyaftertouch}\n   *    * [`noteoff`]{@link InputChannel#event:noteoff}\n   *    * [`noteon`]{@link InputChannel#event:noteon}\n   *    * [`pitchbend`]{@link InputChannel#event:pitchbend}\n   *    * [`programchange`]{@link InputChannel#event:programchange}\n   *\n   *    Note: you can listen for a specific control change message by using an event name like this:\n   *    `controlchange-controller23`, `controlchange-controller99`, `controlchange-controller122`,\n   *    etc.\n   *\n   * 6. **Channel Mode** Events (channel-specific)\n   *\n   *    * [`allnotesoff`]{@link InputChannel#event:allnotesoff}\n   *    * [`allsoundoff`]{@link InputChannel#event:allsoundoff}\n   *    * [`localcontrol`]{@link InputChannel#event:localcontrol}\n   *    * [`monomode`]{@link InputChannel#event:monomode}\n   *    * [`omnimode`]{@link InputChannel#event:omnimode}\n   *    * [`resetallcontrollers`]{@link InputChannel#event:resetallcontrollers}\n   *\n   * 7. **NRPN** Events (channel-specific)\n   *\n   *    * [`nrpn`]{@link InputChannel#event:nrpn}\n   *    * [`nrpn-dataentrycoarse`]{@link InputChannel#event:nrpn-dataentrycoarse}\n   *    * [`nrpn-dataentryfine`]{@link InputChannel#event:nrpn-dataentryfine}\n   *    * [`nrpn-dataincrement`]{@link InputChannel#event:nrpn-dataincrement}\n   *    * [`nrpn-datadecrement`]{@link InputChannel#event:nrpn-datadecrement}\n   *\n   * 8. **RPN** Events (channel-specific)\n   *\n   *    * [`rpn`]{@link InputChannel#event:rpn}\n   *    * [`rpn-dataentrycoarse`]{@link InputChannel#event:rpn-dataentrycoarse}\n   *    * [`rpn-dataentryfine`]{@link InputChannel#event:rpn-dataentryfine}\n   *    * [`rpn-dataincrement`]{@link InputChannel#event:rpn-dataincrement}\n   *    * [`rpn-datadecrement`]{@link InputChannel#event:rpn-datadecrement}\n   *\n   * @param event {string} The type of the event.\n   *\n   * @param listener {function} A callback function to execute when the specified event is detected.\n   * This function will receive an event parameter object. For details on this object's properties,\n   * check out the documentation for the various events (links above).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object and can be retrieved or modified as desired.\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to listen on. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {object} [options.context=this] The value of `this` in the callback function.\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   *\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus be triggered before others.\n   *\n   * @returns {Listener[]} An array of all [`Listener`](Listener) objects that were created.\n   */\n  addOneTimeListener(event, listener, options = {}) {\n    options.remaining = 1;\n    return this.addListener(event, listener, options);\n  }\n\n  /**\n   * This is an alias to the [Input.addListener()]{@link Input#addListener} method.\n   * @since 2.0.0\n   * @deprecated since v3.0\n   * @private\n   */\n  on(event, channel, listener, options) {\n    return this.addListener(event, channel, listener, options);\n  }\n\n  /**\n   * Checks if the specified event type is already defined to trigger the specified callback\n   * function. For channel-specific events, the function will return `true` only if all channels\n   * have the listener defined.\n   *\n   * @param event {string|Symbol} The type of the event.\n   *\n   * @param listener {function} The callback function to check for.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of such\n   * integers representing the MIDI channel(s) to check. This parameter is ignored for input-wide\n   * events.\n   *\n   * @returns {boolean} Boolean value indicating whether or not the `Input` or\n   * [`InputChannel`](InputChannel) already has this listener defined.\n   */\n  hasListener(event, listener, options = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = [].concat(listener); // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      // If no channel defined, use all.\n      if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n      return Utilities.sanitizeChannels(options.channels).every(ch => {\n        return this.channels[ch].hasListener(event, listener);\n      });\n\n    } else {\n      return super.hasListener(event, listener);\n    }\n\n  }\n\n  /**\n   * Removes the specified event listener. If no listener is specified, all listeners matching the\n   * specified event will be removed. If the event is channel-specific, the listener will be removed\n   * from all [`InputChannel`]{@link InputChannel} objects belonging to that channel. If no event is\n   * specified, all listeners for the `Input` as well as all listeners for all\n   * [`InputChannel`]{@link InputChannel} objects belonging to the `Input` will be removed.\n   *\n   * By default, channel-specific listeners will be removed from all\n   * [`InputChannel`]{@link InputChannel} objects unless the `options.channel` narrows it down.\n   *\n   * @param [type] {string} The type of the event.\n   *\n   * @param [listener] {function} The callback function to check for.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to match. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {*} [options.context] Only remove the listeners that have this exact context.\n   *\n   * @param {number} [options.remaining] Only remove the listener if it has exactly that many\n   * remaining times to be executed.\n   */\n  removeListener(event, listener, options = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = [].concat(listener); // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    // If the event is not specified, remove everything (channel-specific and input-wide)!\n    if (event == undefined) {\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        if (this.channels[ch]) this.channels[ch].removeListener();\n      });\n      return super.removeListener();\n    }\n\n    // If the event is specified, check if it's channel-specific or input-wide.\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        this.channels[ch].removeListener(event, listener, options);\n      });\n\n    } else {\n\n      super.removeListener(event, listener, options);\n\n    }\n\n  }\n\n  /**\n   * Adds a forwarder that will forward all incoming MIDI messages matching the criteria to the\n   * specified [`Output`](Output) destination(s). This is akin to the hardware MIDI THRU port, with\n   * the added benefit of being able to filter which data is forwarded.\n   *\n   * @param {Output|Output[]} output An [`Output`](Output) object, or an array of such\n   * objects, to forward messages to.\n   * @param {object} [options={}]\n   * @param {string|string[]} [options.types=(all messages)] A message type, or an array of such\n   * types (`noteon`, `controlchange`, etc.), that the message type must match in order to be\n   * forwarded. If this option is not specified, all types of messages will be forwarded. Valid\n   * messages are the ones found in either\n   * [`SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES) or\n   * [`CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * A MIDI channel number or an array of channel numbers that the message must match in order to be\n   * forwarded. By default all MIDI channels are included (`1` to `16`).\n   *\n   * @returns {Forwarder} The [`Forwarder`](Forwarder) object created to handle the forwarding. This\n   * is useful if you wish to manipulate or remove the [`Forwarder`](Forwarder) later on.\n   */\n  addForwarder(output, options = {}) {\n\n    let forwarder;\n\n    // Unless 'output' is a forwarder, create a new forwarder\n    if (output instanceof Forwarder) {\n      forwarder = output;\n    } else {\n      forwarder = new Forwarder(output, options);\n    }\n\n    this._forwarders.push(forwarder);\n    return forwarder;\n\n  }\n\n  /**\n   * Removes the specified [`Forwarder`](Forwarder) object from the input.\n   *\n   * @param {Forwarder} forwarder The [`Forwarder`](Forwarder) to remove (the\n   * [`Forwarder`](Forwarder) object is returned when calling `addForwarder()`.\n   */\n  removeForwarder(forwarder) {\n    this._forwarders = this._forwarders.filter(item => item !== forwarder);\n  }\n\n  /**\n   * Checks whether the specified [`Forwarder`](Forwarder) object has already been attached to this\n   * input.\n   *\n   * @param {Forwarder} forwarder The [`Forwarder`](Forwarder) to check for (the\n   * [`Forwarder`](Forwarder) object is returned when calling [`addForwarder()`](#addForwarder).\n   * @returns {boolean}\n   */\n  hasForwarder(forwarder) {\n    return this._forwarders.includes(forwarder);\n  }\n\n  /**\n   * Name of the MIDI input.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get name() {\n    return this._midiInput.name;\n  }\n\n  /**\n   * ID string of the MIDI port. The ID is host-specific. Do not expect the same ID on different\n   * platforms. For example, Google Chrome and the Jazz-Plugin report completely different IDs for\n   * the same port.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._midiInput.id;\n  }\n\n  /**\n   * Input port's connection state: `pending`, `open` or `closed`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get connection() {\n    return this._midiInput.connection;\n  }\n\n  /**\n   * Name of the manufacturer of the device that makes this input port available.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get manufacturer() {\n    return this._midiInput.manufacturer;\n  }\n\n  /**\n   * An integer to offset the reported octave of incoming notes. By default, middle C (MIDI note\n   * number 60) is placed on the 4th octave (C4).\n   *\n   * If, for example, `octaveOffset` is set to 2, MIDI note number 60 will be reported as C6. If\n   * `octaveOffset` is set to -1, MIDI note number 60 will be reported as C3.\n   *\n   * Note that this value is combined with the global offset value defined in the\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) property (if any).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * State of the input port: `connected` or `disconnected`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get state() {\n    return this._midiInput.state;\n  }\n\n  /**\n   * The port type. In the case of the `Input` object, this is always: `input`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get type() {\n    return this._midiInput.type;\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   * @deprecated since v3.0.0 (moved to 'InputChannel' class)\n   */\n  get nrpnEventsEnabled() {\n    if (WebMidi.validation) {\n      console.warn(\"The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class.\");\n    }\n    return false;\n  }\n\n}\n\n// Events that do not have code below them must be placed outside the class definition (?!)\n\n/**\n * Input-wide (system) event emitted when a **system exclusive** message has been received.\n * You should note that, to receive `sysex` events, you must call the\n * [`WebMidi.enable()`](WebMidi#enable()) method with the `sysex` option set to `true`:\n *\n * ```js\n * WebMidi.enable({sysex: true})\n *  .then(() => console.log(\"WebMidi has been enabled with sysex support.\"))\n * ```\n *\n * @event Input#sysex\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `sysex`\n *\n */\n\n/**\n * Input-wide (system) event emitted when a **time code quarter frame** message has been\n * received.\n *\n * @event Input#timecode\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `timecode`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **song position** message has been received.\n *\n * @event Input#songposition\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `songposition`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **song select** message has been received.\n *\n * @event Input#songselect\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} value Song (or sequence) number to select (0-127)\n * @property {string} rawValue Song (or sequence) number to select (0-127)\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **tune request** message has been received.\n *\n * @event Input#tunerequest\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `tunerequest`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **timing clock** message has been received.\n *\n * @event Input#clock\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `clock`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **start** message has been received.\n *\n * @event Input#start\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `start`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **continue** message has been received.\n *\n * @event Input#continue\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `continue`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **stop** message has been received.\n *\n * @event Input#stop\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `stop`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when an **active sensing** message has been received.\n *\n * @event Input#activesensing\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `activesensing`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **reset** message has been received.\n *\n * @event Input#reset\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `reset`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when an unknown MIDI message has been received. It could\n * be, for example, one of the undefined/reserved messages.\n *\n * @event Input#unknownmessage\n *\n * @type {Object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `unknownmessage`\n *\n * @since 2.1\n */\n","import {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {Input} from \"./Input.js\";\nimport {Output} from \"./Output.js\";\nimport {Utilities} from \"./Utilities.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/*START-CJS*/\n\n// This code will only be included in the CJS version (CommonJS).\n\n// If this code is executed by Node.js then we must import the `jzz` module. I import it in this\n// convoluted way to prevent Webpack from automatically bundling it in browser bundles where it\n// isn't needed.\nif (Utilities.isNode) {\n\n  // Some environments may have both Node.js and browser runtimes (Electron, NW.js, React Native,\n  // etc.) so we also check for the presence of the window.navigator property.\n  try {\n    window.navigator;\n  } catch (err) {\n    let jzz;\n    eval('jzz = require(\"jzz\")');\n    global.navigator = jzz;\n  }\n\n  // The `performance` module appeared in Node.js v8.5.0 but has started to be automatically\n  // imported only in v16+.\n  try {\n    performance;\n  } catch (err) {\n    let performance;\n    eval('performance = require(\"perf_hooks\").performance');\n    global.performance = performance;\n  }\n\n}\n\n/*END-CJS*/\n/**\n * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it\n * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.\n *\n * When using the WebMidi.js library, you should know that the `WebMidi` class has already been\n * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should\n * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6\n * module) version, you get an already-instantiated object when you import the module.\n *\n * @fires WebMidi#connected\n * @fires WebMidi#disabled\n * @fires WebMidi#disconnected\n * @fires WebMidi#enabled\n * @fires WebMidi#error\n * @fires WebMidi#midiaccessgranted\n * @fires WebMidi#portschanged\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nclass WebMidi extends EventEmitter {\n\n  /**\n   * The WebMidi class is a singleton and you cannot instantiate it directly. It has already been\n   * instantiated for you.\n   */\n  constructor() {\n\n    super();\n\n    /**\n     * Object containing system-wide default values that can be changed to customize how the library\n     * works.\n     *\n     * @type {object}\n     *\n     * @property {object}  defaults.note - Default values relating to note\n     * @property {number}  defaults.note.attack - A number between 0 and 127 representing the\n     * default attack velocity of notes. Initial value is 64.\n     * @property {number}  defaults.note.release - A number between 0 and 127 representing the\n     * default release velocity of notes. Initial value is 64.\n     * @property {number}  defaults.note.duration - A number representing the default duration of\n     * notes (in seconds). Initial value is Infinity.\n     */\n    this.defaults = {\n      note: {\n        attack: Utilities.from7bitToFloat(64),\n        release: Utilities.from7bitToFloat(64),\n        duration: Infinity\n      }\n    };\n\n    /**\n     * The [`MIDIAccess`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess)\n     * instance used to talk to the lower-level Web MIDI API. This should not be used directly\n     * unless you know what you are doing.\n     *\n     * @type {MIDIAccess}\n     * @readonly\n     */\n    this.interface = null;\n\n    /**\n     * Indicates whether argument validation and backwards-compatibility checks are performed\n     * throughout the WebMidi.js library for object methods and property setters.\n     *\n     * This is an advanced setting that should be used carefully. Setting `validation` to `false`\n     * improves performance but should only be done once the project has been thoroughly tested with\n     * `validation` turned on.\n     *\n     * @type {boolean}\n     */\n    this.validation = true;\n\n    /**\n     * Array of all (Input) objects\n     * @type {Input[]}\n     * @private\n     */\n    this._inputs = [];\n\n    /**\n     * Array of disconnected [`Input`](Input) objects. This is used when inputs are plugged back in\n     * to retain their previous state.\n     * @type {Input[]}\n     * @private\n     */\n    this._disconnectedInputs = [];\n\n    /**\n     * Array of all [`Output`](Output) objects\n     * @type {Output[]}\n     * @private\n     */\n    this._outputs = [];\n\n    /**\n     * Array of disconnected [`Output`](Output) objects. This is used when outputs are plugged back\n     * in to retain their previous state.\n     * @type {Output[]}\n     * @private\n     */\n    this._disconnectedOutputs = [];\n\n    /**\n     * Array of statechange events to process. These events must be parsed synchronously so they do\n     * not override each other.\n     *\n     * @type {string[]}\n     * @private\n     */\n    this._stateChangeQueue = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n  }\n\n  /**\n   * Checks if the Web MIDI API is available in the current environment and then tries to connect to\n   * the host's MIDI subsystem. This is an asynchronous operation and it causes a security prompt to\n   * be displayed to the user.\n   *\n   * To enable the use of MIDI system exclusive messages, the `sysex` option should be set to\n   * `true`. However, under some environments (e.g. Jazz-Plugin), the `sysex` option is ignored\n   * and system exclusive messages are always enabled. You can check the\n   * [`sysexEnabled`](#sysexEnabled) property to confirm.\n   *\n   * To enable access to software synthesizers available on the host, you would set the `software`\n   * option to `true`. However, this option is only there to future-proof the library as support for\n   * software synths has not yet been implemented in any browser (as of September 2021).\n   *\n   * By the way, if you call the [`enable()`](#enable) method while WebMidi.js is already enabled,\n   * the callback function will be executed (if any), the promise will resolve but the events\n   * ([`\"midiaccessgranted\"`](#event:midiaccessgranted), [`\"connected\"`](#event:connected) and\n   * [`\"enabled\"`](#event:enabled)) will not be fired.\n   *\n   * There are 3 ways to execute code after `WebMidi` has been enabled:\n   *\n   * - Pass a callback function in the `options`\n   * - Listen to the [`\"enabled\"`](#event:enabled) event\n   * - Wait for the promise to resolve\n   *\n   * In order, this is what happens towards the end of the enabling process:\n   *\n   * 1. [`\"midiaccessgranted\"`](#event:midiaccessgranted) event is triggered once the user has\n   * granted access to use MIDI.\n   * 2. [`\"connected\"`](#event:connected) events are triggered (for each available input and output)\n   * 3. [`\"enabled\"`](#event:enabled) event is triggered when WebMidi.js is fully ready\n   * 4. specified callback (if any) is executed\n   * 5. promise is resolved and fulfilled with the `WebMidi` object.\n   *\n   * **Important note**: starting with Chrome v77, a page using Web MIDI API must be hosted on a\n   * secure origin (`https://`, `localhost` or `file:///`) and the user will always be prompted to\n   * authorize the operation (no matter if the `sysex` option is `true` or not).\n   *\n   * ##### Example\n   * ```js\n   * // Enabling WebMidi and using the promise\n   * WebMidi.enable().then(() => {\n   *   console.log(\"WebMidi.js has been enabled!\");\n   * })\n   * ```\n   *\n   * @param [options] {object}\n   *\n   * @param [options.callback] {function} A function to execute once the operation completes. This\n   * function will receive an `Error` object if enabling the Web MIDI API failed.\n   *\n   * @param [options.sysex=false] {boolean} Whether to enable MIDI system exclusive messages or not.\n   *\n   * @param [options.validation=true] {boolean} Whether to enable library-wide validation of method\n   * arguments and setter values. This is an advanced setting that should be used carefully. Setting\n   * [`validation`](#validation) to `false` improves performance but should only be done once the\n   * project has been thoroughly tested with [`validation`](#validation)  turned on.\n   *\n   * @param [options.software=false] {boolean} Whether to request access to software synthesizers on\n   * the host system. This is part of the spec but has not yet been implemented by most browsers as\n   * of April 2020.\n   *\n   * @param [options.requestMIDIAccessFunction] {function} A custom function to use to return\n   * the MIDIAccess object. This is useful if you want to use a polyfill for the Web MIDI API\n   * or if you want to use a custom implementation of the Web MIDI API - probably for testing\n   * purposes.\n   *\n   * @async\n   *\n   * @returns {Promise.<WebMidi>} The promise is fulfilled with the `WebMidi` object for\n   * chainability\n   *\n   * @throws {Error} The Web MIDI API is not supported in your environment.\n   * @throws {Error} Jazz-Plugin must be installed to use WebMIDIAPIShim.\n   */\n  async enable(options = {}, legacy = false) {\n\n    /*START-ESM*/\n\n    // This block is stripped out of the IIFE and CJS versions where it isn't needed.\n\n    // If this code is executed by Node.js in \"module\" mode (when \"type\": \"module\" is used in the\n    // package.json file), then we must import the `jzz` module. I import it in this convoluted way\n    // to prevent Webpack from automatically bundling it in browser bundles where it isn't needed.\n    if (Utilities.isNode) {\n\n      // Some environments may have both Node.js and browser runtimes (Electron, NW.js, React\n      // Native, etc.) so we also check for the presence of the window.navigator property.\n      try {\n        window.navigator;\n      } catch (err) {\n        global.navigator = await Object.getPrototypeOf(async function() {}).constructor(`\n        let jzz = await import(\"jzz\");\n        return jzz.default;\n        `)();\n      }\n\n      // The `performance` module appeared in Node.js v8.5.0 but has started to be automatically\n      // imported only in v16+.\n      try {\n        performance;\n      } catch (err) {\n        global.performance = await Object.getPrototypeOf(async function() {}).constructor(`\n        let perf_hooks = await import(\"perf_hooks\");\n        return perf_hooks.performance;\n        `)();\n      }\n\n    }\n\n    /*END-ESM*/\n\n    this.validation = (options.validation !== false);\n\n    if (this.validation) {\n      // Backwards-compatibility. Previous syntax was: enable(callback, sysex)\n      if (typeof options === \"function\") options = {callback: options, sysex: legacy};\n      if (legacy) options.sysex = true;\n    }\n\n    // If already enabled, trigger callback and resolve promise but do not dispatch events.\n    if (this.enabled) {\n      if (typeof options.callback === \"function\") options.callback();\n      return Promise.resolve();\n    }\n\n    // The Jazz-Plugin takes a while to be available (even after the Window's 'load' event has been\n    // fired). Therefore, we wait a little while to give it time to finish loading (initiqted in\n    // constructor).\n    // if (!this.supported) {\n    //\n    //   await new Promise((resolve, reject) => {\n    //\n    //     const start = this.time;\n    //\n    //     const intervalID = setInterval(() => {\n    //\n    //       if (this.supported) {\n    //         clearInterval(intervalID);\n    //         resolve();\n    //       } else {\n    //         if (this.time > start + 1500) {\n    //           clearInterval(intervalID);\n    //           let error = new Error(\"The Web MIDI API is not available in your environment.\");\n    //           if (typeof options.callback === \"function\") options.callback(error);\n    //           reject(error);\n    //         }\n    //       }\n    //\n    //     }, 25);\n    //\n    //   });\n    //\n    // }\n\n    /**\n     * Event emitted when an error occurs trying to enable `WebMidi`\n     *\n     * @event WebMidi#error\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `error`\n     * @property {*} error Actual error that occurred\n     */\n    const errorEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"error\",\n      error: undefined\n    };\n\n    /**\n     * Event emitted once the MIDI interface has been successfully created (which implies user has\n     * granted access to MIDI).\n     *\n     * @event WebMidi#midiaccessgranted\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `midiaccessgranted`\n     */\n    const midiAccessGrantedEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"midiaccessgranted\"\n    };\n\n    /**\n     * Event emitted once `WebMidi` has been fully enabled\n     *\n     * @event WebMidi#enabled\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `\"enabled\"`\n     */\n    const enabledEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"enabled\"\n    };\n\n    // Request MIDI access (this is where the prompt will appear)\n    try {\n      if (typeof options.requestMIDIAccessFunction === \"function\") {\n        this.interface = await options.requestMIDIAccessFunction(\n          {sysex: options.sysex, software: options.software}\n        );\n      } else {\n        this.interface = await navigator.requestMIDIAccess(\n          {sysex: options.sysex, software: options.software}\n        );\n      }\n    } catch(err) {\n      errorEvent.error = err;\n      this.emit(\"error\", errorEvent);\n      if (typeof options.callback === \"function\") options.callback(err);\n      return Promise.reject(err);\n    }\n\n    // Now that the Web MIDI API interface has been created, we trigger the 'midiaccessgranted'\n    // event. This allows the developer an occasion to assign listeners on 'connected' events.\n    this.emit(\"midiaccessgranted\", midiAccessGrantedEvent);\n\n    // We setup the state change listener before creating the ports so that it properly catches the\n    // the ports' `connected` events\n    this.interface.onstatechange = this._onInterfaceStateChange.bind(this);\n\n    // Update inputs and outputs (this is where `Input` and `Output` objects are created).\n    try {\n      await this._updateInputsAndOutputs();\n    } catch (err) {\n      errorEvent.error = err;\n      this.emit(\"error\", errorEvent);\n      if (typeof options.callback === \"function\") options.callback(err);\n      return Promise.reject(err);\n    }\n\n    // If we make it here, the ports have been successfully created, so we trigger the 'enabled'\n    // event.\n    this.emit(\"enabled\", enabledEvent);\n\n    // Execute the callback (if any) and resolve the promise with 'this' (for chainability)\n    if (typeof options.callback === \"function\") options.callback();\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * Completely disables **WebMidi.js** by unlinking the MIDI subsystem's interface and closing all\n   * [`Input`](Input) and [`Output`](Output) objects that may have been opened. This also means that\n   * listeners added to [`Input`](Input) objects, [`Output`](Output) objects or to `WebMidi` itself\n   * are also destroyed.\n   *\n   * @async\n   * @returns {Promise<Array>}\n   *\n   * @throws {Error} The Web MIDI API is not supported by your environment.\n   *\n   * @since 2.0.0\n   */\n  async disable() {\n\n    // This needs to be done right away to prevent racing conditions in listeners while the inputs\n    // are being destroyed.\n    if (this.interface) this.interface.onstatechange = undefined;\n\n    return this._destroyInputsAndOutputs().then(() => {\n\n      if (navigator && typeof navigator.close === \"function\") navigator.close(); // jzz\n      this.interface = null; // also resets enabled, sysexEnabled\n\n      /**\n       * Event emitted once `WebMidi` has been successfully disabled.\n       *\n       * @event WebMidi#disabled\n       * @type {object}\n       * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {WebMidi} target The object that triggered the event\n       * @property {string} type `\"disabled\"`\n       */\n      let event = {\n        timestamp: this.time,\n        target: this,\n        type: \"disabled\"\n      };\n\n      // Finally, trigger the 'disabled' event and then remove all listeners.\n      this.emit(\"disabled\", event);\n      this.removeListener();\n\n    });\n\n  };\n\n  /**\n   * Returns the [`Input`](Input) object that matches the specified ID string or `false` if no\n   * matching input is found. As per the Web MIDI API specification, IDs are strings (not integers).\n   *\n   * Please note that IDs change from one host to another. For example, Chrome does not use the same\n   * kind of IDs as Jazz-Plugin.\n   *\n   * @param id {string} The ID string of the input. IDs can be viewed by looking at the\n   * [`WebMidi.inputs`](WebMidi#inputs) array. Even though they sometimes look like integers, IDs\n   * are strings.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected input\n   *\n   * @returns {Input} An [`Input`](Input) object matching the specified ID string or `undefined`\n   * if no matching input can be found.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getInputById(id, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!id) return;\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedInputs.length; i++) {\n        if (this._disconnectedInputs[i].id === id.toString()) return this._disconnectedInputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.inputs.length; i++) {\n        if (this.inputs[i].id === id.toString()) return this.inputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the first [`Input`](Input) object whose name **contains** the specified string. Note\n   * that the port names change from one environment to another. For example, Chrome does not report\n   * input names in the same way as the Jazz-Plugin does.\n   *\n   * @param name {string} The non-empty string to look for within the name of MIDI inputs (such as\n   * those visible in the [inputs](WebMidi#inputs) array).\n   *\n   * @returns {Input} The [`Input`](Input) that was found or `undefined` if no input contained the\n   * specified name.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected input\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getInputByName(name, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!name) return;\n      name = name.toString();\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedInputs.length; i++) {\n        if (~this._disconnectedInputs[i].name.indexOf(name)) return this._disconnectedInputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.inputs.length; i++) {\n        if (~this.inputs[i].name.indexOf(name)) return this.inputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the first [`Output`](Output) object whose name **contains** the specified string. Note\n   * that the port names change from one environment to another. For example, Chrome does not report\n   * input names in the same way as the Jazz-Plugin does.\n   *\n   * @param name {string} The non-empty string to look for within the name of MIDI inputs (such as\n   * those visible in the [`outputs`](#outputs) array).\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected output\n   *\n   * @returns {Output} The [`Output`](Output) that was found or `undefined` if no output matched\n   * the specified name.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getOutputByName(name, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!name) return;\n      name = name.toString();\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedOutputs.length; i++) {\n        if (~this._disconnectedOutputs[i].name.indexOf(name)) return this._disconnectedOutputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.outputs.length; i++) {\n        if (~this.outputs[i].name.indexOf(name)) return this.outputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the [`Output`](Output) object that matches the specified ID string or `false` if no\n   * matching output is found. As per the Web MIDI API specification, IDs are strings (not\n   * integers).\n   *\n   * Please note that IDs change from one host to another. For example, Chrome does not use the same\n   * kind of IDs as Jazz-Plugin.\n   *\n   * @param id {string} The ID string of the port. IDs can be viewed by looking at the\n   * [`WebMidi.outputs`](WebMidi#outputs) array.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected output\n   *\n   * @returns {Output} An [`Output`](Output) object matching the specified ID string. If no\n   * matching output can be found, the method returns `undefined`.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getOutputById(id, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!id) return;\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedOutputs.length; i++) {\n        if (this._disconnectedOutputs[i].id === id.toString()) return this._disconnectedOutputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.outputs.length; i++) {\n        if (this.outputs[i].id === id.toString()) return this.outputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.toNoteNumber() instead.\n   */\n  noteNameToNumber(name) {\n    if (this.validation) {\n      console.warn(\n        \"The noteNameToNumber() method is deprecated. Use \" +\n        \"Utilities.toNoteNumber() instead.\"\n      );\n    }\n    return Utilities.toNoteNumber(name, this.octaveOffset);\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0, use Utilities.getNoteDetails() instead.\n   */\n  getOctave(number) {\n\n    if (this.validation) {\n      console.warn(\"The getOctave()is deprecated. Use Utilities.getNoteDetails() instead\");\n      number = parseInt(number);\n    }\n\n    if (!isNaN(number) && number >= 0 && number <= 127) {\n      return Utilities.getNoteDetails(Utilities.offsetNumber(number, this.octaveOffset)).octave;\n    } else {\n      return false;\n    }\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0, use Utilities.sanitizeChannels() instead.\n   */\n  sanitizeChannels(channel) {\n\n    if (this.validation) {\n      console.warn(\"The sanitizeChannels() method has been moved to the utilities class.\");\n    }\n\n    return Utilities.sanitizeChannels(channel);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.sanitizeChannels() instead.\n   */\n  toMIDIChannels(channel) {\n\n    if (this.validation) {\n      console.warn(\n        \"The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead.\"\n      );\n    }\n\n    return Utilities.sanitizeChannels(channel);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.guessNoteNumber() instead.\n   */\n  guessNoteNumber(input) {\n\n    if (this.validation) {\n      console.warn(\n        \"The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead.\"\n      );\n    }\n\n    return Utilities.guessNoteNumber(input, this.octaveOffset);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.buildNoteArray() instead.\n   */\n  getValidNoteArray(notes, options = {}) {\n    if (this.validation) {\n      console.warn(\n        \"The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()\"\n      );\n    }\n    return Utilities.buildNoteArray(notes, options);\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.toTimestamp() instead.\n   */\n  convertToTimestamp(time) {\n\n    if (this.validation) {\n      console.warn(\n        \"The convertToTimestamp() method has been moved to Utilities.toTimestamp().\"\n      );\n    }\n\n    return Utilities.toTimestamp(time);\n\n  }\n\n  /**\n   * @return {Promise<void>}\n   * @private\n   */\n  async _destroyInputsAndOutputs() {\n\n    let promises = [];\n\n    this.inputs.forEach(input => promises.push(input.destroy()));\n    this.outputs.forEach(output => promises.push(output.destroy()));\n\n    return Promise.all(promises).then(() => {\n      this._inputs = [];\n      this._outputs = [];\n    });\n\n  }\n\n  /**\n   * @private\n   */\n  _onInterfaceStateChange(e) {\n\n    this._updateInputsAndOutputs();\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) port is connected or\n     * disconnected. This event is typically fired whenever a MIDI device is plugged in or\n     * unplugged. Please note that it may fire several times if a device possesses multiple inputs\n     * and/or outputs (which is often the case).\n     *\n     * @event WebMidi#portschanged\n     * @type {object}\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred\n     * (in milliseconds since the navigation start of the document).\n     * @property {string} type `portschanged`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     *\n     * @since 3.0.2\n     */\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) becomes available. This event is\n     * typically fired whenever a MIDI device is plugged in. Please note that it may fire several\n     * times if a device possesses multiple inputs and/or outputs (which is often the case).\n     *\n     * @event WebMidi#connected\n     * @type {object}\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred\n     * (in milliseconds since the navigation start of the document).\n     * @property {string} type `connected`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     */\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) becomes unavailable. This event\n     * is typically fired whenever a MIDI device is unplugged. Please note that it may fire several\n     * times if a device possesses multiple inputs and/or outputs (which is often the case).\n     *\n     * @event WebMidi#disconnected\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {string} type `disconnected`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     */\n    let event = {\n      timestamp: e.timeStamp,\n      type: e.port.state,\n      target: this\n    };\n\n    // We check if \"connection\" is \"open\" because connected events are also triggered with\n    // \"connection=closed\"\n    if (e.port.state === \"connected\" && e.port.connection === \"open\") {\n\n      if (e.port.type === \"output\") {\n        event.port = this.getOutputById(e.port.id);\n      } else if (e.port.type === \"input\") {\n        event.port = this.getInputById(e.port.id);\n      }\n\n      // Emit \"connected\" event\n      this.emit(e.port.state, event);\n\n      // Make a shallow copy of the event so we can use it for the \"portschanged\" event\n      const portsChangedEvent = Object.assign({}, event);\n      portsChangedEvent.type = \"portschanged\";\n      this.emit(portsChangedEvent.type, portsChangedEvent);\n\n    // We check if \"connection\" is \"pending\" because we do not always get the \"closed\" event\n    } else if (e.port.state === \"disconnected\" && e.port.connection === \"pending\") {\n\n      if (e.port.type === \"input\") {\n        event.port = this.getInputById(e.port.id, {disconnected: true});\n      } else if (e.port.type === \"output\") {\n        event.port = this.getOutputById(e.port.id, {disconnected: true});\n      }\n\n      // Emit \"disconnected\" event\n      this.emit(e.port.state, event);\n\n      // Make a shallow copy of the event so we can use it for the \"portschanged\" event\n      const portsChangedEvent = Object.assign({}, event);\n      portsChangedEvent.type = \"portschanged\";\n      this.emit(portsChangedEvent.type, portsChangedEvent);\n\n    }\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateInputsAndOutputs() {\n\n    return Promise.all([\n      this._updateInputs(),\n      this._updateOutputs()\n    ]);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateInputs() {\n\n    // We must check for the existence of this.interface because it might have been closed via\n    // WebMidi.disable().\n    if (!this.interface) return;\n\n    // Check for items to remove from the existing array (because they are no longer being reported\n    // by the MIDI back-end).\n    for (let i = this._inputs.length - 1; i >= 0; i--) {\n      const current = this._inputs[i];\n      const inputs = Array.from(this.interface.inputs.values());\n      if (! inputs.find(input => input === current._midiInput)) {\n        // Instead of destroying removed inputs, we stash them in case they come back (which is the\n        // case when the computer goes to sleep and is later brought back online).\n        this._disconnectedInputs.push(current);\n        this._inputs.splice(i, 1);\n      }\n    }\n\n    // Array to hold pending promises from trying to open all input ports\n    let promises = [];\n\n    // Add new inputs (if not already present)\n    this.interface.inputs.forEach(nInput => {\n\n      // Check if the input is currently absent from the 'inputs' array.\n      if (! this._inputs.find(input => input._midiInput === nInput) ) {\n\n        // If the input has previously been stashed away, reuse it. If not, create a new one.\n        let input = this._disconnectedInputs.find(input => input._midiInput === nInput);\n        if (!input) input = new Input(nInput);\n        this._inputs.push(input);\n        promises.push(input.open());\n\n      }\n\n    });\n\n    // Return a promise that resolves when all promises have resolved\n    return Promise.all(promises);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateOutputs() {\n\n    // We must check for the existence of this.interface because it might have been closed via\n    // WebMidi.disable().\n    if (!this.interface) return;\n\n    // Check for items to remove from the existing array (because they are no longer being reported\n    // by the MIDI back-end).\n    for (let i = this._outputs.length - 1; i >= 0; i--) {\n      const current = this._outputs[i];\n      const outputs = Array.from(this.interface.outputs.values());\n      if (! outputs.find(output => output === current._midiOutput)) {\n        // Instead of destroying removed inputs, we stash them in case they come back (which is the\n        // case when the computer goes to sleep and is later brought back online).\n        this._disconnectedOutputs.push(current);\n        this._outputs.splice(i, 1);\n      }\n    }\n\n    // Array to hold pending promises from trying to open all output ports\n    let promises = [];\n\n    // Add new outputs (if not already present)\n    this.interface.outputs.forEach(nOutput => {\n\n      // Check if the output is currently absent from the 'outputs' array.\n      if (! this._outputs.find(output => output._midiOutput === nOutput) ) {\n\n        // If the output has previously been stashed away, reuse it. If not, create a new one.\n        let output = this._disconnectedOutputs.find(output => output._midiOutput === nOutput);\n        if (!output) output = new Output(nOutput);\n        this._outputs.push(output);\n        promises.push(output.open());\n\n      }\n\n    });\n\n    // Return a promise that resolves when all sub-promises have resolved\n    return Promise.all(promises);\n\n  };\n\n  // injectPluginMarkup(parent) {\n  //\n  //   // Silently ignore on Node.js\n  //   if (Utilities.isNode) return;\n  //\n  //   // Default to <body> if no parent is specified\n  //   if (!(parent instanceof Element) && !(parent instanceof HTMLDocument)) {\n  //     parent = document.body;\n  //   }\n  //\n  //   // IE10 needs this:\n  //   // <meta http-equiv=\"X-UA-Compatible\" content=\"requiresActiveX=true\"/>\n  //\n  //   // Create markup and add to parent\n  //   const obj = document.createElement(\"object\");\n  //   obj.classid = \"CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90\"; // IE\n  //   if (!obj.isJazz) obj.type = \"audio/x-jazz\";                 // Standards-compliant\n  //   obj.style.visibility = \"hidden\";\n  //   obj.style.width = obj.style.height = \"0px\";\n  //   parent.appendChild(obj);\n  //\n  // }\n\n  /**\n   * Indicates whether access to the host's MIDI subsystem is active or not.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  get enabled() {\n    return this.interface !== null;\n  }\n\n  /**\n   * An array of all currently available MIDI inputs.\n   *\n   * @readonly\n   * @type {Input[]}\n   */\n  get inputs() {\n    return this._inputs;\n  }\n\n  /**\n   * @private\n   * @deprecated\n   */\n  get isNode() {\n\n    if (this.validation) {\n      console.warn(\"WebMidi.isNode has been deprecated. Use Utilities.isNode instead.\");\n    }\n\n    return Utilities.isNode;\n\n  }\n\n  /**\n   * @private\n   * @deprecated\n   */\n  get isBrowser() {\n\n    if (this.validation) {\n      console.warn(\"WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead.\");\n    }\n\n    return Utilities.isBrowser;\n\n  }\n\n  /**\n   * An integer to offset the octave of notes received from external devices or sent to external\n   * devices.\n   *\n   * When a MIDI message comes in on an input channel the reported note name will be offset. For\n   * example, if the `octaveOffset` is set to `-1` and a [`\"noteon\"`](InputChannel#event:noteon)\n   * message with MIDI number 60 comes in, the note will be reported as C3 (instead of C4).\n   *\n   * By the same token, when [`OutputChannel.playNote()`](OutputChannel#playNote) is called, the\n   * MIDI note number being sent will be offset. If `octaveOffset` is set to `-1`, the MIDI note\n   * number sent will be 72 (instead of 60).\n   *\n   * @type {number}\n   *\n   * @since 2.1\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * An array of all currently available MIDI outputs as [`Output`](Output) objects.\n   *\n   * @readonly\n   * @type {Output[]}\n   */\n  get outputs() {\n    return this._outputs;\n  }\n\n  /**\n   * Indicates whether the environment provides support for the Web MIDI API or not.\n   *\n   * **Note**: in environments that do not offer built-in MIDI support, this will report `true` if\n   * the\n   * [`navigator.requestMIDIAccess`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess)\n   * function is available. For example, if you have installed WebMIDIAPIShim.js but no plugin, this\n   * property will be `true` even though actual support might not be there.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  get supported() {\n    return (typeof navigator !== \"undefined\" && navigator.requestMIDIAccess);\n  }\n\n  /**\n   * Indicates whether MIDI system exclusive messages have been activated when WebMidi.js was\n   * enabled via the [`enable()`](#enable) method.\n   *\n   * @readonly\n   * @type boolean\n   */\n  get sysexEnabled() {\n    return !!(this.interface && this.interface.sysexEnabled);\n  }\n\n  /**\n   * The elapsed time, in milliseconds, since the time\n   * [origin](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp#The_time_origin).\n   * Said simply, it is the number of milliseconds that passed since the page was loaded. Being a\n   * floating-point number, it has sub-millisecond accuracy. According to the\n   * [documentation](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp), the\n   * time should be accurate to 5 µs (microseconds). However, due to various constraints, the\n   * browser might only be accurate to one millisecond.\n   *\n   * Note: `WebMidi.time` is simply an alias to `performance.now()`.\n   *\n   * @type {DOMHighResTimeStamp}\n   * @readonly\n   */\n  get time() {\n    return performance.now();\n  }\n\n  /**\n   * The version of the library as a [semver](https://semver.org/) string.\n   *\n   * @readonly\n   * @type string\n   */\n  get version() {\n    return \"[VI]{version}[/VI]\";\n  }\n\n  /**\n   * The flavour of the library. Can be one of:\n   *\n   * * `esm`: ECMAScript Module\n   * * `cjs`: CommonJS Module\n   * * `iife`: Immediately-Invoked Function Expression\n   *\n   * @readonly\n   * @type string\n   * @since 3.0.25\n   */\n  get flavour() {\n    return \"__flavour__\"; // will be replaced during bundling by the correct identifier\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CHANNEL_EVENTS instead.\n   */\n  get CHANNEL_EVENTS() {\n    if (this.validation) {\n      console.warn(\n        \"The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS.\"\n      );\n    }\n    return Enumerations.CHANNEL_EVENTS;\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.SYSTEM_MESSAGES instead.\n   */\n  get MIDI_SYSTEM_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_SYSTEM_MESSAGES enum has been moved to \" +\n        \"Enumerations.SYSTEM_MESSAGES.\"\n      );\n    }\n\n    return Enumerations.SYSTEM_MESSAGES;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CHANNEL_MODE_MESSAGES instead\n   */\n  get MIDI_CHANNEL_MODE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to \" +\n        \"Enumerations.CHANNEL_MODE_MESSAGES.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MODE_MESSAGES;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CONTROL_CHANGE_MESSAGES instead.\n   */\n  get MIDI_CONTROL_CHANGE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CONTROL_CHANGE_MESSAGES enum has been replaced by the \" +\n        \"Enumerations.CONTROL_CHANGE_MESSAGES array.\"\n      );\n    }\n\n    return Enumerations.MIDI_CONTROL_CHANGE_MESSAGES;\n\n  }\n\n  /**\n   * @deprecated since 3.0.0. Use Enumerations.REGISTERED_PARAMETERS instead.\n   * @private\n   */\n  get MIDI_REGISTERED_PARAMETER() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_REGISTERED_PARAMETER enum has been moved to \" +\n        \"Enumerations.REGISTERED_PARAMETERS.\"\n      );\n    }\n\n    return Enumerations.REGISTERED_PARAMETERS;\n\n  }\n\n  /**\n   * @deprecated since 3.0.0.\n   * @private\n   */\n  get NOTES() {\n\n    if (this.validation) {\n      console.warn(\"The NOTES enum has been deprecated.\");\n    }\n\n    return [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n  }\n\n}\n\n// Export singleton instance of WebMidi class. The 'constructor' is nulled so that it cannot be used\n// to instantiate a new WebMidi object or extend it. However, it is not freezed so it remains\n// extensible (properties can be added at will).\nconst wm = new WebMidi();\nwm.constructor = null;\n\nexport {Enumerations} from \"./Enumerations.js\";\nexport {Forwarder} from \"./Forwarder.js\";\nexport {Input} from \"./Input.js\";\nexport {InputChannel} from \"./InputChannel.js\";\nexport {Message} from \"./Message.js\";\nexport {Note} from \"./Note.js\";\nexport {Output} from \"./Output.js\";\nexport {OutputChannel} from \"./OutputChannel.js\";\nexport {Utilities} from \"./Utilities.js\";\nexport {wm as WebMidi};\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import m from 'mithril'\nimport { Layout } from './Menu'\nimport { LaunchGame } from './LaunchGame'\nimport { Login } from './Login'\nimport 'construct-ui/lib/index.css'\nimport './style.css'\nimport { GamePage, GamePageOnline, Games, GamesActions } from './Games'\nimport { ProfilePage } from './Profile'\nimport { Connector, ConnectionPage } from './Connector'\nimport { State, Actions, OnlineActions } from './Actions'\nimport { LaunchpadX } from './Launchpad'\nimport { Home } from './Home'\nimport { Auth } from './Auth'\nimport { UserActions } from './User'\n\nconsole.log('launchchess started!')\n\nvar state = State()\nexport var actions = {}\nObject.assign(actions, Actions(state, actions))\nObject.assign(actions, LaunchGame(state, actions))\nObject.assign(actions, Connector(state, actions))\nObject.assign(actions, GamesActions(state, actions))\nObject.assign(actions, UserActions(state, actions))\n\nexport var onlineActions = {\n  ...actions,\n  ...OnlineActions(state, actions),\n}\n\nactions.initConnector()\nactions.initAuth()\n\nconsole.log(state, actions)\n\nm.mount(document.body, Layout(state))\nlet main = document.getElementById('main')\ndocument.body.className += state.theme\nm.route(main, '/', {\n  '/': Home(state, actions),\n  '/connect': ConnectionPage(state, actions),\n  '/otb': GamePage(state, actions),\n  '/games': Games(state, actions),\n  '/online': GamePageOnline(state, onlineActions),\n  '/login': Login(state, actions),\n  '/profile': ProfilePage(state, actions),\n})\n\nwindow.state = state\nwindow.actions = actions","\"use strict\"\n\nvar hyperscript = require(\"./hyperscript\")\nvar request = require(\"./request\")\nvar mountRedraw = require(\"./mount-redraw\")\n\nvar m = function m() { return hyperscript.apply(this, arguments) }\nm.m = hyperscript\nm.trust = hyperscript.trust\nm.fragment = hyperscript.fragment\nm.Fragment = \"[\"\nm.mount = mountRedraw.mount\nm.route = require(\"./route\")\nm.render = require(\"./render\")\nm.redraw = mountRedraw.redraw\nm.request = request.request\nm.jsonp = request.jsonp\nm.parseQueryString = require(\"./querystring/parse\")\nm.buildQueryString = require(\"./querystring/build\")\nm.parsePathname = require(\"./pathname/parse\")\nm.buildPathname = require(\"./pathname/build\")\nm.vnode = require(\"./render/vnode\")\nm.PromisePolyfill = require(\"./promise/polyfill\")\nm.censor = require(\"./util/censor\")\n\nmodule.exports = m\n","\"use strict\"\n\nvar hyperscript = require(\"./render/hyperscript\")\n\nhyperscript.trust = require(\"./render/trust\")\nhyperscript.fragment = require(\"./render/fragment\")\n\nmodule.exports = hyperscript\n","\"use strict\"\n\nvar PromisePolyfill = require(\"./promise/promise\")\nvar mountRedraw = require(\"./mount-redraw\")\n\nmodule.exports = require(\"./request/request\")(typeof window !== \"undefined\" ? window : null, PromisePolyfill, mountRedraw.redraw)\n","import m from 'mithril'\nimport { StatusIcon } from './Toolbar'\nimport { message } from 'alertifyjs'\nimport { Switch } from 'construct-ui'\nimport './logo.svg'\n\nexport const Link = () => ({\n  view: vnode => {\n    return m('.menu-item', [m(m.route.Link, vnode.attrs, vnode.children)])\n  },\n})\n\nexport const Links = state => [\n  m(Link, { href: '/connect', id: 'connectButton' }, StatusIcon(state)),\n  m(Link, { href: '/otb', id: 'otbButton' }, 'Local'),\n  m(Link, { href: '/games', id: 'gamesButton' }, 'Online'),\n  m(Switch, {\n    checked: state.theme,\n    onclick: e => {\n      console.log('switched', e)\n      if (state.theme) {\n        document.body.className = document.body.className.replace('dark', '')\n        state.theme = null\n      } else {\n        state.theme = 'dark'\n        document.body.className += state.theme\n      }\n    },\n  }),\n  // ,\n  state.user.username\n    ? m(Link, { href: '/profile' }, state.user.username)\n    : m(\n      Link,\n      {\n        href: '/login',\n        id: 'loginButton',\n      },\n      'Login'\n    ),\n]\n\nexport const Menu = state => [\n  m(Link, { href: '/' }, m('img.logo#logo', { src: 'logo.svg' })),\n  Links(state),\n]\n\nexport const Layout = state => ({\n  view: vnode => {\n    return m('main.layout', {}, [\n      m('nav.menu', {}, Menu(state)),\n      m('section#main', vnode.attrs),\n    ])\n  },\n})\n","import m from 'mithril'\nimport { confirm } from 'alertifyjs'\nimport '../node_modules/material-design-icons-iconfont/dist/material-design-icons.css'\n\nexport const StatusIcon = state =>\n  m(\n    '.status',\n    {\n      class: state.connected ? 'connected' : 'disconnected',\n      title: state.connected ? 'connected' : 'disconnected',\n    },\n    ''\n  )\n\nexport const TurnIndicator = state =>\n  m(\n    'p.turn',\n    {\n      class: state.chess.turn(),\n      title: state.chess.turn() == 'w' ? \"white's turn\" : \"black's turn\",\n    },\n    state.chess.turn()\n  )\n\nexport const ConnectToggle = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: state.connected ? 'disconnect' : 'connect',\n      onclick: e => {\n        if (state.connected) {\n          console.log('disconnecting')\n          actions.disconnect()\n        } else {\n          console.log('connecting')\n          actions.connect()\n        }\n      },\n    },\n    state.connected ? 'power_off' : 'power'\n  )\n\nexport const FlipButton = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: 'flip board',\n      onclick: e => {\n        actions.flipBoard()\n      },\n    },\n    'wifi_protected_setup'\n  )\n\nexport const InfluenceToggle = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: state.influence ? 'hide influence' : 'show influence',\n      onclick: e => {\n        actions.toggleInfluence()\n      },\n    },\n    'compare_arrows'\n  )\n\nexport const TakebackButton = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: 'takeback',\n      onclick: e => {\n        actions.takeback()\n      },\n    },\n    'arrow_left'\n  )\n\nexport const ForwardsButton = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: 'does nothing',\n      onclick: e => {},\n    },\n    'arrow_right'\n  )\n\nexport const GridToggle = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: state.grid ? 'hide grid' : 'show grid',\n      onclick: e => {\n        state.grid = !state.grid\n        actions.lightBoard()\n      },\n    },\n    state.grid ? 'grid_off' : 'grid_on'\n  )\n\nexport const PiecesToggle = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: state.pieces ? 'hide pieces' : 'show pieces',\n      onclick: e => actions.togglePieces(),\n    },\n    m('img.svgicon', { src: 'static/Chess_tile_ql.svg' })\n  )\n\nexport const HistoryIncrement = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: 'increace history',\n      onclick: actions.incrementHistory,\n    },\n    'history'\n  )\n\nexport const HistoryDecrement = (state, actions) =>\n  m(\n    'i.material-icons',\n    {\n      title: 'decreace history',\n      onclick: e => {\n        actions.decrementHistory()\n      },\n    },\n    'history_toggle_off'\n  )\n\nexport const NewGame = (state, actions) =>\n  m(\n    'i',\n    {\n      onclick: e => {\n        confirm(\n          'New game?',\n          yes => {\n            actions.newGame()\n          },\n          no => {\n            console.log('cancelling')\n          }\n        )\n      },\n    },\n    'start new game'\n  )\n\nexport const Tools = (state, actions) => [\n  HistoryIncrement(state, actions),\n  HistoryDecrement(state, actions),\n  TakebackButton(state, actions),\n  ForwardsButton(state, actions),\n  FlipButton(state, actions),\n  GridToggle(state, actions),\n  PiecesToggle(state, actions),\n  InfluenceToggle(state, actions),\n  TurnIndicator(state),\n]\nexport const Toolbar = (state, actions) =>\n  m('span.toolbar', {}, [\n    // StatusIcon(state),\n    // ConnectToggle(state, actions),\n    ...Tools(state, actions),\n  ])\n\nexport const OnlineToolbar = (state, actions) =>\n  m('.toolbar', {}, [...Tools(state, actions)])\n","/**\r\n * alertifyjs 1.13.1 http://alertifyjs.com\r\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\r\n * Copyright 2019 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \r\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>*/\r\n( function ( window ) {\r\n    'use strict';\r\n    var NOT_DISABLED_NOT_RESET = ':not(:disabled):not(.ajs-reset)';\r\n    /**\r\n     * Keys enum\r\n     * @type {Object}\r\n     */\r\n    var keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        F1: 112,\r\n        F12: 123,\r\n        LEFT: 37,\r\n        RIGHT: 39,\r\n        TAB: 9\r\n    };\r\n    /**\r\n     * Default options \r\n     * @type {Object}\r\n     */\r\n    var defaults = {\r\n        autoReset:true,\r\n        basic:false,\r\n        closable:true,\r\n        closableByDimmer:true,\r\n        invokeOnCloseOff:false,\r\n        frameless:false,\r\n        defaultFocusOff:false,\r\n        maintainFocus:true, //global default not per instance, applies to all dialogs\r\n        maximizable:true,\r\n        modal:true,\r\n        movable:true,\r\n        moveBounded:false,\r\n        overflow:true,\r\n        padding: true,\r\n        pinnable:true,\r\n        pinned:true,\r\n        preventBodyShift:false, //global default not per instance, applies to all dialogs\r\n        resizable:true,\r\n        startMaximized:false,\r\n        transition:'pulse',\r\n        transitionOff:false,\r\n        tabbable:['button', '[href]', 'input', 'select', 'textarea', '[tabindex]:not([tabindex^=\"-\"])'+NOT_DISABLED_NOT_RESET].join(NOT_DISABLED_NOT_RESET+','),//global\r\n        notifier:{\r\n            delay:5,\r\n            position:'bottom-right',\r\n            closeButton:false,\r\n            classes: {\r\n                base: 'alertify-notifier',\r\n                prefix:'ajs-',\r\n                message: 'ajs-message',\r\n                top: 'ajs-top',\r\n                right: 'ajs-right',\r\n                bottom: 'ajs-bottom',\r\n                left: 'ajs-left',\r\n                center: 'ajs-center',\r\n                visible: 'ajs-visible',\r\n                hidden: 'ajs-hidden',\r\n                close: 'ajs-close'\r\n            }\r\n        },\r\n        glossary:{\r\n            title:'AlertifyJS',\r\n            ok: 'OK',\r\n            cancel: 'Cancel',\r\n            acccpt: 'Accept',\r\n            deny: 'Deny',\r\n            confirm: 'Confirm',\r\n            decline: 'Decline',\r\n            close: 'Close',\r\n            maximize: 'Maximize',\r\n            restore: 'Restore',\r\n        },\r\n        theme:{\r\n            input:'ajs-input',\r\n            ok:'ajs-ok',\r\n            cancel:'ajs-cancel',\r\n        },\r\n        hooks:{\r\n            preinit:function(){},\r\n            postinit:function(){}\r\n        }\r\n    };\r\n    \r\n    //holds open dialogs instances\r\n    var openDialogs = [];\r\n\r\n    /**\r\n     * [Helper]  Adds the specified class(es) to the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function addClass(element,classNames){\r\n        element.className += ' ' + classNames;\r\n    }\r\n    \r\n    /**\r\n     * [Helper]  Removes the specified class(es) from the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function removeClass(element, classNames) {\r\n        var original = element.className.split(' ');\r\n        var toBeRemoved = classNames.split(' ');\r\n        for (var x = 0; x < toBeRemoved.length; x += 1) {\r\n            var index = original.indexOf(toBeRemoved[x]);\r\n            if (index > -1){\r\n                original.splice(index,1);\r\n            }\r\n        }\r\n        element.className = original.join(' ');\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Checks if the document is RTL\r\n     *\r\n     * @return {Boolean} True if the document is RTL, false otherwise.\r\n     */\r\n    function isRightToLeft(){\r\n        return window.getComputedStyle(document.body).direction === 'rtl';\r\n    }\r\n    /**\r\n     * [Helper]  Get the document current scrollTop\r\n     *\r\n     * @return {Number} current document scrollTop value\r\n     */\r\n    function getScrollTop(){\r\n        return ((document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop);\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Get the document current scrollLeft\r\n     *\r\n     * @return {Number} current document scrollLeft value\r\n     */\r\n    function getScrollLeft(){\r\n        return ((document.documentElement && document.documentElement.scrollLeft) || document.body.scrollLeft);\r\n    }\r\n\r\n    /**\r\n    * Helper: clear contents\r\n    *\r\n    */\r\n    function clearContents(element){\r\n        while (element.lastChild) {\r\n            element.removeChild(element.lastChild);\r\n        }\r\n    }\r\n    /**\r\n     * Extends a given prototype by merging properties from base into sub.\r\n     *\r\n     * @sub {Object} sub The prototype being overwritten.\r\n     * @base {Object} base The prototype being written.\r\n     *\r\n     * @return {Object} The extended prototype.\r\n     */\r\n    function copy(src) {\r\n        if(null === src){\r\n            return src;\r\n        }\r\n        var cpy;\r\n        if(Array.isArray(src)){\r\n            cpy = [];\r\n            for(var x=0;x<src.length;x+=1){\r\n                cpy.push(copy(src[x]));\r\n            }\r\n            return cpy;\r\n        }\r\n      \r\n        if(src instanceof Date){\r\n            return new Date(src.getTime());\r\n        }\r\n      \r\n        if(src instanceof RegExp){\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        \r\n        if(typeof src === 'object'){\r\n            cpy = {};\r\n            // copy dialog pototype over definition.\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = copy(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    }\r\n    /**\r\n      * Helper: destruct the dialog\r\n      *\r\n      */\r\n    function destruct(instance, initialize){\r\n        if(instance.elements){\r\n            //delete the dom and it's references.\r\n            var root = instance.elements.root;\r\n            root.parentNode.removeChild(root);\r\n            delete instance.elements;\r\n            //copy back initial settings.\r\n            instance.settings = copy(instance.__settings);\r\n            //re-reference init function.\r\n            instance.__init = initialize;\r\n            //delete __internal variable to allow re-initialization.\r\n            delete instance.__internal;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test to check if passive event listeners are supported.\r\n     */\r\n    var IsPassiveSupported = false;\r\n    try {\r\n        var options = Object.defineProperty({}, 'passive', {\r\n            get: function () {\r\n                IsPassiveSupported = true;\r\n            }\r\n        });\r\n        window.addEventListener('test', options, options);\r\n        window.removeEventListener('test', options, options);\r\n    } catch (e) {}\r\n\r\n     /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to register the listenr on.\r\n     * @param {string} event The event type to listen for.\r\n     * @param {Function} handler The function to handle the event.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var on = function (el, event, fn, useCapture, passive) {\r\n        el.addEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to unregister the listenr from.\r\n     * @param {string} event The event type to remove.\r\n     * @param {Function} fn The event handler to remove.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var off = function (el, event, fn, useCapture, passive) {\r\n        el.removeEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Prevent default event from firing\r\n     *\r\n     * @param  {Event} event Event object\r\n     * @return {undefined}\r\n\r\n    function prevent ( event ) {\r\n        if ( event ) {\r\n            if ( event.preventDefault ) {\r\n                event.preventDefault();\r\n            } else {\r\n                event.returnValue = false;\r\n            }\r\n        }\r\n    }\r\n    */\r\n    var transition = (function () {\r\n        var t, type;\r\n        var supported = false;\r\n        var transitions = {\r\n            'animation'        : 'animationend',\r\n            'OAnimation'       : 'oAnimationEnd oanimationend',\r\n            'msAnimation'      : 'MSAnimationEnd',\r\n            'MozAnimation'     : 'animationend',\r\n            'WebkitAnimation'  : 'webkitAnimationEnd'\r\n        };\r\n\r\n        for (t in transitions) {\r\n            if (document.documentElement.style[t] !== undefined) {\r\n                type = transitions[t];\r\n                supported = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            supported: supported\r\n        };\r\n    }());\r\n\r\n    /**\r\n    * Creates event handler delegate that sends the instance as last argument.\r\n    * \r\n    * @return {Function}    a function wrapper which sends the instance as last argument.\r\n    */\r\n    function delegate(context, method) {\r\n        return function () {\r\n            if (arguments.length > 0) {\r\n                var args = [];\r\n                for (var x = 0; x < arguments.length; x += 1) {\r\n                    args.push(arguments[x]);\r\n                }\r\n                args.push(context);\r\n                return method.apply(context, args);\r\n            }\r\n            return method.apply(context, [null, context]);\r\n        };\r\n    }\r\n    /**\r\n    * Helper for creating a dialog close event.\r\n    * \r\n    * @return {object}\r\n    */\r\n    function createCloseEvent(index, button) {\r\n        return {\r\n            index: index,\r\n            button: button,\r\n            cancel: false\r\n        };\r\n    }\r\n    /**\r\n    * Helper for dispatching events.\r\n    *\r\n    * @param  {string} evenType The type of the event to disptach.\r\n    * @param  {object} instance The dialog instance disptaching the event.\r\n    *\r\n    * @return   {any}   The result of the invoked function.\r\n    */\r\n    function dispatchEvent(eventType, instance) {\r\n        if ( typeof instance.get(eventType) === 'function' ) {\r\n            return instance.get(eventType).call(instance);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Super class for all dialogs\r\n     *\r\n     * @return {Object}\t\tbase dialog prototype\r\n     */\r\n    var dialog = (function () {\r\n        var //holds the list of used keys.\r\n            usedKeys = [],\r\n            //dummy variable, used to trigger dom reflow.\r\n            reflow = null,\r\n            //holds body tab index in case it has any.\r\n            tabindex = false,\r\n            //condition for detecting safari\r\n            isSafari = window.navigator.userAgent.indexOf('Safari') > -1 && window.navigator.userAgent.indexOf('Chrome') < 0,\r\n            //dialog building blocks\r\n            templates = {\r\n                dimmer:'<div class=\"ajs-dimmer\"></div>',\r\n                /*tab index required to fire click event before body focus*/\r\n                modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\r\n                dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\r\n                reset: '<button class=\"ajs-reset\"></button>',\r\n                commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\r\n                header: '<div class=\"ajs-header\"></div>',\r\n                body: '<div class=\"ajs-body\"></div>',\r\n                content: '<div class=\"ajs-content\"></div>',\r\n                footer: '<div class=\"ajs-footer\"></div>',\r\n                buttons: { primary: '<div class=\"ajs-primary ajs-buttons\"></div>', auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>' },\r\n                button: '<button class=\"ajs-button\"></button>',\r\n                resizeHandle: '<div class=\"ajs-handle\"></div>',\r\n            },\r\n            //common class names\r\n            classes = {\r\n                animationIn: 'ajs-in',\r\n                animationOut: 'ajs-out',\r\n                base: 'alertify',\r\n                basic:'ajs-basic',\r\n                capture: 'ajs-capture',\r\n                closable:'ajs-closable',\r\n                fixed: 'ajs-fixed',\r\n                frameless:'ajs-frameless',\r\n                hidden: 'ajs-hidden',\r\n                maximize: 'ajs-maximize',\r\n                maximized: 'ajs-maximized',\r\n                maximizable:'ajs-maximizable',\r\n                modeless: 'ajs-modeless',\r\n                movable: 'ajs-movable',\r\n                noSelection: 'ajs-no-selection',\r\n                noOverflow: 'ajs-no-overflow',\r\n                noPadding:'ajs-no-padding',\r\n                pin:'ajs-pin',\r\n                pinnable:'ajs-pinnable',\r\n                prefix: 'ajs-',\r\n                resizable: 'ajs-resizable',\r\n                restore: 'ajs-restore',\r\n                shake:'ajs-shake',\r\n                unpinned:'ajs-unpinned',\r\n                noTransition:'ajs-no-transition'\r\n            };\r\n\r\n        /**\r\n         * Helper: initializes the dialog instance\r\n         * \r\n         * @return\t{Number}\tThe total count of currently open modals.\r\n         */\r\n        function initialize(instance){\r\n            \r\n            if(!instance.__internal){\r\n                //invoke preinit global hook\r\n                alertify.defaults.hooks.preinit(instance);\r\n                //no need to expose init after this.\r\n                delete instance.__init;\r\n              \r\n                //keep a copy of initial dialog settings\r\n                if(!instance.__settings){\r\n                    instance.__settings = copy(instance.settings);\r\n                }\r\n                \r\n                //get dialog buttons/focus setup\r\n                var setup;\r\n                if(typeof instance.setup === 'function'){\r\n                    setup = instance.setup();\r\n                    setup.options = setup.options  || {};\r\n                    setup.focus = setup.focus  || {};\r\n                }else{\r\n                    setup = {\r\n                        buttons:[],\r\n                        focus:{\r\n                            element:null,\r\n                            select:false\r\n                        },\r\n                        options:{\r\n                        }\r\n                    };\r\n                }\r\n                \r\n                //initialize hooks object.\r\n                if(typeof instance.hooks !== 'object'){\r\n                    instance.hooks = {};\r\n                }\r\n\r\n                //copy buttons defintion\r\n                var buttonsDefinition = [];\r\n                if(Array.isArray(setup.buttons)){\r\n                    for(var b=0;b<setup.buttons.length;b+=1){\r\n                        var ref  = setup.buttons[b],\r\n                            cpy = {};\r\n                        for (var i in ref) {\r\n                            if (ref.hasOwnProperty(i)) {\r\n                                cpy[i] = ref[i];\r\n                            }\r\n                        }\r\n                        buttonsDefinition.push(cpy);\r\n                    }\r\n                }\r\n\r\n                var internal = instance.__internal = {\r\n                    /**\r\n                     * Flag holding the open state of the dialog\r\n                     * \r\n                     * @type {Boolean}\r\n                     */\r\n                    isOpen:false,\r\n                    /**\r\n                     * Active element is the element that will receive focus after\r\n                     * closing the dialog. It defaults as the body tag, but gets updated\r\n                     * to the last focused element before the dialog was opened.\r\n                     *\r\n                     * @type {Node}\r\n                     */\r\n                    activeElement:document.body,\r\n                    timerIn:undefined,\r\n                    timerOut:undefined,\r\n                    buttons: buttonsDefinition,\r\n                    focus: setup.focus,\r\n                    options: {\r\n                        title: undefined,\r\n                        modal: undefined,\r\n                        basic:undefined,\r\n                        frameless:undefined,\r\n                        defaultFocusOff:undefined,\r\n                        pinned: undefined,\r\n                        movable: undefined,\r\n                        moveBounded:undefined,\r\n                        resizable: undefined,\r\n                        autoReset: undefined,\r\n                        closable: undefined,\r\n                        closableByDimmer: undefined,\r\n                        invokeOnCloseOff:undefined,\r\n                        maximizable: undefined,\r\n                        startMaximized: undefined,\r\n                        pinnable: undefined,\r\n                        transition: undefined,\r\n                        transitionOff: undefined,\r\n                        padding:undefined,\r\n                        overflow:undefined,\r\n                        onshow:undefined,\r\n                        onclosing:undefined,\r\n                        onclose:undefined,\r\n                        onfocus:undefined,\r\n                        onmove:undefined,\r\n                        onmoved:undefined,\r\n                        onresize:undefined,\r\n                        onresized:undefined,\r\n                        onmaximize:undefined,\r\n                        onmaximized:undefined,\r\n                        onrestore:undefined,\r\n                        onrestored:undefined\r\n                    },\r\n                    resetHandler:undefined,\r\n                    beginMoveHandler:undefined,\r\n                    beginResizeHandler:undefined,\r\n                    bringToFrontHandler:undefined,\r\n                    modalClickHandler:undefined,\r\n                    buttonsClickHandler:undefined,\r\n                    commandsClickHandler:undefined,\r\n                    transitionInHandler:undefined,\r\n                    transitionOutHandler:undefined,\r\n                    destroy:undefined\r\n                };\r\n\r\n                var elements = {};\r\n                //root node\r\n                elements.root = document.createElement('div');\r\n                //prevent FOUC in case of async styles loading.\r\n                elements.root.style.display = 'none';\r\n                elements.root.className = classes.base + ' ' + classes.hidden + ' ';\r\n\r\n                elements.root.innerHTML = templates.dimmer + templates.modal;\r\n                \r\n                //dimmer\r\n                elements.dimmer = elements.root.firstChild;\r\n\r\n                //dialog\r\n                elements.modal = elements.root.lastChild;\r\n                elements.modal.innerHTML = templates.dialog;\r\n                elements.dialog = elements.modal.firstChild;\r\n                elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\r\n\r\n                //reset links\r\n                elements.reset = [];\r\n                elements.reset.push(elements.dialog.firstChild);\r\n                elements.reset.push(elements.dialog.lastChild);\r\n                \r\n                //commands\r\n                elements.commands = {};\r\n                elements.commands.container = elements.reset[0].nextSibling;\r\n                elements.commands.pin = elements.commands.container.firstChild;\r\n                elements.commands.maximize = elements.commands.pin.nextSibling;\r\n                elements.commands.close = elements.commands.maximize.nextSibling;\r\n                \r\n                //header\r\n                elements.header = elements.commands.container.nextSibling;\r\n\r\n                //body\r\n                elements.body = elements.header.nextSibling;\r\n                elements.body.innerHTML = templates.content;\r\n                elements.content = elements.body.firstChild;\r\n\r\n                //footer\r\n                elements.footer = elements.body.nextSibling;\r\n                elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\r\n                \r\n                //resize handle\r\n                elements.resizeHandle = elements.footer.nextSibling;\r\n\r\n                //buttons\r\n                elements.buttons = {};\r\n                elements.buttons.auxiliary = elements.footer.firstChild;\r\n                elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\r\n                elements.buttons.primary.innerHTML = templates.button;\r\n                elements.buttonTemplate = elements.buttons.primary.firstChild;\r\n                //remove button template\r\n                elements.buttons.primary.removeChild(elements.buttonTemplate);\r\n                               \r\n                for(var x=0; x < instance.__internal.buttons.length; x+=1) {\r\n                    var button = instance.__internal.buttons[x];\r\n                    \r\n                    // add to the list of used keys.\r\n                    if(usedKeys.indexOf(button.key) < 0){\r\n                        usedKeys.push(button.key);\r\n                    }\r\n\r\n                    button.element = elements.buttonTemplate.cloneNode();\r\n                    button.element.innerHTML = button.text;\r\n                    if(typeof button.className === 'string' &&  button.className !== ''){\r\n                        addClass(button.element, button.className);\r\n                    }\r\n                    for(var key in button.attrs){\r\n                        if(key !== 'className' && button.attrs.hasOwnProperty(key)){\r\n                            button.element.setAttribute(key, button.attrs[key]);\r\n                        }\r\n                    }\r\n                    if(button.scope === 'auxiliary'){\r\n                        elements.buttons.auxiliary.appendChild(button.element);\r\n                    }else{\r\n                        elements.buttons.primary.appendChild(button.element);\r\n                    }\r\n                }\r\n                //make elements pubic\r\n                instance.elements = elements;\r\n                \r\n                //save event handlers delegates\r\n                internal.resetHandler = delegate(instance, onReset);\r\n                internal.beginMoveHandler = delegate(instance, beginMove);\r\n                internal.beginResizeHandler = delegate(instance, beginResize);\r\n                internal.bringToFrontHandler = delegate(instance, bringToFront);\r\n                internal.modalClickHandler = delegate(instance, modalClickHandler);\r\n                internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\r\n                internal.commandsClickHandler = delegate(instance, commandsClickHandler);\r\n                internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\r\n                internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\r\n\r\n                //settings\r\n                for(var opKey in internal.options){\r\n                    if(setup.options[opKey] !== undefined){\r\n                        // if found in user options\r\n                        instance.set(opKey, setup.options[opKey]);\r\n                    }else if(alertify.defaults.hasOwnProperty(opKey)) {\r\n                        // else if found in defaults options\r\n                        instance.set(opKey, alertify.defaults[opKey]);\r\n                    }else if(opKey === 'title' ) {\r\n                        // else if title key, use alertify.defaults.glossary\r\n                        instance.set(opKey, alertify.defaults.glossary[opKey]);\r\n                    }\r\n                }\r\n\r\n                // allow dom customization\r\n                if(typeof instance.build === 'function'){\r\n                    instance.build();\r\n                }\r\n\r\n                //invoke postinit global hook\r\n                alertify.defaults.hooks.postinit(instance);\r\n            }\r\n\r\n            //add to the end of the DOM tree.\r\n            document.body.appendChild(instance.elements.root);\r\n        }\r\n\r\n        /**\r\n         * Helper: maintains scroll position\r\n         *\r\n         */\r\n        var scrollX, scrollY;\r\n        function saveScrollPosition(){\r\n            scrollX = getScrollLeft();\r\n            scrollY = getScrollTop();\r\n        }\r\n        function restoreScrollPosition(){\r\n            window.scrollTo(scrollX, scrollY);\r\n        }\r\n\r\n        /**\r\n         * Helper: adds/removes no-overflow class from body\r\n         *\r\n         */\r\n        function ensureNoOverflow(){\r\n            var requiresNoOverflow = 0;\r\n            for(var x=0;x<openDialogs.length;x+=1){\r\n                var instance = openDialogs[x];\r\n                if(instance.isModal() || instance.isMaximized()){\r\n                    requiresNoOverflow+=1;\r\n                }\r\n            }\r\n            if(requiresNoOverflow === 0 && document.body.className.indexOf(classes.noOverflow) >= 0){\r\n                //last open modal or last maximized one\r\n                removeClass(document.body, classes.noOverflow);\r\n                preventBodyShift(false);\r\n            }else if(requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0){\r\n                //first open modal or first maximized one\r\n                preventBodyShift(true);\r\n                addClass(document.body, classes.noOverflow);\r\n            }\r\n        }\r\n        var top = '', topScroll = 0;\r\n        /**\r\n         * Helper: prevents body shift.\r\n         *\r\n         */\r\n        function preventBodyShift(add){\r\n            if(alertify.defaults.preventBodyShift){\r\n                if(add && document.documentElement.scrollHeight > document.documentElement.clientHeight ){//&& openDialogs[openDialogs.length-1].elements.dialog.clientHeight <= document.documentElement.clientHeight){\r\n                    topScroll = scrollY;\r\n                    top = window.getComputedStyle(document.body).top;\r\n                    addClass(document.body, classes.fixed);\r\n                    document.body.style.top = -scrollY + 'px';\r\n                } else if(!add) {\r\n                    scrollY = topScroll;\r\n                    document.body.style.top = top;\r\n                    removeClass(document.body, classes.fixed);\r\n                    restoreScrollPosition();\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Sets the name of the transition used to show/hide the dialog\r\n         * \r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         */\r\n        function updateTransition(instance, value, oldValue){\r\n            if(typeof oldValue === 'string'){\r\n                removeClass(instance.elements.root,classes.prefix +  oldValue);\r\n            }\r\n            addClass(instance.elements.root, classes.prefix + value);\r\n            reflow = instance.elements.root.offsetWidth;\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog no transition \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateTransitionOff(instance){\r\n            if (instance.get('transitionOff')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.noTransition);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.noTransition);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog display mode\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateDisplayMode(instance){\r\n            if(instance.get('modal')){\r\n\r\n                //make modal\r\n                removeClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    unbindModelessEvents(instance);\r\n\r\n                    //in case a pinned modless dialog was made modal while open.\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }else{\r\n                //make modelss\r\n                addClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    bindModelessEvents(instance);\r\n\r\n                    //in case pin/unpin was called while a modal is open\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog basic view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateBasicMode(instance){\r\n            if (instance.get('basic')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.basic);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.basic);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog frameless view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateFramelessMode(instance){\r\n            if (instance.get('frameless')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.frameless);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.frameless);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\r\n         *\r\n         * @param {Event} event Focus event\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bringToFront(event, instance){\r\n            \r\n            // Do not bring to front if preceeded by an open modal\r\n            var index = openDialogs.indexOf(instance);\r\n            for(var x=index+1;x<openDialogs.length;x+=1){\r\n                if(openDialogs[x].isModal()){\r\n                    return;\r\n                }\r\n            }\r\n\t\t\t\r\n            // Bring to front by making it the last child.\r\n            if(document.body.lastChild !== instance.elements.root){\r\n                document.body.appendChild(instance.elements.root);\r\n                //also make sure its at the end of the list\r\n                openDialogs.splice(openDialogs.indexOf(instance),1);\r\n                openDialogs.push(instance);\r\n                setFocus(instance);\r\n            }\r\n\t\t\t\r\n            return false;\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{undefined}\t\r\n         */\r\n        function optionUpdated(instance, option, oldValue, newValue){\r\n            switch(option){\r\n            case 'title':\r\n                instance.setHeader(newValue);\r\n                break;\r\n            case 'modal':\r\n                updateDisplayMode(instance);\r\n                break;\r\n            case 'basic':\r\n                updateBasicMode(instance);\r\n                break;\r\n            case 'frameless':\r\n                updateFramelessMode(instance);\r\n                break;\r\n            case 'pinned':\r\n                updatePinned(instance);\r\n                break;\r\n            case 'closable':\r\n                updateClosable(instance);\r\n                break;\r\n            case 'maximizable':\r\n                updateMaximizable(instance);\r\n                break;\r\n            case 'pinnable':\r\n                updatePinnable(instance);\r\n                break;\r\n            case 'movable':\r\n                updateMovable(instance);\r\n                break;\r\n            case 'resizable':\r\n                updateResizable(instance);\r\n                break;\r\n            case 'padding':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noPadding);\r\n                }else if(instance.elements.root.className.indexOf(classes.noPadding) < 0){\r\n                    addClass(instance.elements.root, classes.noPadding);\r\n                }\r\n                break;\r\n            case 'overflow':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noOverflow);\r\n                }else if(instance.elements.root.className.indexOf(classes.noOverflow) < 0){\r\n                    addClass(instance.elements.root, classes.noOverflow);\r\n                }\r\n                break;\r\n            case 'transition':\r\n                updateTransition(instance,newValue, oldValue);\r\n                break;\r\n            case 'transitionOff':\r\n                updateTransitionOff(instance);\r\n                break;\r\n            }\r\n\r\n            // internal on option updated event\r\n            if(typeof instance.hooks.onupdate === 'function'){\r\n                instance.hooks.onupdate.call(instance, option, oldValue, newValue);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Object} obj The object to set/get a value on/from.\r\n         * @param {Function} callback The callback function to call if the key was found.\r\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\r\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{Object} result object \r\n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\r\n         *\t\tGET: \r\n         *\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t- value: the property value.\r\n         *\t\tSET:\r\n         *\t\t- items: a list of key value pairs of the properties being set.\r\n         *\t\t\t\teach contains:\r\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t\t\t\t- key: the property key.\r\n         *\t\t\t\t\t- value: the property value.\r\n         */\r\n        function update(instance, obj, callback, key, value){\r\n            var result = {op:undefined, items: [] };\r\n            if(typeof value === 'undefined' && typeof key === 'string') {\r\n                //get\r\n                result.op = 'get';\r\n                if(obj.hasOwnProperty(key)){\r\n                    result.found = true;\r\n                    result.value = obj[key];\r\n                }else{\r\n                    result.found = false;\r\n                    result.value = undefined;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                var old;\r\n                //set\r\n                result.op = 'set';\r\n                if(typeof key === 'object'){\r\n                    //set multiple\r\n                    var args = key;\r\n                    for (var prop in args) {\r\n                        if (obj.hasOwnProperty(prop)) {\r\n                            if(obj[prop] !== args[prop]){\r\n                                old = obj[prop];\r\n                                obj[prop] = args[prop];\r\n                                callback.call(instance,prop, old, args[prop]);\r\n                            }\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':true});\r\n                        }else{\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':false});\r\n                        }\r\n                    }\r\n                } else if (typeof key === 'string'){\r\n                    //set single\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        if(obj[key] !== value){\r\n                            old  = obj[key];\r\n                            obj[key] = value;\r\n                            callback.call(instance,key, old, value);\r\n                        }\r\n                        result.items.push({'key': key, 'value': value , 'found':true});\r\n\r\n                    }else{\r\n                        result.items.push({'key': key, 'value': value , 'found':false});\r\n                    }\r\n                } else {\r\n                    //invalid params\r\n                    throw new Error('args must be a string or object');\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n        /**\r\n         * Triggers a close event.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function triggerClose(instance) {\r\n            var found;\r\n            triggerCallback(instance, function (button) {\r\n                return found = instance.get('invokeOnCloseOff') !== true && (button.invokeOnClose === true);\r\n            });\r\n            //none of the buttons registered as onclose callback\r\n            //close the dialog\r\n            if (!found && instance.isOpen()) {\r\n                instance.close();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Dialogs commands event handler, attached to the dialog commands element.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function commandsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            switch (target) {\r\n            case instance.elements.commands.pin:\r\n                if (!instance.isPinned()) {\r\n                    pin(instance);\r\n                } else {\r\n                    unpin(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.maximize:\r\n                if (!instance.isMaximized()) {\r\n                    maximize(instance);\r\n                } else {\r\n                    restore(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.close:\r\n                triggerClose(instance);\r\n                break;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Helper: pins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dialog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function pin(instance) {\r\n            //pin the dialog\r\n            instance.set('pinned', true);\r\n        }\r\n\r\n        /**\r\n         * Helper: unpins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function unpin(instance) {\r\n            //unpin the dialog \r\n            instance.set('pinned', false);\r\n        }\r\n\r\n\r\n        /**\r\n         * Helper: enlarges the dialog to fill the entire screen.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function maximize(instance) {\r\n            // allow custom `onmaximize` method\r\n            dispatchEvent('onmaximize', instance);\r\n            //maximize the dialog \r\n            addClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onmaximized` method\r\n            dispatchEvent('onmaximized', instance);\r\n        }\r\n\r\n        /**\r\n         * Helper: returns the dialog to its former size.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function restore(instance) {\r\n            // allow custom `onrestore` method\r\n            dispatchEvent('onrestore', instance);\r\n            //maximize the dialog \r\n            removeClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onrestored` method\r\n            dispatchEvent('onrestored', instance);\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinnable(instance) {\r\n            if (instance.get('pinnable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.pinnable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.pinnable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Helper: Fixes the absolutly positioned modal div position.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function addAbsPositionFix(instance) {\r\n            var scrollLeft = getScrollLeft();\r\n            instance.elements.modal.style.marginTop = getScrollTop() + 'px';\r\n            instance.elements.modal.style.marginLeft = scrollLeft + 'px';\r\n            instance.elements.modal.style.marginRight = (-scrollLeft) + 'px';\r\n        }\r\n\r\n        /**\r\n         * Helper: Removes the absolutly positioned modal div position fix.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function removeAbsPositionFix(instance) {\r\n            var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\r\n            var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\r\n            instance.elements.modal.style.marginTop = '';\r\n            instance.elements.modal.style.marginLeft = '';\r\n            instance.elements.modal.style.marginRight = '';\r\n\r\n            if (instance.isOpen()) {\r\n                var top = 0,\r\n                    left = 0\r\n                ;\r\n                if (instance.elements.dialog.style.top !== '') {\r\n                    top = parseInt(instance.elements.dialog.style.top, 10);\r\n                }\r\n                instance.elements.dialog.style.top = (top + (marginTop - getScrollTop())) + 'px';\r\n\r\n                if (instance.elements.dialog.style.left !== '') {\r\n                    left = parseInt(instance.elements.dialog.style.left, 10);\r\n                }\r\n                instance.elements.dialog.style.left = (left + (marginLeft - getScrollLeft())) + 'px';\r\n            }\r\n        }\r\n        /**\r\n         * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateAbsPositionFix(instance) {\r\n            // if modeless and unpinned add fix\r\n            if (!instance.get('modal') && !instance.get('pinned')) {\r\n                addAbsPositionFix(instance);\r\n            } else {\r\n                removeAbsPositionFix(instance);\r\n            }\r\n        }\r\n        /**\r\n         * Toggles the dialog position lock | modeless only.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to make it modal, false otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinned(instance) {\r\n            if (instance.get('pinned')) {\r\n                removeClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen()) {\r\n                    removeAbsPositionFix(instance);\r\n                }\r\n            } else {\r\n                addClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen() && !instance.isModal()) {\r\n                    addAbsPositionFix(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMaximizable(instance) {\r\n            if (instance.get('maximizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.maximizable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.maximizable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the close box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateClosable(instance) {\r\n            if (instance.get('closable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.closable);\r\n                bindClosableEvents(instance);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.closable);\r\n                unbindClosableEvents(instance);\r\n            }\r\n        }\r\n\r\n        \r\n        var cancelClick = false,// flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).\r\n            modalClickHandlerTS=0 // stores last click timestamp to prevent executing the handler twice on double click.\r\n            ;\r\n\r\n        /**\r\n         * Helper: closes the modal dialog when clicking the modal\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function modalClickHandler(event, instance) {\r\n            if(event.timeStamp - modalClickHandlerTS > 200 && (modalClickHandlerTS = event.timeStamp) && !cancelClick){\r\n                var target = event.srcElement || event.target;\r\n                if (instance.get('closableByDimmer') === true && target === instance.elements.modal) {\r\n                    triggerClose(instance);\r\n                }\r\n            }\r\n            cancelClick = false;\r\n        }\r\n\r\n        // stores last call timestamp to prevent triggering the callback twice.\r\n        var callbackTS = 0;\r\n        // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\r\n        var cancelKeyup = false;\r\n        /** \r\n         * Helper: triggers a button callback\r\n         *\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * @param {Function}\tCallback to check which button triggered the event.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function triggerCallback(instance, check) {\r\n            if(Date.now() - callbackTS > 200 && (callbackTS = Date.now())){\r\n                for (var idx = 0; idx < instance.__internal.buttons.length; idx += 1) {\r\n                    var button = instance.__internal.buttons[idx];\r\n                    if (!button.element.disabled && check(button)) {\r\n                        var closeEvent = createCloseEvent(idx, button);\r\n                        if (typeof instance.callback === 'function') {\r\n                            instance.callback.apply(instance, [closeEvent]);\r\n                        }\r\n                        //close the dialog only if not canceled.\r\n                        if (closeEvent.cancel === false) {\r\n                            instance.close();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clicks event handler, attached to the dialog footer.\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function buttonsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            triggerCallback(instance, function (button) {\r\n                // if this button caused the click, cancel keyup event\r\n                return button.element === target && (cancelKeyup = true);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Keyup event handler, attached to the document.body\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function keyupHandler(event) {\r\n            //hitting enter while button has focus will trigger keyup too.\r\n            //ignore if handled by clickHandler\r\n            if (cancelKeyup) {\r\n                cancelKeyup = false;\r\n                return;\r\n            }\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get('closable') === true) {\r\n                triggerClose(instance);\r\n                return false;\r\n            }else if (usedKeys.indexOf(keyCode) > -1) {\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        /**\r\n        * Keydown event handler, attached to the document.body\r\n        *\r\n        * @param {Event}\t\tDOM event object.\r\n        * @param {Object}\t\tThe dilog instance.\r\n        * \r\n        * @return {undefined}\r\n        */\r\n        function keydownHandler(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\r\n                var buttons = instance.__internal.buttons;\r\n                for (var x = 0; x < buttons.length; x += 1) {\r\n                    if (document.activeElement === buttons[x].element) {\r\n                        switch (keyCode) {\r\n                        case keys.LEFT:\r\n                            buttons[(x || buttons.length) - 1].element.focus();\r\n                            return;\r\n                        case keys.RIGHT:\r\n                            buttons[(x + 1) % buttons.length].element.focus();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Sets focus to proper dialog element\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function setFocus(instance, resetTarget) {\r\n            // reset target has already been determined.\r\n            if (resetTarget) {\r\n                resetTarget.focus();\r\n            } else {\r\n                // current instance focus settings\r\n                var focus = instance.__internal.focus;\r\n                // the focus element.\r\n                var element = focus.element;\r\n\r\n                switch (typeof focus.element) {\r\n                // a number means a button index\r\n                case 'number':\r\n                    if (instance.__internal.buttons.length > focus.element) {\r\n                        //in basic view, skip focusing the buttons.\r\n                        if (instance.get('basic') === true) {\r\n                            element = instance.elements.reset[0];\r\n                        } else {\r\n                            element = instance.__internal.buttons[focus.element].element;\r\n                        }\r\n                    }\r\n                    break;\r\n                // a string means querySelector to select from dialog body contents.\r\n                case 'string':\r\n                    element = instance.elements.body.querySelector(focus.element);\r\n                    break;\r\n                // a function should return the focus element.\r\n                case 'function':\r\n                    element = focus.element.call(instance);\r\n                    break;\r\n                }\r\n\r\n                // if no focus element, default to first reset element.\r\n                if (instance.get('defaultFocusOff') === true || ((typeof element === 'undefined' || element === null) && instance.__internal.buttons.length === 0)) {\r\n                    element = instance.elements.reset[0];\r\n                }\r\n                // focus\r\n                if (element && element.focus) {\r\n                    element.focus();\r\n                    // if selectable\r\n                    if (focus.select && element.select) {\r\n                        element.select();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Focus event handler, attached to document.body and dialogs own reset links.\r\n         * handles the focus for modal dialogs only.\r\n         *\r\n         * @param {Event} event DOM focus event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function onReset(event, instance) {\r\n\r\n            // should work on last modal if triggered from document.body \r\n            if (!instance) {\r\n                for (var x = openDialogs.length - 1; x > -1; x -= 1) {\r\n                    if (openDialogs[x].isModal()) {\r\n                        instance = openDialogs[x];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(instance) {\r\n                // if modal\r\n                if (instance.isModal()) {\r\n                    // determine reset target to enable forward/backward tab cycle.\r\n                    var firstReset = instance.elements.reset[0],\r\n                        lastReset = instance.elements.reset[1],\r\n                        lastFocusedElement = event.relatedTarget,\r\n                        within = instance.elements.root.contains(lastFocusedElement),\r\n                        target = event.srcElement || event.target,\r\n                        resetTarget;\r\n\r\n                    //if the previous focused element element was outside the modal do nthing\r\n                    if(  /*first show */\r\n                        (target === firstReset && !within) ||\r\n                         /*focus cycle */\r\n                        (target === lastReset && lastFocusedElement === firstReset)){\r\n                        return;\r\n                    }else if(target === lastReset || target === document.body){\r\n                        resetTarget = firstReset;\r\n                    }else if(target === firstReset && lastFocusedElement === lastReset){\r\n                        resetTarget = findTabbable(instance);\r\n                    }else if(target === firstReset && within){\r\n                        resetTarget = findTabbable(instance, true);\r\n                    }\r\n                    // focus\r\n                    setFocus(instance, resetTarget);\r\n                }\r\n            }\r\n        }\r\n        function findTabbable(instance, last){\r\n            var tabbables = [].slice.call(instance.elements.dialog.querySelectorAll(defaults.tabbable));\r\n            if(last){\r\n                tabbables.reverse();\r\n            }\r\n            for(var x=0;x<tabbables.length;x+=1){\r\n                var tabbable = tabbables[x];\r\n                //check if visible\r\n                if(!!(tabbable.offsetParent || tabbable.offsetWidth || tabbable.offsetHeight || tabbable.getClientRects().length)){\r\n                    return tabbable;\r\n                }\r\n            }\r\n        }\r\n        function recycleTab(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            if (instance && event.shiftKey && event.keyCode === keys.TAB) {\r\n                instance.elements.reset[1].focus();\r\n            }\r\n        }\r\n        /**\r\n         * Transition in transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionInEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerIn);\r\n\r\n            // once transition is complete, set focus\r\n            setFocus(instance);\r\n\r\n            // allow handling key up after transition ended.\r\n            cancelKeyup = false;\r\n\r\n            // allow custom `onfocus` method\r\n            dispatchEvent('onfocus', instance);\r\n\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            removeClass(instance.elements.root, classes.animationIn);\r\n        }\r\n\r\n        /**\r\n         * Transition out transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionOutEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerOut);\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // reset move updates\r\n            resetMove(instance);\r\n            // reset resize updates\r\n            resetResize(instance);\r\n\r\n            // restore if maximized\r\n            if (instance.isMaximized() && !instance.get('startMaximized')) {\r\n                restore(instance);\r\n            }\r\n\r\n            //destory the instance\r\n            if (typeof instance.__internal.destroy === 'function') {\r\n                instance.__internal.destroy.apply(instance);\r\n            }\r\n        }\r\n        /* Controls moving a dialog around */\r\n        //holde the current moving instance\r\n        var movable = null,\r\n            //holds the current X offset when move starts\r\n            offsetX = 0,\r\n            //holds the current Y offset when move starts\r\n            offsetY = 0,\r\n            xProp = 'pageX',\r\n            yProp = 'pageY',\r\n            bounds = null,\r\n            refreshTop = false,\r\n            moveDelegate = null\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element top/left coordinates\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElement(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n           \r\n            element.style.left = left + 'px';\r\n            element.style.top = top + 'px';\r\n           \r\n        }\r\n        /**\r\n         * Helper: sets the element top/left coordinates within screen bounds\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElementBounded(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n            \r\n            element.style.left = Math.min(bounds.maxLeft, Math.max(bounds.minLeft, left)) + 'px';\r\n            if(refreshTop){\r\n                element.style.top = Math.min(bounds.maxTop, Math.max(bounds.minTop, top)) + 'px';\r\n            }else{\r\n                element.style.top = Math.max(bounds.minTop, top) + 'px';\r\n            }\r\n        }\r\n            \r\n\r\n        /**\r\n         * Triggers the start of a move event, attached to the header element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginMove(event, instance) {\r\n            if (resizable === null && !instance.isMaximized() && instance.get('movable')) {\r\n                var eventSrc, left=0, top=0;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                    xProp = 'clientX';\r\n                    yProp = 'clientY';\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n\r\n                if (eventSrc) {\r\n\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n\r\n                    if (element.style.left) {\r\n                        left = parseInt(element.style.left, 10);\r\n                    }\r\n\r\n                    if (element.style.top) {\r\n                        top = parseInt(element.style.top, 10);\r\n                    }\r\n                    \r\n                    offsetX = eventSrc[xProp] - left;\r\n                    offsetY = eventSrc[yProp] - top;\r\n\r\n                    if(instance.isModal()){\r\n                        offsetY += instance.elements.modal.scrollTop;\r\n                    }else if(instance.isPinned()){\r\n                        offsetY -= document.body.scrollTop;\r\n                    }\r\n                    \r\n                    if(instance.get('moveBounded')){\r\n                        var current = element,\r\n                            offsetLeft = -left,\r\n                            offsetTop = -top;\r\n                        \r\n                        //calc offset\r\n                        do {\r\n                            offsetLeft += current.offsetLeft;\r\n                            offsetTop += current.offsetTop;\r\n                        } while (current = current.offsetParent);\r\n                        \r\n                        bounds = {\r\n                            maxLeft : offsetLeft,\r\n                            minLeft : -offsetLeft,\r\n                            maxTop  : document.documentElement.clientHeight - element.clientHeight - offsetTop,\r\n                            minTop  : -offsetTop\r\n                        };\r\n                        moveDelegate = moveElementBounded;\r\n                    }else{\r\n                        bounds = null;\r\n                        moveDelegate = moveElement;\r\n                    }\r\n                    \r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', instance);\r\n\r\n                    refreshTop = !instance.isModal() && instance.isPinned();\r\n                    movable = instance;\r\n                    moveDelegate(eventSrc, element);\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual move handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function move(event) {\r\n            if (movable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    moveDelegate(eventSrc, movable.elements.dialog);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a move event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endMove() {\r\n            if (movable) {\r\n                var instance = movable;\r\n                movable = bounds = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                // allow custom `onmoved` method\r\n                dispatchEvent('onmoved', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by moving the element to its original state,\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetMove(instance) {\r\n            movable = null;\r\n            var element = instance.elements.dialog;\r\n            element.style.left = element.style.top = '';\r\n        }\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMovable(instance) {\r\n            if (instance.get('movable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    bindMovableEvents(instance);\r\n                }\r\n            } else {\r\n\r\n                //reset\r\n                resetMove(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    unbindMovableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* Controls moving a dialog around */\r\n        //holde the current instance being resized\t\t\r\n        var resizable = null,\r\n            //holds the staring left offset when resize starts.\r\n            startingLeft = Number.Nan,\r\n            //holds the staring width when resize starts.\r\n            startingWidth = 0,\r\n            //holds the initial width when resized for the first time.\r\n            minWidth = 0,\r\n            //holds the offset of the resize handle.\r\n            handleOffset = 0\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element width/height and updates left coordinate if neccessary.\r\n         *\r\n         * @param {Event} event\tDOM mousemove event object.\r\n         * @param {Node} element The element being moved.\r\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resizeElement(event, element, pageRelative) {\r\n\r\n            //calculate offsets from 0,0\r\n            var current = element;\r\n            var offsetLeft = 0;\r\n            var offsetTop = 0;\r\n            do {\r\n                offsetLeft += current.offsetLeft;\r\n                offsetTop += current.offsetTop;\r\n            } while (current = current.offsetParent);\r\n\r\n            // determine X,Y coordinates.\r\n            var X, Y;\r\n            if (pageRelative === true) {\r\n                X = event.pageX;\r\n                Y = event.pageY;\r\n            } else {\r\n                X = event.clientX;\r\n                Y = event.clientY;\r\n            }\r\n            // rtl handling\r\n            var isRTL = isRightToLeft();\r\n            if (isRTL) {\r\n                // reverse X \r\n                X = document.body.offsetWidth - X;\r\n                // if has a starting left, calculate offsetRight\r\n                if (!isNaN(startingLeft)) {\r\n                    offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\r\n                }\r\n            }\r\n\r\n            // set width/height\r\n            element.style.height = (Y - offsetTop + handleOffset) + 'px';\r\n            element.style.width = (X - offsetLeft + handleOffset) + 'px';\r\n\r\n            // if the element being resized has a starting left, maintain it.\r\n            // the dialog is centered, divide by half the offset to maintain the margins.\r\n            if (!isNaN(startingLeft)) {\r\n                var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\r\n                if (isRTL) {\r\n                    //negate the diff, why?\r\n                    //when growing it should decrease left\r\n                    //when shrinking it should increase left\r\n                    diff *= -1;\r\n                }\r\n                if (element.offsetWidth > startingWidth) {\r\n                    //growing\r\n                    element.style.left = (startingLeft + diff) + 'px';\r\n                } else if (element.offsetWidth >= minWidth) {\r\n                    //shrinking\r\n                    element.style.left = (startingLeft - diff) + 'px';\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the start of a resize event, attached to the resize handle element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginResize(event, instance) {\r\n            if (!instance.isMaximized()) {\r\n                var eventSrc;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', instance);\r\n                    \r\n                    resizable = instance;\r\n                    handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n                    startingLeft = parseInt(element.style.left, 10);\r\n                    element.style.height = element.offsetHeight + 'px';\r\n                    element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = (startingWidth = element.offsetWidth) + 'px';\r\n\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual resize handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resize(event) {\r\n            if (resizable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    resizeElement(eventSrc, resizable.elements.dialog, !resizable.get('modal') && !resizable.get('pinned'));\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a resize event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endResize() {\r\n            if (resizable) {\r\n                var instance = resizable;\r\n                resizable = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                cancelClick = true;\r\n                // allow custom `onresized` method\r\n                dispatchEvent('onresized', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by resizing the element to its original state.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetResize(instance) {\r\n            resizable = null;\r\n            var element = instance.elements.dialog;\r\n            if (element.style.maxWidth === 'none') {\r\n                //clear inline styles.\r\n                element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = '';\r\n                //reset variables.\r\n                startingLeft = Number.Nan;\r\n                startingWidth = minWidth = handleOffset = 0;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateResizable(instance) {\r\n            if (instance.get('resizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    bindResizableEvents(instance);\r\n                }\r\n            } else {\r\n                //reset\r\n                resetResize(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    unbindResizableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Reset move/resize on window resize.\r\n         *\r\n         * @param {Event} event\twindow resize event object.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function windowResize(/*event*/) {\r\n            for (var x = 0; x < openDialogs.length; x += 1) {\r\n                var instance = openDialogs[x];\r\n                if (instance.get('autoReset')) {\r\n                    resetMove(instance);\r\n                    resetResize(instance);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Bind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindEvents(instance) {\r\n            // if first dialog, hook global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                on(window, 'resize', windowResize);\r\n                on(document.body, 'keyup', keyupHandler);\r\n                on(document.body, 'keydown', keydownHandler);\r\n                on(document.body, 'focus', onReset);\r\n\r\n                //move\r\n                on(document.documentElement, 'mousemove', move);\r\n                on(document.documentElement, 'touchmove', move, false, false);\r\n                on(document.documentElement, 'mouseup', endMove);\r\n                on(document.documentElement, 'touchend', endMove);\r\n                //resize\r\n                on(document.documentElement, 'mousemove', resize);\r\n                on(document.documentElement, 'touchmove', resize, false, false);\r\n                on(document.documentElement, 'mouseup', endResize);\r\n                on(document.documentElement, 'touchend', endResize);\r\n            }\r\n\r\n            // common events\r\n            on(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            on(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            on(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            on(instance.elements.reset[0], 'keydown', recycleTab);\r\n            on(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            //prevent handling key up when dialog is being opened by a key stroke.\r\n            cancelKeyup = true;\r\n            // hook in transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                bindModelessEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                bindResizableEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                bindMovableEvents(instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Unbind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindEvents(instance) {\r\n            // if last dialog, remove global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                off(window, 'resize', windowResize);\r\n                off(document.body, 'keyup', keyupHandler);\r\n                off(document.body, 'keydown', keydownHandler);\r\n                off(document.body, 'focus', onReset);\r\n                //move\r\n                off(document.documentElement, 'mousemove', move);\r\n                off(document.documentElement, 'mouseup', endMove);\r\n                //resize\r\n                off(document.documentElement, 'mousemove', resize);\r\n                off(document.documentElement, 'mouseup', endResize);\r\n            }\r\n\r\n            // common events\r\n            off(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            off(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            off(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            off(instance.elements.reset[0], 'keydown', recycleTab);\r\n            off(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            // hook out transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                unbindModelessEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                unbindMovableEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                unbindResizableEvents(instance);\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Bind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindModelessEvents(instance) {\r\n            on(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n        /**\r\n         * Unbind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindModelessEvents(instance) {\r\n            off(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindMovableEvents(instance) {\r\n            on(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            on(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindMovableEvents(instance) {\r\n            off(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            off(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindResizableEvents(instance) {\r\n            on(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            on(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindResizableEvents(instance) {\r\n            off(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            off(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Bind closable events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindClosableEvents(instance) {\r\n            on(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n\r\n        /**\r\n         * Unbind closable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindClosableEvents(instance) {\r\n            off(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n        // dialog API\r\n        return {\r\n            __init:initialize,\r\n            /**\r\n             * Check if dialog is currently open\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isOpen: function () {\r\n                return this.__internal.isOpen;\r\n            },\r\n            isModal: function (){\r\n                return this.elements.root.className.indexOf(classes.modeless) < 0;\r\n            },\r\n            isMaximized:function(){\r\n                return this.elements.root.className.indexOf(classes.maximized) > -1;\r\n            },\r\n            isPinned:function(){\r\n                return this.elements.root.className.indexOf(classes.unpinned) < 0;\r\n            },\r\n            maximize:function(){\r\n                if(!this.isMaximized()){\r\n                    maximize(this);\r\n                }\r\n                return this;\r\n            },\r\n            restore:function(){\r\n                if(this.isMaximized()){\r\n                    restore(this);\r\n                }\r\n                return this;\r\n            },\r\n            pin:function(){\r\n                if(!this.isPinned()){\r\n                    pin(this);\r\n                }\r\n                return this;\r\n            },\r\n            unpin:function(){\r\n                if(this.isPinned()){\r\n                    unpin(this);\r\n                }\r\n                return this;\r\n            },\r\n            bringToFront:function(){\r\n                bringToFront(null, this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Move the dialog to a specific x/y coordinates\r\n             *\r\n             * @param {Number} x    The new dialog x coordinate in pixels.\r\n             * @param {Number} y    The new dialog y coordinate in pixels.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            moveTo:function(x,y){\r\n                if(!isNaN(x) && !isNaN(y)){\r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', this);\r\n                    \r\n                    var element = this.elements.dialog,\r\n                        current = element,\r\n                        offsetLeft = 0,\r\n                        offsetTop = 0;\r\n                    \r\n                    //subtract existing left,top\r\n                    if (element.style.left) {\r\n                        offsetLeft -= parseInt(element.style.left, 10);\r\n                    }\r\n                    if (element.style.top) {\r\n                        offsetTop -= parseInt(element.style.top, 10);\r\n                    }\r\n                    //calc offset\r\n                    do {\r\n                        offsetLeft += current.offsetLeft;\r\n                        offsetTop += current.offsetTop;\r\n                    } while (current = current.offsetParent);\r\n\r\n                    //calc left, top\r\n                    var left = (x - offsetLeft);\r\n                    var top  = (y - offsetTop);\r\n\r\n                    //// rtl handling\r\n                    if (isRightToLeft()) {\r\n                        left *= -1;\r\n                    }\r\n\r\n                    element.style.left = left + 'px';\r\n                    element.style.top = top + 'px';\r\n                    \r\n                    // allow custom `onmoved` method\r\n                    dispatchEvent('onmoved', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Resize the dialog to a specific width/height (the dialog must be 'resizable').\r\n             * The dialog can be resized to:\r\n             *  A minimum width equal to the initial display width\r\n             *  A minimum height equal to the sum of header/footer heights.\r\n             *\r\n             *\r\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\r\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            resizeTo:function(width,height){\r\n                var w = parseFloat(width),\r\n                    h = parseFloat(height),\r\n                    regex = /(\\d*\\.\\d+|\\d+)%/\r\n                ;\r\n\r\n                if(!isNaN(w) && !isNaN(h) && this.get('resizable') === true){\r\n                    \r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', this);\r\n                    \r\n                    if(('' + width).match(regex)){\r\n                        w = w / 100 * document.documentElement.clientWidth ;\r\n                    }\r\n\r\n                    if(('' + height).match(regex)){\r\n                        h = h / 100 * document.documentElement.clientHeight;\r\n                    }\r\n\r\n                    var element = this.elements.dialog;\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = w + 'px';\r\n                    element.style.height = h + 'px';\r\n                    \r\n                    // allow custom `onresized` method\r\n                    dispatchEvent('onresized', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options \r\n             *\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting : function (key, value) {\r\n                var self = this;\r\n                var result = update(this, this.__internal.options, function(k,o,n){ optionUpdated(self,k,o,n); }, key, value);\r\n                if(result.op === 'get'){\r\n                    if(result.found){\r\n                        return result.value;\r\n                    }else if(typeof this.settings !== 'undefined'){\r\n                        return update(this, this.settings, this.settingUpdated || function(){}, key, value).value;\r\n                    }else{\r\n                        return undefined;\r\n                    }\r\n                }else if(result.op === 'set'){\r\n                    if(result.items.length > 0){\r\n                        var callback = this.settingUpdated || function(){};\r\n                        for(var x=0;x<result.items.length;x+=1){\r\n                            var item = result.items[x];\r\n                            if(!item.found && typeof this.settings !== 'undefined'){\r\n                                update(this, this.settings, callback, item.key, item.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    return this;\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set:function(key, value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n            * Sets dialog header\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setHeader:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.header.firstChild !== content){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n            * Sets dialog contents\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setContent:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.content.firstChild !== content){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Show the dialog as modal\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            showModal: function(className){\r\n                return this.show(true, className);\r\n            },\r\n            /**\r\n             * Show the dialog\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            show: function (modal, className) {\r\n                \r\n                // ensure initialization\r\n                initialize(this);\r\n\r\n                if ( !this.__internal.isOpen ) {\r\n\r\n                    // add to open dialogs\r\n                    this.__internal.isOpen = true;\r\n                    openDialogs.push(this);\r\n\r\n                    // save last focused element\r\n                    if(alertify.defaults.maintainFocus){\r\n                        this.__internal.activeElement = document.activeElement;\r\n                    }\r\n\r\n                    // set tabindex attribute on body element this allows script to give it focusable\r\n                    if(!document.body.hasAttribute('tabindex')) {\r\n                        document.body.setAttribute( 'tabindex', tabindex = '0');\r\n                    }\r\n\r\n                    //allow custom dom manipulation updates before showing the dialog.\r\n                    if(typeof this.prepare === 'function'){\r\n                        this.prepare();\r\n                    }\r\n\r\n                    bindEvents(this);\r\n\r\n                    if(modal !== undefined){\r\n                        this.set('modal', modal);\r\n                    }\r\n\r\n                    //save scroll to prevent document jump\r\n                    saveScrollPosition();\r\n\r\n                    ensureNoOverflow();\r\n\r\n                    // allow custom dialog class on show\r\n                    if(typeof className === 'string' && className !== ''){\r\n                        this.__internal.className = className;\r\n                        addClass(this.elements.root, className);\r\n                    }\r\n\r\n                    // maximize if start maximized\r\n                    if ( this.get('startMaximized')) {\r\n                        this.maximize();\r\n                    }else if(this.isMaximized()){\r\n                        restore(this);\r\n                    }\r\n\r\n                    updateAbsPositionFix(this);\r\n                    this.elements.root.removeAttribute('style');\r\n                    removeClass(this.elements.root, classes.animationOut);\r\n                    addClass(this.elements.root, classes.animationIn);\r\n\r\n                    // set 1s fallback in case transition event doesn't fire\r\n                    clearTimeout( this.__internal.timerIn);\r\n                    this.__internal.timerIn = setTimeout( this.__internal.transitionInHandler, transition.supported ? 1000 : 100 );\r\n\r\n                    if(isSafari){\r\n                        // force desktop safari reflow\r\n                        var root = this.elements.root;\r\n                        root.style.display  = 'none';\r\n                        setTimeout(function(){root.style.display  = 'block';}, 0);\r\n                    }\r\n\r\n                    //reflow\r\n                    reflow = this.elements.root.offsetWidth;\r\n                  \r\n                    // show dialog\r\n                    removeClass(this.elements.root, classes.hidden);\r\n\r\n                    //restore scroll to prevent document jump\r\n                    restoreScrollPosition();\r\n\r\n                    // internal on show event\r\n                    if(typeof this.hooks.onshow === 'function'){\r\n                        this.hooks.onshow.call(this);\r\n                    }\r\n\r\n                    // allow custom `onshow` method\r\n                    dispatchEvent('onshow', this);\r\n\r\n                }else{\r\n                    // reset move updates\r\n                    resetMove(this);\r\n                    // reset resize updates\r\n                    resetResize(this);\r\n                    // shake the dialog to indicate its already open\r\n                    addClass(this.elements.dialog, classes.shake);\r\n                    var self = this;\r\n                    setTimeout(function(){\r\n                        removeClass(self.elements.dialog, classes.shake);\r\n                    },200);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close the dialog\r\n             *\r\n             * @return {Object} The dialog instance\r\n             */\r\n            close: function () {\r\n                if (this.__internal.isOpen ) {\r\n                    // custom `onclosing` event\r\n                    if(dispatchEvent('onclosing', this) !== false){\r\n\r\n                        unbindEvents(this);\r\n\r\n                        removeClass(this.elements.root, classes.animationIn);\r\n                        addClass(this.elements.root, classes.animationOut);\r\n\r\n                        // set 1s fallback in case transition event doesn't fire\r\n                        clearTimeout( this.__internal.timerOut );\r\n                        this.__internal.timerOut = setTimeout( this.__internal.transitionOutHandler, transition.supported ? 1000 : 100 );\r\n                        // hide dialog\r\n                        addClass(this.elements.root, classes.hidden);\r\n                        //reflow\r\n                        reflow = this.elements.modal.offsetWidth;\r\n\r\n                        // return focus to the last active element\r\n                        if (alertify.defaults.maintainFocus && this.__internal.activeElement) {\r\n                            this.__internal.activeElement.focus();\r\n                            this.__internal.activeElement = null;\r\n                        }\r\n\r\n                        // remove custom dialog class on hide\r\n                        if (typeof this.__internal.className !== 'undefined' && this.__internal.className !== '') {\r\n                            removeClass(this.elements.root, this.__internal.className);\r\n                        }\r\n\r\n                        // internal on close event\r\n                        if(typeof this.hooks.onclose === 'function'){\r\n                            this.hooks.onclose.call(this);\r\n                        }\r\n\r\n                        // allow custom `onclose` method\r\n                        dispatchEvent('onclose', this);\r\n\r\n                        //remove from open dialogs\r\n                        openDialogs.splice(openDialogs.indexOf(this),1);\r\n                        this.__internal.isOpen = false;\r\n\r\n                        ensureNoOverflow();\r\n                    }\r\n\r\n                }\r\n                // last dialog and tab index was set by us, remove it.\r\n                if(!openDialogs.length && tabindex === '0'){\r\n                    document.body.removeAttribute('tabindex');\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close all open dialogs except this.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeOthers:function(){\r\n                alertify.closeAll(this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Destroys this dialog instance\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            destroy:function(){\r\n                if(this.__internal) {\r\n                    if (this.__internal.isOpen ) {\r\n                        //mark dialog for destruction, this will be called on tranistionOut event.\r\n                        this.__internal.destroy = function(){\r\n                            destruct(this, initialize);\r\n                        };\r\n                        //close the dialog to unbind all events.\r\n                        this.close();\r\n                    }else if(!this.__internal.destroy){\r\n                        destruct(this, initialize);\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n        };\r\n\t} () );\r\n    var notifier = (function () {\r\n        var reflow,\r\n            element,\r\n            openInstances = [],\r\n            classes = defaults.notifier.classes,\r\n            baseClass = classes.base;\r\n        /**\r\n         * Helper: initializes the notifier instance\r\n         *\r\n         */\r\n        function initialize(instance) {\r\n\r\n            if (!instance.__internal) {\r\n                instance.__internal = {\r\n                    position: alertify.defaults.notifier.position,\r\n                    delay: alertify.defaults.notifier.delay,\r\n                };\r\n\r\n                element = document.createElement('DIV');\r\n                var transitionOff = 'transitionOff' in defaults.notifier ? defaults.notifier.transitionOff : defaults.transitionOff;\r\n                if(transitionOff){\r\n                    baseClass = classes.base + ' ajs-no-transition';\r\n                }\r\n                updatePosition(instance);\r\n            }\r\n\r\n            //add to DOM tree.\r\n            if (element.parentNode !== document.body) {\r\n                document.body.appendChild(element);\r\n            }\r\n        }\r\n\r\n        function pushInstance(instance) {\r\n            instance.__internal.pushed = true;\r\n            openInstances.push(instance);\r\n        }\r\n        function popInstance(instance) {\r\n            openInstances.splice(openInstances.indexOf(instance), 1);\r\n            instance.__internal.pushed = false;\r\n        }\r\n        /**\r\n         * Helper: update the notifier instance position\r\n         *\r\n         */\r\n        function updatePosition(instance) {\r\n            element.className = baseClass;\r\n            switch (instance.__internal.position) {\r\n            case 'top-right':\r\n                addClass(element, classes.top + ' ' + classes.right);\r\n                break;\r\n            case 'top-left':\r\n                addClass(element, classes.top + ' ' + classes.left);\r\n                break;\r\n            case 'top-center':\r\n                addClass(element, classes.top + ' ' + classes.center);\r\n                break;\r\n            case 'bottom-left':\r\n                addClass(element, classes.bottom + ' ' + classes.left);\r\n                break;\r\n            case 'bottom-center':\r\n                addClass(element, classes.bottom + ' ' + classes.center);\r\n                break;\r\n\r\n            default:\r\n            case 'bottom-right':\r\n                addClass(element, classes.bottom + ' ' + classes.right);\r\n                break;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * creates a new notification message\r\n        *\r\n        * @param  {DOMElement} message\tThe notifier message element\r\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\r\n        *\r\n        * @return {undefined}\r\n        */\r\n        function create(div, callback) {\r\n\r\n            function clickDelegate(event, instance) {\r\n                if(!instance.__internal.closeButton || event.target.getAttribute('data-close') === 'true'){\r\n                    instance.dismiss(true);\r\n                }\r\n            }\r\n\r\n            function transitionDone(event, instance) {\r\n                // unbind event\r\n                off(instance.element, transition.type, transitionDone);\r\n                // remove the message\r\n                element.removeChild(instance.element);\r\n            }\r\n\r\n            function initialize(instance) {\r\n                if (!instance.__internal) {\r\n                    instance.__internal = {\r\n                        pushed: false,\r\n                        delay : undefined,\r\n                        timer: undefined,\r\n                        clickHandler: undefined,\r\n                        transitionEndHandler: undefined,\r\n                        transitionTimeout: undefined\r\n                    };\r\n                    instance.__internal.clickHandler = delegate(instance, clickDelegate);\r\n                    instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\r\n                }\r\n                return instance;\r\n            }\r\n            function clearTimers(instance) {\r\n                clearTimeout(instance.__internal.timer);\r\n                clearTimeout(instance.__internal.transitionTimeout);\r\n            }\r\n            return initialize({\r\n                /* notification DOM element*/\r\n                element: div,\r\n                /*\r\n                 * Pushes a notification message\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                push: function (_content, _wait) {\r\n                    if (!this.__internal.pushed) {\r\n\r\n                        pushInstance(this);\r\n                        clearTimers(this);\r\n\r\n                        var content, wait;\r\n                        switch (arguments.length) {\r\n                        case 0:\r\n                            wait = this.__internal.delay;\r\n                            break;\r\n                        case 1:\r\n                            if (typeof (_content) === 'number') {\r\n                                wait = _content;\r\n                            } else {\r\n                                content = _content;\r\n                                wait = this.__internal.delay;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            content = _content;\r\n                            wait = _wait;\r\n                            break;\r\n                        }\r\n                        this.__internal.closeButton = alertify.defaults.notifier.closeButton;\r\n                        // set contents\r\n                        if (typeof content !== 'undefined') {\r\n                            this.setContent(content);\r\n                        }\r\n                        // append or insert\r\n                        if (notifier.__internal.position.indexOf('top') < 0) {\r\n                            element.appendChild(this.element);\r\n                        } else {\r\n                            element.insertBefore(this.element, element.firstChild);\r\n                        }\r\n                        reflow = this.element.offsetWidth;\r\n                        addClass(this.element, classes.visible);\r\n                        // attach click event\r\n                        on(this.element, 'click', this.__internal.clickHandler);\r\n                        return this.delay(wait);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * {Function} callback function to be invoked before dismissing the notification message.\r\n                 * Remarks: A return value === 'false' will cancel the dismissal\r\n                 *\r\n                 */\r\n                ondismiss: function () { },\r\n                /*\r\n                 * {Function} callback function to be invoked when the message is dismissed.\r\n                 *\r\n                 */\r\n                callback: callback,\r\n                /*\r\n                 * Dismisses the notification message\r\n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\r\n                 *\r\n                 */\r\n                dismiss: function (clicked) {\r\n                    if (this.__internal.pushed) {\r\n                        clearTimers(this);\r\n                        if (!(typeof this.ondismiss === 'function' && this.ondismiss.call(this) === false)) {\r\n                            //detach click event\r\n                            off(this.element, 'click', this.__internal.clickHandler);\r\n                            // ensure element exists\r\n                            if (typeof this.element !== 'undefined' && this.element.parentNode === element) {\r\n                                //transition end or fallback\r\n                                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\r\n                                removeClass(this.element, classes.visible);\r\n\r\n                                // custom callback on dismiss\r\n                                if (typeof this.callback === 'function') {\r\n                                    this.callback.call(this, clicked);\r\n                                }\r\n                            }\r\n                            popInstance(this);\r\n                        }\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Delays the notification message dismissal\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                delay: function (wait) {\r\n                    clearTimers(this);\r\n                    this.__internal.delay = typeof wait !== 'undefined' && !isNaN(+wait) ? +wait : notifier.__internal.delay;\r\n                    if (this.__internal.delay > 0) {\r\n                        var  self = this;\r\n                        this.__internal.timer = setTimeout(function () { self.dismiss(); }, this.__internal.delay * 1000);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Sets the notification message contents\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 *\r\n                 */\r\n                setContent: function (content) {\r\n                    if (typeof content === 'string') {\r\n                        clearContents(this.element);\r\n                        this.element.innerHTML = content;\r\n                    } else if (content instanceof window.HTMLElement && this.element.firstChild !== content) {\r\n                        clearContents(this.element);\r\n                        this.element.appendChild(content);\r\n                    }\r\n                    if(this.__internal.closeButton){\r\n                        var close = document.createElement('span');\r\n                        addClass(close, classes.close);\r\n                        close.setAttribute('data-close', true);\r\n                        this.element.appendChild(close);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Dismisses all open notifications except this.\r\n                 *\r\n                 */\r\n                dismissOthers: function () {\r\n                    notifier.dismissAll(this);\r\n                    return this;\r\n                }\r\n            });\r\n        }\r\n\r\n        //notifier api\r\n        return {\r\n            /**\r\n             * Gets or Sets notifier settings.\r\n             *\r\n             * @param {string} key The setting name\r\n             * @param {Variant} value The setting value.\r\n             *\r\n             * @return {Object}\tif the called as a setter, return the notifier instance.\r\n             */\r\n            setting: function (key, value) {\r\n                //ensure init\r\n                initialize(this);\r\n\r\n                if (typeof value === 'undefined') {\r\n                    //get\r\n                    return this.__internal[key];\r\n                } else {\r\n                    //set\r\n                    switch (key) {\r\n                    case 'position':\r\n                        this.__internal.position = value;\r\n                        updatePosition(this);\r\n                        break;\r\n                    case 'delay':\r\n                        this.__internal.delay = value;\r\n                        break;\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options\r\n             */\r\n            set:function(key,value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options\r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n             * Creates a new notification message\r\n             *\r\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\r\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            create: function (type, callback) {\r\n                //ensure notifier init\r\n                initialize(this);\r\n                //create new notification message\r\n                var div = document.createElement('div');\r\n                div.className = classes.message + ((typeof type === 'string' && type !== '') ? ' ' + classes.prefix + type : '');\r\n                return create(div, callback);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications.\r\n             *\r\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\r\n             *\r\n             */\r\n            dismissAll: function (except) {\r\n                var clone = openInstances.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var  instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.dismiss();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * Alertify public API\r\n     * This contains everything that is exposed through the alertify object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    function Alertify() {\r\n\r\n        // holds a references of created dialogs\r\n        var dialogs = {};\r\n\r\n        /**\r\n         * Extends a given prototype by merging properties from base into sub.\r\n         *\r\n         * @sub {Object} sub The prototype being overwritten.\r\n         * @base {Object} base The prototype being written.\r\n         *\r\n         * @return {Object} The extended prototype.\r\n         */\r\n        function extend(sub, base) {\r\n            // copy dialog pototype over definition.\r\n            for (var prop in base) {\r\n                if (base.hasOwnProperty(prop)) {\r\n                    sub[prop] = base[prop];\r\n                }\r\n            }\r\n            return sub;\r\n        }\r\n\r\n\r\n        /**\r\n        * Helper: returns a dialog instance from saved dialogs.\r\n        * and initializes the dialog if its not already initialized.\r\n        *\r\n        * @name {String} name The dialog name.\r\n        *\r\n        * @return {Object} The dialog instance.\r\n        */\r\n        function get_dialog(name) {\r\n            var dialog = dialogs[name].dialog;\r\n            //initialize the dialog if its not already initialized.\r\n            if (dialog && typeof dialog.__init === 'function') {\r\n                dialog.__init(dialog);\r\n            }\r\n            return dialog;\r\n        }\r\n\r\n        /**\r\n         * Helper:  registers a new dialog definition.\r\n         *\r\n         * @name {String} name The dialog name.\r\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\r\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\r\n         * @base {String} base the name of another dialog to inherit from.\r\n         *\r\n         * @return {Object} The dialog definition.\r\n         */\r\n        function register(name, Factory, transient, base) {\r\n            var definition = {\r\n                dialog: null,\r\n                factory: Factory\r\n            };\r\n\r\n            //if this is based on an existing dialog, create a new definition\r\n            //by applying the new protoype over the existing one.\r\n            if (base !== undefined) {\r\n                definition.factory = function () {\r\n                    return extend(new dialogs[base].factory(), new Factory());\r\n                };\r\n            }\r\n\r\n            if (!transient) {\r\n                //create a new definition based on dialog\r\n                definition.dialog = extend(new definition.factory(), dialog);\r\n            }\r\n            return dialogs[name] = definition;\r\n        }\r\n\r\n        return {\r\n            /**\r\n             * Alertify defaults\r\n             * \r\n             * @type {Object}\r\n             */\r\n            defaults: defaults,\r\n            /**\r\n             * Dialogs factory \r\n             *\r\n             * @param {string}      Dialog name.\r\n             * @param {Function}    A Dialog factory function.\r\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\r\n             * @param {String}      The name of the base type to inherit from.\r\n             */\r\n            dialog: function (name, Factory, transient, base) {\r\n\r\n                // get request, create a new instance and return it.\r\n                if (typeof Factory !== 'function') {\r\n                    return get_dialog(name);\r\n                }\r\n\r\n                if (this.hasOwnProperty(name)) {\r\n                    throw new Error('alertify.dialog: name already exists');\r\n                }\r\n\r\n                // register the dialog\r\n                var definition = register(name, Factory, transient, base);\r\n\r\n                if (transient) {\r\n\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var instance = extend(new definition.factory(), dialog);\r\n                            //ensure init\r\n                            if (instance && typeof instance.__init === 'function') {\r\n                                instance.__init(instance);\r\n                            }\r\n                            instance['main'].apply(instance, arguments);\r\n                            return instance['show'].apply(instance);\r\n                        }\r\n                    };\r\n                } else {\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //ensure init\r\n                        if (definition.dialog && typeof definition.dialog.__init === 'function') {\r\n                            definition.dialog.__init(definition.dialog);\r\n                        }\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var dialog = definition.dialog;\r\n                            dialog['main'].apply(definition.dialog, arguments);\r\n                            return dialog['show'].apply(definition.dialog);\r\n                        }\r\n                    };\r\n                }\r\n            },\r\n            /**\r\n             * Close all open dialogs.\r\n             *\r\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeAll: function (except) {\r\n                var clone = openDialogs.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.close();\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\r\n             *\r\n             * @param {string} name The dialog name.\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting: function (name, key, value) {\r\n\r\n                if (name === 'notifier') {\r\n                    return notifier.setting(key, value);\r\n                }\r\n\r\n                var dialog = get_dialog(name);\r\n                if (dialog) {\r\n                    return dialog.setting(key, value);\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set: function(name,key,value){\r\n                return this.setting(name, key,value);\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get: function(name, key){\r\n                return this.setting(name, key);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\r\n             * This allows for custom look and feel for various types of notifications.\r\n             *\r\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\r\n             * @param  {String}                 [type='']\t\t\t\tType of log message\r\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            notify: function (message, type, wait, callback) {\r\n                return notifier.create(type, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            message: function (message, wait, callback) {\r\n                return notifier.create(null, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'success'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            success: function (message, wait, callback) {\r\n                return notifier.create('success', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'error'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            error: function (message, wait, callback) {\r\n                return notifier.create('error', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'warning'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            warning: function (message, wait, callback) {\r\n                return notifier.create('warning', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            dismissAll: function () {\r\n                notifier.dismissAll();\r\n            }\r\n        };\r\n    }\r\n    var alertify = new Alertify();\r\n\r\n    /**\r\n    * Alert dialog definition\r\n    *\r\n    * invoked by:\r\n    *\talertify.alert(message);\r\n    *\talertify.alert(title, message);\r\n    *\talertify.alert(message, onok);\r\n    *\talertify.alert(title, message, onok);\r\n     */\r\n    alertify.dialog('alert', function () {\r\n        return {\r\n            main: function (_title, _message, _onok) {\r\n                var title, message, onok;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    if (typeof _message === 'function') {\r\n                        message = _title;\r\n                        onok = _message;\r\n                    } else {\r\n                        title = _title;\r\n                        message = _message;\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.ok,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                // nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                onok: undefined,\r\n                label: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'label':\r\n                    if (this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue;\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                if (typeof this.get('onok') === 'function') {\r\n                    var returnValue = this.get('onok').call(this, closeEvent);\r\n                    if (typeof returnValue !== 'undefined') {\r\n                        closeEvent.cancel = !returnValue;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Confirm dialog object\r\n     *\r\n     *\talertify.confirm(message);\r\n     *\talertify.confirm(message, onok);\r\n     *\talertify.confirm(message, onok, oncancel);\r\n     *\talertify.confirm(title, message, onok, oncancel);\r\n     */\r\n    alertify.dialog('confirm', function () {\r\n\r\n        var autoConfirm = {\r\n            timer: null,\r\n            index: null,\r\n            text: null,\r\n            duration: null,\r\n            task: function (event, self) {\r\n                if (self.isOpen()) {\r\n                    self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + ' (&#8207;' + autoConfirm.duration + '&#8207;) ';\r\n                    autoConfirm.duration -= 1;\r\n                    if (autoConfirm.duration === -1) {\r\n                        clearAutoConfirm(self);\r\n                        var button = self.__internal.buttons[autoConfirm.index];\r\n                        var closeEvent = createCloseEvent(autoConfirm.index, button);\r\n\r\n                        if (typeof self.callback === 'function') {\r\n                            self.callback.apply(self, [closeEvent]);\r\n                        }\r\n                        //close the dialog.\r\n                        if (closeEvent.close !== false) {\r\n                            self.close();\r\n                        }\r\n                    }\r\n                } else {\r\n                    clearAutoConfirm(self);\r\n                }\r\n            }\r\n        };\r\n\r\n        function clearAutoConfirm(self) {\r\n            if (autoConfirm.timer !== null) {\r\n                clearInterval(autoConfirm.timer);\r\n                autoConfirm.timer = null;\r\n                self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\r\n            }\r\n        }\r\n\r\n        function startAutoConfirm(self, index, duration) {\r\n            clearAutoConfirm(self);\r\n            autoConfirm.duration = duration;\r\n            autoConfirm.index = index;\r\n            autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\r\n            autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\r\n            autoConfirm.task(null, self);\r\n        }\r\n\r\n\r\n        return {\r\n            main: function (_title, _message, _onok, _oncancel) {\r\n                var title, message, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 4:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                //nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: null,\r\n                labels: null,\r\n                onok: null,\r\n                oncancel: null,\r\n                defaultFocus: null,\r\n                reverseButtons: null,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'labels':\r\n                    if ('ok' in newValue && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].text = newValue.ok;\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if ('cancel' in newValue && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].text = newValue.cancel;\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                case 'defaultFocus':\r\n                    this.__internal.focus.element = newValue === 'ok' ? 0 : 1;\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                clearAutoConfirm(this);\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            autoOk: function (duration) {\r\n                startAutoConfirm(this, 0, duration);\r\n                return this;\r\n            },\r\n            autoCancel: function (duration) {\r\n                startAutoConfirm(this, 1, duration);\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Prompt dialog object\r\n     *\r\n     * invoked by:\r\n     *\talertify.prompt(message);\r\n     *\talertify.prompt(message, value);\r\n     *\talertify.prompt(message, value, onok);\r\n     *\talertify.prompt(message, value, onok, oncancel);\r\n     *\talertify.prompt(title, message, value, onok, oncancel);\r\n     */\r\n    alertify.dialog('prompt', function () {\r\n        var input = document.createElement('INPUT');\r\n        var p = document.createElement('P');\r\n        return {\r\n            main: function (_title, _message, _value, _onok, _oncancel) {\r\n                var title, message, value, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    value = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    break;\r\n                case 4:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 5:\r\n                    title = _title;\r\n                    message = _message;\r\n                    value = _value;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('value', value);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: input,\r\n                        select: true\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                input.className = alertify.defaults.theme.input;\r\n                input.setAttribute('type', 'text');\r\n                input.value = this.get('value');\r\n                this.elements.content.appendChild(p);\r\n                this.elements.content.appendChild(input);\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                if (typeof message === 'string') {\r\n                    clearContents(p);\r\n                    p.innerHTML = message;\r\n                } else if (message instanceof window.HTMLElement && p.firstChild !== message) {\r\n                    clearContents(p);\r\n                    p.appendChild(message);\r\n                }\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                labels: undefined,\r\n                onok: undefined,\r\n                oncancel: undefined,\r\n                value: '',\r\n                type:'text',\r\n                reverseButtons: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'value':\r\n                    input.value = newValue;\r\n                    break;\r\n                case 'type':\r\n                    switch (newValue) {\r\n                    case 'text':\r\n                    case 'color':\r\n                    case 'date':\r\n                    case 'datetime-local':\r\n                    case 'email':\r\n                    case 'month':\r\n                    case 'number':\r\n                    case 'password':\r\n                    case 'search':\r\n                    case 'tel':\r\n                    case 'time':\r\n                    case 'week':\r\n                        input.type = newValue;\r\n                        break;\r\n                    default:\r\n                        input.type = 'text';\r\n                        break;\r\n                    }\r\n                    break;\r\n                case 'labels':\r\n                    if (newValue.ok && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if (newValue.cancel && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    this.settings.value = input.value;\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent, this.settings.value);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    if(!closeEvent.cancel){\r\n                        input.value = this.settings.value;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    // CommonJS\r\n    if ( typeof module === 'object' && typeof module.exports === 'object' ) {\r\n        module.exports = alertify;\r\n    // AMD\r\n    } else if ( typeof define === 'function' && define.amd) {\r\n        define( [], function () {\r\n            return alertify;\r\n        } );\r\n    // window\r\n    } else if ( !window.alertify ) {\r\n        window.alertify = alertify;\r\n    }\r\n\r\n} ( typeof window !== 'undefined' ? window : this ) );\r\n","import { __assign } from \"tslib\";\r\nimport m from 'mithril';\r\nimport { Classes } from '../../_shared';\r\nimport { BaseControl } from '../base-control';\r\nvar Switch = /** @class */ (function () {\r\n    function Switch() {\r\n    }\r\n    Switch.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        return m(BaseControl, __assign(__assign({}, attrs), { type: 'checkbox', typeClass: Classes.SWITCH }));\r\n    };\r\n    return Switch;\r\n}());\r\nexport { Switch };\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","export var Classes = {\r\n    // Modifiers\r\n    XS: 'cui-xs',\r\n    SM: 'cui-sm',\r\n    LG: 'cui-lg',\r\n    XL: 'cui-xl',\r\n    PRIMARY: 'cui-primary',\r\n    NEGATIVE: 'cui-negative',\r\n    POSITIVE: 'cui-positive',\r\n    WARNING: 'cui-warning',\r\n    ACTIVE: 'cui-active',\r\n    DISABLED: 'cui-disabled',\r\n    LOADING: 'cui-loading',\r\n    BASIC: 'cui-basic',\r\n    OUTLINED: 'cui-outlined',\r\n    ROUNDED: 'cui-rounded',\r\n    READONLY: 'cui-readonly',\r\n    SELECTED: 'cui-selected',\r\n    INTERACTIVE: 'cui-interactive',\r\n    ELEVATION: 'cui-elevation',\r\n    HIDDEN: 'cui-hidden',\r\n    // Headings\r\n    H1: 'cui-h1',\r\n    H2: 'cui-h2',\r\n    H3: 'cui-h3',\r\n    H4: 'cui-h4',\r\n    H5: 'cui-h5',\r\n    H6: 'cui-h6',\r\n    // Utility\r\n    ALIGN: 'cui-align',\r\n    ALIGN_RIGHT: 'cui-align-right',\r\n    ALIGN_LEFT: 'cui-align-left',\r\n    FLUID: 'cui-fluid',\r\n    TEXT_MUTED: 'cui-text-muted',\r\n    TEXT_DISABLED: 'cui-text-disabled',\r\n    FOCUS_DISABLED: 'cui-focus-disabled',\r\n    COMPACT: 'cui-compact',\r\n    // Component\r\n    BREADCRUMB: 'cui-breadcrumb',\r\n    BREADCRUMB_ITEM: 'cui-breadcrumb-item',\r\n    BREADCRUMB_SEPERATOR: 'cui-breadcrumb-seperator',\r\n    BUTTON: 'cui-button',\r\n    BUTTON_LABEL: 'cui-button-label',\r\n    BUTTON_SUBLABEL: 'cui-button-sublabel',\r\n    BUTTON_GROUP: 'cui-button-group',\r\n    BUTTON_ICON: 'cui-button-icon',\r\n    CARD: 'cui-card',\r\n    CARD_INTERACTIVE: 'cui-card-interactive',\r\n    CALLOUT: 'cui-callout',\r\n    CALLOUT_HEADER: 'cui-callout-header',\r\n    CALLOUT_CONTENT: 'cui-callout-content',\r\n    CALLOUT_ICON: 'cui-callout-icon',\r\n    CALLOUT_DISMISS_ICON: 'cui-callout-dismiss',\r\n    CHECKBOX: 'cui-checkbox',\r\n    COLLAPSE: 'cui-collapse',\r\n    COLLAPSE_BODY: 'cui-collapse-body',\r\n    CONTEXT_MENU: 'cui-context-menu',\r\n    CONTROL: 'cui-control',\r\n    CONTROL_INDICATOR: 'cui-control-indicator',\r\n    CONTROL_GROUP: 'cui-control-group',\r\n    CUSTOM_SELECT: 'cui-custom-select',\r\n    CUSTOM_SELECT_TRIGGER: 'cui-custom-select-trigger',\r\n    CUSTOM_SELECT_INPUT: 'cui-custom-select-input',\r\n    CUSTOM_SELECT_HIDDEN: 'cui-custom-select-hidden',\r\n    DIALOG: 'cui-dialog',\r\n    DIALOG_CLOSE_BUTTON: 'cui-dialog-close-button',\r\n    DIALOG_CONTENT: 'cui-dialog-content',\r\n    DIALOG_HEADER: 'cui-dialog-header',\r\n    DIALOG_BODY: 'cui-dialog-body',\r\n    DIALOG_FOOTER: 'cui-dialog-footer',\r\n    DRAWER: 'cui-drawer',\r\n    DRAWER_CONTENT: 'cui-drawer-content',\r\n    EMPTY_STATE: 'cui-empty-state',\r\n    EMPTY_STATE_ICON: 'cui-empty-state-icon',\r\n    EMPTY_STATE_CONTENT: 'cui-empty-state-content',\r\n    EMPTY_STATE_HEADER: 'cui-empty-state-header',\r\n    EMPTY_STATE_FILL: 'cui-empty-state-fill',\r\n    FORM: 'cui-form',\r\n    FORM_GROUP: 'cui-form-group',\r\n    FORM_LABEL: 'cui-form-label',\r\n    GRID: 'cui-grid',\r\n    COL: 'cui-col',\r\n    INPUT_FILE: 'cui-input-file',\r\n    INPUT_FILE_CONTENT: 'cui-input-file-content',\r\n    INPUT_FILE_TEXT: 'cui-input-file-text',\r\n    INPUT_FILE_BUTTON: 'cui-input-file-button',\r\n    ICON: 'cui-icon',\r\n    ICON_ACTION: 'cui-icon-action',\r\n    INPUT: 'cui-input',\r\n    INPUT_GROUP: 'cui-input-group',\r\n    INPUT_POPOVER: 'cui-input-popover',\r\n    INPUT_POPOVER_CONTENT: 'cui-input-popover-content',\r\n    INPUT_SELECT: 'cui-input-select',\r\n    LIST: 'cui-list',\r\n    LIST_ITEM: 'cui-list-item',\r\n    LIST_ITEM_LABEL: 'cui-list-item-label',\r\n    LIST_ITEM_CONTENT_LEFT: 'cui-list-item-content-left',\r\n    LIST_ITEM_CONTENT_RIGHT: 'cui-list-item-content-right',\r\n    MENU: 'cui-menu',\r\n    MENU_ITEM: 'cui-menu-item',\r\n    MENU_DIVIDER: 'cui-menu-divider',\r\n    MENU_HEADING: 'cui-menu-heading',\r\n    OVERLAY: 'cui-overlay',\r\n    OVERLAY_CONTENT: 'cui-overlay-content',\r\n    OVERLAY_BACKDROP: 'cui-overlay-backdrop',\r\n    OVERLAY_OPEN: 'cui-overlay-open',\r\n    OVERLAY_INLINE: 'cui-overlay-inline',\r\n    OVERLAY_SCROLL_CONTAINER: 'cui-overlay-scroll-container',\r\n    POPOVER: 'cui-popover',\r\n    POPOVER_OPEN: 'cui-popover-open',\r\n    POPOVER_CONTENT: 'cui-popover-content',\r\n    POPOVER_ARROW: 'cui-popover-arrow',\r\n    POPOVER_TRIGGER_ACTIVE: 'cui-popover-trigger-active',\r\n    POPOVER_BACKDROP: 'cui-popover-backdrop',\r\n    POPOVER_DISSMISS: 'cui-popover-dismiss',\r\n    POPOVER_MENU: 'cui-popover-menu',\r\n    PORTAL: 'cui-portal',\r\n    QUERY_LIST: 'cui-query-list',\r\n    QUERY_LIST_CHECKMARK: 'cui-query-list-checkmark',\r\n    QUERY_LIST_EMPTY: 'cui-query-list-empty',\r\n    QUERY_LIST_INITIAL: 'cui-query-list-initial',\r\n    QUERY_LIST_MESSAGE: 'cui-query-list-message',\r\n    RADIO: 'cui-radio',\r\n    RADIO_GROUP: 'cui-radio-group',\r\n    SELECT: 'cui-select',\r\n    SELECT_ARROW: 'cui-select-arrow',\r\n    SELECT_LIST: 'cui-select-list',\r\n    SPINNER: 'cui-spinner',\r\n    SPINNER_CONTENT: 'cui-spinner-content',\r\n    SPINNER_ICON: 'cui-spinner-icon',\r\n    SPINNER_MESSAGE: 'cui-spinner-message',\r\n    SPINNER_FILL: 'cui-spinner-fill',\r\n    SPINNER_ACTIVE: 'cui-spinner-active',\r\n    SPINNER_BG: 'cui-spinner-bg',\r\n    SWITCH: 'cui-switch',\r\n    TABLE: 'cui-table',\r\n    TABLE_BORDERED: 'cui-table-bordered',\r\n    TABLE_STRIPED: 'cui-table-striped',\r\n    TABLE_INTERACTIVE: 'cui-table-interactive',\r\n    TAG: 'cui-tag',\r\n    TAG_REMOVABLE: 'cui-tag-removable',\r\n    TAG_INPUT: 'cui-tag-input',\r\n    TAG_INPUT_VALUES: 'cui-tag-input-values',\r\n    TABS: 'cui-tabs',\r\n    TABS_BORDERED: 'cui-tabs-bordered',\r\n    TABS_ITEM: 'cui-tabs-item',\r\n    TEXT_AREA: 'cui-text-area',\r\n    TOAST: 'cui-toast',\r\n    TOAST_MESSAGE: 'cui-toast-message',\r\n    TOASTER: 'cui-toaster',\r\n    TOASTER_INLINE: 'cui-toaster-inline',\r\n    TOOLTIP: 'cui-tooltip',\r\n    TREE: 'cui-tree',\r\n    TREE_NODE: 'cui-tree-node',\r\n    TREE_NODE_LIST: 'cui-tree-node-list',\r\n    TREE_NODE_CONTENT: 'cui-tree-node-content',\r\n    TREE_NODE_CARET: 'cui-tree-node-caret',\r\n    TREE_NODE_CARET_OPEN: 'cui-tree-node-caret-open',\r\n    TREE_NODE_CARET_CLOSED: 'cui-tree-node-caret-closed',\r\n    TREE_NODE_CARET_NONE: 'cui-tree-node-caret-none',\r\n    TREE_NODE_SELECTED: 'cui-tree-node-selected',\r\n    TREE_NODE_EXPANDED: 'cui-tree-node-expanded',\r\n    TREE_NODE_LABEL: 'cui-tree-node-label',\r\n    TREE_NODE_CONTENT_RIGHT: 'cui-tree-node-content-right',\r\n    TREE_NODE_CONTENT_LEFT: 'cui-tree-node-content-left'\r\n};\r\n","import { __assign, __rest } from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport m from 'mithril';\r\nimport { Classes } from '../../_shared';\r\nvar BaseControl = /** @class */ (function () {\r\n    function BaseControl() {\r\n    }\r\n    BaseControl.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var className = attrs.class, _b = attrs.containerAttrs, containerAttrs = _b === void 0 ? {} : _b, intent = attrs.intent, label = attrs.label, size = attrs.size, type = attrs.type, typeClass = attrs.typeClass, style = attrs.style, htmlAttrs = __rest(attrs, [\"class\", \"containerAttrs\", \"intent\", \"label\", \"size\", \"type\", \"typeClass\", \"style\"]);\r\n        var classes = classnames(Classes.CONTROL, typeClass, htmlAttrs.disabled && Classes.DISABLED, intent && \"cui-\".concat(intent), size && \"cui-\".concat(size), className);\r\n        var content = [\r\n            m('input', __assign(__assign({}, htmlAttrs), { disabled: htmlAttrs.disabled || htmlAttrs.readonly, type: type })),\r\n            m(\"span.\".concat(Classes.CONTROL_INDICATOR)),\r\n            label\r\n        ];\r\n        return m('label', __assign({ class: classes, style: style }, containerAttrs), content);\r\n    };\r\n    return BaseControl;\r\n}());\r\nexport { BaseControl };\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = new __parcel__URL__(\"logo.4474c526.svg\").toString();","import m from 'mithril'\nimport { Chess } from 'chess.js'\nimport { NOTE_ON, CONTROL_CHANGE, COLORS } from './Launchpad'\nimport { streamJson } from './ndjson'\nimport { LICHESS_API_URL } from './config'\nimport { calculateInfluence, fenForOtherSide } from './ChessMaths'\nimport { toDests, toColor, playOtherSide, setBoard } from './utils'\n\n// let GREEN = [ 123, 23, 64, 22, 76, 87, 21, 122 ]\n// let RED = [121, 7, 106, 6, 120, 5]\n// let BLUE = [47, 46, 45, ]\nexport const INFLUENCE_COLORS = [5, 121, 9, 11, 15, 1, 23, 37, 45, 49, 69]\n\nexport const LaunchGame = (state, actions) => ({\n  lightBoard: (animate = false) => {\n    actions.clearAnimations()\n    if (state.chess) {\n      if (state.influence) {\n        actions.showInfluence()\n      } else {\n        actions.lightGame(animate)\n      }\n    } else {\n      if (state.grid) actions.grid()\n    }\n    actions.send(CONTROL_CHANGE, [\n      state.top[0],\n      Math.min(state.history() + 1, 3),\n    ])\n    actions.send(CONTROL_CHANGE, [state.top[1], Math.min(state.history(), 3)])\n    actions.send(CONTROL_CHANGE, [state.top[2], 67])\n    actions.send(CONTROL_CHANGE, [\n      state.top[4],\n      state.invert() ? COLORS.brown : 3,\n    ])\n    actions.send(CONTROL_CHANGE, [\n      state.top[5],\n      state.grid ? COLORS.white : COLORS.dim_white,\n    ])\n    actions.send(CONTROL_CHANGE, [state.top[6], state.pieces ? COLORS.q : 82])\n    // actions.send(CONTROL_CHANGE, [state.top[7], state.influence ? 5 : 7])\n    actions.send(CONTROL_CHANGE, [\n      state.top[state.top.length - 1],\n      state.chess.turn() == 'w' ? 3 : COLORS.brown,\n    ])\n  },\n  togglePieces: (mode = null) => {\n    state.pieces = mode ? mode : !state.pieces\n    state.ground.set({ drawable: { visible: false } })\n    actions.lightBoard()\n  },\n  flipBoard: () => {\n    state.invert(!state.invert())\n    actions.lightBoard()\n    // if (ground)\n    state.ground.toggleOrientation()\n    // m.redraw()\n  },\n  showInfluence: () => {\n    let fen = state.chess.fen()\n    let defenders = calculateInfluence(fen)\n    let attackers = calculateInfluence(fenForOtherSide(fen))\n\n    console.log(fen, defenders, attackers)\n    let heatMap = defenders.map((s, i) => {\n      return s - attackers[i]\n    })\n    console.log('heatmap', heatMap)\n    let colorMap = heatMap.map((v, i) => {\n      let c = Math.min(v + 5, 9)\n      return INFLUENCE_COLORS[state.chess.turn() == state.color ? c : 10 - c]\n    })\n    if (state.invert() != (state.color == 'b')) {\n      colorMap.reverse()\n    }\n    // reverse ranks\n    colorMap = colorMap.map((s, i) => {\n      return colorMap[(7 - Math.floor(i / 8)) * 8 + (i % 8)]\n    })\n    console.log('colorMap', colorMap)\n    actions.lightMatrix(colorMap)\n  },\n  newGame: () => {\n    state.chess = new Chess()\n    setBoard(state.chess, state.ground)\n  },\n  onInput: message => {\n    message = message.data\n    console.log('input', message)\n    if (message[2]) {\n      const s = actions.launchToN(message[1])\n      if (s === null) {\n        return\n      }\n      const square = actions.nToSquare(s)\n      console.log('touched', s)\n      const legal_moves = state.chess.moves({ verbose: true })\n      console.log('legal moves', legal_moves)\n      if (\n        state.selectedSquare &&\n        actions.squareToN(state.selectedSquare) == s\n      ) {\n        // clear selected piece\n        actions.lightBoard()\n        state.selectedSquare = null\n        state.ground.selectSquare(null)\n      } else if (\n        state.chess.get(square) &&\n        state.chess.get(square).color == state.chess.turn()\n      ) {\n        if (state.selectedSquare) {\n          // clear other selected piece\n          actions.lightBoard()\n          state.selectedSquare = null\n          state.ground.selectSquare(null)\n        }\n        console.log('checking', square, state.chess.get(square))\n        if (\n          state.chess.get(square) &&\n          state.chess.get(square).color == state.chess.turn()\n        ) {\n          // select piece\n          state.selectedSquare = square\n          state.selectedPiece = state.chess.get(square)\n          state.ground.selectSquare(state.selectedSquare)\n          actions.highlightAvailableMoves(state.selectedSquare)\n        }\n      } else if (\n        state.chess.history().length &&\n        s == actions.squareToN(state.chess.history({ verbose: true }).pop().to)\n      ) {\n        console.log('clear animations and resend current position')\n        actions.lightBoard()\n      }\n      if (state.selectedSquare) {\n        // move selected to square\n\n        const move = { from: state.selectedSquare, to: square }\n\n        console.log('checking if ', move, ' is legal')\n        const squares = state.chess\n          .moves({ square: state.selectedSquare, verbose: true })\n          .map(legal_move => legal_move.to)\n        if (squares.includes(move.to)) {\n          actions.makeMove(move)\n        } else {\n          console.log('illegal move', move)\n        }\n      }\n    }\n  },\n  onCC: message => {\n    message = message.data\n    if (message[2]) {\n      console.log('cc', message)\n      switch (message[1]) {\n        case state.top[0]: {\n          // up arrow\n          // increase history\n          actions.incrementHistory()\n          break\n        }\n        case state.top[1]: {\n          // down arrow\n          // decreace history\n          actions.decrementHistory()\n          break\n        }\n        case state.top[2]: {\n          // left arrow\n          // undo move\n          actions.takeback()\n          break\n        }\n        case state.top[4]: {\n          // Session button\n          // flip board\n          actions.flipBoard()\n          m.redraw()\n          break\n        }\n        case state.top[5]: {\n          // Custom button\n          // Toggle grid\n          state.grid = !state.grid\n          actions.lightBoard()\n          break\n        }\n        case state.top[6]: {\n          // Note button\n          // Toggle pieces\n          state.pieces = !state.pieces\n          actions.lightBoard()\n          break\n        }\n        case state.top[7]: {\n          // Custom Midi\n          // toggle square influence / game\n          actions.toggleInfluence()\n          break\n        }\n      }\n    }\n  },\n  toggleInfluence: () => {\n    state.influence = !state.influence\n    actions.lightBoard()\n  },\n  streamGame: () => {\n    if (!state.loggedIn) {\n      m.route.set('/login')\n    }\n    console.log('streaming game', m.route.param('id'))\n\n    state.auth.openStream('/api/board/game/stream/' + m.route.param('id'), {}, v => {\n      console.log('calling back', v)\n      if (v.type == 'gameFull') {\n        state.game = v\n        // TODO: change to Stream()\n        // m.redraw()\n        console.log('loading game', v.state.moves)\n        console.log(\n          'loaded?',\n          state.chess.loadPgn(v.state.moves, { sloppy: true })\n        )\n        if (v.black.id == state.user.profile.id && !state.invert()) {\n          // if playing black, and not already inverted, flip board\n          actions.flipBoard()\n          state.color = 'b'\n        } else {\n          state.color = 'w'\n        }\n      } else if (v.type == 'gameState') {\n        console.log('move played', v.moves)\n        console.log(\n          'loaded?',\n          state.chess.loadPgn(v.moves, { sloppy: true })\n        )\n      }\n      let turn = state.chess.turn() == 'w' ? 'white' : 'black'\n      console.log('updated. turn is', turn)\n\n      setBoard(state.chess, state.ground)\n\n      actions.lightBoard(true)\n    }\n    )\n  },\n  newGame: () => {\n    state.chess = new Chess()\n    console.log('new game', state.chess.ascii())\n    setBoard(state.chess, state.ground)\n    state.ground.selectSquare(null)\n    actions.lightBoard()\n  },\n  makeMove: move => {\n    state.ground.move(move.from, move.to)\n    state.ground.selectSquare(null)\n  },\n  onmove: (orig, dest) => {\n    let move = { from: orig, to: dest }\n    let piece = state.chess.get(move.from)\n    if (\n      piece.type == 'p' &&\n      ((piece.color == 'w' && move.to.charAt(1) == 8) ||\n        (piece.color == 'b' && move.to.charAt(1) == 1))\n    ) {\n      console.log('promotion! Auto promote to Queen')\n      move.promotion = 'q'\n    }\n    state.chess.move(move)\n    console.log('moved', move, piece, state.chess.ascii())\n    state.ground.set({ fen: state.chess.fen() })\n\n    actions.lightBoard(true)\n    playOtherSide(state.chess, state.ground)(orig, dest)\n  },\n  afterInit: () => {\n    actions.initMidi(actions.onInput, actions.onCC, () => {\n      actions.lightBoard()\n    })\n  },\n  takeback: () => {\n    state.chess.undo()\n    state.selectedPiece, (state.selectedSquare = null)\n    state.ground.set({ fen: state.chess.fen() })\n    actions.lightBoard()\n    setBoard(state.chess, state.ground)\n  },\n})\n","/**\n * @license\n * Copyright (c) 2023, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\nexport const WHITE = 'w';\nexport const BLACK = 'b';\nexport const PAWN = 'p';\nexport const KNIGHT = 'n';\nexport const BISHOP = 'b';\nexport const ROOK = 'r';\nexport const QUEEN = 'q';\nexport const KING = 'k';\nexport const DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\nconst EMPTY = -1;\nconst FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q',\n};\n// prettier-ignore\nexport const SQUARES = [\n    'a8', 'b8', 'c8', 'd8', 'e8', 'f8', 'g8', 'h8',\n    'a7', 'b7', 'c7', 'd7', 'e7', 'f7', 'g7', 'h7',\n    'a6', 'b6', 'c6', 'd6', 'e6', 'f6', 'g6', 'h6',\n    'a5', 'b5', 'c5', 'd5', 'e5', 'f5', 'g5', 'h5',\n    'a4', 'b4', 'c4', 'd4', 'e4', 'f4', 'g4', 'h4',\n    'a3', 'b3', 'c3', 'd3', 'e3', 'f3', 'g3', 'h3',\n    'a2', 'b2', 'c2', 'd2', 'e2', 'f2', 'g2', 'h2',\n    'a1', 'b1', 'c1', 'd1', 'e1', 'f1', 'g1', 'h1'\n];\nconst BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64,\n};\n/*\n * NOTES ABOUT 0x88 MOVE GENERATION ALGORITHM\n * ----------------------------------------------------------------------------\n * From https://github.com/jhlywa/chess.js/issues/230\n *\n * A lot of people are confused when they first see the internal representation\n * of chess.js. It uses the 0x88 Move Generation Algorithm which internally\n * stores the board as an 8x16 array. This is purely for efficiency but has a\n * couple of interesting benefits:\n *\n * 1. 0x88 offers a very inexpensive \"off the board\" check. Bitwise AND (&) any\n *    square with 0x88, if the result is non-zero then the square is off the\n *    board. For example, assuming a knight square A8 (0 in 0x88 notation),\n *    there are 8 possible directions in which the knight can move. These\n *    directions are relative to the 8x16 board and are stored in the\n *    PIECE_OFFSETS map. One possible move is A8 - 18 (up one square, and two\n *    squares to the left - which is off the board). 0 - 18 = -18 & 0x88 = 0x88\n *    (because of two-complement representation of -18). The non-zero result\n *    means the square is off the board and the move is illegal. Take the\n *    opposite move (from A8 to C7), 0 + 18 = 18 & 0x88 = 0. A result of zero\n *    means the square is on the board.\n *\n * 2. The relative distance (or difference) between two squares on a 8x16 board\n *    is unique and can be used to inexpensively determine if a piece on a\n *    square can attack any other arbitrary square. For example, let's see if a\n *    pawn on E7 can attack E2. The difference between E7 (20) - E2 (100) is\n *    -80. We add 119 to make the ATTACKS array index non-negative (because the\n *    worst case difference is A8 - H1 = -119). The ATTACKS array contains a\n *    bitmask of pieces that can attack from that distance and direction.\n *    ATTACKS[-80 + 119=39] gives us 24 or 0b11000 in binary. Look at the\n *    PIECE_MASKS map to determine the mask for a given piece type. In our pawn\n *    example, we would check to see if 24 & 0x1 is non-zero, which it is\n *    not. So, naturally, a pawn on E7 can't attack a piece on E2. However, a\n *    rook can since 24 & 0x8 is non-zero. The only thing left to check is that\n *    there are no blocking pieces between E7 and E2. That's where the RAYS\n *    array comes in. It provides an offset (in this case 16) to add to E7 (20)\n *    to check for blocking pieces. E7 (20) + 16 = E6 (36) + 16 = E5 (52) etc.\n */\n// prettier-ignore\n// eslint-disable-next-line\nconst Ox88 = {\n    a8: 0, b8: 1, c8: 2, d8: 3, e8: 4, f8: 5, g8: 6, h8: 7,\n    a7: 16, b7: 17, c7: 18, d7: 19, e7: 20, f7: 21, g7: 22, h7: 23,\n    a6: 32, b6: 33, c6: 34, d6: 35, e6: 36, f6: 37, g6: 38, h6: 39,\n    a5: 48, b5: 49, c5: 50, d5: 51, e5: 52, f5: 53, g5: 54, h5: 55,\n    a4: 64, b4: 65, c4: 66, d4: 67, e4: 68, f4: 69, g4: 70, h4: 71,\n    a3: 80, b3: 81, c3: 82, d3: 83, e3: 84, f3: 85, g3: 86, h3: 87,\n    a2: 96, b2: 97, c2: 98, d2: 99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n};\nconst PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15],\n};\nconst PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1],\n};\n// prettier-ignore\nconst ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0,\n    0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n    0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n    0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n    0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0,\n    0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n    0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n    0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n    0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20\n];\n// prettier-ignore\nconst RAYS = [\n    17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0,\n    0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0,\n    0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0,\n    0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0,\n    0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0,\n    0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0,\n    0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0,\n    0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0,\n    0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0,\n    -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17\n];\nconst PIECE_MASKS = { p: 0x1, n: 0x2, b: 0x4, r: 0x8, q: 0x10, k: 0x20 };\nconst SYMBOLS = 'pnbrqkPNBRQK';\nconst PROMOTIONS = [KNIGHT, BISHOP, ROOK, QUEEN];\nconst RANK_1 = 7;\nconst RANK_2 = 6;\n/*\n * const RANK_3 = 5\n * const RANK_4 = 4\n * const RANK_5 = 3\n * const RANK_6 = 2\n */\nconst RANK_7 = 1;\nconst RANK_8 = 0;\nconst SIDES = {\n    [KING]: BITS.KSIDE_CASTLE,\n    [QUEEN]: BITS.QSIDE_CASTLE\n};\nconst ROOKS = {\n    w: [\n        { square: Ox88.a1, flag: BITS.QSIDE_CASTLE },\n        { square: Ox88.h1, flag: BITS.KSIDE_CASTLE },\n    ],\n    b: [\n        { square: Ox88.a8, flag: BITS.QSIDE_CASTLE },\n        { square: Ox88.h8, flag: BITS.KSIDE_CASTLE },\n    ],\n};\nconst SECOND_RANK = { b: RANK_7, w: RANK_2 };\nconst TERMINATION_MARKERS = ['1-0', '0-1', '1/2-1/2', '*'];\n// Extracts the zero-based rank of an 0x88 square.\nfunction rank(square) {\n    return square >> 4;\n}\n// Extracts the zero-based file of an 0x88 square.\nfunction file(square) {\n    return square & 0xf;\n}\nfunction isDigit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n}\n// Converts a 0x88 square to algebraic notation.\nfunction algebraic(square) {\n    const f = file(square);\n    const r = rank(square);\n    return ('abcdefgh'.substring(f, f + 1) +\n        '87654321'.substring(r, r + 1));\n}\nfunction swapColor(color) {\n    return color === WHITE ? BLACK : WHITE;\n}\nexport function validateFen(fen) {\n    // 1st criterion: 6 space-seperated fields?\n    const tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: must contain six space-delimited fields',\n        };\n    }\n    // 2nd criterion: move number field is a integer value > 0?\n    const moveNumber = parseInt(tokens[5], 10);\n    if (isNaN(moveNumber) || moveNumber <= 0) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: move number must be a positive integer',\n        };\n    }\n    // 3rd criterion: half move counter is an integer >= 0?\n    const halfMoves = parseInt(tokens[4], 10);\n    if (isNaN(halfMoves) || halfMoves < 0) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: half move counter number must be a non-negative integer',\n        };\n    }\n    // 4th criterion: 4th field is a valid e.p.-string?\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n        return { ok: false, error: 'Invalid FEN: en-passant square is invalid' };\n    }\n    // 5th criterion: 3th field is a valid castle-string?\n    if (/[^kKqQ-]/.test(tokens[2])) {\n        return { ok: false, error: 'Invalid FEN: castling availability is invalid' };\n    }\n    // 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)?\n    if (!/^(w|b)$/.test(tokens[1])) {\n        return { ok: false, error: 'Invalid FEN: side-to-move is invalid' };\n    }\n    // 7th criterion: 1st field contains 8 rows?\n    const rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n        return {\n            ok: false,\n            error: \"Invalid FEN: piece data does not contain 8 '/'-delimited rows\",\n        };\n    }\n    // 8th criterion: every row is valid?\n    for (let i = 0; i < rows.length; i++) {\n        // check for right sum of fields AND not two numbers in succession\n        let sumFields = 0;\n        let previousWasNumber = false;\n        for (let k = 0; k < rows[i].length; k++) {\n            if (isDigit(rows[i][k])) {\n                if (previousWasNumber) {\n                    return {\n                        ok: false,\n                        error: 'Invalid FEN: piece data is invalid (consecutive number)',\n                    };\n                }\n                sumFields += parseInt(rows[i][k], 10);\n                previousWasNumber = true;\n            }\n            else {\n                if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n                    return {\n                        ok: false,\n                        error: 'Invalid FEN: piece data is invalid (invalid piece)',\n                    };\n                }\n                sumFields += 1;\n                previousWasNumber = false;\n            }\n        }\n        if (sumFields !== 8) {\n            return {\n                ok: false,\n                error: 'Invalid FEN: piece data is invalid (too many squares in rank)',\n            };\n        }\n    }\n    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n        return { ok: false, error: 'Invalid FEN: illegal en-passant square' };\n    }\n    const kings = [\n        { color: 'white', regex: /K/g },\n        { color: 'black', regex: /k/g },\n    ];\n    for (const { color, regex } of kings) {\n        if (!regex.test(tokens[0])) {\n            return { ok: false, error: `Invalid FEN: missing ${color} king` };\n        }\n        if ((tokens[0].match(regex) || []).length > 1) {\n            return { ok: false, error: `Invalid FEN: too many ${color} kings` };\n        }\n    }\n    return { ok: true };\n}\n// this function is used to uniquely identify ambiguous moves\nfunction getDisambiguator(move, moves) {\n    const from = move.from;\n    const to = move.to;\n    const piece = move.piece;\n    let ambiguities = 0;\n    let sameRank = 0;\n    let sameFile = 0;\n    for (let i = 0, len = moves.length; i < len; i++) {\n        const ambigFrom = moves[i].from;\n        const ambigTo = moves[i].to;\n        const ambigPiece = moves[i].piece;\n        /*\n         * if a move of the same piece type ends on the same to square, we'll need\n         * to add a disambiguator to the algebraic notation\n         */\n        if (piece === ambigPiece && from !== ambigFrom && to === ambigTo) {\n            ambiguities++;\n            if (rank(from) === rank(ambigFrom)) {\n                sameRank++;\n            }\n            if (file(from) === file(ambigFrom)) {\n                sameFile++;\n            }\n        }\n    }\n    if (ambiguities > 0) {\n        if (sameRank > 0 && sameFile > 0) {\n            /*\n             * if there exists a similar moving piece on the same rank and file as\n             * the move in question, use the square as the disambiguator\n             */\n            return algebraic(from);\n        }\n        else if (sameFile > 0) {\n            /*\n             * if the moving piece rests on the same file, use the rank symbol as the\n             * disambiguator\n             */\n            return algebraic(from).charAt(1);\n        }\n        else {\n            // else use the file symbol\n            return algebraic(from).charAt(0);\n        }\n    }\n    return '';\n}\nfunction addMove(moves, color, from, to, piece, captured = undefined, flags = BITS.NORMAL) {\n    const r = rank(to);\n    if (piece === PAWN && (r === RANK_1 || r === RANK_8)) {\n        for (let i = 0; i < PROMOTIONS.length; i++) {\n            const promotion = PROMOTIONS[i];\n            moves.push({\n                color,\n                from,\n                to,\n                piece,\n                captured,\n                promotion,\n                flags: flags | BITS.PROMOTION,\n            });\n        }\n    }\n    else {\n        moves.push({\n            color,\n            from,\n            to,\n            piece,\n            captured,\n            flags,\n        });\n    }\n}\nfunction inferPieceType(san) {\n    let pieceType = san.charAt(0);\n    if (pieceType >= 'a' && pieceType <= 'h') {\n        const matches = san.match(/[a-h]\\d.*[a-h]\\d/);\n        if (matches) {\n            return undefined;\n        }\n        return PAWN;\n    }\n    pieceType = pieceType.toLowerCase();\n    if (pieceType === 'o') {\n        return KING;\n    }\n    return pieceType;\n}\n// parses all of the decorators out of a SAN string\nfunction strippedSan(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\n}\nexport class Chess {\n    _board = new Array(128);\n    _turn = WHITE;\n    _header = {};\n    _kings = { w: EMPTY, b: EMPTY };\n    _epSquare = -1;\n    _halfMoves = 0;\n    _moveNumber = 0;\n    _history = [];\n    _comments = {};\n    _castling = { w: 0, b: 0 };\n    constructor(fen = DEFAULT_POSITION) {\n        this.load(fen);\n    }\n    clear(keepHeaders = false) {\n        this._board = new Array(128);\n        this._kings = { w: EMPTY, b: EMPTY };\n        this._turn = WHITE;\n        this._castling = { w: 0, b: 0 };\n        this._epSquare = EMPTY;\n        this._halfMoves = 0;\n        this._moveNumber = 1;\n        this._history = [];\n        this._comments = {};\n        this._header = keepHeaders ? this._header : {};\n        this._updateSetup(this.fen());\n    }\n    removeHeader(key) {\n        if (key in this._header) {\n            delete this._header[key];\n        }\n    }\n    load(fen, keepHeaders = false) {\n        let tokens = fen.split(/\\s+/);\n        // append commonly omitted fen tokens\n        if (tokens.length >= 2 && tokens.length < 6) {\n            const adjustments = ['-', '-', '0', '1'];\n            fen = tokens.concat(adjustments.slice(-(6 - tokens.length))).join(' ');\n        }\n        tokens = fen.split(/\\s+/);\n        const { ok, error } = validateFen(fen);\n        if (!ok) {\n            throw new Error(error);\n        }\n        const position = tokens[0];\n        let square = 0;\n        this.clear(keepHeaders);\n        for (let i = 0; i < position.length; i++) {\n            const piece = position.charAt(i);\n            if (piece === '/') {\n                square += 8;\n            }\n            else if (isDigit(piece)) {\n                square += parseInt(piece, 10);\n            }\n            else {\n                const color = piece < 'a' ? WHITE : BLACK;\n                this.put({ type: piece.toLowerCase(), color }, algebraic(square));\n                square++;\n            }\n        }\n        this._turn = tokens[1];\n        if (tokens[2].indexOf('K') > -1) {\n            this._castling.w |= BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('Q') > -1) {\n            this._castling.w |= BITS.QSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('k') > -1) {\n            this._castling.b |= BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('q') > -1) {\n            this._castling.b |= BITS.QSIDE_CASTLE;\n        }\n        this._epSquare = tokens[3] === '-' ? EMPTY : Ox88[tokens[3]];\n        this._halfMoves = parseInt(tokens[4], 10);\n        this._moveNumber = parseInt(tokens[5], 10);\n        this._updateSetup(this.fen());\n    }\n    fen() {\n        let empty = 0;\n        let fen = '';\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            if (this._board[i]) {\n                if (empty > 0) {\n                    fen += empty;\n                    empty = 0;\n                }\n                const { color, type: piece } = this._board[i];\n                fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n            }\n            else {\n                empty++;\n            }\n            if ((i + 1) & 0x88) {\n                if (empty > 0) {\n                    fen += empty;\n                }\n                if (i !== Ox88.h1) {\n                    fen += '/';\n                }\n                empty = 0;\n                i += 8;\n            }\n        }\n        let castling = '';\n        if (this._castling[WHITE] & BITS.KSIDE_CASTLE) {\n            castling += 'K';\n        }\n        if (this._castling[WHITE] & BITS.QSIDE_CASTLE) {\n            castling += 'Q';\n        }\n        if (this._castling[BLACK] & BITS.KSIDE_CASTLE) {\n            castling += 'k';\n        }\n        if (this._castling[BLACK] & BITS.QSIDE_CASTLE) {\n            castling += 'q';\n        }\n        // do we have an empty castling flag?\n        castling = castling || '-';\n        let epSquare = '-';\n        /*\n         * only print the ep square if en passant is a valid move (pawn is present\n         * and ep capture is not pinned)\n         */\n        if (this._epSquare !== EMPTY) {\n            const bigPawnSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n            const squares = [bigPawnSquare + 1, bigPawnSquare - 1];\n            for (const square of squares) {\n                // is the square off the board?\n                if (square & 0x88) {\n                    continue;\n                }\n                const color = this._turn;\n                // is there a pawn that can capture the epSquare?\n                if (this._board[square]?.color === color &&\n                    this._board[square]?.type === PAWN) {\n                    // if the pawn makes an ep capture, does it leave it's king in check?\n                    this._makeMove({\n                        color,\n                        from: square,\n                        to: this._epSquare,\n                        piece: PAWN,\n                        captured: PAWN,\n                        flags: BITS.EP_CAPTURE,\n                    });\n                    const isLegal = !this._isKingAttacked(color);\n                    this._undoMove();\n                    // if ep is legal, break and set the ep square in the FEN output\n                    if (isLegal) {\n                        epSquare = algebraic(this._epSquare);\n                        break;\n                    }\n                }\n            }\n        }\n        return [\n            fen,\n            this._turn,\n            castling,\n            epSquare,\n            this._halfMoves,\n            this._moveNumber,\n        ].join(' ');\n    }\n    /*\n     * Called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object. If the FEN\n     * is equal to the default position, the SetUp and FEN are deleted the setup\n     * is only updated if history.length is zero, ie moves haven't been made.\n     */\n    _updateSetup(fen) {\n        if (this._history.length > 0)\n            return;\n        if (fen !== DEFAULT_POSITION) {\n            this._header['SetUp'] = '1';\n            this._header['FEN'] = fen;\n        }\n        else {\n            delete this._header['SetUp'];\n            delete this._header['FEN'];\n        }\n    }\n    reset() {\n        this.load(DEFAULT_POSITION);\n    }\n    get(square) {\n        return this._board[Ox88[square]] || false;\n    }\n    put({ type, color }, square) {\n        // check for piece\n        if (SYMBOLS.indexOf(type.toLowerCase()) === -1) {\n            return false;\n        }\n        // check for valid square\n        if (!(square in Ox88)) {\n            return false;\n        }\n        const sq = Ox88[square];\n        // don't let the user place more than one king\n        if (type == KING &&\n            !(this._kings[color] == EMPTY || this._kings[color] == sq)) {\n            return false;\n        }\n        this._board[sq] = { type: type, color: color };\n        if (type === KING) {\n            this._kings[color] = sq;\n        }\n        this._updateCastlingRights();\n        this._updateEnPassantSquare();\n        this._updateSetup(this.fen());\n        return true;\n    }\n    remove(square) {\n        const piece = this.get(square);\n        delete this._board[Ox88[square]];\n        if (piece && piece.type === KING) {\n            this._kings[piece.color] = EMPTY;\n        }\n        this._updateCastlingRights();\n        this._updateEnPassantSquare();\n        this._updateSetup(this.fen());\n        return piece;\n    }\n    _updateCastlingRights() {\n        const whiteKingInPlace = (this._board[Ox88.e1]?.type === KING && this._board[Ox88.e1]?.color === WHITE);\n        const blackKingInPlace = (this._board[Ox88.e8]?.type === KING && this._board[Ox88.e8]?.color === BLACK);\n        if (!whiteKingInPlace || this._board[Ox88.a1]?.type !== ROOK || this._board[Ox88.a1]?.color !== WHITE) {\n            this._castling.w &= ~BITS.QSIDE_CASTLE;\n        }\n        if (!whiteKingInPlace || this._board[Ox88.h1]?.type !== ROOK || this._board[Ox88.h1]?.color !== WHITE) {\n            this._castling.w &= ~BITS.KSIDE_CASTLE;\n        }\n        if (!blackKingInPlace || this._board[Ox88.a8]?.type !== ROOK || this._board[Ox88.a8]?.color !== BLACK) {\n            this._castling.b &= ~BITS.QSIDE_CASTLE;\n        }\n        if (!blackKingInPlace || this._board[Ox88.h8]?.type !== ROOK || this._board[Ox88.h8]?.color !== BLACK) {\n            this._castling.b &= ~BITS.KSIDE_CASTLE;\n        }\n    }\n    _updateEnPassantSquare() {\n        if (this._epSquare === EMPTY) {\n            return;\n        }\n        const startSquare = this._epSquare + (this._turn === WHITE ? -16 : 16);\n        const currentSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n        const attackers = [currentSquare + 1, currentSquare - 1];\n        if (this._board[startSquare] !== null ||\n            this._board[this._epSquare] !== null ||\n            this._board[currentSquare]?.color !== swapColor(this._turn) ||\n            this._board[currentSquare]?.type !== PAWN) {\n            this._epSquare = EMPTY;\n            return;\n        }\n        const canCapture = (square) => !(square & 0x88) &&\n            this._board[square]?.color === this._turn &&\n            this._board[square]?.type === PAWN;\n        if (!attackers.some(canCapture)) {\n            this._epSquare = EMPTY;\n        }\n    }\n    _attacked(color, square) {\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            // did we run off the end of the board\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            // if empty square or wrong color\n            if (this._board[i] === undefined || this._board[i].color !== color) {\n                continue;\n            }\n            const piece = this._board[i];\n            const difference = i - square;\n            // skip - to/from square are the same\n            if (difference === 0) {\n                continue;\n            }\n            const index = difference + 119;\n            if (ATTACKS[index] & PIECE_MASKS[piece.type]) {\n                if (piece.type === PAWN) {\n                    if (difference > 0) {\n                        if (piece.color === WHITE)\n                            return true;\n                    }\n                    else {\n                        if (piece.color === BLACK)\n                            return true;\n                    }\n                    continue;\n                }\n                // if the piece is a knight or a king\n                if (piece.type === 'n' || piece.type === 'k')\n                    return true;\n                const offset = RAYS[index];\n                let j = i + offset;\n                let blocked = false;\n                while (j !== square) {\n                    if (this._board[j] != null) {\n                        blocked = true;\n                        break;\n                    }\n                    j += offset;\n                }\n                if (!blocked)\n                    return true;\n            }\n        }\n        return false;\n    }\n    _isKingAttacked(color) {\n        const square = this._kings[color];\n        return square === -1 ? false : this._attacked(swapColor(color), square);\n    }\n    isAttacked(square, attackedBy) {\n        return this._attacked(attackedBy, Ox88[square]);\n    }\n    isCheck() {\n        return this._isKingAttacked(this._turn);\n    }\n    inCheck() {\n        return this.isCheck();\n    }\n    isCheckmate() {\n        return this.isCheck() && this._moves().length === 0;\n    }\n    isStalemate() {\n        return !this.isCheck() && this._moves().length === 0;\n    }\n    isInsufficientMaterial() {\n        /*\n         * k.b. vs k.b. (of opposite colors) with mate in 1:\n         * 8/8/8/8/1b6/8/B1k5/K7 b - - 0 1\n         *\n         * k.b. vs k.n. with mate in 1:\n         * 8/8/8/8/1n6/8/B7/K1k5 b - - 2 1\n         */\n        const pieces = {\n            b: 0,\n            n: 0,\n            r: 0,\n            q: 0,\n            k: 0,\n            p: 0,\n        };\n        const bishops = [];\n        let numPieces = 0;\n        let squareColor = 0;\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            squareColor = (squareColor + 1) % 2;\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            const piece = this._board[i];\n            if (piece) {\n                pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1;\n                if (piece.type === BISHOP) {\n                    bishops.push(squareColor);\n                }\n                numPieces++;\n            }\n        }\n        // k vs. k\n        if (numPieces === 2) {\n            return true;\n        }\n        else if (\n        // k vs. kn .... or .... k vs. kb\n        numPieces === 3 &&\n            (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)) {\n            return true;\n        }\n        else if (numPieces === pieces[BISHOP] + 2) {\n            // kb vs. kb where any number of bishops are all on the same color\n            let sum = 0;\n            const len = bishops.length;\n            for (let i = 0; i < len; i++) {\n                sum += bishops[i];\n            }\n            if (sum === 0 || sum === len) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isThreefoldRepetition() {\n        const moves = [];\n        const positions = {};\n        let repetition = false;\n        while (true) {\n            const move = this._undoMove();\n            if (!move)\n                break;\n            moves.push(move);\n        }\n        while (true) {\n            /*\n             * remove the last two fields in the FEN string, they're not needed when\n             * checking for draw by rep\n             */\n            const fen = this.fen().split(' ').slice(0, 4).join(' ');\n            // has the position occurred three or move times\n            positions[fen] = fen in positions ? positions[fen] + 1 : 1;\n            if (positions[fen] >= 3) {\n                repetition = true;\n            }\n            const move = moves.pop();\n            if (!move) {\n                break;\n            }\n            else {\n                this._makeMove(move);\n            }\n        }\n        return repetition;\n    }\n    isDraw() {\n        return (this._halfMoves >= 100 || // 50 moves per side = 100 half moves\n            this.isStalemate() ||\n            this.isInsufficientMaterial() ||\n            this.isThreefoldRepetition());\n    }\n    isGameOver() {\n        return this.isCheckmate() || this.isStalemate() || this.isDraw();\n    }\n    moves({ verbose = false, square = undefined, piece = undefined, } = {}) {\n        const moves = this._moves({ square, piece });\n        if (verbose) {\n            return moves.map((move) => this._makePretty(move));\n        }\n        else {\n            return moves.map((move) => this._moveToSan(move, moves));\n        }\n    }\n    _moves({ legal = true, piece = undefined, square = undefined, } = {}) {\n        const forSquare = square ? square.toLowerCase() : undefined;\n        const forPiece = piece?.toLowerCase();\n        const moves = [];\n        const us = this._turn;\n        const them = swapColor(us);\n        let firstSquare = Ox88.a8;\n        let lastSquare = Ox88.h1;\n        let singleSquare = false;\n        // are we generating moves for a single square?\n        if (forSquare) {\n            // illegal square, return empty moves\n            if (!(forSquare in Ox88)) {\n                return [];\n            }\n            else {\n                firstSquare = lastSquare = Ox88[forSquare];\n                singleSquare = true;\n            }\n        }\n        for (let from = firstSquare; from <= lastSquare; from++) {\n            // did we run off the end of the board\n            if (from & 0x88) {\n                from += 7;\n                continue;\n            }\n            // empty square or opponent, skip\n            if (!this._board[from] || this._board[from].color === them) {\n                continue;\n            }\n            const { type } = this._board[from];\n            let to;\n            if (type === PAWN) {\n                if (forPiece && forPiece !== type)\n                    continue;\n                // single square, non-capturing\n                to = from + PAWN_OFFSETS[us][0];\n                if (!this._board[to]) {\n                    addMove(moves, us, from, to, PAWN);\n                    // double square\n                    to = from + PAWN_OFFSETS[us][1];\n                    if (SECOND_RANK[us] === rank(from) && !this._board[to]) {\n                        addMove(moves, us, from, to, PAWN, undefined, BITS.BIG_PAWN);\n                    }\n                }\n                // pawn captures\n                for (let j = 2; j < 4; j++) {\n                    to = from + PAWN_OFFSETS[us][j];\n                    if (to & 0x88)\n                        continue;\n                    if (this._board[to]?.color === them) {\n                        addMove(moves, us, from, to, PAWN, this._board[to].type, BITS.CAPTURE);\n                    }\n                    else if (to === this._epSquare) {\n                        addMove(moves, us, from, to, PAWN, PAWN, BITS.EP_CAPTURE);\n                    }\n                }\n            }\n            else {\n                if (forPiece && forPiece !== type)\n                    continue;\n                for (let j = 0, len = PIECE_OFFSETS[type].length; j < len; j++) {\n                    const offset = PIECE_OFFSETS[type][j];\n                    to = from;\n                    while (true) {\n                        to += offset;\n                        if (to & 0x88)\n                            break;\n                        if (!this._board[to]) {\n                            addMove(moves, us, from, to, type);\n                        }\n                        else {\n                            // own color, stop loop\n                            if (this._board[to].color === us)\n                                break;\n                            addMove(moves, us, from, to, type, this._board[to].type, BITS.CAPTURE);\n                            break;\n                        }\n                        /* break, if knight or king */\n                        if (type === KNIGHT || type === KING)\n                            break;\n                    }\n                }\n            }\n        }\n        /*\n         * check for castling if we're:\n         *   a) generating all moves, or\n         *   b) doing single square move generation on the king's square\n         */\n        if (forPiece === undefined || forPiece === KING) {\n            if (!singleSquare || lastSquare === this._kings[us]) {\n                // king-side castling\n                if (this._castling[us] & BITS.KSIDE_CASTLE) {\n                    const castlingFrom = this._kings[us];\n                    const castlingTo = castlingFrom + 2;\n                    if (!this._board[castlingFrom + 1] &&\n                        !this._board[castlingTo] &&\n                        !this._attacked(them, this._kings[us]) &&\n                        !this._attacked(them, castlingFrom + 1) &&\n                        !this._attacked(them, castlingTo)) {\n                        addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.KSIDE_CASTLE);\n                    }\n                }\n                // queen-side castling\n                if (this._castling[us] & BITS.QSIDE_CASTLE) {\n                    const castlingFrom = this._kings[us];\n                    const castlingTo = castlingFrom - 2;\n                    if (!this._board[castlingFrom - 1] &&\n                        !this._board[castlingFrom - 2] &&\n                        !this._board[castlingFrom - 3] &&\n                        !this._attacked(them, this._kings[us]) &&\n                        !this._attacked(them, castlingFrom - 1) &&\n                        !this._attacked(them, castlingTo)) {\n                        addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.QSIDE_CASTLE);\n                    }\n                }\n            }\n        }\n        /*\n         * return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */\n        if (!legal || this._kings[us] === -1) {\n            return moves;\n        }\n        // filter out illegal moves\n        const legalMoves = [];\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this._makeMove(moves[i]);\n            if (!this._isKingAttacked(us)) {\n                legalMoves.push(moves[i]);\n            }\n            this._undoMove();\n        }\n        return legalMoves;\n    }\n    move(move, { strict = false } = {}) {\n        /*\n         * The move function can be called with in the following parameters:\n         *\n         * .move('Nxb7')       <- argument is a case-sensitive SAN string\n         *\n         * .move({ from: 'h7', <- argument is a move object\n         *         to :'h8',\n         *         promotion: 'q' })\n         *\n         *\n         * An optional strict argument may be supplied to tell chess.js to\n         * strictly follow the SAN specification.\n         */\n        let moveObj = null;\n        if (typeof move === 'string') {\n            moveObj = this._moveFromSan(move, strict);\n        }\n        else if (typeof move === 'object') {\n            const moves = this._moves();\n            // convert the pretty move object to an ugly move object\n            for (let i = 0, len = moves.length; i < len; i++) {\n                if (move.from === algebraic(moves[i].from) &&\n                    move.to === algebraic(moves[i].to) &&\n                    (!('promotion' in moves[i]) || move.promotion === moves[i].promotion)) {\n                    moveObj = moves[i];\n                    break;\n                }\n            }\n        }\n        // failed to find move\n        if (!moveObj) {\n            if (typeof move === 'string') {\n                throw new Error(`Invalid move: ${move}`);\n            }\n            else {\n                throw new Error(`Invalid move: ${JSON.stringify(move)}`);\n            }\n        }\n        /*\n         * need to make a copy of move because we can't generate SAN after the move\n         * is made\n         */\n        const prettyMove = this._makePretty(moveObj);\n        this._makeMove(moveObj);\n        return prettyMove;\n    }\n    _push(move) {\n        this._history.push({\n            move,\n            kings: { b: this._kings.b, w: this._kings.w },\n            turn: this._turn,\n            castling: { b: this._castling.b, w: this._castling.w },\n            epSquare: this._epSquare,\n            halfMoves: this._halfMoves,\n            moveNumber: this._moveNumber,\n        });\n    }\n    _makeMove(move) {\n        const us = this._turn;\n        const them = swapColor(us);\n        this._push(move);\n        this._board[move.to] = this._board[move.from];\n        delete this._board[move.from];\n        // if ep capture, remove the captured pawn\n        if (move.flags & BITS.EP_CAPTURE) {\n            if (this._turn === BLACK) {\n                delete this._board[move.to - 16];\n            }\n            else {\n                delete this._board[move.to + 16];\n            }\n        }\n        // if pawn promotion, replace with new piece\n        if (move.promotion) {\n            this._board[move.to] = { type: move.promotion, color: us };\n        }\n        // if we moved the king\n        if (this._board[move.to].type === KING) {\n            this._kings[us] = move.to;\n            // if we castled, move the rook next to the king\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                const castlingTo = move.to - 1;\n                const castlingFrom = move.to + 1;\n                this._board[castlingTo] = this._board[castlingFrom];\n                delete this._board[castlingFrom];\n            }\n            else if (move.flags & BITS.QSIDE_CASTLE) {\n                const castlingTo = move.to + 1;\n                const castlingFrom = move.to - 2;\n                this._board[castlingTo] = this._board[castlingFrom];\n                delete this._board[castlingFrom];\n            }\n            // turn off castling\n            this._castling[us] = 0;\n        }\n        // turn off castling if we move a rook\n        if (this._castling[us]) {\n            for (let i = 0, len = ROOKS[us].length; i < len; i++) {\n                if (move.from === ROOKS[us][i].square &&\n                    this._castling[us] & ROOKS[us][i].flag) {\n                    this._castling[us] ^= ROOKS[us][i].flag;\n                    break;\n                }\n            }\n        }\n        // turn off castling if we capture a rook\n        if (this._castling[them]) {\n            for (let i = 0, len = ROOKS[them].length; i < len; i++) {\n                if (move.to === ROOKS[them][i].square &&\n                    this._castling[them] & ROOKS[them][i].flag) {\n                    this._castling[them] ^= ROOKS[them][i].flag;\n                    break;\n                }\n            }\n        }\n        // if big pawn move, update the en passant square\n        if (move.flags & BITS.BIG_PAWN) {\n            if (us === BLACK) {\n                this._epSquare = move.to - 16;\n            }\n            else {\n                this._epSquare = move.to + 16;\n            }\n        }\n        else {\n            this._epSquare = EMPTY;\n        }\n        // reset the 50 move counter if a pawn is moved or a piece is captured\n        if (move.piece === PAWN) {\n            this._halfMoves = 0;\n        }\n        else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n            this._halfMoves = 0;\n        }\n        else {\n            this._halfMoves++;\n        }\n        if (us === BLACK) {\n            this._moveNumber++;\n        }\n        this._turn = them;\n    }\n    undo() {\n        const move = this._undoMove();\n        return move ? this._makePretty(move) : null;\n    }\n    _undoMove() {\n        const old = this._history.pop();\n        if (old === undefined) {\n            return null;\n        }\n        const move = old.move;\n        this._kings = old.kings;\n        this._turn = old.turn;\n        this._castling = old.castling;\n        this._epSquare = old.epSquare;\n        this._halfMoves = old.halfMoves;\n        this._moveNumber = old.moveNumber;\n        const us = this._turn;\n        const them = swapColor(us);\n        this._board[move.from] = this._board[move.to];\n        this._board[move.from].type = move.piece; // to undo any promotions\n        delete this._board[move.to];\n        if (move.captured) {\n            if (move.flags & BITS.EP_CAPTURE) {\n                // en passant capture\n                let index;\n                if (us === BLACK) {\n                    index = move.to - 16;\n                }\n                else {\n                    index = move.to + 16;\n                }\n                this._board[index] = { type: PAWN, color: them };\n            }\n            else {\n                // regular capture\n                this._board[move.to] = { type: move.captured, color: them };\n            }\n        }\n        if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n            let castlingTo, castlingFrom;\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                castlingTo = move.to + 1;\n                castlingFrom = move.to - 1;\n            }\n            else {\n                castlingTo = move.to - 2;\n                castlingFrom = move.to + 1;\n            }\n            this._board[castlingTo] = this._board[castlingFrom];\n            delete this._board[castlingFrom];\n        }\n        return move;\n    }\n    pgn({ newline = '\\n', maxWidth = 0, } = {}) {\n        /*\n         * using the specification from http://www.chessclub.com/help/PGN-spec\n         * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n         */\n        const result = [];\n        let headerExists = false;\n        /* add the PGN header information */\n        for (const i in this._header) {\n            /*\n             * TODO: order of enumerated properties in header object is not\n             * guaranteed, see ECMA-262 spec (section 12.6.4)\n             */\n            result.push('[' + i + ' \"' + this._header[i] + '\"]' + newline);\n            headerExists = true;\n        }\n        if (headerExists && this._history.length) {\n            result.push(newline);\n        }\n        const appendComment = (moveString) => {\n            const comment = this._comments[this.fen()];\n            if (typeof comment !== 'undefined') {\n                const delimiter = moveString.length > 0 ? ' ' : '';\n                moveString = `${moveString}${delimiter}{${comment}}`;\n            }\n            return moveString;\n        };\n        // pop all of history onto reversed_history\n        const reversedHistory = [];\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        const moves = [];\n        let moveString = '';\n        // special case of a commented starting position with no moves\n        if (reversedHistory.length === 0) {\n            moves.push(appendComment(''));\n        }\n        // build the list of moves.  a move_string looks like: \"3. e3 e6\"\n        while (reversedHistory.length > 0) {\n            moveString = appendComment(moveString);\n            const move = reversedHistory.pop();\n            // make TypeScript stop complaining about move being undefined\n            if (!move) {\n                break;\n            }\n            // if the position started with black to move, start PGN with #. ...\n            if (!this._history.length && move.color === 'b') {\n                const prefix = `${this._moveNumber}. ...`;\n                // is there a comment preceding the first move?\n                moveString = moveString ? `${moveString} ${prefix}` : prefix;\n            }\n            else if (move.color === 'w') {\n                // store the previous generated move_string if we have one\n                if (moveString.length) {\n                    moves.push(moveString);\n                }\n                moveString = this._moveNumber + '.';\n            }\n            moveString =\n                moveString + ' ' + this._moveToSan(move, this._moves({ legal: true }));\n            this._makeMove(move);\n        }\n        // are there any other leftover moves?\n        if (moveString.length) {\n            moves.push(appendComment(moveString));\n        }\n        // is there a result?\n        if (typeof this._header.Result !== 'undefined') {\n            moves.push(this._header.Result);\n        }\n        /*\n         * history should be back to what it was before we started generating PGN,\n         * so join together moves\n         */\n        if (maxWidth === 0) {\n            return result.join('') + moves.join(' ');\n        }\n        // TODO (jah): huh?\n        const strip = function () {\n            if (result.length > 0 && result[result.length - 1] === ' ') {\n                result.pop();\n                return true;\n            }\n            return false;\n        };\n        // NB: this does not preserve comment whitespace.\n        const wrapComment = function (width, move) {\n            for (const token of move.split(' ')) {\n                if (!token) {\n                    continue;\n                }\n                if (width + token.length > maxWidth) {\n                    while (strip()) {\n                        width--;\n                    }\n                    result.push(newline);\n                    width = 0;\n                }\n                result.push(token);\n                width += token.length;\n                result.push(' ');\n                width++;\n            }\n            if (strip()) {\n                width--;\n            }\n            return width;\n        };\n        // wrap the PGN output at max_width\n        let currentWidth = 0;\n        for (let i = 0; i < moves.length; i++) {\n            if (currentWidth + moves[i].length > maxWidth) {\n                if (moves[i].includes('{')) {\n                    currentWidth = wrapComment(currentWidth, moves[i]);\n                    continue;\n                }\n            }\n            // if the current move will push past max_width\n            if (currentWidth + moves[i].length > maxWidth && i !== 0) {\n                // don't end the line with whitespace\n                if (result[result.length - 1] === ' ') {\n                    result.pop();\n                }\n                result.push(newline);\n                currentWidth = 0;\n            }\n            else if (i !== 0) {\n                result.push(' ');\n                currentWidth++;\n            }\n            result.push(moves[i]);\n            currentWidth += moves[i].length;\n        }\n        return result.join('');\n    }\n    header(...args) {\n        for (let i = 0; i < args.length; i += 2) {\n            if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n                this._header[args[i]] = args[i + 1];\n            }\n        }\n        return this._header;\n    }\n    loadPgn(pgn, { strict = false, newlineChar = '\\r?\\n', } = {}) {\n        function mask(str) {\n            return str.replace(/\\\\/g, '\\\\');\n        }\n        function parsePgnHeader(header) {\n            const headerObj = {};\n            const headers = header.split(new RegExp(mask(newlineChar)));\n            let key = '';\n            let value = '';\n            for (let i = 0; i < headers.length; i++) {\n                const regex = /^\\s*\\[\\s*([A-Za-z]+)\\s*\"(.*)\"\\s*\\]\\s*$/;\n                key = headers[i].replace(regex, '$1');\n                value = headers[i].replace(regex, '$2');\n                if (key.trim().length > 0) {\n                    headerObj[key] = value;\n                }\n            }\n            return headerObj;\n        }\n        // strip whitespace from head/tail of PGN block\n        pgn = pgn.trim();\n        /*\n         * RegExp to split header. Takes advantage of the fact that header and movetext\n         * will always have a blank line between them (ie, two newline_char's). Handles\n         * case where movetext is empty by matching newlineChar until end of string is\n         * matched - effectively trimming from the end extra newlineChar.\n         *\n         * With default newline_char, will equal:\n         * /^(\\[((?:\\r?\\n)|.)*\\])((?:\\s*\\r?\\n){2}|(?:\\s*\\r?\\n)*$)/\n         */\n        const headerRegex = new RegExp('^(\\\\[((?:' +\n            mask(newlineChar) +\n            ')|.)*\\\\])' +\n            '((?:\\\\s*' +\n            mask(newlineChar) +\n            '){2}|(?:\\\\s*' +\n            mask(newlineChar) +\n            ')*$)');\n        // If no header given, begin with moves.\n        const headerRegexResults = headerRegex.exec(pgn);\n        const headerString = headerRegexResults\n            ? headerRegexResults.length >= 2\n                ? headerRegexResults[1]\n                : ''\n            : '';\n        // Put the board in the starting position\n        this.reset();\n        // parse PGN header\n        const headers = parsePgnHeader(headerString);\n        let fen = '';\n        for (const key in headers) {\n            // check to see user is including fen (possibly with wrong tag case)\n            if (key.toLowerCase() === 'fen') {\n                fen = headers[key];\n            }\n            this.header(key, headers[key]);\n        }\n        /*\n         * the permissive parser should attempt to load a fen tag, even if it's the\n         * wrong case and doesn't include a corresponding [SetUp \"1\"] tag\n         */\n        if (!strict) {\n            if (fen) {\n                this.load(fen, true);\n            }\n        }\n        else {\n            /*\n             * strict parser - load the starting position indicated by [Setup '1']\n             * and [FEN position]\n             */\n            if (headers['SetUp'] === '1') {\n                if (!('FEN' in headers)) {\n                    throw new Error('Invalid PGN: FEN tag must be supplied with SetUp tag');\n                }\n                // second argument to load: don't clear the headers\n                this.load(headers['FEN'], true);\n            }\n        }\n        /*\n         * NB: the regexes below that delete move numbers, recursive annotations,\n         * and numeric annotation glyphs may also match text in comments. To\n         * prevent this, we transform comments by hex-encoding them in place and\n         * decoding them again after the other tokens have been deleted.\n         *\n         * While the spec states that PGN files should be ASCII encoded, we use\n         * {en,de}codeURIComponent here to support arbitrary UTF8 as a convenience\n         * for modern users\n         */\n        function toHex(s) {\n            return Array.from(s)\n                .map(function (c) {\n                /*\n                 * encodeURI doesn't transform most ASCII characters, so we handle\n                 * these ourselves\n                 */\n                return c.charCodeAt(0) < 128\n                    ? c.charCodeAt(0).toString(16)\n                    : encodeURIComponent(c).replace(/%/g, '').toLowerCase();\n            })\n                .join('');\n        }\n        function fromHex(s) {\n            return s.length == 0\n                ? ''\n                : decodeURIComponent('%' + (s.match(/.{1,2}/g) || []).join('%'));\n        }\n        const encodeComment = function (s) {\n            s = s.replace(new RegExp(mask(newlineChar), 'g'), ' ');\n            return `{${toHex(s.slice(1, s.length - 1))}}`;\n        };\n        const decodeComment = function (s) {\n            if (s.startsWith('{') && s.endsWith('}')) {\n                return fromHex(s.slice(1, s.length - 1));\n            }\n        };\n        // delete header to get the moves\n        let ms = pgn\n            .replace(headerString, '')\n            .replace(\n        // encode comments so they don't get deleted below\n        new RegExp(`({[^}]*})+?|;([^${mask(newlineChar)}]*)`, 'g'), function (_match, bracket, semicolon) {\n            return bracket !== undefined\n                ? encodeComment(bracket)\n                : ' ' + encodeComment(`{${semicolon.slice(1)}}`);\n        })\n            .replace(new RegExp(mask(newlineChar), 'g'), ' ');\n        // delete recursive annotation variations\n        const ravRegex = /(\\([^()]+\\))+?/g;\n        while (ravRegex.test(ms)) {\n            ms = ms.replace(ravRegex, '');\n        }\n        // delete move numbers\n        ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n        // delete ... indicating black to move\n        ms = ms.replace(/\\.\\.\\./g, '');\n        /* delete numeric annotation glyphs */\n        ms = ms.replace(/\\$\\d+/g, '');\n        // trim and get array of moves\n        let moves = ms.trim().split(new RegExp(/\\s+/));\n        // delete empty entries\n        moves = moves.filter((move) => move !== '');\n        let result = '';\n        for (let halfMove = 0; halfMove < moves.length; halfMove++) {\n            const comment = decodeComment(moves[halfMove]);\n            if (comment !== undefined) {\n                this._comments[this.fen()] = comment;\n                continue;\n            }\n            const move = this._moveFromSan(moves[halfMove], strict);\n            // invalid move\n            if (move == null) {\n                // was the move an end of game marker\n                if (TERMINATION_MARKERS.indexOf(moves[halfMove]) > -1) {\n                    result = moves[halfMove];\n                }\n                else {\n                    throw new Error(`Invalid move in PGN: ${moves[halfMove]}`);\n                }\n            }\n            else {\n                // reset the end of game marker if making a valid move\n                result = '';\n                this._makeMove(move);\n            }\n        }\n        /*\n         * Per section 8.2.6 of the PGN spec, the Result tag pair must match match\n         * the termination marker. Only do this when headers are present, but the\n         * result tag is missing\n         */\n        if (result && Object.keys(this._header).length && !this._header['Result']) {\n            this.header('Result', result);\n        }\n    }\n    /*\n     * Convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} strict Use the strict SAN parser. It will throw errors\n     * on overly disambiguated moves (see below):\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    _moveToSan(move, moves) {\n        let output = '';\n        if (move.flags & BITS.KSIDE_CASTLE) {\n            output = 'O-O';\n        }\n        else if (move.flags & BITS.QSIDE_CASTLE) {\n            output = 'O-O-O';\n        }\n        else {\n            if (move.piece !== PAWN) {\n                const disambiguator = getDisambiguator(move, moves);\n                output += move.piece.toUpperCase() + disambiguator;\n            }\n            if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n                if (move.piece === PAWN) {\n                    output += algebraic(move.from)[0];\n                }\n                output += 'x';\n            }\n            output += algebraic(move.to);\n            if (move.promotion) {\n                output += '=' + move.promotion.toUpperCase();\n            }\n        }\n        this._makeMove(move);\n        if (this.isCheck()) {\n            if (this.isCheckmate()) {\n                output += '#';\n            }\n            else {\n                output += '+';\n            }\n        }\n        this._undoMove();\n        return output;\n    }\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    _moveFromSan(move, strict = false) {\n        // strip off any move decorations: e.g Nf3+?! becomes Nf3\n        const cleanMove = strippedSan(move);\n        let pieceType = inferPieceType(cleanMove);\n        let moves = this._moves({ legal: true, piece: pieceType });\n        // strict parser\n        for (let i = 0, len = moves.length; i < len; i++) {\n            if (cleanMove === strippedSan(this._moveToSan(moves[i], moves))) {\n                return moves[i];\n            }\n        }\n        // the strict parser failed\n        if (strict) {\n            return null;\n        }\n        let piece = undefined;\n        let matches = undefined;\n        let from = undefined;\n        let to = undefined;\n        let promotion = undefined;\n        /*\n         * The default permissive (non-strict) parser allows the user to parse\n         * non-standard chess notations. This parser is only run after the strict\n         * Standard Algebraic Notation (SAN) parser has failed.\n         *\n         * When running the permissive parser, we'll run a regex to grab the piece, the\n         * to/from square, and an optional promotion piece. This regex will\n         * parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n         * f7f8q, b1c3\n         *\n         * NOTE: Some positions and moves may be ambiguous when using the permissive\n         * parser. For example, in this position: 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1,\n         * the move b1c3 may be interpreted as Nc3 or B1c3 (a disambiguated bishop\n         * move). In these cases, the permissive parser will default to the most\n         * basic interpretation (which is b1c3 parsing to Nc3).\n         */\n        let overlyDisambiguated = false;\n        matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n        //     piece         from              to       promotion\n        );\n        if (matches) {\n            piece = matches[1];\n            from = matches[2];\n            to = matches[3];\n            promotion = matches[4];\n            if (from.length == 1) {\n                overlyDisambiguated = true;\n            }\n        }\n        else {\n            /*\n             * The [a-h]?[1-8]? portion of the regex below handles moves that may be\n             * overly disambiguated (e.g. Nge7 is unnecessary and non-standard when\n             * there is one legal knight move to e7). In this case, the value of\n             * 'from' variable will be a rank or file, not a square.\n             */\n            matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);\n            if (matches) {\n                piece = matches[1];\n                from = matches[2];\n                to = matches[3];\n                promotion = matches[4];\n                if (from.length == 1) {\n                    overlyDisambiguated = true;\n                }\n            }\n        }\n        pieceType = inferPieceType(cleanMove);\n        moves = this._moves({\n            legal: true,\n            piece: piece ? piece : pieceType,\n        });\n        if (!to) {\n            return null;\n        }\n        for (let i = 0, len = moves.length; i < len; i++) {\n            if (!from) {\n                // if there is no from square, it could be just 'x' missing from a capture\n                if (cleanMove === strippedSan(this._moveToSan(moves[i], moves)).replace('x', '')) {\n                    return moves[i];\n                }\n                // hand-compare move properties with the results from our permissive regex\n            }\n            else if ((!piece || piece.toLowerCase() == moves[i].piece) &&\n                Ox88[from] == moves[i].from &&\n                Ox88[to] == moves[i].to &&\n                (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n                return moves[i];\n            }\n            else if (overlyDisambiguated) {\n                /*\n                 * SPECIAL CASE: we parsed a move string that may have an unneeded\n                 * rank/file disambiguator (e.g. Nge7).  The 'from' variable will\n                 */\n                const square = algebraic(moves[i].from);\n                if ((!piece || piece.toLowerCase() == moves[i].piece) &&\n                    Ox88[to] == moves[i].to &&\n                    (from == square[0] || from == square[1]) &&\n                    (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n                    return moves[i];\n                }\n            }\n        }\n        return null;\n    }\n    ascii() {\n        let s = '   +------------------------+\\n';\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            // display the rank\n            if (file(i) === 0) {\n                s += ' ' + '87654321'[rank(i)] + ' |';\n            }\n            if (this._board[i]) {\n                const piece = this._board[i].type;\n                const color = this._board[i].color;\n                const symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n                s += ' ' + symbol + ' ';\n            }\n            else {\n                s += ' . ';\n            }\n            if ((i + 1) & 0x88) {\n                s += '|\\n';\n                i += 8;\n            }\n        }\n        s += '   +------------------------+\\n';\n        s += '     a  b  c  d  e  f  g  h';\n        return s;\n    }\n    perft(depth) {\n        const moves = this._moves({ legal: false });\n        let nodes = 0;\n        const color = this._turn;\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this._makeMove(moves[i]);\n            if (!this._isKingAttacked(color)) {\n                if (depth - 1 > 0) {\n                    nodes += this.perft(depth - 1);\n                }\n                else {\n                    nodes++;\n                }\n            }\n            this._undoMove();\n        }\n        return nodes;\n    }\n    // pretty = external move object\n    _makePretty(uglyMove) {\n        const { color, piece, from, to, flags, captured, promotion } = uglyMove;\n        let prettyFlags = '';\n        for (const flag in BITS) {\n            if (BITS[flag] & flags) {\n                prettyFlags += FLAGS[flag];\n            }\n        }\n        const fromAlgebraic = algebraic(from);\n        const toAlgebraic = algebraic(to);\n        const move = {\n            color,\n            piece,\n            from: fromAlgebraic,\n            to: toAlgebraic,\n            san: this._moveToSan(uglyMove, this._moves({ legal: true })),\n            flags: prettyFlags,\n            lan: fromAlgebraic + toAlgebraic,\n            before: this.fen(),\n            after: '',\n        };\n        // generate the FEN for the 'after' key\n        this._makeMove(uglyMove);\n        move.after = this.fen();\n        this._undoMove();\n        if (captured) {\n            move.captured = captured;\n        }\n        if (promotion) {\n            move.promotion = promotion;\n            move.lan += promotion;\n        }\n        return move;\n    }\n    turn() {\n        return this._turn;\n    }\n    board() {\n        const output = [];\n        let row = [];\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            if (this._board[i] == null) {\n                row.push(null);\n            }\n            else {\n                row.push({\n                    square: algebraic(i),\n                    type: this._board[i].type,\n                    color: this._board[i].color,\n                });\n            }\n            if ((i + 1) & 0x88) {\n                output.push(row);\n                row = [];\n                i += 8;\n            }\n        }\n        return output;\n    }\n    squareColor(square) {\n        if (square in Ox88) {\n            const sq = Ox88[square];\n            return (rank(sq) + file(sq)) % 2 === 0 ? 'light' : 'dark';\n        }\n        return null;\n    }\n    history({ verbose = false } = {}) {\n        const reversedHistory = [];\n        const moveHistory = [];\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        while (true) {\n            const move = reversedHistory.pop();\n            if (!move) {\n                break;\n            }\n            if (verbose) {\n                moveHistory.push(this._makePretty(move));\n            }\n            else {\n                moveHistory.push(this._moveToSan(move, this._moves()));\n            }\n            this._makeMove(move);\n        }\n        return moveHistory;\n    }\n    _pruneComments() {\n        const reversedHistory = [];\n        const currentComments = {};\n        const copyComment = (fen) => {\n            if (fen in this._comments) {\n                currentComments[fen] = this._comments[fen];\n            }\n        };\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        copyComment(this.fen());\n        while (true) {\n            const move = reversedHistory.pop();\n            if (!move) {\n                break;\n            }\n            this._makeMove(move);\n            copyComment(this.fen());\n        }\n        this._comments = currentComments;\n    }\n    getComment() {\n        return this._comments[this.fen()];\n    }\n    setComment(comment) {\n        this._comments[this.fen()] = comment.replace('{', '[').replace('}', ']');\n    }\n    deleteComment() {\n        const comment = this._comments[this.fen()];\n        delete this._comments[this.fen()];\n        return comment;\n    }\n    getComments() {\n        this._pruneComments();\n        return Object.keys(this._comments).map((fen) => {\n            return { fen: fen, comment: this._comments[fen] };\n        });\n    }\n    deleteComments() {\n        this._pruneComments();\n        return Object.keys(this._comments).map((fen) => {\n            const comment = this._comments[fen];\n            delete this._comments[fen];\n            return { fen: fen, comment: comment };\n        });\n    }\n    setCastlingRights(color, rights) {\n        for (const side of [KING, QUEEN]) {\n            if (rights[side] !== undefined) {\n                if (rights[side]) {\n                    this._castling[color] |= SIDES[side];\n                }\n                else {\n                    this._castling[color] &= ~SIDES[side];\n                }\n            }\n        }\n        this._updateCastlingRights();\n        const result = this.getCastlingRights(color);\n        return (rights[KING] === undefined || rights[KING] === result[KING]) && (rights[QUEEN] === undefined || rights[QUEEN] === result[QUEEN]);\n    }\n    getCastlingRights(color) {\n        return {\n            [KING]: (this._castling[color] & SIDES[KING]) !== 0,\n            [QUEEN]: (this._castling[color] & SIDES[QUEEN]) !== 0,\n        };\n    }\n    moveNumber() {\n        return this._moveNumber;\n    }\n}\n//# sourceMappingURL=chess.js.map","/**\n * @license\n * Copyright (c) 2023, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport const WHITE = 'w'\nexport const BLACK = 'b'\n\nexport const PAWN = 'p'\nexport const KNIGHT = 'n'\nexport const BISHOP = 'b'\nexport const ROOK = 'r'\nexport const QUEEN = 'q'\nexport const KING = 'k'\n\nexport type Color = 'w' | 'b'\nexport type PieceSymbol = 'p' | 'n' | 'b' | 'r' | 'q' | 'k'\n\n// prettier-ignore\nexport type Square =\n    'a8' | 'b8' | 'c8' | 'd8' | 'e8' | 'f8' | 'g8' | 'h8' |\n    'a7' | 'b7' | 'c7' | 'd7' | 'e7' | 'f7' | 'g7' | 'h7' |\n    'a6' | 'b6' | 'c6' | 'd6' | 'e6' | 'f6' | 'g6' | 'h6' |\n    'a5' | 'b5' | 'c5' | 'd5' | 'e5' | 'f5' | 'g5' | 'h5' |\n    'a4' | 'b4' | 'c4' | 'd4' | 'e4' | 'f4' | 'g4' | 'h4' |\n    'a3' | 'b3' | 'c3' | 'd3' | 'e3' | 'f3' | 'g3' | 'h3' |\n    'a2' | 'b2' | 'c2' | 'd2' | 'e2' | 'f2' | 'g2' | 'h2' |\n    'a1' | 'b1' | 'c1' | 'd1' | 'e1' | 'f1' | 'g1' | 'h1'\n\nexport const DEFAULT_POSITION =\n  'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\nexport type Piece = {\n  color: Color\n  type: PieceSymbol\n}\n\ntype InternalMove = {\n  color: Color\n  from: number\n  to: number\n  piece: PieceSymbol\n  captured?: PieceSymbol\n  promotion?: PieceSymbol\n  flags: number\n}\n\ninterface History {\n  move: InternalMove\n  kings: Record<Color, number>\n  turn: Color\n  castling: Record<Color, number>\n  epSquare: number\n  halfMoves: number\n  moveNumber: number\n}\n\nexport type Move = {\n  color: Color\n  from: Square\n  to: Square\n  piece: PieceSymbol\n  captured?: PieceSymbol\n  promotion?: PieceSymbol\n  flags: string\n  san: string\n  lan: string\n  before: string\n  after: string\n}\n\nconst EMPTY = -1\n\nconst FLAGS: Record<string, string> = {\n  NORMAL: 'n',\n  CAPTURE: 'c',\n  BIG_PAWN: 'b',\n  EP_CAPTURE: 'e',\n  PROMOTION: 'p',\n  KSIDE_CASTLE: 'k',\n  QSIDE_CASTLE: 'q',\n}\n\n// prettier-ignore\nexport const SQUARES: Square[] = [\n  'a8', 'b8', 'c8', 'd8', 'e8', 'f8', 'g8', 'h8',\n  'a7', 'b7', 'c7', 'd7', 'e7', 'f7', 'g7', 'h7',\n  'a6', 'b6', 'c6', 'd6', 'e6', 'f6', 'g6', 'h6',\n  'a5', 'b5', 'c5', 'd5', 'e5', 'f5', 'g5', 'h5',\n  'a4', 'b4', 'c4', 'd4', 'e4', 'f4', 'g4', 'h4',\n  'a3', 'b3', 'c3', 'd3', 'e3', 'f3', 'g3', 'h3',\n  'a2', 'b2', 'c2', 'd2', 'e2', 'f2', 'g2', 'h2',\n  'a1', 'b1', 'c1', 'd1', 'e1', 'f1', 'g1', 'h1'\n]\n\nconst BITS: Record<string, number> = {\n  NORMAL: 1,\n  CAPTURE: 2,\n  BIG_PAWN: 4,\n  EP_CAPTURE: 8,\n  PROMOTION: 16,\n  KSIDE_CASTLE: 32,\n  QSIDE_CASTLE: 64,\n}\n\n/*\n * NOTES ABOUT 0x88 MOVE GENERATION ALGORITHM\n * ----------------------------------------------------------------------------\n * From https://github.com/jhlywa/chess.js/issues/230\n *\n * A lot of people are confused when they first see the internal representation\n * of chess.js. It uses the 0x88 Move Generation Algorithm which internally\n * stores the board as an 8x16 array. This is purely for efficiency but has a\n * couple of interesting benefits:\n *\n * 1. 0x88 offers a very inexpensive \"off the board\" check. Bitwise AND (&) any\n *    square with 0x88, if the result is non-zero then the square is off the\n *    board. For example, assuming a knight square A8 (0 in 0x88 notation),\n *    there are 8 possible directions in which the knight can move. These\n *    directions are relative to the 8x16 board and are stored in the\n *    PIECE_OFFSETS map. One possible move is A8 - 18 (up one square, and two\n *    squares to the left - which is off the board). 0 - 18 = -18 & 0x88 = 0x88\n *    (because of two-complement representation of -18). The non-zero result\n *    means the square is off the board and the move is illegal. Take the\n *    opposite move (from A8 to C7), 0 + 18 = 18 & 0x88 = 0. A result of zero\n *    means the square is on the board.\n *\n * 2. The relative distance (or difference) between two squares on a 8x16 board\n *    is unique and can be used to inexpensively determine if a piece on a\n *    square can attack any other arbitrary square. For example, let's see if a\n *    pawn on E7 can attack E2. The difference between E7 (20) - E2 (100) is\n *    -80. We add 119 to make the ATTACKS array index non-negative (because the\n *    worst case difference is A8 - H1 = -119). The ATTACKS array contains a\n *    bitmask of pieces that can attack from that distance and direction.\n *    ATTACKS[-80 + 119=39] gives us 24 or 0b11000 in binary. Look at the\n *    PIECE_MASKS map to determine the mask for a given piece type. In our pawn\n *    example, we would check to see if 24 & 0x1 is non-zero, which it is\n *    not. So, naturally, a pawn on E7 can't attack a piece on E2. However, a\n *    rook can since 24 & 0x8 is non-zero. The only thing left to check is that\n *    there are no blocking pieces between E7 and E2. That's where the RAYS\n *    array comes in. It provides an offset (in this case 16) to add to E7 (20)\n *    to check for blocking pieces. E7 (20) + 16 = E6 (36) + 16 = E5 (52) etc.\n */\n\n// prettier-ignore\n// eslint-disable-next-line\nconst Ox88: Record<Square, number> = {\n  a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n  a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n  a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n  a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n  a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n  a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n  a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n  a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n}\n\nconst PAWN_OFFSETS = {\n  b: [16, 32, 17, 15],\n  w: [-16, -32, -17, -15],\n}\n\nconst PIECE_OFFSETS = {\n  n: [-18, -33, -31, -14, 18, 33, 31, 14],\n  b: [-17, -15, 17, 15],\n  r: [-16, 1, 16, -1],\n  q: [-17, -16, -15, 1, 17, 16, 15, -1],\n  k: [-17, -16, -15, 1, 17, 16, 15, -1],\n}\n\n// prettier-ignore\nconst ATTACKS = [\n  20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n   0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n   0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n   0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n   0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n   0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n   0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n  24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n   0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n   0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n   0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n   0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n   0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n   0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n  20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n];\n\n// prettier-ignore\nconst RAYS = [\n   17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n    0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n    0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n    0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n    0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n    1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n    0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n    0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n    0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n    0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n  -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n];\n\nconst PIECE_MASKS = { p: 0x1, n: 0x2, b: 0x4, r: 0x8, q: 0x10, k: 0x20 }\n\nconst SYMBOLS = 'pnbrqkPNBRQK'\n\nconst PROMOTIONS: PieceSymbol[] = [KNIGHT, BISHOP, ROOK, QUEEN]\n\nconst RANK_1 = 7\nconst RANK_2 = 6\n/*\n * const RANK_3 = 5\n * const RANK_4 = 4\n * const RANK_5 = 3\n * const RANK_6 = 2\n */\nconst RANK_7 = 1\nconst RANK_8 = 0\n\nconst SIDES = {\n  [KING]: BITS.KSIDE_CASTLE,\n  [QUEEN]: BITS.QSIDE_CASTLE\n}\n\nconst ROOKS = {\n  w: [\n    { square: Ox88.a1, flag: BITS.QSIDE_CASTLE },\n    { square: Ox88.h1, flag: BITS.KSIDE_CASTLE },\n  ],\n  b: [\n    { square: Ox88.a8, flag: BITS.QSIDE_CASTLE },\n    { square: Ox88.h8, flag: BITS.KSIDE_CASTLE },\n  ],\n}\n\nconst SECOND_RANK = { b: RANK_7, w: RANK_2 }\n\nconst TERMINATION_MARKERS = ['1-0', '0-1', '1/2-1/2', '*']\n\n// Extracts the zero-based rank of an 0x88 square.\nfunction rank(square: number): number {\n  return square >> 4\n}\n\n// Extracts the zero-based file of an 0x88 square.\nfunction file(square: number): number {\n  return square & 0xf\n}\n\nfunction isDigit(c: string): boolean {\n  return '0123456789'.indexOf(c) !== -1\n}\n\n// Converts a 0x88 square to algebraic notation.\nfunction algebraic(square: number): Square {\n  const f = file(square)\n  const r = rank(square)\n  return ('abcdefgh'.substring(f, f + 1) +\n    '87654321'.substring(r, r + 1)) as Square\n}\n\nfunction swapColor(color: Color): Color {\n  return color === WHITE ? BLACK : WHITE\n}\n\nexport function validateFen(fen: string) {\n  // 1st criterion: 6 space-seperated fields?\n  const tokens = fen.split(/\\s+/)\n  if (tokens.length !== 6) {\n    return {\n      ok: false,\n      error: 'Invalid FEN: must contain six space-delimited fields',\n    }\n  }\n\n  // 2nd criterion: move number field is a integer value > 0?\n  const moveNumber = parseInt(tokens[5], 10)\n  if (isNaN(moveNumber) || moveNumber <= 0) {\n    return {\n      ok: false,\n      error: 'Invalid FEN: move number must be a positive integer',\n    }\n  }\n\n  // 3rd criterion: half move counter is an integer >= 0?\n  const halfMoves = parseInt(tokens[4], 10)\n  if (isNaN(halfMoves) || halfMoves < 0) {\n    return {\n      ok: false,\n      error:\n        'Invalid FEN: half move counter number must be a non-negative integer',\n    }\n  }\n\n  // 4th criterion: 4th field is a valid e.p.-string?\n  if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n    return { ok: false, error: 'Invalid FEN: en-passant square is invalid' }\n  }\n\n  // 5th criterion: 3th field is a valid castle-string?\n  if (/[^kKqQ-]/.test(tokens[2])) {\n    return { ok: false, error: 'Invalid FEN: castling availability is invalid' }\n  }\n\n  // 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)?\n  if (!/^(w|b)$/.test(tokens[1])) {\n    return { ok: false, error: 'Invalid FEN: side-to-move is invalid' }\n  }\n\n  // 7th criterion: 1st field contains 8 rows?\n  const rows = tokens[0].split('/')\n  if (rows.length !== 8) {\n    return {\n      ok: false,\n      error: \"Invalid FEN: piece data does not contain 8 '/'-delimited rows\",\n    }\n  }\n\n  // 8th criterion: every row is valid?\n  for (let i = 0; i < rows.length; i++) {\n    // check for right sum of fields AND not two numbers in succession\n    let sumFields = 0\n    let previousWasNumber = false\n\n    for (let k = 0; k < rows[i].length; k++) {\n      if (isDigit(rows[i][k])) {\n        if (previousWasNumber) {\n          return {\n            ok: false,\n            error: 'Invalid FEN: piece data is invalid (consecutive number)',\n          }\n        }\n        sumFields += parseInt(rows[i][k], 10)\n        previousWasNumber = true\n      } else {\n        if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n          return {\n            ok: false,\n            error: 'Invalid FEN: piece data is invalid (invalid piece)',\n          }\n        }\n        sumFields += 1\n        previousWasNumber = false\n      }\n    }\n    if (sumFields !== 8) {\n      return {\n        ok: false,\n        error: 'Invalid FEN: piece data is invalid (too many squares in rank)',\n      }\n    }\n  }\n\n  if (\n    (tokens[3][1] == '3' && tokens[1] == 'w') ||\n    (tokens[3][1] == '6' && tokens[1] == 'b')\n  ) {\n    return { ok: false, error: 'Invalid FEN: illegal en-passant square' }\n  }\n\n  const kings = [\n    { color: 'white', regex: /K/g },\n    { color: 'black', regex: /k/g },\n  ]\n\n  for (const { color, regex } of kings) {\n    if (!regex.test(tokens[0])) {\n      return { ok: false, error: `Invalid FEN: missing ${color} king` }\n    }\n\n    if ((tokens[0].match(regex) || []).length > 1) {\n      return { ok: false, error: `Invalid FEN: too many ${color} kings` }\n    }\n  }\n\n  return { ok: true }\n}\n\n// this function is used to uniquely identify ambiguous moves\nfunction getDisambiguator(move: InternalMove, moves: InternalMove[]) {\n  const from = move.from\n  const to = move.to\n  const piece = move.piece\n\n  let ambiguities = 0\n  let sameRank = 0\n  let sameFile = 0\n\n  for (let i = 0, len = moves.length; i < len; i++) {\n    const ambigFrom = moves[i].from\n    const ambigTo = moves[i].to\n    const ambigPiece = moves[i].piece\n\n    /*\n     * if a move of the same piece type ends on the same to square, we'll need\n     * to add a disambiguator to the algebraic notation\n     */\n    if (piece === ambigPiece && from !== ambigFrom && to === ambigTo) {\n      ambiguities++\n\n      if (rank(from) === rank(ambigFrom)) {\n        sameRank++\n      }\n\n      if (file(from) === file(ambigFrom)) {\n        sameFile++\n      }\n    }\n  }\n\n  if (ambiguities > 0) {\n    if (sameRank > 0 && sameFile > 0) {\n      /*\n       * if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      return algebraic(from)\n    } else if (sameFile > 0) {\n      /*\n       * if the moving piece rests on the same file, use the rank symbol as the\n       * disambiguator\n       */\n      return algebraic(from).charAt(1)\n    } else {\n      // else use the file symbol\n      return algebraic(from).charAt(0)\n    }\n  }\n\n  return ''\n}\n\nfunction addMove(\n  moves: InternalMove[],\n  color: Color,\n  from: number,\n  to: number,\n  piece: PieceSymbol,\n  captured: PieceSymbol | undefined = undefined,\n  flags: number = BITS.NORMAL\n) {\n  const r = rank(to)\n\n  if (piece === PAWN && (r === RANK_1 || r === RANK_8)) {\n    for (let i = 0; i < PROMOTIONS.length; i++) {\n      const promotion = PROMOTIONS[i]\n      moves.push({\n        color,\n        from,\n        to,\n        piece,\n        captured,\n        promotion,\n        flags: flags | BITS.PROMOTION,\n      })\n    }\n  } else {\n    moves.push({\n      color,\n      from,\n      to,\n      piece,\n      captured,\n      flags,\n    })\n  }\n}\n\nfunction inferPieceType(san: string) {\n  let pieceType = san.charAt(0)\n  if (pieceType >= 'a' && pieceType <= 'h') {\n    const matches = san.match(/[a-h]\\d.*[a-h]\\d/)\n    if (matches) {\n      return undefined\n    }\n    return PAWN\n  }\n  pieceType = pieceType.toLowerCase()\n  if (pieceType === 'o') {\n    return KING\n  }\n  return pieceType as PieceSymbol\n}\n\n// parses all of the decorators out of a SAN string\nfunction strippedSan(move: string) {\n  return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\n}\n\nexport class Chess {\n  private _board = new Array<Piece>(128)\n  private _turn: Color = WHITE\n  private _header: Record<string, string> = {}\n  private _kings: Record<Color, number> = { w: EMPTY, b: EMPTY }\n  private _epSquare = -1\n  private _halfMoves = 0\n  private _moveNumber = 0\n  private _history: History[] = []\n  private _comments: Record<string, string> = {}\n  private _castling: Record<Color, number> = { w: 0, b: 0 }\n\n  constructor(fen = DEFAULT_POSITION) {\n    this.load(fen)\n  }\n\n  clear(keepHeaders = false) {\n    this._board = new Array<Piece>(128)\n    this._kings = { w: EMPTY, b: EMPTY }\n    this._turn = WHITE\n    this._castling = { w: 0, b: 0 }\n    this._epSquare = EMPTY\n    this._halfMoves = 0\n    this._moveNumber = 1\n    this._history = []\n    this._comments = {}\n    this._header = keepHeaders ? this._header : {}\n    this._updateSetup(this.fen())\n  }\n\n  removeHeader(key: string) {\n    if (key in this._header) {\n      delete this._header[key]\n    }\n  }\n\n  load(fen: string, keepHeaders = false) {\n    let tokens = fen.split(/\\s+/)\n\n    // append commonly omitted fen tokens\n    if (tokens.length >= 2 && tokens.length < 6) {\n      const adjustments = ['-', '-', '0', '1']\n      fen = tokens.concat(adjustments.slice(-(6 - tokens.length))).join(' ')\n    }\n\n    tokens = fen.split(/\\s+/)\n\n    const { ok, error } = validateFen(fen)\n    if (!ok) {\n      throw new Error(error)\n    }\n\n    const position = tokens[0]\n    let square = 0\n\n    this.clear(keepHeaders)\n\n    for (let i = 0; i < position.length; i++) {\n      const piece = position.charAt(i)\n\n      if (piece === '/') {\n        square += 8\n      } else if (isDigit(piece)) {\n        square += parseInt(piece, 10)\n      } else {\n        const color = piece < 'a' ? WHITE : BLACK\n        this.put(\n          { type: piece.toLowerCase() as PieceSymbol, color },\n          algebraic(square)\n        )\n        square++\n      }\n    }\n\n    this._turn = tokens[1] as Color\n\n    if (tokens[2].indexOf('K') > -1) {\n      this._castling.w |= BITS.KSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      this._castling.w |= BITS.QSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      this._castling.b |= BITS.KSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      this._castling.b |= BITS.QSIDE_CASTLE\n    }\n\n    this._epSquare = tokens[3] === '-' ? EMPTY : Ox88[tokens[3] as Square]\n    this._halfMoves = parseInt(tokens[4], 10)\n    this._moveNumber = parseInt(tokens[5], 10)\n\n    this._updateSetup(this.fen())\n  }\n\n  fen() {\n    let empty = 0\n    let fen = ''\n\n    for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n      if (this._board[i]) {\n        if (empty > 0) {\n          fen += empty\n          empty = 0\n        }\n        const { color, type: piece } = this._board[i]\n\n        fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n      } else {\n        empty++\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty\n        }\n\n        if (i !== Ox88.h1) {\n          fen += '/'\n        }\n\n        empty = 0\n        i += 8\n      }\n    }\n\n    let castling = ''\n    if (this._castling[WHITE] & BITS.KSIDE_CASTLE) {\n      castling += 'K'\n    }\n    if (this._castling[WHITE] & BITS.QSIDE_CASTLE) {\n      castling += 'Q'\n    }\n    if (this._castling[BLACK] & BITS.KSIDE_CASTLE) {\n      castling += 'k'\n    }\n    if (this._castling[BLACK] & BITS.QSIDE_CASTLE) {\n      castling += 'q'\n    }\n\n    // do we have an empty castling flag?\n    castling = castling || '-'\n\n    let epSquare = '-'\n    /*\n     * only print the ep square if en passant is a valid move (pawn is present\n     * and ep capture is not pinned)\n     */\n    if (this._epSquare !== EMPTY) {\n      const bigPawnSquare = this._epSquare + (this._turn === WHITE ? 16 : -16)\n      const squares = [bigPawnSquare + 1, bigPawnSquare - 1]\n\n      for (const square of squares) {\n        // is the square off the board?\n        if (square & 0x88) {\n          continue\n        }\n\n        const color = this._turn\n\n        // is there a pawn that can capture the epSquare?\n        if (\n          this._board[square]?.color === color &&\n          this._board[square]?.type === PAWN\n        ) {\n          // if the pawn makes an ep capture, does it leave it's king in check?\n          this._makeMove({\n            color,\n            from: square,\n            to: this._epSquare,\n            piece: PAWN,\n            captured: PAWN,\n            flags: BITS.EP_CAPTURE,\n          })\n          const isLegal = !this._isKingAttacked(color)\n          this._undoMove()\n\n          // if ep is legal, break and set the ep square in the FEN output\n          if (isLegal) {\n            epSquare = algebraic(this._epSquare)\n            break\n          }\n        }\n      }\n    }\n\n    return [\n      fen,\n      this._turn,\n      castling,\n      epSquare,\n      this._halfMoves,\n      this._moveNumber,\n    ].join(' ')\n  }\n\n  /*\n   * Called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object. If the FEN\n   * is equal to the default position, the SetUp and FEN are deleted the setup\n   * is only updated if history.length is zero, ie moves haven't been made.\n   */\n  private _updateSetup(fen: string) {\n    if (this._history.length > 0) return\n\n    if (fen !== DEFAULT_POSITION) {\n      this._header['SetUp'] = '1'\n      this._header['FEN'] = fen\n    } else {\n      delete this._header['SetUp']\n      delete this._header['FEN']\n    }\n  }\n\n  reset() {\n    this.load(DEFAULT_POSITION)\n  }\n\n  get(square: Square) {\n    return this._board[Ox88[square]] || false\n  }\n\n  put({ type, color }: { type: PieceSymbol; color: Color }, square: Square) {\n    // check for piece\n    if (SYMBOLS.indexOf(type.toLowerCase()) === -1) {\n      return false\n    }\n\n    // check for valid square\n    if (!(square in Ox88)) {\n      return false\n    }\n\n    const sq = Ox88[square]\n\n    // don't let the user place more than one king\n    if (\n      type == KING &&\n      !(this._kings[color] == EMPTY || this._kings[color] == sq)\n    ) {\n      return false\n    }\n\n    this._board[sq] = { type: type as PieceSymbol, color: color as Color }\n\n    if (type === KING) {\n      this._kings[color] = sq\n    }\n\n    this._updateCastlingRights()\n    this._updateEnPassantSquare()\n    this._updateSetup(this.fen())\n\n    return true\n  }\n\n  remove(square: Square) {\n    const piece = this.get(square)\n    delete this._board[Ox88[square]]\n    if (piece && piece.type === KING) {\n      this._kings[piece.color] = EMPTY\n    }\n\n    this._updateCastlingRights()\n    this._updateEnPassantSquare()\n    this._updateSetup(this.fen())\n\n    return piece\n  }\n\n  _updateCastlingRights() {\n    const whiteKingInPlace = (this._board[Ox88.e1]?.type === KING && this._board[Ox88.e1]?.color === WHITE)\n    const blackKingInPlace = (this._board[Ox88.e8]?.type === KING && this._board[Ox88.e8]?.color === BLACK)\n\n    if (!whiteKingInPlace || this._board[Ox88.a1]?.type !== ROOK || this._board[Ox88.a1]?.color !== WHITE) {\n      this._castling.w &= ~BITS.QSIDE_CASTLE\n    }\n\n    if (!whiteKingInPlace || this._board[Ox88.h1]?.type !== ROOK || this._board[Ox88.h1]?.color !== WHITE) {\n      this._castling.w &= ~BITS.KSIDE_CASTLE\n    }\n\n    if (!blackKingInPlace || this._board[Ox88.a8]?.type !== ROOK || this._board[Ox88.a8]?.color !== BLACK) {\n      this._castling.b &= ~BITS.QSIDE_CASTLE\n    }\n\n    if (!blackKingInPlace || this._board[Ox88.h8]?.type !== ROOK || this._board[Ox88.h8]?.color !== BLACK) {\n      this._castling.b &= ~BITS.KSIDE_CASTLE\n    }\n  }\n\n  _updateEnPassantSquare() {\n    if(this._epSquare === EMPTY) {\n      return\n    }\n\n    const startSquare = this._epSquare + (this._turn === WHITE ? -16 : 16)\n    const currentSquare = this._epSquare + (this._turn === WHITE ? 16 : -16)\n    const attackers = [currentSquare + 1, currentSquare - 1]\n\n    if (\n      this._board[startSquare] !== null ||\n      this._board[this._epSquare] !== null ||\n      this._board[currentSquare]?.color !== swapColor(this._turn) ||\n      this._board[currentSquare]?.type !== PAWN\n    ) {\n      this._epSquare = EMPTY\n      return\n    }\n\n    const canCapture = (square: number) =>\n      !(square & 0x88) &&\n      this._board[square]?.color === this._turn &&\n      this._board[square]?.type === PAWN;\n\n    if(!attackers.some(canCapture)) {\n      this._epSquare = EMPTY\n    }\n  }\n\n  _attacked(color: Color, square: number) {\n    for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n      // did we run off the end of the board\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      // if empty square or wrong color\n      if (this._board[i] === undefined || this._board[i].color !== color) {\n        continue\n      }\n\n      const piece = this._board[i]\n      const difference = i - square\n\n      // skip - to/from square are the same\n      if (difference === 0) {\n        continue\n      }\n\n      const index = difference + 119\n\n      if (ATTACKS[index] & PIECE_MASKS[piece.type]) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true\n          } else {\n            if (piece.color === BLACK) return true\n          }\n          continue\n        }\n\n        // if the piece is a knight or a king\n        if (piece.type === 'n' || piece.type === 'k') return true\n\n        const offset = RAYS[index]\n        let j = i + offset\n\n        let blocked = false\n        while (j !== square) {\n          if (this._board[j] != null) {\n            blocked = true\n            break\n          }\n          j += offset\n        }\n\n        if (!blocked) return true\n      }\n    }\n\n    return false\n  }\n\n  private _isKingAttacked(color: Color) {\n    const square = this._kings[color]\n    return square === -1 ? false : this._attacked(swapColor(color), square)\n  }\n\n  isAttacked(square: Square, attackedBy: Color) {\n    return this._attacked(attackedBy, Ox88[square])\n  }\n\n  isCheck() {\n    return this._isKingAttacked(this._turn)\n  }\n\n  inCheck() {\n    return this.isCheck()\n  }\n\n  isCheckmate() {\n    return this.isCheck() && this._moves().length === 0\n  }\n\n  isStalemate() {\n    return !this.isCheck() && this._moves().length === 0\n  }\n\n  isInsufficientMaterial() {\n    /*\n     * k.b. vs k.b. (of opposite colors) with mate in 1:\n     * 8/8/8/8/1b6/8/B1k5/K7 b - - 0 1\n     *\n     * k.b. vs k.n. with mate in 1:\n     * 8/8/8/8/1n6/8/B7/K1k5 b - - 2 1\n     */\n    const pieces: Record<PieceSymbol, number> = {\n      b: 0,\n      n: 0,\n      r: 0,\n      q: 0,\n      k: 0,\n      p: 0,\n    }\n    const bishops = []\n    let numPieces = 0\n    let squareColor = 0\n\n    for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n      squareColor = (squareColor + 1) % 2\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      const piece = this._board[i]\n      if (piece) {\n        pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\n        if (piece.type === BISHOP) {\n          bishops.push(squareColor)\n        }\n        numPieces++\n      }\n    }\n\n    // k vs. k\n    if (numPieces === 2) {\n      return true\n    } else if (\n      // k vs. kn .... or .... k vs. kb\n      numPieces === 3 &&\n      (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\n    ) {\n      return true\n    } else if (numPieces === pieces[BISHOP] + 2) {\n      // kb vs. kb where any number of bishops are all on the same color\n      let sum = 0\n      const len = bishops.length\n      for (let i = 0; i < len; i++) {\n        sum += bishops[i]\n      }\n      if (sum === 0 || sum === len) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  isThreefoldRepetition() {\n    const moves = []\n    const positions: Record<string, number> = {}\n    let repetition = false\n\n    while (true) {\n      const move = this._undoMove()\n      if (!move) break\n      moves.push(move)\n    }\n\n    while (true) {\n      /*\n       * remove the last two fields in the FEN string, they're not needed when\n       * checking for draw by rep\n       */\n      const fen = this.fen().split(' ').slice(0, 4).join(' ')\n\n      // has the position occurred three or move times\n      positions[fen] = fen in positions ? positions[fen] + 1 : 1\n      if (positions[fen] >= 3) {\n        repetition = true\n      }\n\n      const move = moves.pop()\n\n      if (!move) {\n        break\n      } else {\n        this._makeMove(move)\n      }\n    }\n\n    return repetition\n  }\n\n  isDraw() {\n    return (\n      this._halfMoves >= 100 || // 50 moves per side = 100 half moves\n      this.isStalemate() ||\n      this.isInsufficientMaterial() ||\n      this.isThreefoldRepetition()\n    )\n  }\n\n  isGameOver() {\n    return this.isCheckmate() || this.isStalemate() || this.isDraw()\n  }\n\n  moves(): string[]\n  moves({ square }: { square: Square }): string[]\n  moves({ piece }: { piece: PieceSymbol }): string[]\n\n  moves({ square, piece }: { square: Square; piece: PieceSymbol }): string[]\n\n  moves({ verbose, square }: { verbose: true; square?: Square }): Move[]\n  moves({ verbose, square }: { verbose: false; square?: Square }): string[]\n  moves({\n    verbose,\n    square,\n  }: {\n    verbose?: boolean\n    square?: Square\n  }): string[] | Move[]\n\n  moves({ verbose, piece }: { verbose: true; piece?: PieceSymbol }): Move[]\n  moves({ verbose, piece }: { verbose: false; piece?: PieceSymbol }): string[]\n  moves({\n    verbose,\n    piece,\n  }: {\n    verbose?: boolean\n    piece?: PieceSymbol\n  }): string[] | Move[]\n\n  moves({\n    verbose,\n    square,\n    piece,\n  }: {\n    verbose: true\n    square?: Square\n    piece?: PieceSymbol\n  }): Move[]\n  moves({\n    verbose,\n    square,\n    piece,\n  }: {\n    verbose: false\n    square?: Square\n    piece?: PieceSymbol\n  }): string[]\n  moves({\n    verbose,\n    square,\n    piece,\n  }: {\n    verbose?: boolean\n    square?: Square\n    piece?: PieceSymbol\n  }): string[] | Move[]\n\n  moves({ square, piece }: { square?: Square; piece?: PieceSymbol }): Move[]\n\n  moves({\n    verbose = false,\n    square = undefined,\n    piece = undefined,\n  }: { verbose?: boolean; square?: Square; piece?: PieceSymbol } = {}) {\n    const moves = this._moves({ square, piece })\n\n    if (verbose) {\n      return moves.map((move) => this._makePretty(move))\n    } else {\n      return moves.map((move) => this._moveToSan(move, moves))\n    }\n  }\n\n  _moves({\n    legal = true,\n    piece = undefined,\n    square = undefined,\n  }: {\n    legal?: boolean\n    piece?: PieceSymbol\n    square?: Square\n  } = {}) {\n    const forSquare = square ? (square.toLowerCase() as Square) : undefined\n    const forPiece = piece?.toLowerCase()\n\n    const moves: InternalMove[] = []\n    const us = this._turn\n    const them = swapColor(us)\n\n    let firstSquare = Ox88.a8\n    let lastSquare = Ox88.h1\n    let singleSquare = false\n\n    // are we generating moves for a single square?\n    if (forSquare) {\n      // illegal square, return empty moves\n      if (!(forSquare in Ox88)) {\n        return []\n      } else {\n        firstSquare = lastSquare = Ox88[forSquare]\n        singleSquare = true\n      }\n    }\n\n    for (let from = firstSquare; from <= lastSquare; from++) {\n      // did we run off the end of the board\n      if (from & 0x88) {\n        from += 7\n        continue\n      }\n\n      // empty square or opponent, skip\n      if (!this._board[from] || this._board[from].color === them) {\n        continue\n      }\n      const { type } = this._board[from]\n\n      let to: number\n      if (type === PAWN) {\n        if (forPiece && forPiece !== type) continue\n\n        // single square, non-capturing\n        to = from + PAWN_OFFSETS[us][0]\n        if (!this._board[to]) {\n          addMove(moves, us, from, to, PAWN)\n\n          // double square\n          to = from + PAWN_OFFSETS[us][1]\n          if (SECOND_RANK[us] === rank(from) && !this._board[to]) {\n            addMove(moves, us, from, to, PAWN, undefined, BITS.BIG_PAWN)\n          }\n        }\n\n        // pawn captures\n        for (let j = 2; j < 4; j++) {\n          to = from + PAWN_OFFSETS[us][j]\n          if (to & 0x88) continue\n\n          if (this._board[to]?.color === them) {\n            addMove(\n              moves,\n              us,\n              from,\n              to,\n              PAWN,\n              this._board[to].type,\n              BITS.CAPTURE\n            )\n          } else if (to === this._epSquare) {\n            addMove(moves, us, from, to, PAWN, PAWN, BITS.EP_CAPTURE)\n          }\n        }\n      } else {\n        if (forPiece && forPiece !== type) continue\n\n        for (let j = 0, len = PIECE_OFFSETS[type].length; j < len; j++) {\n          const offset = PIECE_OFFSETS[type][j]\n          to = from\n\n          while (true) {\n            to += offset\n            if (to & 0x88) break\n\n            if (!this._board[to]) {\n              addMove(moves, us, from, to, type)\n            } else {\n              // own color, stop loop\n              if (this._board[to].color === us) break\n\n              addMove(\n                moves,\n                us,\n                from,\n                to,\n                type,\n                this._board[to].type,\n                BITS.CAPTURE\n              )\n              break\n            }\n\n            /* break, if knight or king */\n            if (type === KNIGHT || type === KING) break\n          }\n        }\n      }\n    }\n\n    /*\n     * check for castling if we're:\n     *   a) generating all moves, or\n     *   b) doing single square move generation on the king's square\n     */\n\n    if (forPiece === undefined || forPiece === KING) {\n      if (!singleSquare || lastSquare === this._kings[us]) {\n        // king-side castling\n        if (this._castling[us] & BITS.KSIDE_CASTLE) {\n          const castlingFrom = this._kings[us]\n          const castlingTo = castlingFrom + 2\n\n          if (\n            !this._board[castlingFrom + 1] &&\n            !this._board[castlingTo] &&\n            !this._attacked(them, this._kings[us]) &&\n            !this._attacked(them, castlingFrom + 1) &&\n            !this._attacked(them, castlingTo)\n          ) {\n            addMove(\n              moves,\n              us,\n              this._kings[us],\n              castlingTo,\n              KING,\n              undefined,\n              BITS.KSIDE_CASTLE\n            )\n          }\n        }\n\n        // queen-side castling\n        if (this._castling[us] & BITS.QSIDE_CASTLE) {\n          const castlingFrom = this._kings[us]\n          const castlingTo = castlingFrom - 2\n\n          if (\n            !this._board[castlingFrom - 1] &&\n            !this._board[castlingFrom - 2] &&\n            !this._board[castlingFrom - 3] &&\n            !this._attacked(them, this._kings[us]) &&\n            !this._attacked(them, castlingFrom - 1) &&\n            !this._attacked(them, castlingTo)\n          ) {\n            addMove(\n              moves,\n              us,\n              this._kings[us],\n              castlingTo,\n              KING,\n              undefined,\n              BITS.QSIDE_CASTLE\n            )\n          }\n        }\n      }\n    }\n\n    /*\n     * return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal || this._kings[us] === -1) {\n      return moves\n    }\n\n    // filter out illegal moves\n    const legalMoves = []\n\n    for (let i = 0, len = moves.length; i < len; i++) {\n      this._makeMove(moves[i])\n      if (!this._isKingAttacked(us)) {\n        legalMoves.push(moves[i])\n      }\n      this._undoMove()\n    }\n\n    return legalMoves\n  }\n\n  move(\n    move: string | { from: string; to: string; promotion?: string },\n    { strict = false }: { strict?: boolean } = {}\n  ) {\n    /*\n     * The move function can be called with in the following parameters:\n     *\n     * .move('Nxb7')       <- argument is a case-sensitive SAN string\n     *\n     * .move({ from: 'h7', <- argument is a move object\n     *         to :'h8',\n     *         promotion: 'q' })\n     *\n     *\n     * An optional strict argument may be supplied to tell chess.js to\n     * strictly follow the SAN specification.\n     */\n\n    let moveObj = null\n\n    if (typeof move === 'string') {\n      moveObj = this._moveFromSan(move, strict)\n    } else if (typeof move === 'object') {\n      const moves = this._moves()\n\n      // convert the pretty move object to an ugly move object\n      for (let i = 0, len = moves.length; i < len; i++) {\n        if (\n          move.from === algebraic(moves[i].from) &&\n          move.to === algebraic(moves[i].to) &&\n          (!('promotion' in moves[i]) || move.promotion === moves[i].promotion)\n        ) {\n          moveObj = moves[i]\n          break\n        }\n      }\n    }\n\n    // failed to find move\n    if (!moveObj) {\n      if (typeof move === 'string') {\n        throw new Error(`Invalid move: ${move}`)\n      } else {\n        throw new Error(`Invalid move: ${JSON.stringify(move)}`)\n      }\n    }\n\n    /*\n     * need to make a copy of move because we can't generate SAN after the move\n     * is made\n     */\n    const prettyMove = this._makePretty(moveObj)\n\n    this._makeMove(moveObj)\n\n    return prettyMove\n  }\n\n  _push(move: InternalMove) {\n    this._history.push({\n      move,\n      kings: { b: this._kings.b, w: this._kings.w },\n      turn: this._turn,\n      castling: { b: this._castling.b, w: this._castling.w },\n      epSquare: this._epSquare,\n      halfMoves: this._halfMoves,\n      moveNumber: this._moveNumber,\n    })\n  }\n\n  private _makeMove(move: InternalMove) {\n    const us = this._turn\n    const them = swapColor(us)\n    this._push(move)\n\n    this._board[move.to] = this._board[move.from]\n    delete this._board[move.from]\n\n    // if ep capture, remove the captured pawn\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (this._turn === BLACK) {\n        delete this._board[move.to - 16]\n      } else {\n        delete this._board[move.to + 16]\n      }\n    }\n\n    // if pawn promotion, replace with new piece\n    if (move.promotion) {\n      this._board[move.to] = { type: move.promotion, color: us }\n    }\n\n    // if we moved the king\n    if (this._board[move.to].type === KING) {\n      this._kings[us] = move.to\n\n      // if we castled, move the rook next to the king\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        const castlingTo = move.to - 1\n        const castlingFrom = move.to + 1\n        this._board[castlingTo] = this._board[castlingFrom]\n        delete this._board[castlingFrom]\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        const castlingTo = move.to + 1\n        const castlingFrom = move.to - 2\n        this._board[castlingTo] = this._board[castlingFrom]\n        delete this._board[castlingFrom]\n      }\n\n      // turn off castling\n      this._castling[us] = 0\n    }\n\n    // turn off castling if we move a rook\n    if (this._castling[us]) {\n      for (let i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (\n          move.from === ROOKS[us][i].square &&\n          this._castling[us] & ROOKS[us][i].flag\n        ) {\n          this._castling[us] ^= ROOKS[us][i].flag\n          break\n        }\n      }\n    }\n\n    // turn off castling if we capture a rook\n    if (this._castling[them]) {\n      for (let i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (\n          move.to === ROOKS[them][i].square &&\n          this._castling[them] & ROOKS[them][i].flag\n        ) {\n          this._castling[them] ^= ROOKS[them][i].flag\n          break\n        }\n      }\n    }\n\n    // if big pawn move, update the en passant square\n    if (move.flags & BITS.BIG_PAWN) {\n      if (us === BLACK) {\n        this._epSquare = move.to - 16\n      } else {\n        this._epSquare = move.to + 16\n      }\n    } else {\n      this._epSquare = EMPTY\n    }\n\n    // reset the 50 move counter if a pawn is moved or a piece is captured\n    if (move.piece === PAWN) {\n      this._halfMoves = 0\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      this._halfMoves = 0\n    } else {\n      this._halfMoves++\n    }\n\n    if (us === BLACK) {\n      this._moveNumber++\n    }\n\n    this._turn = them\n  }\n\n  undo() {\n    const move = this._undoMove()\n    return move ? this._makePretty(move) : null\n  }\n\n  private _undoMove() {\n    const old = this._history.pop()\n    if (old === undefined) {\n      return null\n    }\n\n    const move = old.move\n\n    this._kings = old.kings\n    this._turn = old.turn\n    this._castling = old.castling\n    this._epSquare = old.epSquare\n    this._halfMoves = old.halfMoves\n    this._moveNumber = old.moveNumber\n\n    const us = this._turn\n    const them = swapColor(us)\n\n    this._board[move.from] = this._board[move.to]\n    this._board[move.from].type = move.piece // to undo any promotions\n    delete this._board[move.to]\n\n    if (move.captured) {\n      if (move.flags & BITS.EP_CAPTURE) {\n        // en passant capture\n        let index: number\n        if (us === BLACK) {\n          index = move.to - 16\n        } else {\n          index = move.to + 16\n        }\n        this._board[index] = { type: PAWN, color: them }\n      } else {\n        // regular capture\n        this._board[move.to] = { type: move.captured, color: them }\n      }\n    }\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      let castlingTo: number, castlingFrom: number\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castlingTo = move.to + 1\n        castlingFrom = move.to - 1\n      } else {\n        castlingTo = move.to - 2\n        castlingFrom = move.to + 1\n      }\n\n      this._board[castlingTo] = this._board[castlingFrom]\n      delete this._board[castlingFrom]\n    }\n\n    return move\n  }\n\n  pgn({\n    newline = '\\n',\n    maxWidth = 0,\n  }: { newline?: string; maxWidth?: number } = {}) {\n    /*\n     * using the specification from http://www.chessclub.com/help/PGN-spec\n     * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n     */\n\n    const result: string[] = []\n    let headerExists = false\n\n    /* add the PGN header information */\n    for (const i in this._header) {\n      /*\n       * TODO: order of enumerated properties in header object is not\n       * guaranteed, see ECMA-262 spec (section 12.6.4)\n       */\n      result.push('[' + i + ' \"' + this._header[i] + '\"]' + newline)\n      headerExists = true\n    }\n\n    if (headerExists && this._history.length) {\n      result.push(newline)\n    }\n\n    const appendComment = (moveString: string) => {\n      const comment = this._comments[this.fen()]\n      if (typeof comment !== 'undefined') {\n        const delimiter = moveString.length > 0 ? ' ' : ''\n        moveString = `${moveString}${delimiter}{${comment}}`\n      }\n      return moveString\n    }\n\n    // pop all of history onto reversed_history\n    const reversedHistory = []\n    while (this._history.length > 0) {\n      reversedHistory.push(this._undoMove())\n    }\n\n    const moves = []\n    let moveString = ''\n\n    // special case of a commented starting position with no moves\n    if (reversedHistory.length === 0) {\n      moves.push(appendComment(''))\n    }\n\n    // build the list of moves.  a move_string looks like: \"3. e3 e6\"\n    while (reversedHistory.length > 0) {\n      moveString = appendComment(moveString)\n      const move = reversedHistory.pop()\n\n      // make TypeScript stop complaining about move being undefined\n      if (!move) {\n        break\n      }\n\n      // if the position started with black to move, start PGN with #. ...\n      if (!this._history.length && move.color === 'b') {\n        const prefix = `${this._moveNumber}. ...`\n        // is there a comment preceding the first move?\n        moveString = moveString ? `${moveString} ${prefix}` : prefix\n      } else if (move.color === 'w') {\n        // store the previous generated move_string if we have one\n        if (moveString.length) {\n          moves.push(moveString)\n        }\n        moveString = this._moveNumber + '.'\n      }\n\n      moveString =\n        moveString + ' ' + this._moveToSan(move, this._moves({ legal: true }))\n      this._makeMove(move)\n    }\n\n    // are there any other leftover moves?\n    if (moveString.length) {\n      moves.push(appendComment(moveString))\n    }\n\n    // is there a result?\n    if (typeof this._header.Result !== 'undefined') {\n      moves.push(this._header.Result)\n    }\n\n    /*\n     * history should be back to what it was before we started generating PGN,\n     * so join together moves\n     */\n    if (maxWidth === 0) {\n      return result.join('') + moves.join(' ')\n    }\n\n    // TODO (jah): huh?\n    const strip = function () {\n      if (result.length > 0 && result[result.length - 1] === ' ') {\n        result.pop()\n        return true\n      }\n      return false\n    }\n\n    // NB: this does not preserve comment whitespace.\n    const wrapComment = function (width: number, move: string) {\n      for (const token of move.split(' ')) {\n        if (!token) {\n          continue\n        }\n        if (width + token.length > maxWidth) {\n          while (strip()) {\n            width--\n          }\n          result.push(newline)\n          width = 0\n        }\n        result.push(token)\n        width += token.length\n        result.push(' ')\n        width++\n      }\n      if (strip()) {\n        width--\n      }\n      return width\n    }\n\n    // wrap the PGN output at max_width\n    let currentWidth = 0\n    for (let i = 0; i < moves.length; i++) {\n      if (currentWidth + moves[i].length > maxWidth) {\n        if (moves[i].includes('{')) {\n          currentWidth = wrapComment(currentWidth, moves[i])\n          continue\n        }\n      }\n      // if the current move will push past max_width\n      if (currentWidth + moves[i].length > maxWidth && i !== 0) {\n        // don't end the line with whitespace\n        if (result[result.length - 1] === ' ') {\n          result.pop()\n        }\n\n        result.push(newline)\n        currentWidth = 0\n      } else if (i !== 0) {\n        result.push(' ')\n        currentWidth++\n      }\n      result.push(moves[i])\n      currentWidth += moves[i].length\n    }\n\n    return result.join('')\n  }\n\n  header(...args: string[]) {\n    for (let i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n        this._header[args[i]] = args[i + 1]\n      }\n    }\n    return this._header\n  }\n\n  loadPgn(\n    pgn: string,\n    {\n      strict = false,\n      newlineChar = '\\r?\\n',\n    }: { strict?: boolean; newlineChar?: string } = {}\n  ) {\n    function mask(str: string): string {\n      return str.replace(/\\\\/g, '\\\\')\n    }\n\n    function parsePgnHeader(header: string): { [key: string]: string } {\n      const headerObj: Record<string, string> = {}\n      const headers = header.split(new RegExp(mask(newlineChar)))\n      let key = ''\n      let value = ''\n\n      for (let i = 0; i < headers.length; i++) {\n        const regex = /^\\s*\\[\\s*([A-Za-z]+)\\s*\"(.*)\"\\s*\\]\\s*$/\n        key = headers[i].replace(regex, '$1')\n        value = headers[i].replace(regex, '$2')\n        if (key.trim().length > 0) {\n          headerObj[key] = value\n        }\n      }\n\n      return headerObj\n    }\n\n    // strip whitespace from head/tail of PGN block\n    pgn = pgn.trim()\n\n    /*\n     * RegExp to split header. Takes advantage of the fact that header and movetext\n     * will always have a blank line between them (ie, two newline_char's). Handles\n     * case where movetext is empty by matching newlineChar until end of string is\n     * matched - effectively trimming from the end extra newlineChar.\n     *\n     * With default newline_char, will equal:\n     * /^(\\[((?:\\r?\\n)|.)*\\])((?:\\s*\\r?\\n){2}|(?:\\s*\\r?\\n)*$)/\n     */\n    const headerRegex = new RegExp(\n      '^(\\\\[((?:' +\n        mask(newlineChar) +\n        ')|.)*\\\\])' +\n        '((?:\\\\s*' +\n        mask(newlineChar) +\n        '){2}|(?:\\\\s*' +\n        mask(newlineChar) +\n        ')*$)'\n    )\n\n    // If no header given, begin with moves.\n    const headerRegexResults = headerRegex.exec(pgn)\n    const headerString = headerRegexResults\n      ? headerRegexResults.length >= 2\n        ? headerRegexResults[1]\n        : ''\n      : ''\n\n    // Put the board in the starting position\n    this.reset()\n\n    // parse PGN header\n    const headers = parsePgnHeader(headerString)\n    let fen = ''\n\n    for (const key in headers) {\n      // check to see user is including fen (possibly with wrong tag case)\n      if (key.toLowerCase() === 'fen') {\n        fen = headers[key]\n      }\n\n      this.header(key, headers[key])\n    }\n\n    /*\n     * the permissive parser should attempt to load a fen tag, even if it's the\n     * wrong case and doesn't include a corresponding [SetUp \"1\"] tag\n     */\n    if (!strict) {\n      if (fen) {\n        this.load(fen, true)\n      }\n    } else {\n      /*\n       * strict parser - load the starting position indicated by [Setup '1']\n       * and [FEN position]\n       */\n      if (headers['SetUp'] === '1') {\n        if (!('FEN' in headers)) {\n          throw new Error(\n            'Invalid PGN: FEN tag must be supplied with SetUp tag'\n          )\n        }\n        // second argument to load: don't clear the headers\n        this.load(headers['FEN'], true)\n      }\n    }\n\n    /*\n     * NB: the regexes below that delete move numbers, recursive annotations,\n     * and numeric annotation glyphs may also match text in comments. To\n     * prevent this, we transform comments by hex-encoding them in place and\n     * decoding them again after the other tokens have been deleted.\n     *\n     * While the spec states that PGN files should be ASCII encoded, we use\n     * {en,de}codeURIComponent here to support arbitrary UTF8 as a convenience\n     * for modern users\n     */\n\n    function toHex(s: string): string {\n      return Array.from(s)\n        .map(function (c) {\n          /*\n           * encodeURI doesn't transform most ASCII characters, so we handle\n           * these ourselves\n           */\n          return c.charCodeAt(0) < 128\n            ? c.charCodeAt(0).toString(16)\n            : encodeURIComponent(c).replace(/%/g, '').toLowerCase()\n        })\n        .join('')\n    }\n\n    function fromHex(s: string): string {\n      return s.length == 0\n        ? ''\n        : decodeURIComponent('%' + (s.match(/.{1,2}/g) || []).join('%'))\n    }\n\n    const encodeComment = function (s: string) {\n      s = s.replace(new RegExp(mask(newlineChar), 'g'), ' ')\n      return `{${toHex(s.slice(1, s.length - 1))}}`\n    }\n\n    const decodeComment = function (s: string) {\n      if (s.startsWith('{') && s.endsWith('}')) {\n        return fromHex(s.slice(1, s.length - 1))\n      }\n    }\n\n    // delete header to get the moves\n    let ms = pgn\n      .replace(headerString, '')\n      .replace(\n        // encode comments so they don't get deleted below\n        new RegExp(`({[^}]*})+?|;([^${mask(newlineChar)}]*)`, 'g'),\n        function (_match, bracket, semicolon) {\n          return bracket !== undefined\n            ? encodeComment(bracket)\n            : ' ' + encodeComment(`{${semicolon.slice(1)}}`)\n        }\n      )\n      .replace(new RegExp(mask(newlineChar), 'g'), ' ')\n\n    // delete recursive annotation variations\n    const ravRegex = /(\\([^()]+\\))+?/g\n    while (ravRegex.test(ms)) {\n      ms = ms.replace(ravRegex, '')\n    }\n\n    // delete move numbers\n    ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\n\n    // delete ... indicating black to move\n    ms = ms.replace(/\\.\\.\\./g, '')\n\n    /* delete numeric annotation glyphs */\n    ms = ms.replace(/\\$\\d+/g, '')\n\n    // trim and get array of moves\n    let moves = ms.trim().split(new RegExp(/\\s+/))\n\n    // delete empty entries\n    moves = moves.filter((move) => move !== '')\n\n    let result = ''\n\n    for (let halfMove = 0; halfMove < moves.length; halfMove++) {\n      const comment = decodeComment(moves[halfMove])\n      if (comment !== undefined) {\n        this._comments[this.fen()] = comment\n        continue\n      }\n\n      const move = this._moveFromSan(moves[halfMove], strict)\n\n      // invalid move\n      if (move == null) {\n        // was the move an end of game marker\n        if (TERMINATION_MARKERS.indexOf(moves[halfMove]) > -1) {\n          result = moves[halfMove]\n        } else {\n          throw new Error(`Invalid move in PGN: ${moves[halfMove]}`)\n        }\n      } else {\n        // reset the end of game marker if making a valid move\n        result = ''\n        this._makeMove(move)\n      }\n    }\n\n    /*\n     * Per section 8.2.6 of the PGN spec, the Result tag pair must match match\n     * the termination marker. Only do this when headers are present, but the\n     * result tag is missing\n     */\n\n    if (result && Object.keys(this._header).length && !this._header['Result']) {\n      this.header('Result', result)\n    }\n  }\n\n  /*\n   * Convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} strict Use the strict SAN parser. It will throw errors\n   * on overly disambiguated moves (see below):\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n\n  private _moveToSan(move: InternalMove, moves: InternalMove[]) {\n    let output = ''\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O'\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O'\n    } else {\n      if (move.piece !== PAWN) {\n        const disambiguator = getDisambiguator(move, moves)\n        output += move.piece.toUpperCase() + disambiguator\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0]\n        }\n        output += 'x'\n      }\n\n      output += algebraic(move.to)\n\n      if (move.promotion) {\n        output += '=' + move.promotion.toUpperCase()\n      }\n    }\n\n    this._makeMove(move)\n    if (this.isCheck()) {\n      if (this.isCheckmate()) {\n        output += '#'\n      } else {\n        output += '+'\n      }\n    }\n    this._undoMove()\n\n    return output\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  private _moveFromSan(move: string, strict = false): InternalMove | null {\n    // strip off any move decorations: e.g Nf3+?! becomes Nf3\n    const cleanMove = strippedSan(move)\n\n    let pieceType = inferPieceType(cleanMove)\n    let moves = this._moves({ legal: true, piece: pieceType })\n\n    // strict parser\n    for (let i = 0, len = moves.length; i < len; i++) {\n      if (cleanMove === strippedSan(this._moveToSan(moves[i], moves))) {\n        return moves[i]\n      }\n    }\n\n    // the strict parser failed\n    if (strict) {\n      return null\n    }\n\n    let piece = undefined\n    let matches = undefined\n    let from = undefined\n    let to = undefined\n    let promotion = undefined\n\n    /*\n     * The default permissive (non-strict) parser allows the user to parse\n     * non-standard chess notations. This parser is only run after the strict\n     * Standard Algebraic Notation (SAN) parser has failed.\n     *\n     * When running the permissive parser, we'll run a regex to grab the piece, the\n     * to/from square, and an optional promotion piece. This regex will\n     * parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n     * f7f8q, b1c3\n     *\n     * NOTE: Some positions and moves may be ambiguous when using the permissive\n     * parser. For example, in this position: 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1,\n     * the move b1c3 may be interpreted as Nc3 or B1c3 (a disambiguated bishop\n     * move). In these cases, the permissive parser will default to the most\n     * basic interpretation (which is b1c3 parsing to Nc3).\n     */\n\n    let overlyDisambiguated = false\n\n    matches = cleanMove.match(\n      /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n      //     piece         from              to       promotion\n    )\n\n    if (matches) {\n      piece = matches[1]\n      from = matches[2] as Square\n      to = matches[3] as Square\n      promotion = matches[4]\n\n      if (from.length == 1) {\n        overlyDisambiguated = true\n      }\n    } else {\n      /*\n       * The [a-h]?[1-8]? portion of the regex below handles moves that may be\n       * overly disambiguated (e.g. Nge7 is unnecessary and non-standard when\n       * there is one legal knight move to e7). In this case, the value of\n       * 'from' variable will be a rank or file, not a square.\n       */\n\n      matches = cleanMove.match(\n        /([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/\n      )\n\n      if (matches) {\n        piece = matches[1]\n        from = matches[2] as Square\n        to = matches[3] as Square\n        promotion = matches[4]\n\n        if (from.length == 1) {\n          overlyDisambiguated = true\n        }\n      }\n    }\n\n    pieceType = inferPieceType(cleanMove)\n    moves = this._moves({\n      legal: true,\n      piece: piece ? (piece as PieceSymbol) : pieceType,\n    })\n\n    if (!to) {\n      return null;\n    }\n\n    for (let i = 0, len = moves.length; i < len; i++) {\n      if (!from) {\n          // if there is no from square, it could be just 'x' missing from a capture\n          if (cleanMove === strippedSan(this._moveToSan(moves[i], moves)).replace('x', '')) {\n            return moves[i];\n          }\n      // hand-compare move properties with the results from our permissive regex\n      } else if (\n          (!piece || piece.toLowerCase() == moves[i].piece) &&\n          Ox88[from] == moves[i].from &&\n          Ox88[to] == moves[i].to &&\n          (!promotion || promotion.toLowerCase() == moves[i].promotion)\n      ) {\n        return moves[i]\n      } else if (overlyDisambiguated) {\n        /*\n         * SPECIAL CASE: we parsed a move string that may have an unneeded\n         * rank/file disambiguator (e.g. Nge7).  The 'from' variable will\n         */\n\n        const square = algebraic(moves[i].from)\n        if (\n          (!piece || piece.toLowerCase() == moves[i].piece) &&\n          Ox88[to] == moves[i].to &&\n          (from == square[0] || from == square[1]) &&\n          (!promotion || promotion.toLowerCase() == moves[i].promotion)\n        ) {\n          return moves[i]\n        }\n      }\n    }\n\n    return null\n  }\n\n  ascii() {\n    let s = '   +------------------------+\\n'\n    for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n      // display the rank\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |'\n      }\n\n      if (this._board[i]) {\n        const piece = this._board[i].type\n        const color = this._board[i].color\n        const symbol =\n          color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n        s += ' ' + symbol + ' '\n      } else {\n        s += ' . '\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n'\n        i += 8\n      }\n    }\n    s += '   +------------------------+\\n'\n    s += '     a  b  c  d  e  f  g  h'\n\n    return s\n  }\n\n  perft(depth: number) {\n    const moves = this._moves({ legal: false })\n    let nodes = 0\n    const color = this._turn\n\n    for (let i = 0, len = moves.length; i < len; i++) {\n      this._makeMove(moves[i])\n      if (!this._isKingAttacked(color)) {\n        if (depth - 1 > 0) {\n          nodes += this.perft(depth - 1)\n        } else {\n          nodes++\n        }\n      }\n      this._undoMove()\n    }\n\n    return nodes\n  }\n\n  // pretty = external move object\n  private _makePretty(uglyMove: InternalMove): Move {\n    const { color, piece, from, to, flags, captured, promotion } = uglyMove\n\n    let prettyFlags = ''\n\n    for (const flag in BITS) {\n      if (BITS[flag] & flags) {\n        prettyFlags += FLAGS[flag]\n      }\n    }\n\n    const fromAlgebraic = algebraic(from)\n    const toAlgebraic = algebraic(to)\n\n    const move: Move = {\n      color,\n      piece,\n      from: fromAlgebraic,\n      to: toAlgebraic,\n      san: this._moveToSan(uglyMove, this._moves({ legal: true })),\n      flags: prettyFlags,\n      lan: fromAlgebraic + toAlgebraic,\n      before: this.fen(),\n      after: '',\n    }\n\n    // generate the FEN for the 'after' key\n    this._makeMove(uglyMove)\n    move.after = this.fen()\n    this._undoMove()\n\n    if (captured) {\n      move.captured = captured\n    }\n    if (promotion) {\n      move.promotion = promotion\n      move.lan += promotion\n    }\n\n    return move\n  }\n\n  turn() {\n    return this._turn\n  }\n\n  board() {\n    const output = []\n    let row = []\n\n    for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n      if (this._board[i] == null) {\n        row.push(null)\n      } else {\n        row.push({\n          square: algebraic(i),\n          type: this._board[i].type,\n          color: this._board[i].color,\n        })\n      }\n      if ((i + 1) & 0x88) {\n        output.push(row)\n        row = []\n        i += 8\n      }\n    }\n\n    return output\n  }\n\n  squareColor(square: Square) {\n    if (square in Ox88) {\n      const sq = Ox88[square]\n      return (rank(sq) + file(sq)) % 2 === 0 ? 'light' : 'dark'\n    }\n\n    return null\n  }\n\n  history(): string[]\n  history({ verbose }: { verbose: true }): Move[]\n  history({ verbose }: { verbose: false }): string[]\n  history({ verbose }: { verbose: boolean }): string[] | Move[]\n  history({ verbose = false }: { verbose?: boolean } = {}) {\n    const reversedHistory = []\n    const moveHistory = []\n\n    while (this._history.length > 0) {\n      reversedHistory.push(this._undoMove())\n    }\n\n    while (true) {\n      const move = reversedHistory.pop()\n      if (!move) {\n        break\n      }\n\n      if (verbose) {\n        moveHistory.push(this._makePretty(move))\n      } else {\n        moveHistory.push(this._moveToSan(move, this._moves()))\n      }\n      this._makeMove(move)\n    }\n\n    return moveHistory\n  }\n\n  private _pruneComments() {\n    const reversedHistory = []\n    const currentComments: Record<string, string> = {}\n\n    const copyComment = (fen: string) => {\n      if (fen in this._comments) {\n        currentComments[fen] = this._comments[fen]\n      }\n    }\n\n    while (this._history.length > 0) {\n      reversedHistory.push(this._undoMove())\n    }\n\n    copyComment(this.fen())\n\n    while (true) {\n      const move = reversedHistory.pop()\n      if (!move) {\n        break\n      }\n      this._makeMove(move)\n      copyComment(this.fen())\n    }\n    this._comments = currentComments\n  }\n\n  getComment() {\n    return this._comments[this.fen()]\n  }\n\n  setComment(comment: string) {\n    this._comments[this.fen()] = comment.replace('{', '[').replace('}', ']')\n  }\n\n  deleteComment() {\n    const comment = this._comments[this.fen()]\n    delete this._comments[this.fen()]\n    return comment\n  }\n\n  getComments() {\n    this._pruneComments()\n    return Object.keys(this._comments).map((fen: string) => {\n      return { fen: fen, comment: this._comments[fen] }\n    })\n  }\n\n  deleteComments() {\n    this._pruneComments()\n    return Object.keys(this._comments).map((fen) => {\n      const comment = this._comments[fen]\n      delete this._comments[fen]\n      return { fen: fen, comment: comment }\n    })\n  }\n\n  setCastlingRights(color: Color, rights: Partial<Record<typeof KING | typeof QUEEN, boolean>>) {\n    for (const side of [KING, QUEEN] as const) {\n      if (rights[side] !== undefined) {\n        if (rights[side]) {\n          this._castling[color] |= SIDES[side]\n        } else {\n          this._castling[color] &= ~SIDES[side]\n        }\n      }\n    }\n\n    this._updateCastlingRights()\n    const result = this.getCastlingRights(color)\n\n    return (rights[KING] === undefined || rights[KING] === result[KING]) && (rights[QUEEN] === undefined || rights[QUEEN] === result[QUEEN])\n  }\n\n  getCastlingRights(color: Color) {\n    return {\n      [KING]: (this._castling[color] & SIDES[KING]) !== 0,\n      [QUEEN]: (this._castling[color] & SIDES[QUEEN]) !== 0,\n    }\n  }\n\n  moveNumber() {\n    return this._moveNumber\n  }\n}\n","import { getPieceLocations } from './ChessMaths'\nimport { range } from './Actions'\nimport { findPath } from './utils'\n\nexport const NOTE_ON = 144\nexport const CONTROL_CHANGE = 176\n\nexport const NOVATION = [0, 32, 41]\n\nexport const HEADERS = {\n  LaunchpadX: [2, 12],\n  LaunchpadMk2: [2, 24],\n  LaunchpadPro: [2, 16],\n  LaunchpadMini: [2, 14],\n  LaunchpadMiniMk3: [2, 13],\n  LaunchpadS: [32, 0],\n}\n\nexport const NAMES = {\n  'Launchpad MK2 MIDI 1': 'LaunchpadMk2',\n  'Launchpad MK2': 'LaunchpadMk2',\n  'Launchpad X MIDI 2': 'LaunchpadX',\n  'Launchpad X LPX MIDI In': 'LaunchpadX',\n  'Launchpad X LPX MIDI Out': 'LaunchpadX',\n  'MIDIIN2 (LPX MIDI)': 'LaunchpadX',\n  'MIDIOUT2 (LPX MIDI)': 'LaunchpadX',\n  'Launchpad Mini In': 'LaunchpadMini',\n  'Launchpad Mini Out': 'LaunchpadMini',\n  'LPMiniMK3 MIDI In': 'LaunchpadMiniMk3',\n  'LPMiniMK3 MIDI Out': 'LaunchpadMiniMk3',\n}\n\nexport const COLORS = {\n  p: 13,\n  r: 9,\n  n: 45,\n  b: 37,\n  q: 53,\n  k: 49,\n  white: 3,\n  dim_white: 1,\n  black: 0,\n  movable: 21,\n  moved: 89,\n  check: 5,\n  brown: 83,\n}\n\nexport const Launchpad = (state, actions) => ({\n  nToLaunch: n => {\n    /** Convert a 0-63 chess square into a Launchpad MIDI number\n     * @param {int} n - 0-63, chess square\n     */\n    if (state.invert()) {\n      n = 63 - n\n    }\n    return 11 + (n >> 3) * 10 + (n % 8)\n  },\n  launchToN: l => {\n    /** Convert a Launchpad MIDI number into 0-63 for chess squares.\n     * @param {int} l - Launchpad MIDI number\n     */\n    if ((l - 11) % 10 == 8) {\n      // fix for LaunchpadMk2 sending side buttons as NOTE_ON\n      return null\n    }\n    const n = Math.floor((l - 11) / 10) * 8 + ((l - 11) % 10)\n    return state.invert() ? 63 - n : n\n  },\n  squareToN: sq => {\n    return (Number(sq[1]) - 1) * 8 + sq.charCodeAt(0) - 97\n  },\n  nToSquare: n => {\n    return String.fromCharCode(97 + (n % 8), 49 + (n >> 3))\n  },\n  toggleLive: mode => {\n    if (mode === true) {\n      state.connected = true\n    } else if (mode === false) {\n      state.connected = false\n    } else {\n      state.connected = !state.connected\n    }\n    actions.sendSysex(NOVATION, [\n      ...state.header,\n      state.changeLayout,\n      state.connected ? state.layout[1] : state.layout[0],\n    ])\n  },\n  clear: () => {\n    for (var i = 0; i < 64; i++) {\n      actions.send(NOTE_ON, [actions.nToLaunch(i), 0])\n    }\n    state.top.forEach((b, i) => {\n      actions.send(CONTROL_CHANGE, [b, 0])\n    })\n  },\n  grid: () => {\n    for (let y = 0; y < 8; y++) {\n      for (let x = 0; x < 8; x++) {\n        actions.send(NOTE_ON, [11 + x + y * 10, (x + y) % 2 == 0 ? 0 : 1])\n      }\n    }\n  },\n  lightMatrix: m => {\n    for (let y = 0; y < 8; y++) {\n      for (let x = 0; x < 8; x++) {\n        actions.send(NOTE_ON, [11 + x + y * 10, m[x + y * 8]])\n      }\n    }\n  },\n  lightGame: (animate = false) => {\n    const board = state.chess.board()\n    for (let i = 0; i < 64; i++) {\n      let piece\n      let color = 0\n      const l = actions.nToLaunch(i)\n\n      if (board[(63 - i) >> 3][i % 8]) {\n        piece = board[(63 - i) >> 3][i % 8]\n        // console.log('piece at i', i, piece)\n        if (state.pieces) {\n          color = COLORS[piece.type]\n          if (piece.color == 'b') color += 2\n        } else if (state.grid) color = (i + (i >> 3)) % 2 == 0 ? 0 : 1\n      } else {\n        piece = null\n        if (state.grid) color = (i + (i >> 3)) % 2 == 0 ? 0 : 1\n      }\n\n      // console.log(i, piece, l)\n\n      // console.log(NOTE_ON, l, c)\n\n      actions.send(NOTE_ON, [l, color])\n    }\n    let history = state.chess.history()\n    for (let i = 0; i < Math.min(history.length, state.history()); i++) {\n      actions.highlightMove(i, animate)\n    }\n  },\n  highlightMove: (index, animate = false) => {\n    let lastMove = state.chess.history({ verbose: true }).reverse()[index]\n    if (lastMove) {\n      console.log('lastmove ', lastMove)\n      let from_square = lastMove.from\n      let to_square = lastMove.to\n      console.log('highlighting', lastMove, from_square, to_square)\n      let path = findPath(from_square, to_square)\n      // Add an extra final square to the animation list\n      // so the piece holds on the final square before restarting\n      path.push(path[path.length - 1])\n      let piece = lastMove.piece\n      let color = COLORS[piece]\n      if (lastMove.color == 'b') color += 2\n      if (animate) {\n        actions.animatePath(path, color, 0)\n      }\n      if (state.chess.isCheck()) {\n        actions.highlightCheck()\n      }\n      if (state.chess.isCheckmate()) {\n        actions.highlightCheckmate()\n      }\n    }\n  },\n  animatePath: (path, color, step) => {\n    // console.log('animating path', path, step)\n    let current = path.splice(step, 1)[0]\n    path.forEach((square, i) => {\n      actions.send(NOTE_ON | 2, [\n        actions.nToLaunch(square.y * 8 + square.x),\n        COLORS.moved,\n      ])\n    })\n    actions.send(NOTE_ON | 2, [\n      actions.nToLaunch(current.y * 8 + current.x),\n      color,\n    ])\n    path.splice(step, 0, current)\n    // console.log('path', path.length)\n    state.animations.push(\n      setTimeout(\n        actions.animatePath,\n        state.animationDuration,\n        path,\n        color,\n        (step + 1) % path.length\n      )\n    )\n  },\n  clearAnimations: () => {\n    state.animations.forEach((a, i) => {\n      clearTimeout(a)\n    })\n  },\n  highlightCheck: () => {\n    let k = getPieceLocations(state.chess, {\n      type: 'k',\n      color: state.chess.turn(),\n    })[0]\n    console.log('check!', k)\n    actions.send(NOTE_ON | 1, [\n      actions.nToLaunch(actions.squareToN(k)),\n      COLORS.check,\n    ])\n  },\n  highlightCheckmate: () => {\n    let k = getPieceLocations(state.chess, {\n      type: 'k',\n      color: state.chess.turn(),\n    })[0]\n    console.log('mate!', k)\n    actions.send(NOTE_ON, [\n      actions.nToLaunch(actions.squareToN(k)),\n      COLORS.check,\n    ])\n  },\n  highlightAvailableMoves: square => {\n    let s = actions.nToLaunch(actions.squareToN(square))\n    console.log('highlighting', square, s, actions.squareToN(square))\n    actions.send(NOTE_ON | 1, [s, COLORS.movable])\n    let piece_moves = state.chess.moves({ square: square, verbose: true })\n    console.log('possible moves', piece_moves)\n    piece_moves.forEach((p, i) => {\n      // console.log(p)\n      if (state.chess.get(p.to)) {\n        // piece at square. flash green\n        // console.log('capture', actions.nToLaunch(actions.squareToN(p.to)))\n        actions.send(NOTE_ON | 1, [\n          actions.nToLaunch(actions.squareToN(p.to)),\n          COLORS.movable,\n        ])\n      } else {\n        // console.log('regular move', p.to, actions.squareToN(p.to), actions.nToLaunch(actions.squareToN(p.to)))\n        actions.send(NOTE_ON | 2, [\n          actions.nToLaunch(actions.squareToN(p.to)),\n          COLORS.movable,\n        ])\n      }\n    })\n  },\n})\n\nexport const LaunchpadX = (state, actions) => {\n  state.header = [2, 12]\n  state.changeLayout = 14\n  state.layout = [0, 1]\n  return {\n    ...Launchpad(state, actions),\n  }\n}\n\nexport const LaunchpadPro = (state, actions) => {\n  state.header = [2, 16]\n  state.changeLayout = 44\n  state.layout = [0, 3]\n  return {\n    ...Launchpad(state, actions),\n  }\n}\n\nexport const LaunchpadMini = (state, actions) => {\n  state.header = [2, 13]\n  state.changeLayout = 14\n  state.layout = [0, 1]\n  return {\n    ...LaunchpadMk2(state, actions),\n  }\n}\n\nexport const LaunchpadMk2 = (state, actions) => {\n  state.top = range(104, 9)\n  state.header = [2, 24]\n  state.changeLayout = 34\n  state.layout = [0, 0]\n  return {\n    ...Launchpad(state, actions),\n  }\n}\n\nexport const LaunchpadMiniMk3 = (state, actions) => {\n  state.changeLayout = 14\n  state.layout = [0, 1]\n  return {\n    ...Launchpad(state, actions),\n  }\n}\n\nexport const Launchpad1 = (state, actions) => ({\n  ...Launchpad(state, actions),\n  nToLaunch: n => {\n    /** Convert a 0-63 chess square into a Launchpad MIDI number\n     * @param {int} n - 0-63, chess square\n     */\n    if (state.invert()) return 8 - (n % 8) + (n >> 3) * 16\n    else return 112 + (n % 8) - (n >> 3) * 16\n  },\n  launchToN: l => {\n    /** Convert a Launchpad MIDI number into 0-63 for chess squares.\n     * The original Launchpad uses a different grid numbering system than mk2+ Launchpads\n     * @param {int} l - Launchpad MIDI number\n     */\n    if (state.invert()) return Math.floor(l / 16) * 8 + 7 - (l % 8 >> 3)\n    else return (7 - Math.floor(l / 16)) * 8 + (l % 8 >> 3)\n  },\n  toggleLive: mode => {\n    if (mode === true) {\n      state.connected = true\n    } else if (mode === false) {\n      state.connected = false\n    } else {\n      state.connected = !state.connected\n    }\n    actions.send(CONTROL_CHANGE, [0, state.connected ? 1 : 2])\n  },\n  lightMatrix: m => {\n    for (let y = 0; y < 8; y++) {\n      for (let x = 0; x < 8; x++) {\n        actions.send(NOTE_ON, [actions.nToLaunch(x + y * 8), m[x + y * 8]])\n      }\n    }\n  },\n})\n\nexport const Launchpads = {\n  Launchpad: Launchpad1,\n  LaunchpadS: Launchpad1,\n  LaunchpadMk2: LaunchpadMk2,\n  LaunchpadX: LaunchpadX,\n  LaunchpadMini: LaunchpadMini,\n  LaunchpadMiniMk3: LaunchpadMiniMk3,\n  LaunchpadPro: LaunchpadPro,\n}\n","import { Chess } from 'chess.js'\n\nexport const FILES = 'abcdefgh'\n\nlet squares = []\nlet files = [...FILES]\nfiles.forEach(f => {\n  for (let i = 1; i <= 8; i++) {\n    squares.push(f + i)\n  }\n})\n\nexport const SQUARES = squares\n\nexport function uci(move) {\n  let uci = move.from + move.to\n  if (move.promotion) {\n    uci += move.promotion\n  }\n  return uci\n}\n\nexport function calculateInfluence(fen) {\n  let chess = new Chess(fen)\n  let moves = chess.moves({ verbose: true }) //, legal: false})\n  let defenders = Array(64).fill(0)\n  moves.forEach((move, i) => {\n    let index = SQUARES.indexOf(move.to)\n    defenders[index] += 1\n  })\n  SQUARES.forEach((square, i) => {\n    if (chess.get(square) && chess.get(square).color == chess.turn()) {\n      defenders[i] += 1\n    }\n  })\n  return defenders\n}\n\nexport function fenForOtherSide(fen) {\n  let tokens = fen.split(' ')\n  tokens[1] = tokens[1] == 'w' ? 'b' : 'w'\n  // fix for en passant\n  tokens[3] = '-'\n  let newFen = tokens.join(' ')\n  return newFen\n}\n\nexport function makeDests(fen) {\n  let chess = new Chess(fen)\n  let moves = chess.moves({ verbose: true })\n  let dests = {}\n  moves.forEach((m, i) => {\n    if (dests[m.from]) {\n      dests[m.from].push(m.to)\n    } else {\n      dests[m.from] = [m.to]\n    }\n  })\n  // console.log('all possible moves', dests)\n  return dests\n}\n\nexport function getPieceLocations(chess, piece) {\n  let res = []\n  chess.board().map((rank, r) => {\n    rank.map((p, f) => {\n      if (p && p.type == piece.type && p.color == piece.color) {\n        res.push(FILES[f] + (8 - r))\n      }\n    })\n  })\n  return res\n}\n","import m from 'mithril'\nlet Stream = require('mithril/stream')\nimport { Chess } from 'chess.js'\nimport { COLORS } from './Launchpad'\nimport { uci } from './ChessMaths'\nimport { playOtherSide } from './utils'\nimport { auth } from './User'\nimport { Auth } from './Auth'\n\nexport const range = (start, end) =>\n  Array.apply(0, Array(end - 1)).map((element, index) => index + start)\n\nexport const State = () => ({\n  auth: null,\n  loggedIn: Stream(false),\n  user: {\n    username: null,\n    profile: null,\n  },\n  theme: 'dark',\n  input: null,\n  output: null,\n  inputName: null,\n  outputName: null,\n  inputs: Stream([]),\n  outputs: Stream([]),\n  deviceId: null,\n  deviceName: null,\n  deviceType: null,\n  connected: false,\n  top: range(91, 10),\n  header: null,\n  layout: null,\n  changeLayout: null,\n  game: null,\n  games: Stream([]),\n  stream: null, // NDJson stream of games from API\n  opponent: null,\n  chess: new Chess(),\n  ground: null,\n  color: 'w',\n  selectedSquare: null,\n  selectedPiece: null,\n  invert: Stream(false), // flip board\n  grid: true, // show / hide grid\n  pieces: true, // show / hide pieces\n  influence: false, // showInfluence mode\n  history: Stream(1), // number of plys of history to show\n  animationDuration: 400,\n  animations: [],\n  colors: COLORS,\n})\n\nexport const Actions = (state, actions) => ({\n  incrementHistory: () => {\n    state.history(state.history() + 1)\n    actions.lightBoard()\n  },\n  decrementHistory: () => {\n    state.history(Math.max(0, state.history() - 1))\n    actions.lightBoard()\n  },\n  send: (type, message) => {\n    try {\n      state.output.send(type, message)\n    } catch (error) {\n      console.debug('failed to send message', error)\n    }\n  },\n  sendSysex: (header, message) => {\n    try {\n      state.output.sendSysex(header, message)\n    } catch (error) {\n      console.debug('failed to send sysex', error)\n    }\n  },\n  lightMatrix: () => null,\n  lightGame: () => null,\n  clearAnimations: () => null,\n  clear: () => null,\n  highlightAvailableMoves: () => null,\n})\n\nexport const OnlineActions = (state, actions) => ({\n  onmove: (orig, dest) => {\n    let move = { from: orig, to: dest }\n    let piece = state.chess.get(move.from)\n    if (\n      piece.type == 'p' &&\n      ((piece.color == 'w' && move.to.charAt(1) == 8) ||\n        (piece.color == 'b' && move.to.charAt(1) == 1))\n    ) {\n      console.log('promotion! Auto promote to Queen')\n      move.promotion = 'q'\n    }\n    state.chess.move(move)\n    console.log('moved', move, piece, state.chess.ascii())\n    state.ground.set({ fen: state.chess.fen() })\n\n    actions.lightBoard(true)\n    m.redraw()\n    // send to lichess api\n    let move_uci = uci(move)\n    let body = state.auth.fetchBody('/api/board/game/' +\n      m.route.param('id') +\n      '/move/' +\n      move_uci,\n      {\n        method: 'post',\n      })\n    console.log('played move', move_uci, body)\n  },\n})\n","import { SQUARES } from './ChessMaths'\nimport { Graph, astar } from 'javascript-astar'\n\nexport function toDests(chess) {\n  const dests = new Map()\n  SQUARES.forEach(s => {\n    const ms = chess.moves({ square: s, verbose: true })\n    if (ms.length)\n      dests.set(\n        s,\n        ms.map(m => m.to)\n      )\n  })\n  console.log('all moves', dests)\n  return dests\n}\n\nexport function toColor(chess) {\n  return chess.turn() === 'w' ? 'white' : 'black'\n}\n\nexport function playOtherSide(chess, ground) {\n  return (orig, dest) => {\n    chess.move({ from: orig, to: dest })\n    setBoard(chess, ground)\n  }\n}\n\nexport function setBoard(chess, ground) {\n  ground.set({\n    fen: chess.fen(),\n    check: chess.isCheck(),\n    turnColor: toColor(chess),\n    movable: {\n      color: toColor(chess),\n      dests: toDests(chess),\n    },\n  })\n\n  let hist = chess.history({ verbose: true })\n  if (hist.length) {\n    let last = hist.pop()\n    ground.set({\n      lastMove: [last.from, last.to],\n    })\n  }\n}\n\nexport function findPath(from, to) {\n  let graph = new Graph(new Array(8).fill(new Array(8).fill(1)), {\n    diagonal: true,\n  })\n  console.log('finding path', from, to, graph)\n  let start = graph.grid[from.charCodeAt(0) - 97][from.charCodeAt(1) - 49]\n  let end = graph.grid[to.charCodeAt(0) - 97][to.charCodeAt(1) - 49]\n  let path = astar.search(graph, start, end, {\n    heuristic: astar.heuristics.diagonal,\n  })\n  path.unshift(start)\n  console.log('found path', path)\n  return path\n}\n","// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n\n(function(definition) {\n    /* global module, define */\n    if(typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = definition();\n    } else if(typeof define === 'function' && define.amd) {\n        define([], definition);\n    } else {\n        var exports = definition();\n        window.astar = exports.astar;\n        window.Graph = exports.Graph;\n    }\n})(function() {\n\nfunction pathTo(node){\n    var curr = node,\n        path = [];\n    while(curr.parent) {\n        path.unshift(curr);\n        curr = curr.parent;\n    }\n    return path;\n}\n\nfunction getHeap() {\n    return new BinaryHeap(function(node) {\n        return node.f;\n    });\n}\n\nvar astar = {\n    /**\n    * Perform an A* Search on a graph given a start and end node.\n    * @param {Graph} graph\n    * @param {GridNode} start\n    * @param {GridNode} end\n    * @param {Object} [options]\n    * @param {bool} [options.closest] Specifies whether to return the\n               path to the closest node if the target is unreachable.\n    * @param {Function} [options.heuristic] Heuristic function (see\n    *          astar.heuristics).\n    */\n    search: function(graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        var heuristic = options.heuristic || astar.heuristics.manhattan,\n            closest = options.closest || false;\n\n        var openHeap = getHeap(),\n            closestNode = start; // set the start node to be the closest if required\n\n        start.h = heuristic(start, end);\n\n        openHeap.push(start);\n\n        while(openHeap.size() > 0) {\n\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            var currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if(currentNode === end) {\n                return pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            var neighbors = graph.neighbors(currentNode);\n\n            for (var i = 0, il = neighbors.length; i < il; ++i) {\n                var neighbor = neighbors[i];\n\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                var gScore = currentNode.g + neighbor.getCost(currentNode),\n                    beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n                    neighbor.h = neighbor.h || heuristic(neighbor, end);\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    }\n                    else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    },\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    heuristics: {\n        manhattan: function(pos0, pos1) {\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return d1 + d2;\n        },\n        diagonal: function(pos0, pos1) {\n            var D = 1;\n            var D2 = Math.sqrt(2);\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));\n        }\n    },\n    cleanNode:function(node){\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n};\n\n/**\n* A graph memory structure\n* @param {Array} gridIn 2D array of input weights\n* @param {Object} [options]\n* @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed\n*/\nfunction Graph(gridIn, options) {\n    options = options || {};\n    this.nodes = [];\n    this.diagonal = !!options.diagonal;\n    this.grid = [];\n    for (var x = 0; x < gridIn.length; x++) {\n        this.grid[x] = [];\n\n        for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n            var node = new GridNode(x, y, row[y]);\n            this.grid[x][y] = node;\n            this.nodes.push(node);\n        }\n    }\n    this.init();\n}\n\nGraph.prototype.init = function() {\n    this.dirtyNodes = [];\n    for (var i = 0; i < this.nodes.length; i++) {\n        astar.cleanNode(this.nodes[i]);\n    }\n};\n\nGraph.prototype.cleanDirty = function() {\n    for (var i = 0; i < this.dirtyNodes.length; i++) {\n        astar.cleanNode(this.dirtyNodes[i]);\n    }\n    this.dirtyNodes = [];\n};\n\nGraph.prototype.markDirty = function(node) {\n    this.dirtyNodes.push(node);\n};\n\nGraph.prototype.neighbors = function(node) {\n    var ret = [],\n        x = node.x,\n        y = node.y,\n        grid = this.grid;\n\n    // West\n    if(grid[x-1] && grid[x-1][y]) {\n        ret.push(grid[x-1][y]);\n    }\n\n    // East\n    if(grid[x+1] && grid[x+1][y]) {\n        ret.push(grid[x+1][y]);\n    }\n\n    // South\n    if(grid[x] && grid[x][y-1]) {\n        ret.push(grid[x][y-1]);\n    }\n\n    // North\n    if(grid[x] && grid[x][y+1]) {\n        ret.push(grid[x][y+1]);\n    }\n\n    if (this.diagonal) {\n        // Southwest\n        if(grid[x-1] && grid[x-1][y-1]) {\n            ret.push(grid[x-1][y-1]);\n        }\n\n        // Southeast\n        if(grid[x+1] && grid[x+1][y-1]) {\n            ret.push(grid[x+1][y-1]);\n        }\n\n        // Northwest\n        if(grid[x-1] && grid[x-1][y+1]) {\n            ret.push(grid[x-1][y+1]);\n        }\n\n        // Northeast\n        if(grid[x+1] && grid[x+1][y+1]) {\n            ret.push(grid[x+1][y+1]);\n        }\n    }\n\n    return ret;\n};\n\nGraph.prototype.toString = function() {\n    var graphString = [],\n        nodes = this.grid, // when using grid\n        rowDebug, row, y, l;\n    for (var x = 0, len = nodes.length; x < len; x++) {\n        rowDebug = [];\n        row = nodes[x];\n        for (y = 0, l = row.length; y < l; y++) {\n            rowDebug.push(row[y].weight);\n        }\n        graphString.push(rowDebug.join(\" \"));\n    }\n    return graphString.join(\"\\n\");\n};\n\nfunction GridNode(x, y, weight) {\n    this.x = x;\n    this.y = y;\n    this.weight = weight;\n}\n\nGridNode.prototype.toString = function() {\n    return \"[\" + this.x + \" \" + this.y + \"]\";\n};\n\nGridNode.prototype.getCost = function(fromNeighbor) {\n    // Take diagonal weight into consideration.\n    if (fromNeighbor && fromNeighbor.x != this.x && fromNeighbor.y != this.y) {\n        return this.weight * 1.41421;\n    }\n    return this.weight;\n};\n\nGridNode.prototype.isWall = function() {\n    return this.weight === 0;\n};\n\nfunction BinaryHeap(scoreFunction){\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n    push: function(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    },\n    pop: function() {\n        // Store the first element so we can return it later.\n        var result = this.content[0];\n        // Get the element at the end of the array.\n        var end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    },\n    remove: function(node) {\n        var i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        var end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            }\n            else {\n                this.bubbleUp(i);\n            }\n        }\n    },\n    size: function() {\n        return this.content.length;\n    },\n    rescoreElement: function(node) {\n        this.sinkDown(this.content.indexOf(node));\n    },\n    sinkDown: function(n) {\n        // Fetch the element that has to be sunk.\n        var element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n\n            // Compute the parent element's index, and fetch it.\n            var parentN = ((n + 1) >> 1) - 1,\n                parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    },\n    bubbleUp: function(n) {\n        // Look up the target element and its score.\n        var length = this.content.length,\n            element = this.content[n],\n            elemScore = this.scoreFunction(element);\n\n        while(true) {\n            // Compute the indices of the child elements.\n            var child2N = (n + 1) << 1,\n                child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            var swap = null,\n                child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                var child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore){\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                var child2 = this.content[child2N],\n                    child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            }\n            // Otherwise, we are done.\n            else {\n                break;\n            }\n        }\n    }\n};\n\nreturn {\n    astar: astar,\n    Graph: Graph\n};\n\n});\n","import m from 'mithril'\nimport { Auth } from './Auth'\n\n\nexport const UserActions = (state, actions) => ({\n  login: async token => {\n    console.log('logging in')\n    state.auth.login()\n    console.log('logged in as: ', state.user.username)\n    state.user.loggedIn = true\n    if (m.route.param('redirect')) {\n      m.route.set(m.route.param('redirect'))\n    } else if (m.route.get() == '/login') {\n      m.route.set('/')\n    }\n    // m.redraw()\n    state.user.profile = await state.auth.fetchBody('/oauth/profile')\n    state.user.username = state.user.profile.username\n  },\n  logout: () => {\n    console.log('logging out')\n    state.auth.logout()\n    state.user.username = null\n    state.user.loggedIn = false\n    window.localStorage.setItem('CREDENTIALS_FLUSH', Date.now().toString())\n    window.localStorage.removeItem('CREDENTIALS_FLUSH')\n    // m.redraw()\n  },\n  initAuth: async () => {\n    if (localStorage.getItem('me')) {\n      state.user = JSON.parse(localStorage.getItem('me'))\n      state.user.loggedIn = true\n      console.log('loaded user from localstorage', state.user)\n    }\n    state.auth = Auth(state, actions)\n    await state.auth.init()\n    console.log('auth inited')\n  }\n})\n","import m from 'mithril'\nimport { HttpClient, OAuth2AuthCodePKCE } from '@bity/oauth2-auth-code-pkce';\nimport { readStream } from './ndJsonStream';\n\nexport const lichessHost = 'https://lichess.org';\n// export const lichessHost = 'http://l.org';\nexport const scopes = ['board:play'];\nexport const clientId = 'launchchess-client';\nexport const clientUrl = `${location.protocol}//${location.host}${location.pathname}`;\n\nexport interface Me {\n  id: string;\n  username: string;\n  httpClient: HttpClient; // with pre-set Authorization header\n  perfs: { [key: string]: any };\n}\n\nexport const Auth = (state, actions) => ({\n  oauth: new OAuth2AuthCodePKCE({\n    authorizationUrl: `${lichessHost}/oauth`,\n    tokenUrl: `${lichessHost}/api/token`,\n    clientId,\n    scopes,\n    redirectUrl: clientUrl,\n    onAccessTokenExpiry: refreshAccessToken => refreshAccessToken(),\n    onInvalidGrant: console.warn,\n  }),\n  // me?: Me,\n\n  init: async () => {\n    try {\n      const accessContext = await state.auth.oauth.getAccessToken();\n      if (accessContext) await state.auth.authenticate();\n    } catch (err) {\n      console.error(err);\n    }\n    if (!state.loggedIn()) {\n      try {\n        const hasAuthCode = await state.auth.oauth.isReturningFromAuthServer();\n        if (hasAuthCode) await state.auth.authenticate();\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  },\n\n  login: async () => {\n    await state.auth.oauth.fetchAuthorizationCode();\n  },\n\n  logout: async () => {\n    if (state.loggedIn()) await state.user.httpClient(`${lichessHost}/api/token`, { method: 'DELETE' });\n    localStorage.clear();\n    state.user = {};\n  },\n\n  authenticate: async () => {\n    const httpClient = state.auth.oauth.decorateFetchHTTPClient(window.fetch);\n    const res = await httpClient(`${lichessHost}/api/account`);\n    if (res.error) throw res.error;\n    const profile = await res.json()\n    const me = {\n      username: profile.username,\n      profile,\n      httpClient,\n    };\n    state.user = me;\n    state.loggedIn(true);\n    localStorage.setItem('me', JSON.stringify(me));\n    console.log('Authenticated as', me.username, actions);\n    await actions.getGames()\n    m.redraw();\n  },\n\n  openStream: async (path: string, config: any, handler: (_: any) => void) => {\n    const stream = await state.auth.fetchResponse(path, config);\n    return readStream(`STREAM ${path}`, stream, handler);\n  },\n\n  fetchBody: async (path: string, config: any = {}) => {\n    const res = await state.auth.fetchResponse(path, config);\n    const body = await res.json();\n    return body;\n  },\n\n  fetchResponse: async (path: string, config: any = {}) => {\n    const res = await (state.user.httpClient || window.fetch)(`${lichessHost}${path}`, config);\n    if (res.error || !res.ok) {\n      const err = `${res.error} ${res.status} ${res.statusText}`;\n      alert(err);\n      throw err;\n    }\n    return res;\n  },\n})\n","\"use strict\";\n/**\n * An implementation of rfc6749#section-4.1 and rfc7636.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n;\n;\n;\n/**\n * A list of OAuth2AuthCodePKCE errors.\n */\n// To \"namespace\" all errors.\nvar ErrorOAuth2 = /** @class */ (function () {\n    function ErrorOAuth2() {\n    }\n    ErrorOAuth2.prototype.toString = function () { return 'ErrorOAuth2'; };\n    return ErrorOAuth2;\n}());\nexports.ErrorOAuth2 = ErrorOAuth2;\n// For really unknown errors.\nvar ErrorUnknown = /** @class */ (function (_super) {\n    __extends(ErrorUnknown, _super);\n    function ErrorUnknown() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnknown.prototype.toString = function () { return 'ErrorUnknown'; };\n    return ErrorUnknown;\n}(ErrorOAuth2));\nexports.ErrorUnknown = ErrorUnknown;\n// Some generic, internal errors that can happen.\nvar ErrorNoAuthCode = /** @class */ (function (_super) {\n    __extends(ErrorNoAuthCode, _super);\n    function ErrorNoAuthCode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorNoAuthCode.prototype.toString = function () { return 'ErrorNoAuthCode'; };\n    return ErrorNoAuthCode;\n}(ErrorOAuth2));\nexports.ErrorNoAuthCode = ErrorNoAuthCode;\nvar ErrorInvalidReturnedStateParam = /** @class */ (function (_super) {\n    __extends(ErrorInvalidReturnedStateParam, _super);\n    function ErrorInvalidReturnedStateParam() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidReturnedStateParam.prototype.toString = function () { return 'ErrorInvalidReturnedStateParam'; };\n    return ErrorInvalidReturnedStateParam;\n}(ErrorOAuth2));\nexports.ErrorInvalidReturnedStateParam = ErrorInvalidReturnedStateParam;\nvar ErrorInvalidJson = /** @class */ (function (_super) {\n    __extends(ErrorInvalidJson, _super);\n    function ErrorInvalidJson() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidJson.prototype.toString = function () { return 'ErrorInvalidJson'; };\n    return ErrorInvalidJson;\n}(ErrorOAuth2));\nexports.ErrorInvalidJson = ErrorInvalidJson;\n// Errors that occur across many endpoints\nvar ErrorInvalidScope = /** @class */ (function (_super) {\n    __extends(ErrorInvalidScope, _super);\n    function ErrorInvalidScope() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidScope.prototype.toString = function () { return 'ErrorInvalidScope'; };\n    return ErrorInvalidScope;\n}(ErrorOAuth2));\nexports.ErrorInvalidScope = ErrorInvalidScope;\nvar ErrorInvalidRequest = /** @class */ (function (_super) {\n    __extends(ErrorInvalidRequest, _super);\n    function ErrorInvalidRequest() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidRequest.prototype.toString = function () { return 'ErrorInvalidRequest'; };\n    return ErrorInvalidRequest;\n}(ErrorOAuth2));\nexports.ErrorInvalidRequest = ErrorInvalidRequest;\nvar ErrorInvalidToken = /** @class */ (function (_super) {\n    __extends(ErrorInvalidToken, _super);\n    function ErrorInvalidToken() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidToken.prototype.toString = function () { return 'ErrorInvalidToken'; };\n    return ErrorInvalidToken;\n}(ErrorOAuth2));\nexports.ErrorInvalidToken = ErrorInvalidToken;\n/**\n * Possible authorization grant errors given by the redirection from the\n * authorization server.\n */\nvar ErrorAuthenticationGrant = /** @class */ (function (_super) {\n    __extends(ErrorAuthenticationGrant, _super);\n    function ErrorAuthenticationGrant() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAuthenticationGrant.prototype.toString = function () { return 'ErrorAuthenticationGrant'; };\n    return ErrorAuthenticationGrant;\n}(ErrorOAuth2));\nexports.ErrorAuthenticationGrant = ErrorAuthenticationGrant;\nvar ErrorUnauthorizedClient = /** @class */ (function (_super) {\n    __extends(ErrorUnauthorizedClient, _super);\n    function ErrorUnauthorizedClient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnauthorizedClient.prototype.toString = function () { return 'ErrorUnauthorizedClient'; };\n    return ErrorUnauthorizedClient;\n}(ErrorAuthenticationGrant));\nexports.ErrorUnauthorizedClient = ErrorUnauthorizedClient;\nvar ErrorAccessDenied = /** @class */ (function (_super) {\n    __extends(ErrorAccessDenied, _super);\n    function ErrorAccessDenied() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAccessDenied.prototype.toString = function () { return 'ErrorAccessDenied'; };\n    return ErrorAccessDenied;\n}(ErrorAuthenticationGrant));\nexports.ErrorAccessDenied = ErrorAccessDenied;\nvar ErrorUnsupportedResponseType = /** @class */ (function (_super) {\n    __extends(ErrorUnsupportedResponseType, _super);\n    function ErrorUnsupportedResponseType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnsupportedResponseType.prototype.toString = function () { return 'ErrorUnsupportedResponseType'; };\n    return ErrorUnsupportedResponseType;\n}(ErrorAuthenticationGrant));\nexports.ErrorUnsupportedResponseType = ErrorUnsupportedResponseType;\nvar ErrorServerError = /** @class */ (function (_super) {\n    __extends(ErrorServerError, _super);\n    function ErrorServerError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorServerError.prototype.toString = function () { return 'ErrorServerError'; };\n    return ErrorServerError;\n}(ErrorAuthenticationGrant));\nexports.ErrorServerError = ErrorServerError;\nvar ErrorTemporarilyUnavailable = /** @class */ (function (_super) {\n    __extends(ErrorTemporarilyUnavailable, _super);\n    function ErrorTemporarilyUnavailable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorTemporarilyUnavailable.prototype.toString = function () { return 'ErrorTemporarilyUnavailable'; };\n    return ErrorTemporarilyUnavailable;\n}(ErrorAuthenticationGrant));\nexports.ErrorTemporarilyUnavailable = ErrorTemporarilyUnavailable;\n/**\n * A list of possible access token response errors.\n */\nvar ErrorAccessTokenResponse = /** @class */ (function (_super) {\n    __extends(ErrorAccessTokenResponse, _super);\n    function ErrorAccessTokenResponse() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAccessTokenResponse.prototype.toString = function () { return 'ErrorAccessTokenResponse'; };\n    return ErrorAccessTokenResponse;\n}(ErrorOAuth2));\nexports.ErrorAccessTokenResponse = ErrorAccessTokenResponse;\nvar ErrorInvalidClient = /** @class */ (function (_super) {\n    __extends(ErrorInvalidClient, _super);\n    function ErrorInvalidClient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidClient.prototype.toString = function () { return 'ErrorInvalidClient'; };\n    return ErrorInvalidClient;\n}(ErrorAccessTokenResponse));\nexports.ErrorInvalidClient = ErrorInvalidClient;\nvar ErrorInvalidGrant = /** @class */ (function (_super) {\n    __extends(ErrorInvalidGrant, _super);\n    function ErrorInvalidGrant() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidGrant.prototype.toString = function () { return 'ErrorInvalidGrant'; };\n    return ErrorInvalidGrant;\n}(ErrorAccessTokenResponse));\nexports.ErrorInvalidGrant = ErrorInvalidGrant;\nvar ErrorUnsupportedGrantType = /** @class */ (function (_super) {\n    __extends(ErrorUnsupportedGrantType, _super);\n    function ErrorUnsupportedGrantType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnsupportedGrantType.prototype.toString = function () { return 'ErrorUnsupportedGrantType'; };\n    return ErrorUnsupportedGrantType;\n}(ErrorAccessTokenResponse));\nexports.ErrorUnsupportedGrantType = ErrorUnsupportedGrantType;\n/**\n * WWW-Authenticate error object structure for less error prone handling.\n */\nvar ErrorWWWAuthenticate = /** @class */ (function () {\n    function ErrorWWWAuthenticate() {\n        this.realm = \"\";\n        this.error = \"\";\n    }\n    return ErrorWWWAuthenticate;\n}());\nexports.ErrorWWWAuthenticate = ErrorWWWAuthenticate;\nexports.RawErrorToErrorClassMap = {\n    invalid_request: ErrorInvalidRequest,\n    invalid_grant: ErrorInvalidGrant,\n    unauthorized_client: ErrorUnauthorizedClient,\n    access_denied: ErrorAccessDenied,\n    unsupported_response_type: ErrorUnsupportedResponseType,\n    invalid_scope: ErrorInvalidScope,\n    server_error: ErrorServerError,\n    temporarily_unavailable: ErrorTemporarilyUnavailable,\n    invalid_client: ErrorInvalidClient,\n    unsupported_grant_type: ErrorUnsupportedGrantType,\n    invalid_json: ErrorInvalidJson,\n    invalid_token: ErrorInvalidToken,\n};\n/**\n * Translate the raw error strings returned from the server into error classes.\n */\nfunction toErrorClass(rawError) {\n    return new (exports.RawErrorToErrorClassMap[rawError] || ErrorUnknown)();\n}\nexports.toErrorClass = toErrorClass;\n/**\n * A convience function to turn, for example, `Bearer realm=\"bity.com\",\n * error=\"invalid_client\"` into `{ realm: \"bity.com\", error: \"invalid_client\"\n * }`.\n */\nfunction fromWWWAuthenticateHeaderStringToObject(a) {\n    var obj = a\n        .slice(\"Bearer \".length)\n        .replace(/\"/g, '')\n        .split(', ')\n        .map(function (tokens) {\n        var _a;\n        var _b = tokens.split('='), k = _b[0], v = _b[1];\n        return _a = {}, _a[k] = v, _a;\n    })\n        .reduce(function (a, c) { return (__assign(__assign({}, a), c)); }, {});\n    return { realm: obj.realm, error: obj.error };\n}\nexports.fromWWWAuthenticateHeaderStringToObject = fromWWWAuthenticateHeaderStringToObject;\n/**\n * HTTP headers that we need to access.\n */\nvar HEADER_AUTHORIZATION = \"Authorization\";\nvar HEADER_WWW_AUTHENTICATE = \"WWW-Authenticate\";\n/**\n * To store the OAuth client's data between websites due to redirection.\n */\nexports.LOCALSTORAGE_ID = \"oauth2authcodepkce\";\nexports.LOCALSTORAGE_STATE = exports.LOCALSTORAGE_ID + \"-state\";\n/**\n * The maximum length for a code verifier for the best security we can offer.\n * Please note the NOTE section of RFC 7636 § 4.1 - the length must be >= 43,\n * but <= 128, **after** base64 url encoding. This means 32 code verifier bytes\n * encoded will be 43 bytes, or 96 bytes encoded will be 128 bytes. So 96 bytes\n * is the highest valid value that can be used.\n */\nexports.RECOMMENDED_CODE_VERIFIER_LENGTH = 96;\n/**\n * A sensible length for the state's length, for anti-csrf.\n */\nexports.RECOMMENDED_STATE_LENGTH = 32;\n/**\n * Character set to generate code verifier defined in rfc7636.\n */\nvar PKCE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n/**\n * OAuth 2.0 client that ONLY supports authorization code flow, with PKCE.\n *\n * Many applications structure their OAuth usage in different ways. This class\n * aims to provide both flexible and easy ways to use this configuration of\n * OAuth.\n *\n * See `example.ts` for how you'd typically use this.\n *\n * For others, review this class's methods.\n */\nvar OAuth2AuthCodePKCE = /** @class */ (function () {\n    function OAuth2AuthCodePKCE(config) {\n        this.state = {};\n        this.config = config;\n        this.recoverState();\n        return this;\n    }\n    /**\n     * Attach the OAuth logic to all fetch requests and translate errors (either\n     * returned as json or through the WWW-Authenticate header) into nice error\n     * classes.\n     */\n    OAuth2AuthCodePKCE.prototype.decorateFetchHTTPClient = function (fetch) {\n        var _this = this;\n        return function (url, config) {\n            var rest = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                rest[_i - 2] = arguments[_i];\n            }\n            if (!_this.state.isHTTPDecoratorActive) {\n                return fetch.apply(void 0, __spreadArrays([url, config], rest));\n            }\n            return _this\n                .getAccessToken()\n                .then(function (_a) {\n                var token = _a.token;\n                var configNew = Object.assign({}, config);\n                if (!configNew.headers) {\n                    configNew.headers = {};\n                }\n                configNew.headers[HEADER_AUTHORIZATION] = \"Bearer \" + token.value;\n                return fetch.apply(void 0, __spreadArrays([url, configNew], rest));\n            })\n                .then(function (res) {\n                if (res.ok) {\n                    return res;\n                }\n                if (!res.headers.has(HEADER_WWW_AUTHENTICATE.toLowerCase())) {\n                    return res;\n                }\n                var error = toErrorClass(fromWWWAuthenticateHeaderStringToObject(res.headers.get(HEADER_WWW_AUTHENTICATE.toLowerCase())).error);\n                if (error instanceof ErrorInvalidToken) {\n                    _this.config\n                        .onAccessTokenExpiry(function () { return _this.exchangeRefreshTokenForAccessToken(); });\n                }\n                return Promise.reject(error);\n            });\n        };\n    };\n    /**\n     * If there is an error, it will be passed back as a rejected Promise.\n     * If there is no code, the user should be redirected via\n     * [fetchAuthorizationCode].\n     */\n    OAuth2AuthCodePKCE.prototype.isReturningFromAuthServer = function () {\n        var error = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, 'error');\n        if (error) {\n            return Promise.reject(toErrorClass(error));\n        }\n        var code = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, 'code');\n        if (!code) {\n            return Promise.resolve(false);\n        }\n        var state = JSON.parse(localStorage.getItem(exports.LOCALSTORAGE_STATE) || '{}');\n        var stateQueryParam = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, 'state');\n        if (stateQueryParam !== state.stateQueryParam) {\n            console.warn(\"state query string parameter doesn't match the one sent! Possible malicious activity somewhere.\");\n            return Promise.reject(new ErrorInvalidReturnedStateParam());\n        }\n        state.authorizationCode = code;\n        state.hasAuthCodeBeenExchangedForAccessToken = false;\n        localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(state));\n        this.setState(state);\n        return Promise.resolve(true);\n    };\n    /**\n     * Fetch an authorization grant via redirection. In a sense this function\n     * doesn't return because of the redirect behavior (uses `location.replace`).\n     *\n     * @param oneTimeParams A way to specify \"one time\" used query string\n     * parameters during the authorization code fetching process, usually for\n     * values which need to change at run-time.\n     */\n    OAuth2AuthCodePKCE.prototype.fetchAuthorizationCode = function (oneTimeParams) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, clientId, extraAuthorizationParams, redirectUrl, scopes, _b, codeChallenge, codeVerifier, stateQueryParam, url, extraParameters;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        this.assertStateAndConfigArePresent();\n                        _a = this.config, clientId = _a.clientId, extraAuthorizationParams = _a.extraAuthorizationParams, redirectUrl = _a.redirectUrl, scopes = _a.scopes;\n                        return [4 /*yield*/, OAuth2AuthCodePKCE\n                                .generatePKCECodes()];\n                    case 1:\n                        _b = _c.sent(), codeChallenge = _b.codeChallenge, codeVerifier = _b.codeVerifier;\n                        stateQueryParam = OAuth2AuthCodePKCE\n                            .generateRandomState(exports.RECOMMENDED_STATE_LENGTH);\n                        this.state = __assign(__assign({}, this.state), { codeChallenge: codeChallenge,\n                            codeVerifier: codeVerifier,\n                            stateQueryParam: stateQueryParam, isHTTPDecoratorActive: true });\n                        localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(this.state));\n                        url = this.config.authorizationUrl\n                            + \"?response_type=code&\"\n                            + (\"client_id=\" + encodeURIComponent(clientId) + \"&\")\n                            + (\"redirect_uri=\" + encodeURIComponent(redirectUrl) + \"&\")\n                            + (\"scope=\" + encodeURIComponent(scopes.join(' ')) + \"&\")\n                            + (\"state=\" + stateQueryParam + \"&\")\n                            + (\"code_challenge=\" + encodeURIComponent(codeChallenge) + \"&\")\n                            + \"code_challenge_method=S256\";\n                        if (extraAuthorizationParams || oneTimeParams) {\n                            extraParameters = __assign(__assign({}, extraAuthorizationParams), oneTimeParams);\n                            url = url + \"&\" + OAuth2AuthCodePKCE.objectToQueryString(extraParameters);\n                        }\n                        location.replace(url);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Tries to get the current access token. If there is none\n     * it will fetch another one. If it is expired, it will fire\n     * [onAccessTokenExpiry] but it's up to the user to call the refresh token\n     * function. This is because sometimes not using the refresh token facilities\n     * is easier.\n     */\n    OAuth2AuthCodePKCE.prototype.getAccessToken = function () {\n        var _this = this;\n        this.assertStateAndConfigArePresent();\n        var onAccessTokenExpiry = this.config.onAccessTokenExpiry;\n        var _a = this.state, accessToken = _a.accessToken, authorizationCode = _a.authorizationCode, explicitlyExposedTokens = _a.explicitlyExposedTokens, hasAuthCodeBeenExchangedForAccessToken = _a.hasAuthCodeBeenExchangedForAccessToken, refreshToken = _a.refreshToken, scopes = _a.scopes;\n        if (!authorizationCode) {\n            return Promise.reject(new ErrorNoAuthCode());\n        }\n        if (this.authCodeForAccessTokenRequest) {\n            return this.authCodeForAccessTokenRequest;\n        }\n        if (!this.isAuthorized() || !hasAuthCodeBeenExchangedForAccessToken) {\n            this.authCodeForAccessTokenRequest = this.exchangeAuthCodeForAccessToken();\n            return this.authCodeForAccessTokenRequest;\n        }\n        // Depending on the server (and config), refreshToken may not be available.\n        if (refreshToken && this.isAccessTokenExpired()) {\n            return onAccessTokenExpiry(function () { return _this.exchangeRefreshTokenForAccessToken(); });\n        }\n        return Promise.resolve({\n            token: accessToken,\n            explicitlyExposedTokens: explicitlyExposedTokens,\n            scopes: scopes,\n            refreshToken: refreshToken\n        });\n    };\n    /**\n     * Refresh an access token from the remote service.\n     */\n    OAuth2AuthCodePKCE.prototype.exchangeRefreshTokenForAccessToken = function () {\n        var _this = this;\n        var _a;\n        this.assertStateAndConfigArePresent();\n        var _b = this.config, extraRefreshParams = _b.extraRefreshParams, clientId = _b.clientId, tokenUrl = _b.tokenUrl;\n        var refreshToken = this.state.refreshToken;\n        if (!refreshToken) {\n            console.warn('No refresh token is present.');\n        }\n        var url = tokenUrl;\n        var body = \"grant_type=refresh_token&\"\n            + (\"refresh_token=\" + ((_a = refreshToken) === null || _a === void 0 ? void 0 : _a.value) + \"&\")\n            + (\"client_id=\" + clientId);\n        if (extraRefreshParams) {\n            body = url + \"&\" + OAuth2AuthCodePKCE.objectToQueryString(extraRefreshParams);\n        }\n        return fetch(url, {\n            method: 'POST',\n            body: body,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n            .then(function (res) { return res.status >= 400 ? res.json().then(function (data) { return Promise.reject(data); }) : res.json(); })\n            .then(function (json) {\n            var access_token = json.access_token, expires_in = json.expires_in, refresh_token = json.refresh_token, scope = json.scope;\n            var explicitlyExposedTokens = _this.config.explicitlyExposedTokens;\n            var scopes = [];\n            var tokensToExpose = {};\n            var accessToken = {\n                value: access_token,\n                expiry: (new Date(Date.now() + (parseInt(expires_in) * 1000))).toString()\n            };\n            _this.state.accessToken = accessToken;\n            if (refresh_token) {\n                var refreshToken_1 = {\n                    value: refresh_token\n                };\n                _this.state.refreshToken = refreshToken_1;\n            }\n            if (explicitlyExposedTokens) {\n                tokensToExpose = Object.fromEntries(explicitlyExposedTokens\n                    .map(function (tokenName) { return [tokenName, json[tokenName]]; })\n                    .filter(function (_a) {\n                    var _ = _a[0], tokenValue = _a[1];\n                    return tokenValue !== undefined;\n                }));\n                _this.state.explicitlyExposedTokens = tokensToExpose;\n            }\n            if (scope) {\n                // Multiple scopes are passed and delimited by spaces,\n                // despite using the singular name \"scope\".\n                scopes = scope.split(' ');\n                _this.state.scopes = scopes;\n            }\n            localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(_this.state));\n            var accessContext = { token: accessToken, scopes: scopes };\n            if (explicitlyExposedTokens) {\n                accessContext.explicitlyExposedTokens = tokensToExpose;\n            }\n            return accessContext;\n        })\n            .catch(function (data) {\n            var onInvalidGrant = _this.config.onInvalidGrant;\n            var error = data.error || 'There was a network error.';\n            switch (error) {\n                case 'invalid_grant':\n                    onInvalidGrant(function () { return _this.fetchAuthorizationCode(); });\n                    break;\n                default:\n                    break;\n            }\n            return Promise.reject(toErrorClass(error));\n        });\n    };\n    /**\n     * Get the scopes that were granted by the authorization server.\n     */\n    OAuth2AuthCodePKCE.prototype.getGrantedScopes = function () {\n        return this.state.scopes;\n    };\n    /**\n     * Signals if OAuth HTTP decorating should be active or not.\n     */\n    OAuth2AuthCodePKCE.prototype.isHTTPDecoratorActive = function (isActive) {\n        this.state.isHTTPDecoratorActive = isActive;\n        localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(this.state));\n    };\n    /**\n     * Tells if the client is authorized or not. This means the client has at\n     * least once successfully fetched an access token. The access token could be\n     * expired.\n     */\n    OAuth2AuthCodePKCE.prototype.isAuthorized = function () {\n        return !!this.state.accessToken;\n    };\n    /**\n     * Checks to see if the access token has expired.\n     */\n    OAuth2AuthCodePKCE.prototype.isAccessTokenExpired = function () {\n        var accessToken = this.state.accessToken;\n        return Boolean(accessToken && (new Date()) >= (new Date(accessToken.expiry)));\n    };\n    /**\n     * Resets the state of the client. Equivalent to \"logging out\" the user.\n     */\n    OAuth2AuthCodePKCE.prototype.reset = function () {\n        this.setState({});\n        this.authCodeForAccessTokenRequest = undefined;\n    };\n    /**\n     * If the state or config are missing, it means the client is in a bad state.\n     * This should never happen, but the check is there just in case.\n     */\n    OAuth2AuthCodePKCE.prototype.assertStateAndConfigArePresent = function () {\n        if (!this.state || !this.config) {\n            console.error('state:', this.state, 'config:', this.config);\n            throw new Error('state or config is not set.');\n        }\n    };\n    /**\n     * Fetch an access token from the remote service. You may pass a custom\n     * authorization grant code for any reason, but this is non-standard usage.\n     */\n    OAuth2AuthCodePKCE.prototype.exchangeAuthCodeForAccessToken = function (codeOverride) {\n        var _this = this;\n        this.assertStateAndConfigArePresent();\n        var _a = this.state, _b = _a.authorizationCode, authorizationCode = _b === void 0 ? codeOverride : _b, _c = _a.codeVerifier, codeVerifier = _c === void 0 ? '' : _c;\n        var _d = this.config, clientId = _d.clientId, onInvalidGrant = _d.onInvalidGrant, redirectUrl = _d.redirectUrl;\n        if (!codeVerifier) {\n            console.warn('No code verifier is being sent.');\n        }\n        else if (!authorizationCode) {\n            console.warn('No authorization grant code is being passed.');\n        }\n        var url = this.config.tokenUrl;\n        var body = \"grant_type=authorization_code&\"\n            + (\"code=\" + encodeURIComponent(authorizationCode || '') + \"&\")\n            + (\"redirect_uri=\" + encodeURIComponent(redirectUrl) + \"&\")\n            + (\"client_id=\" + encodeURIComponent(clientId) + \"&\")\n            + (\"code_verifier=\" + codeVerifier);\n        return fetch(url, {\n            method: 'POST',\n            body: body,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n            .then(function (res) {\n            var jsonPromise = res.json()\n                .catch(function (_) { return ({ error: 'invalid_json' }); });\n            if (!res.ok) {\n                return jsonPromise.then(function (_a) {\n                    var error = _a.error;\n                    switch (error) {\n                        case 'invalid_grant':\n                            onInvalidGrant(function () { return _this.fetchAuthorizationCode(); });\n                            break;\n                        default:\n                            break;\n                    }\n                    return Promise.reject(toErrorClass(error));\n                });\n            }\n            return jsonPromise.then(function (json) {\n                var access_token = json.access_token, expires_in = json.expires_in, refresh_token = json.refresh_token, scope = json.scope;\n                var explicitlyExposedTokens = _this.config.explicitlyExposedTokens;\n                var scopes = [];\n                var tokensToExpose = {};\n                _this.state.hasAuthCodeBeenExchangedForAccessToken = true;\n                _this.authCodeForAccessTokenRequest = undefined;\n                var accessToken = {\n                    value: access_token,\n                    expiry: (new Date(Date.now() + (parseInt(expires_in) * 1000))).toString()\n                };\n                _this.state.accessToken = accessToken;\n                if (refresh_token) {\n                    var refreshToken = {\n                        value: refresh_token\n                    };\n                    _this.state.refreshToken = refreshToken;\n                }\n                if (explicitlyExposedTokens) {\n                    tokensToExpose = Object.fromEntries(explicitlyExposedTokens\n                        .map(function (tokenName) { return [tokenName, json[tokenName]]; })\n                        .filter(function (_a) {\n                        var _ = _a[0], tokenValue = _a[1];\n                        return tokenValue !== undefined;\n                    }));\n                    _this.state.explicitlyExposedTokens = tokensToExpose;\n                }\n                if (scope) {\n                    // Multiple scopes are passed and delimited by spaces,\n                    // despite using the singular name \"scope\".\n                    scopes = scope.split(' ');\n                    _this.state.scopes = scopes;\n                }\n                localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(_this.state));\n                var accessContext = { token: accessToken, scopes: scopes };\n                if (explicitlyExposedTokens) {\n                    accessContext.explicitlyExposedTokens = tokensToExpose;\n                }\n                return accessContext;\n            });\n        });\n    };\n    OAuth2AuthCodePKCE.prototype.recoverState = function () {\n        this.state = JSON.parse(localStorage.getItem(exports.LOCALSTORAGE_STATE) || '{}');\n        return this;\n    };\n    OAuth2AuthCodePKCE.prototype.setState = function (state) {\n        this.state = state;\n        localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(state));\n        return this;\n    };\n    /**\n     * Implements *base64url-encode* (RFC 4648 § 5) without padding, which is NOT\n     * the same as regular base64 encoding.\n     */\n    OAuth2AuthCodePKCE.base64urlEncode = function (value) {\n        var base64 = btoa(value);\n        base64 = base64.replace(/\\+/g, '-');\n        base64 = base64.replace(/\\//g, '_');\n        base64 = base64.replace(/=/g, '');\n        return base64;\n    };\n    /**\n     * Extracts a query string parameter.\n     */\n    OAuth2AuthCodePKCE.extractParamFromUrl = function (url, param) {\n        var queryString = url.split('?');\n        if (queryString.length < 2) {\n            return '';\n        }\n        // Account for hash URLs that SPAs usually use.\n        queryString = queryString[1].split('#');\n        var parts = queryString[0]\n            .split('&')\n            .reduce(function (a, s) { return a.concat(s.split('=')); }, []);\n        if (parts.length < 2) {\n            return '';\n        }\n        var paramIdx = parts.indexOf(param);\n        return decodeURIComponent(paramIdx >= 0 ? parts[paramIdx + 1] : '');\n    };\n    /**\n     * Converts the keys and values of an object to a url query string\n     */\n    OAuth2AuthCodePKCE.objectToQueryString = function (dict) {\n        return Object.entries(dict).map(function (_a) {\n            var key = _a[0], val = _a[1];\n            return key + \"=\" + encodeURIComponent(val);\n        }).join('&');\n    };\n    /**\n     * Generates a code_verifier and code_challenge, as specified in rfc7636.\n     */\n    OAuth2AuthCodePKCE.generatePKCECodes = function () {\n        var output = new Uint32Array(exports.RECOMMENDED_CODE_VERIFIER_LENGTH);\n        crypto.getRandomValues(output);\n        var codeVerifier = OAuth2AuthCodePKCE.base64urlEncode(Array\n            .from(output)\n            .map(function (num) { return PKCE_CHARSET[num % PKCE_CHARSET.length]; })\n            .join(''));\n        return crypto\n            .subtle\n            .digest('SHA-256', (new TextEncoder()).encode(codeVerifier))\n            .then(function (buffer) {\n            var hash = new Uint8Array(buffer);\n            var binary = '';\n            var hashLength = hash.byteLength;\n            for (var i = 0; i < hashLength; i++) {\n                binary += String.fromCharCode(hash[i]);\n            }\n            return binary;\n        })\n            .then(OAuth2AuthCodePKCE.base64urlEncode)\n            .then(function (codeChallenge) { return ({ codeChallenge: codeChallenge, codeVerifier: codeVerifier }); });\n    };\n    /**\n     * Generates random state to be passed for anti-csrf.\n     */\n    OAuth2AuthCodePKCE.generateRandomState = function (lengthOfState) {\n        var output = new Uint32Array(lengthOfState);\n        crypto.getRandomValues(output);\n        return Array\n            .from(output)\n            .map(function (num) { return PKCE_CHARSET[num % PKCE_CHARSET.length]; })\n            .join('');\n    };\n    return OAuth2AuthCodePKCE;\n}());\nexports.OAuth2AuthCodePKCE = OAuth2AuthCodePKCE;\n","// ND-JSON response streamer\n// See https://lichess.org/api#section/Introduction/Streaming-with-ND-JSON\n\ntype Handler = (line: any) => void;\n\nexport interface Stream {\n  closePromise: Promise<void>;\n  close(): Promise<void>;\n}\n\nexport const readStream = (name: string, response: Response, handler: Handler): Stream => {\n  const stream = response.body!.getReader();\n  const matcher = /\\r?\\n/;\n  const decoder = new TextDecoder();\n  let buf = '';\n\n  const process = (json: string) => {\n    const msg = JSON.parse(json);\n    console.log(name, msg);\n    handler(msg);\n  };\n\n  const loop: () => Promise<void> = () =>\n    stream.read().then(({ done, value }) => {\n      if (done) {\n        if (buf.length > 0) process(buf);\n        return;\n      } else {\n        const chunk = decoder.decode(value, {\n          stream: true,\n        });\n        buf += chunk;\n\n        const parts = buf.split(matcher);\n        buf = parts.pop() || '';\n        for (const i of parts.filter(p => p)) process(i);\n        return loop();\n      }\n    });\n\n  return {\n    closePromise: loop(),\n    close: () => stream.cancel(),\n  };\n};\n","\"use strict\"\n\nmodule.exports = require(\"./stream/stream\")\n","import ndjsonStream from 'can-ndjson-stream'\nimport m from 'mithril'\nimport 'regenerator-runtime/runtime'\n\nexport const ndj = (endpoint, config = {}) => {\n  var res\n  return fetch(endpoint, config) // make a fetch request to a NDJSON stream service\n    .then(response => {\n      return ndjsonStream(response.body) //ndjsonStream parses the response.body\n    })\n}\n\nexport function streamJson(endpoint, token, callback) {\n  ndj(endpoint, {\n    headers: { Authorization: token.token_type + ' ' + token.access_token },\n  }).then(exampleStream => {\n    const reader = exampleStream.getReader()\n    let read\n    reader.read().then(\n      (read = result => {\n        if (result.done) {\n          return\n        }\n        // console.log( result.value )\n        callback(result.value)\n        reader.read().then(read)\n      })\n    )\n  })\n}\n\nexport function fetcher() {\n  var nd = ''\n  return {\n    oninit: vnode => {\n      ndj(vnode.attrs.endpoint, {\n        headers: {\n          Authorization:\n            vnode.attrs.token.token_type + ' ' + vnode.attrs.token.access_token,\n        },\n      }).then(exampleStream => {\n        const reader = exampleStream.getReader()\n        let read\n        reader.read().then(\n          (read = result => {\n            if (result.done) {\n              return\n            }\n\n            console.log(result.value)\n            nd = JSON.stringify(result.value)\n            // m.redraw()\n            vnode.attrs.callback(result.value)\n            reader.read().then(read)\n          })\n        )\n      })\n      console.log('nd', nd)\n    },\n    view: vnode => {\n      return m('', vnode.attrs, vnode.children)\n    },\n  }\n}\n","\"use strict\";\n/*exported ndjsonStream*/\n\nvar namespace = require('can-namespace');\n\nvar ndjsonStream = function(response) {\n  // For cancellation\n  var is_reader, cancellationRequest = false;\n  return new ReadableStream({\n    start: function(controller) {\n      var reader = response.getReader();\n      is_reader = reader;\n      var decoder = new TextDecoder();\n      var data_buf = \"\";\n\n      reader.read().then(function processResult(result) {\n        if (result.done) {\n          if (cancellationRequest) {\n            // Immediately exit\n            return;\n          }\n\n          data_buf = data_buf.trim();\n          if (data_buf.length !== 0) {\n            try {\n              var data_l = JSON.parse(data_buf);\n              controller.enqueue(data_l);\n            } catch(e) {\n              controller.error(e);\n              return;\n            }\n          }\n          controller.close();\n          return;\n        }\n\n        var data = decoder.decode(result.value, {stream: true});\n        data_buf += data;\n        var lines = data_buf.split(\"\\n\");\n        for(var i = 0; i < lines.length - 1; ++i) {\n          var l = lines[i].trim();\n          if (l.length > 0) {\n            try {\n              var data_line = JSON.parse(l);\n              controller.enqueue(data_line);\n            } catch(e) {\n              controller.error(e);\n              cancellationRequest = true;\n              reader.cancel();\n              return;\n            }\n          }\n        }\n        data_buf = lines[lines.length-1];\n\n        return reader.read().then(processResult);\n      });\n\n    },\n    cancel: function(reason) {\n      console.log(\"Cancel registered due to \", reason);\n      cancellationRequest = true;\n      is_reader.cancel();\n    }\n  });\n};\n\nmodule.exports = namespace.ndjsonStream = ndjsonStream;\n","module.exports = {};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const LICHESS_API_URL = 'https://lichess.org/api/'\n\nexport const deviceName = 'Launchpad X MIDI 2'\n","import m from 'mithril'\n\nexport const Login = (state, actions) => {\n  return {\n    oninit: vnode => {\n      if (state.loggedIn()) {\n        console.log('already logged in. Not sure how we got here.')\n        m.route.set('/')\n      }\n    },\n    view: vnode => {\n      return m('', { onclick: actions.login }, m('i', {}, 'Login with lichess'))\n    },\n  }\n}\n","import m from 'mithril'\nimport { LICHESS_API_URL } from './config'\nimport { streamJson } from './ndjson'\nimport { Chessground } from 'chessground'\nimport { Board } from './Board'\nimport { Toolbar, OnlineToolbar } from './Toolbar'\nimport '../node_modules/material-design-icons-iconfont/dist/material-design-icons.css'\nimport { toDests } from './utils'\nimport { NOTE_ON, CONTROL_CHANGE, COLORS } from './Launchpad'\n\nexport const GamesActions = (state, actions) => ({\n  getGames: async () => {\n    state.stream = await state.auth.openStream('/api/stream/event', {}, msg => {\n      console.log('got game stream msg', msg)\n      switch (msg.type) {\n        case 'gameStart':\n          let games = state.games()\n          games.push(msg.game)\n          state.games(games)\n          if (games.length == 1) {\n            console.log('one active game. loading now!')\n            state.game = games[0]\n          }\n          break\n        case 'gameFinish':\n          state.games(state.games().filter(g => g.gameId != msg.game.gameId))\n          break\n        case 'challenge':\n          // TODO\n          break\n        case 'challengeCanceled':\n          // TODO\n          break\n        case 'challengeDeclined':\n          // TODO\n          break\n      }\n    })\n  }\n})\n\nexport const GameThumb = (state, game) =>\n  m(game.isMyTurn ? '.gamethumb.myturn' : '.gamethumb', {}, [\n    game.opponent.username,\n    m(Board, {\n      class: 'thumb',\n      config: {\n        fen: game.fen,\n        viewOnly: true,\n        orientation: game.color,\n        lastMove: [game.lastMove.slice(0, 2), game.lastMove.slice(2)],\n      },\n      onclick: e => {\n        console.log('game clicked', game)\n        state.game = game\n        state.opponent = game.opponent\n        m.route.set('/online', { id: game.gameId })\n      },\n    }),\n  ])\n\nexport const Games = (state, actions) => {\n  let listener\n  return {\n    listener: null,\n    oninit: vnode => {\n      if (!state.loggedIn) {\n        m.route.set('/login')\n      }\n      state.invert(false)\n      let games = state.games()\n      console.log('games', games)\n      state.games(games)\n      if (state.input) {\n        listener = state.input.addListener('noteon', 'all', message => {\n          console.log('connector got message', message)\n          let n = actions.launchToN(message.data[1])\n          /* n is 0-63, but represented bottom to top.\n        We need to invert the row to make it read top to bottom, left to right. */\n          let g = (n % 8) + (7 - Math.floor(n / 8)) * 8\n          console.log('selected game', g)\n          if (g < games.length) {\n            m.route.set('/online', { id: games[g].gameId })\n          }\n        })\n\n        games.map((g, i) => {\n          let note = g.isMyTurn ? NOTE_ON | 2 : NOTE_ON\n          /* Invert the row to get buttons to go top to bottom. */\n          let n = (i % 8) + 8 * (7 - Math.floor(i / 8))\n          let l = actions.nToLaunch(n)\n          console.log('sending', g, i, l)\n          actions.send(note, [l, g.color == 'white' ? 15 : 83])\n        })\n        actions.clearAnimations()\n        actions.clear()\n        actions.send(NOTE_ON, [state.top[state.top.length - 1], COLORS['q']])\n      }\n      if (games.length == 1) {\n        console.log('one active game. loading now!')\n        state.game = games[0]\n        m.route.set('/online', { id: state.game.gameId })\n      }\n    },\n    onremove: vnode => {\n      if (state.input) state.input.removeListener(listener)\n    },\n    view: vnode => [\n      m('.toolbar', {}, [\n        m('i.material-icons', { onclick: actions.getGames }, 'refresh'),\n        m(\n          'a.inline',\n          { href: 'https://lichess.org/?any#ai', target: '_blank' },\n          m(\n            'i.material-icons',\n            {\n              title: 'create new game on Lichess.com',\n            },\n            m('img.svgicon', {\n              src:\n                state.theme == 'dark'\n                  ? 'static/lichess-logo-white.svg'\n                  : 'static/lichess-logo.svg',\n            })\n          )\n        ),\n      ]),\n      m('.selector', {}, [\n        state.games().map(g => {\n          return GameThumb(state, g)\n        }),\n      ]),\n    ],\n  }\n}\n\nlet config = {\n  movable: {\n    color: 'both',\n    free: false,\n  },\n}\n\nexport const Game = (state, actions) =>\n  m('.board', {\n    oninit: vnode => {\n      console.log('game loading', vnode.attrs, state.chess.ascii())\n      actions.streamGame()\n      actions.afterInit()\n    },\n    oncreate: vnode => {\n      state.ground = Chessground(vnode.dom, {\n        ...config,\n        ...vnode.attrs.config,\n      })\n      state.ground.set({\n        fen: state.chess.fen(),\n        orientation: state.invert() ? 'black' : 'white',\n        movable: {\n          dests: toDests(state.chess),\n        },\n        events: {\n          select: key => {\n            console.log('chessground selected', key)\n            if (\n              state.chess.get(key) &&\n              state.chess.get(key).color == state.chess.turn()\n            ) {\n              // clear previous selection\n              actions.lightBoard()\n              state.selectedSquare = key\n              state.selectedPiece = state.chess.get(key)\n              actions.highlightAvailableMoves(key)\n            }\n          },\n          move: (orig, dest) => {\n            actions.onmove(orig, dest)\n          },\n        },\n      })\n    },\n  })\n\nexport const GamePage = (state, actions) => ({\n  view: vnode =>\n    m('.gamePage', {}, [Toolbar(state, actions), Game(state, actions)]),\n})\n\nexport const Player = (state) => m('.me', {}, state.user.username)\nexport const Opponent = state =>\n  state.opponent ? m('.opponent', {}, JSON.stringify(state.opponent)) : null\n\nexport const GamePageOnline = (state, actions) => ({\n  oninit: vnode => {\n    if (!state.loggedIn) {\n      console.log('not logged in. Redirecting to login')\n      m.route.set('/login')\n    }\n  },\n  view: vnode =>\n    m('.gamePage', {}, [\n      OnlineToolbar(state, actions),\n      m(\n        '.top_user',\n        {},\n        state.invert() != (state.color == 'b') ? Player(state) : Opponent(state)\n      ),\n      Game(state, actions),\n      m(\n        '.bottom_user',\n        {},\n        state.invert() != (state.color == 'b') ? Opponent(state) : Player(state)\n      ),\n    ]),\n})\n","import { start } from './api.js';\nimport { configure } from './config.js';\nimport { defaults } from './state.js';\nimport { renderWrap } from './wrap.js';\nimport * as events from './events.js';\nimport { render, renderResized, updateBounds } from './render.js';\nimport * as autoPieces from './autoPieces.js';\nimport * as svg from './svg.js';\nimport * as util from './util.js';\nexport function initModule({ el, config }) {\n    return Chessground(el, config);\n}\nexport function Chessground(element, config) {\n    const maybeState = defaults();\n    configure(maybeState, config || {});\n    function redrawAll() {\n        const prevUnbind = 'dom' in maybeState ? maybeState.dom.unbind : undefined;\n        // compute bounds from existing board element if possible\n        // this allows non-square boards from CSS to be handled (for 3D)\n        const elements = renderWrap(element, maybeState), bounds = util.memo(() => elements.board.getBoundingClientRect()), redrawNow = (skipSvg) => {\n            render(state);\n            if (elements.autoPieces)\n                autoPieces.render(state, elements.autoPieces);\n            if (!skipSvg && elements.svg)\n                svg.renderSvg(state, elements.svg, elements.customSvg);\n        }, onResize = () => {\n            updateBounds(state);\n            renderResized(state);\n            if (elements.autoPieces)\n                autoPieces.renderResized(state);\n        };\n        const state = maybeState;\n        state.dom = {\n            elements,\n            bounds,\n            redraw: debounceRedraw(redrawNow),\n            redrawNow,\n            unbind: prevUnbind,\n        };\n        state.drawable.prevSvgHash = '';\n        updateBounds(state);\n        redrawNow(false);\n        events.bindBoard(state, onResize);\n        if (!prevUnbind)\n            state.dom.unbind = events.bindDocument(state, onResize);\n        state.events.insert && state.events.insert(elements);\n        return state;\n    }\n    return start(redrawAll(), redrawAll);\n}\nfunction debounceRedraw(redrawNow) {\n    let redrawing = false;\n    return () => {\n        if (redrawing)\n            return;\n        redrawing = true;\n        requestAnimationFrame(() => {\n            redrawNow();\n            redrawing = false;\n        });\n    };\n}\n//# sourceMappingURL=chessground.js.map","import { Api, start } from './api.js';\nimport { Config, configure } from './config.js';\nimport { HeadlessState, State, defaults } from './state.js';\n\nimport { renderWrap } from './wrap.js';\nimport * as events from './events.js';\nimport { render, renderResized, updateBounds } from './render.js';\nimport * as autoPieces from './autoPieces.js';\nimport * as svg from './svg.js';\nimport * as util from './util.js';\n\nexport function initModule({ el, config }: { el: HTMLElement; config?: Config }): Api {\n  return Chessground(el, config);\n}\n\nexport function Chessground(element: HTMLElement, config?: Config): Api {\n  const maybeState: State | HeadlessState = defaults();\n\n  configure(maybeState, config || {});\n\n  function redrawAll(): State {\n    const prevUnbind = 'dom' in maybeState ? maybeState.dom.unbind : undefined;\n    // compute bounds from existing board element if possible\n    // this allows non-square boards from CSS to be handled (for 3D)\n    const elements = renderWrap(element, maybeState),\n      bounds = util.memo(() => elements.board.getBoundingClientRect()),\n      redrawNow = (skipSvg?: boolean): void => {\n        render(state);\n        if (elements.autoPieces) autoPieces.render(state, elements.autoPieces);\n        if (!skipSvg && elements.svg) svg.renderSvg(state, elements.svg, elements.customSvg!);\n      },\n      onResize = (): void => {\n        updateBounds(state);\n        renderResized(state);\n        if (elements.autoPieces) autoPieces.renderResized(state);\n      };\n    const state = maybeState as State;\n    state.dom = {\n      elements,\n      bounds,\n      redraw: debounceRedraw(redrawNow),\n      redrawNow,\n      unbind: prevUnbind,\n    };\n    state.drawable.prevSvgHash = '';\n    updateBounds(state);\n    redrawNow(false);\n    events.bindBoard(state, onResize);\n    if (!prevUnbind) state.dom.unbind = events.bindDocument(state, onResize);\n    state.events.insert && state.events.insert(elements);\n    return state;\n  }\n\n  return start(redrawAll(), redrawAll);\n}\n\nfunction debounceRedraw(redrawNow: (skipSvg?: boolean) => void): () => void {\n  let redrawing = false;\n  return () => {\n    if (redrawing) return;\n    redrawing = true;\n    requestAnimationFrame(() => {\n      redrawNow();\n      redrawing = false;\n    });\n  };\n}\n","import * as board from './board.js';\nimport { write as fenWrite } from './fen.js';\nimport { configure, applyAnimation } from './config.js';\nimport { anim, render } from './anim.js';\nimport { cancel as dragCancel, dragNewPiece } from './drag.js';\nimport { explosion } from './explosion.js';\n// see API types and documentations in dts/api.d.ts\nexport function start(state, redrawAll) {\n    function toggleOrientation() {\n        board.toggleOrientation(state);\n        redrawAll();\n    }\n    return {\n        set(config) {\n            if (config.orientation && config.orientation !== state.orientation)\n                toggleOrientation();\n            applyAnimation(state, config);\n            (config.fen ? anim : render)(state => configure(state, config), state);\n        },\n        state,\n        getFen: () => fenWrite(state.pieces),\n        toggleOrientation,\n        setPieces(pieces) {\n            anim(state => board.setPieces(state, pieces), state);\n        },\n        selectSquare(key, force) {\n            if (key)\n                anim(state => board.selectSquare(state, key, force), state);\n            else if (state.selected) {\n                board.unselect(state);\n                state.dom.redraw();\n            }\n        },\n        move(orig, dest) {\n            anim(state => board.baseMove(state, orig, dest), state);\n        },\n        newPiece(piece, key) {\n            anim(state => board.baseNewPiece(state, piece, key), state);\n        },\n        playPremove() {\n            if (state.premovable.current) {\n                if (anim(board.playPremove, state))\n                    return true;\n                // if the premove couldn't be played, redraw to clear it up\n                state.dom.redraw();\n            }\n            return false;\n        },\n        playPredrop(validate) {\n            if (state.predroppable.current) {\n                const result = board.playPredrop(state, validate);\n                state.dom.redraw();\n                return result;\n            }\n            return false;\n        },\n        cancelPremove() {\n            render(board.unsetPremove, state);\n        },\n        cancelPredrop() {\n            render(board.unsetPredrop, state);\n        },\n        cancelMove() {\n            render(state => {\n                board.cancelMove(state);\n                dragCancel(state);\n            }, state);\n        },\n        stop() {\n            render(state => {\n                board.stop(state);\n                dragCancel(state);\n            }, state);\n        },\n        explode(keys) {\n            explosion(state, keys);\n        },\n        setAutoShapes(shapes) {\n            render(state => (state.drawable.autoShapes = shapes), state);\n        },\n        setShapes(shapes) {\n            render(state => (state.drawable.shapes = shapes), state);\n        },\n        getKeyAtDomPos(pos) {\n            return board.getKeyAtDomPos(pos, board.whitePov(state), state.dom.bounds());\n        },\n        redrawAll,\n        dragNewPiece(piece, event, force) {\n            dragNewPiece(state, piece, event, force);\n        },\n        destroy() {\n            board.stop(state);\n            state.dom.unbind && state.dom.unbind();\n            state.dom.destroyed = true;\n        },\n    };\n}\n//# sourceMappingURL=api.js.map","import { State } from './state.js';\nimport * as board from './board.js';\nimport { write as fenWrite } from './fen.js';\nimport { Config, configure, applyAnimation } from './config.js';\nimport { anim, render } from './anim.js';\nimport { cancel as dragCancel, dragNewPiece } from './drag.js';\nimport { DrawShape } from './draw.js';\nimport { explosion } from './explosion.js';\nimport * as cg from './types.js';\n\nexport interface Api {\n  // reconfigure the instance. Accepts all config options, except for viewOnly & drawable.visible.\n  // board will be animated accordingly, if animations are enabled.\n  set(config: Config): void;\n\n  // read chessground state; write at your own risks.\n  state: State;\n\n  // get the position as a FEN string (only contains pieces, no flags)\n  // e.g. rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\n  getFen(): cg.FEN;\n\n  // change the view angle\n  toggleOrientation(): void;\n\n  // perform a move programmatically\n  move(orig: cg.Key, dest: cg.Key): void;\n\n  // add and/or remove arbitrary pieces on the board\n  setPieces(pieces: cg.PiecesDiff): void;\n\n  // click a square programmatically\n  selectSquare(key: cg.Key | null, force?: boolean): void;\n\n  // put a new piece on the board\n  newPiece(piece: cg.Piece, key: cg.Key): void;\n\n  // play the current premove, if any; returns true if premove was played\n  playPremove(): boolean;\n\n  // cancel the current premove, if any\n  cancelPremove(): void;\n\n  // play the current predrop, if any; returns true if premove was played\n  playPredrop(validate: (drop: cg.Drop) => boolean): boolean;\n\n  // cancel the current predrop, if any\n  cancelPredrop(): void;\n\n  // cancel the current move being made\n  cancelMove(): void;\n\n  // cancel current move and prevent further ones\n  stop(): void;\n\n  // make squares explode (atomic chess)\n  explode(keys: cg.Key[]): void;\n\n  // programmatically draw user shapes\n  setShapes(shapes: DrawShape[]): void;\n\n  // programmatically draw auto shapes\n  setAutoShapes(shapes: DrawShape[]): void;\n\n  // square name at this DOM position (like \"e4\")\n  getKeyAtDomPos(pos: cg.NumberPair): cg.Key | undefined;\n\n  // only useful when CSS changes the board width/height ratio (for 3D)\n  redrawAll: cg.Redraw;\n\n  // for crazyhouse and board editors\n  dragNewPiece(piece: cg.Piece, event: cg.MouchEvent, force?: boolean): void;\n\n  // unbinds all events\n  // (important for document-wide events like scroll and mousemove)\n  destroy: cg.Unbind;\n}\n\n// see API types and documentations in dts/api.d.ts\nexport function start(state: State, redrawAll: cg.Redraw): Api {\n  function toggleOrientation(): void {\n    board.toggleOrientation(state);\n    redrawAll();\n  }\n\n  return {\n    set(config): void {\n      if (config.orientation && config.orientation !== state.orientation) toggleOrientation();\n      applyAnimation(state, config);\n      (config.fen ? anim : render)(state => configure(state, config), state);\n    },\n\n    state,\n\n    getFen: () => fenWrite(state.pieces),\n\n    toggleOrientation,\n\n    setPieces(pieces): void {\n      anim(state => board.setPieces(state, pieces), state);\n    },\n\n    selectSquare(key, force): void {\n      if (key) anim(state => board.selectSquare(state, key, force), state);\n      else if (state.selected) {\n        board.unselect(state);\n        state.dom.redraw();\n      }\n    },\n\n    move(orig, dest): void {\n      anim(state => board.baseMove(state, orig, dest), state);\n    },\n\n    newPiece(piece, key): void {\n      anim(state => board.baseNewPiece(state, piece, key), state);\n    },\n\n    playPremove(): boolean {\n      if (state.premovable.current) {\n        if (anim(board.playPremove, state)) return true;\n        // if the premove couldn't be played, redraw to clear it up\n        state.dom.redraw();\n      }\n      return false;\n    },\n\n    playPredrop(validate): boolean {\n      if (state.predroppable.current) {\n        const result = board.playPredrop(state, validate);\n        state.dom.redraw();\n        return result;\n      }\n      return false;\n    },\n\n    cancelPremove(): void {\n      render(board.unsetPremove, state);\n    },\n\n    cancelPredrop(): void {\n      render(board.unsetPredrop, state);\n    },\n\n    cancelMove(): void {\n      render(state => {\n        board.cancelMove(state);\n        dragCancel(state);\n      }, state);\n    },\n\n    stop(): void {\n      render(state => {\n        board.stop(state);\n        dragCancel(state);\n      }, state);\n    },\n\n    explode(keys: cg.Key[]): void {\n      explosion(state, keys);\n    },\n\n    setAutoShapes(shapes: DrawShape[]): void {\n      render(state => (state.drawable.autoShapes = shapes), state);\n    },\n\n    setShapes(shapes: DrawShape[]): void {\n      render(state => (state.drawable.shapes = shapes), state);\n    },\n\n    getKeyAtDomPos(pos): cg.Key | undefined {\n      return board.getKeyAtDomPos(pos, board.whitePov(state), state.dom.bounds());\n    },\n\n    redrawAll,\n\n    dragNewPiece(piece, event, force): void {\n      dragNewPiece(state, piece, event, force);\n    },\n\n    destroy(): void {\n      board.stop(state);\n      state.dom.unbind && state.dom.unbind();\n      state.dom.destroyed = true;\n    },\n  };\n}\n","import { pos2key, key2pos, opposite, distanceSq, allPos, computeSquareCenter } from './util.js';\nimport { premove, queen, knight } from './premove.js';\nexport function callUserFunction(f, ...args) {\n    if (f)\n        setTimeout(() => f(...args), 1);\n}\nexport function toggleOrientation(state) {\n    state.orientation = opposite(state.orientation);\n    state.animation.current = state.draggable.current = state.selected = undefined;\n}\nexport function reset(state) {\n    state.lastMove = undefined;\n    unselect(state);\n    unsetPremove(state);\n    unsetPredrop(state);\n}\nexport function setPieces(state, pieces) {\n    for (const [key, piece] of pieces) {\n        if (piece)\n            state.pieces.set(key, piece);\n        else\n            state.pieces.delete(key);\n    }\n}\nexport function setCheck(state, color) {\n    state.check = undefined;\n    if (color === true)\n        color = state.turnColor;\n    if (color)\n        for (const [k, p] of state.pieces) {\n            if (p.role === 'king' && p.color === color) {\n                state.check = k;\n            }\n        }\n}\nfunction setPremove(state, orig, dest, meta) {\n    unsetPredrop(state);\n    state.premovable.current = [orig, dest];\n    callUserFunction(state.premovable.events.set, orig, dest, meta);\n}\nexport function unsetPremove(state) {\n    if (state.premovable.current) {\n        state.premovable.current = undefined;\n        callUserFunction(state.premovable.events.unset);\n    }\n}\nfunction setPredrop(state, role, key) {\n    unsetPremove(state);\n    state.predroppable.current = { role, key };\n    callUserFunction(state.predroppable.events.set, role, key);\n}\nexport function unsetPredrop(state) {\n    const pd = state.predroppable;\n    if (pd.current) {\n        pd.current = undefined;\n        callUserFunction(pd.events.unset);\n    }\n}\nfunction tryAutoCastle(state, orig, dest) {\n    if (!state.autoCastle)\n        return false;\n    const king = state.pieces.get(orig);\n    if (!king || king.role !== 'king')\n        return false;\n    const origPos = key2pos(orig);\n    const destPos = key2pos(dest);\n    if ((origPos[1] !== 0 && origPos[1] !== 7) || origPos[1] !== destPos[1])\n        return false;\n    if (origPos[0] === 4 && !state.pieces.has(dest)) {\n        if (destPos[0] === 6)\n            dest = pos2key([7, destPos[1]]);\n        else if (destPos[0] === 2)\n            dest = pos2key([0, destPos[1]]);\n    }\n    const rook = state.pieces.get(dest);\n    if (!rook || rook.color !== king.color || rook.role !== 'rook')\n        return false;\n    state.pieces.delete(orig);\n    state.pieces.delete(dest);\n    if (origPos[0] < destPos[0]) {\n        state.pieces.set(pos2key([6, destPos[1]]), king);\n        state.pieces.set(pos2key([5, destPos[1]]), rook);\n    }\n    else {\n        state.pieces.set(pos2key([2, destPos[1]]), king);\n        state.pieces.set(pos2key([3, destPos[1]]), rook);\n    }\n    return true;\n}\nexport function baseMove(state, orig, dest) {\n    const origPiece = state.pieces.get(orig), destPiece = state.pieces.get(dest);\n    if (orig === dest || !origPiece)\n        return false;\n    const captured = destPiece && destPiece.color !== origPiece.color ? destPiece : undefined;\n    if (dest === state.selected)\n        unselect(state);\n    callUserFunction(state.events.move, orig, dest, captured);\n    if (!tryAutoCastle(state, orig, dest)) {\n        state.pieces.set(dest, origPiece);\n        state.pieces.delete(orig);\n    }\n    state.lastMove = [orig, dest];\n    state.check = undefined;\n    callUserFunction(state.events.change);\n    return captured || true;\n}\nexport function baseNewPiece(state, piece, key, force) {\n    if (state.pieces.has(key)) {\n        if (force)\n            state.pieces.delete(key);\n        else\n            return false;\n    }\n    callUserFunction(state.events.dropNewPiece, piece, key);\n    state.pieces.set(key, piece);\n    state.lastMove = [key];\n    state.check = undefined;\n    callUserFunction(state.events.change);\n    state.movable.dests = undefined;\n    state.turnColor = opposite(state.turnColor);\n    return true;\n}\nfunction baseUserMove(state, orig, dest) {\n    const result = baseMove(state, orig, dest);\n    if (result) {\n        state.movable.dests = undefined;\n        state.turnColor = opposite(state.turnColor);\n        state.animation.current = undefined;\n    }\n    return result;\n}\nexport function userMove(state, orig, dest) {\n    if (canMove(state, orig, dest)) {\n        const result = baseUserMove(state, orig, dest);\n        if (result) {\n            const holdTime = state.hold.stop();\n            unselect(state);\n            const metadata = {\n                premove: false,\n                ctrlKey: state.stats.ctrlKey,\n                holdTime,\n            };\n            if (result !== true)\n                metadata.captured = result;\n            callUserFunction(state.movable.events.after, orig, dest, metadata);\n            return true;\n        }\n    }\n    else if (canPremove(state, orig, dest)) {\n        setPremove(state, orig, dest, {\n            ctrlKey: state.stats.ctrlKey,\n        });\n        unselect(state);\n        return true;\n    }\n    unselect(state);\n    return false;\n}\nexport function dropNewPiece(state, orig, dest, force) {\n    const piece = state.pieces.get(orig);\n    if (piece && (canDrop(state, orig, dest) || force)) {\n        state.pieces.delete(orig);\n        baseNewPiece(state, piece, dest, force);\n        callUserFunction(state.movable.events.afterNewPiece, piece.role, dest, {\n            premove: false,\n            predrop: false,\n        });\n    }\n    else if (piece && canPredrop(state, orig, dest)) {\n        setPredrop(state, piece.role, dest);\n    }\n    else {\n        unsetPremove(state);\n        unsetPredrop(state);\n    }\n    state.pieces.delete(orig);\n    unselect(state);\n}\nexport function selectSquare(state, key, force) {\n    callUserFunction(state.events.select, key);\n    if (state.selected) {\n        if (state.selected === key && !state.draggable.enabled) {\n            unselect(state);\n            state.hold.cancel();\n            return;\n        }\n        else if ((state.selectable.enabled || force) && state.selected !== key) {\n            if (userMove(state, state.selected, key)) {\n                state.stats.dragged = false;\n                return;\n            }\n        }\n    }\n    if ((state.selectable.enabled || state.draggable.enabled) &&\n        (isMovable(state, key) || isPremovable(state, key))) {\n        setSelected(state, key);\n        state.hold.start();\n    }\n}\nexport function setSelected(state, key) {\n    state.selected = key;\n    if (isPremovable(state, key)) {\n        // calculate chess premoves if custom premoves are not passed\n        if (!state.premovable.customDests) {\n            state.premovable.dests = premove(state.pieces, key, state.premovable.castle);\n        }\n    }\n    else\n        state.premovable.dests = undefined;\n}\nexport function unselect(state) {\n    state.selected = undefined;\n    state.premovable.dests = undefined;\n    state.hold.cancel();\n}\nfunction isMovable(state, orig) {\n    const piece = state.pieces.get(orig);\n    return (!!piece &&\n        (state.movable.color === 'both' ||\n            (state.movable.color === piece.color && state.turnColor === piece.color)));\n}\nexport const canMove = (state, orig, dest) => {\n    var _a, _b;\n    return orig !== dest &&\n        isMovable(state, orig) &&\n        (state.movable.free || !!((_b = (_a = state.movable.dests) === null || _a === void 0 ? void 0 : _a.get(orig)) === null || _b === void 0 ? void 0 : _b.includes(dest)));\n};\nfunction canDrop(state, orig, dest) {\n    const piece = state.pieces.get(orig);\n    return (!!piece &&\n        (orig === dest || !state.pieces.has(dest)) &&\n        (state.movable.color === 'both' ||\n            (state.movable.color === piece.color && state.turnColor === piece.color)));\n}\nfunction isPremovable(state, orig) {\n    const piece = state.pieces.get(orig);\n    return (!!piece &&\n        state.premovable.enabled &&\n        state.movable.color === piece.color &&\n        state.turnColor !== piece.color);\n}\nfunction canPremove(state, orig, dest) {\n    var _a, _b;\n    const validPremoves = (_b = (_a = state.premovable.customDests) === null || _a === void 0 ? void 0 : _a.get(orig)) !== null && _b !== void 0 ? _b : premove(state.pieces, orig, state.premovable.castle);\n    return orig !== dest && isPremovable(state, orig) && validPremoves.includes(dest);\n}\nfunction canPredrop(state, orig, dest) {\n    const piece = state.pieces.get(orig);\n    const destPiece = state.pieces.get(dest);\n    return (!!piece &&\n        (!destPiece || destPiece.color !== state.movable.color) &&\n        state.predroppable.enabled &&\n        (piece.role !== 'pawn' || (dest[1] !== '1' && dest[1] !== '8')) &&\n        state.movable.color === piece.color &&\n        state.turnColor !== piece.color);\n}\nexport function isDraggable(state, orig) {\n    const piece = state.pieces.get(orig);\n    return (!!piece &&\n        state.draggable.enabled &&\n        (state.movable.color === 'both' ||\n            (state.movable.color === piece.color && (state.turnColor === piece.color || state.premovable.enabled))));\n}\nexport function playPremove(state) {\n    const move = state.premovable.current;\n    if (!move)\n        return false;\n    const orig = move[0], dest = move[1];\n    let success = false;\n    if (canMove(state, orig, dest)) {\n        const result = baseUserMove(state, orig, dest);\n        if (result) {\n            const metadata = { premove: true };\n            if (result !== true)\n                metadata.captured = result;\n            callUserFunction(state.movable.events.after, orig, dest, metadata);\n            success = true;\n        }\n    }\n    unsetPremove(state);\n    return success;\n}\nexport function playPredrop(state, validate) {\n    const drop = state.predroppable.current;\n    let success = false;\n    if (!drop)\n        return false;\n    if (validate(drop)) {\n        const piece = {\n            role: drop.role,\n            color: state.movable.color,\n        };\n        if (baseNewPiece(state, piece, drop.key)) {\n            callUserFunction(state.movable.events.afterNewPiece, drop.role, drop.key, {\n                premove: false,\n                predrop: true,\n            });\n            success = true;\n        }\n    }\n    unsetPredrop(state);\n    return success;\n}\nexport function cancelMove(state) {\n    unsetPremove(state);\n    unsetPredrop(state);\n    unselect(state);\n}\nexport function stop(state) {\n    state.movable.color = state.movable.dests = state.animation.current = undefined;\n    cancelMove(state);\n}\nexport function getKeyAtDomPos(pos, asWhite, bounds) {\n    let file = Math.floor((8 * (pos[0] - bounds.left)) / bounds.width);\n    if (!asWhite)\n        file = 7 - file;\n    let rank = 7 - Math.floor((8 * (pos[1] - bounds.top)) / bounds.height);\n    if (!asWhite)\n        rank = 7 - rank;\n    return file >= 0 && file < 8 && rank >= 0 && rank < 8 ? pos2key([file, rank]) : undefined;\n}\nexport function getSnappedKeyAtDomPos(orig, pos, asWhite, bounds) {\n    const origPos = key2pos(orig);\n    const validSnapPos = allPos.filter(pos2 => queen(origPos[0], origPos[1], pos2[0], pos2[1]) || knight(origPos[0], origPos[1], pos2[0], pos2[1]));\n    const validSnapCenters = validSnapPos.map(pos2 => computeSquareCenter(pos2key(pos2), asWhite, bounds));\n    const validSnapDistances = validSnapCenters.map(pos2 => distanceSq(pos, pos2));\n    const [, closestSnapIndex] = validSnapDistances.reduce((a, b, index) => (a[0] < b ? a : [b, index]), [validSnapDistances[0], 0]);\n    return pos2key(validSnapPos[closestSnapIndex]);\n}\nexport const whitePov = (s) => s.orientation === 'white';\n//# sourceMappingURL=board.js.map","import { HeadlessState } from './state.js';\nimport { pos2key, key2pos, opposite, distanceSq, allPos, computeSquareCenter } from './util.js';\nimport { premove, queen, knight } from './premove.js';\nimport * as cg from './types.js';\n\nexport function callUserFunction<T extends (...args: any[]) => void>(\n  f: T | undefined,\n  ...args: Parameters<T>\n): void {\n  if (f) setTimeout(() => f(...args), 1);\n}\n\nexport function toggleOrientation(state: HeadlessState): void {\n  state.orientation = opposite(state.orientation);\n  state.animation.current = state.draggable.current = state.selected = undefined;\n}\n\nexport function reset(state: HeadlessState): void {\n  state.lastMove = undefined;\n  unselect(state);\n  unsetPremove(state);\n  unsetPredrop(state);\n}\n\nexport function setPieces(state: HeadlessState, pieces: cg.PiecesDiff): void {\n  for (const [key, piece] of pieces) {\n    if (piece) state.pieces.set(key, piece);\n    else state.pieces.delete(key);\n  }\n}\n\nexport function setCheck(state: HeadlessState, color: cg.Color | boolean): void {\n  state.check = undefined;\n  if (color === true) color = state.turnColor;\n  if (color)\n    for (const [k, p] of state.pieces) {\n      if (p.role === 'king' && p.color === color) {\n        state.check = k;\n      }\n    }\n}\n\nfunction setPremove(state: HeadlessState, orig: cg.Key, dest: cg.Key, meta: cg.SetPremoveMetadata): void {\n  unsetPredrop(state);\n  state.premovable.current = [orig, dest];\n  callUserFunction(state.premovable.events.set, orig, dest, meta);\n}\n\nexport function unsetPremove(state: HeadlessState): void {\n  if (state.premovable.current) {\n    state.premovable.current = undefined;\n    callUserFunction(state.premovable.events.unset);\n  }\n}\n\nfunction setPredrop(state: HeadlessState, role: cg.Role, key: cg.Key): void {\n  unsetPremove(state);\n  state.predroppable.current = { role, key };\n  callUserFunction(state.predroppable.events.set, role, key);\n}\n\nexport function unsetPredrop(state: HeadlessState): void {\n  const pd = state.predroppable;\n  if (pd.current) {\n    pd.current = undefined;\n    callUserFunction(pd.events.unset);\n  }\n}\n\nfunction tryAutoCastle(state: HeadlessState, orig: cg.Key, dest: cg.Key): boolean {\n  if (!state.autoCastle) return false;\n\n  const king = state.pieces.get(orig);\n  if (!king || king.role !== 'king') return false;\n\n  const origPos = key2pos(orig);\n  const destPos = key2pos(dest);\n  if ((origPos[1] !== 0 && origPos[1] !== 7) || origPos[1] !== destPos[1]) return false;\n  if (origPos[0] === 4 && !state.pieces.has(dest)) {\n    if (destPos[0] === 6) dest = pos2key([7, destPos[1]]);\n    else if (destPos[0] === 2) dest = pos2key([0, destPos[1]]);\n  }\n  const rook = state.pieces.get(dest);\n  if (!rook || rook.color !== king.color || rook.role !== 'rook') return false;\n\n  state.pieces.delete(orig);\n  state.pieces.delete(dest);\n\n  if (origPos[0] < destPos[0]) {\n    state.pieces.set(pos2key([6, destPos[1]]), king);\n    state.pieces.set(pos2key([5, destPos[1]]), rook);\n  } else {\n    state.pieces.set(pos2key([2, destPos[1]]), king);\n    state.pieces.set(pos2key([3, destPos[1]]), rook);\n  }\n  return true;\n}\n\nexport function baseMove(state: HeadlessState, orig: cg.Key, dest: cg.Key): cg.Piece | boolean {\n  const origPiece = state.pieces.get(orig),\n    destPiece = state.pieces.get(dest);\n  if (orig === dest || !origPiece) return false;\n  const captured = destPiece && destPiece.color !== origPiece.color ? destPiece : undefined;\n  if (dest === state.selected) unselect(state);\n  callUserFunction(state.events.move, orig, dest, captured);\n  if (!tryAutoCastle(state, orig, dest)) {\n    state.pieces.set(dest, origPiece);\n    state.pieces.delete(orig);\n  }\n  state.lastMove = [orig, dest];\n  state.check = undefined;\n  callUserFunction(state.events.change);\n  return captured || true;\n}\n\nexport function baseNewPiece(state: HeadlessState, piece: cg.Piece, key: cg.Key, force?: boolean): boolean {\n  if (state.pieces.has(key)) {\n    if (force) state.pieces.delete(key);\n    else return false;\n  }\n  callUserFunction(state.events.dropNewPiece, piece, key);\n  state.pieces.set(key, piece);\n  state.lastMove = [key];\n  state.check = undefined;\n  callUserFunction(state.events.change);\n  state.movable.dests = undefined;\n  state.turnColor = opposite(state.turnColor);\n  return true;\n}\n\nfunction baseUserMove(state: HeadlessState, orig: cg.Key, dest: cg.Key): cg.Piece | boolean {\n  const result = baseMove(state, orig, dest);\n  if (result) {\n    state.movable.dests = undefined;\n    state.turnColor = opposite(state.turnColor);\n    state.animation.current = undefined;\n  }\n  return result;\n}\n\nexport function userMove(state: HeadlessState, orig: cg.Key, dest: cg.Key): boolean {\n  if (canMove(state, orig, dest)) {\n    const result = baseUserMove(state, orig, dest);\n    if (result) {\n      const holdTime = state.hold.stop();\n      unselect(state);\n      const metadata: cg.MoveMetadata = {\n        premove: false,\n        ctrlKey: state.stats.ctrlKey,\n        holdTime,\n      };\n      if (result !== true) metadata.captured = result;\n      callUserFunction(state.movable.events.after, orig, dest, metadata);\n      return true;\n    }\n  } else if (canPremove(state, orig, dest)) {\n    setPremove(state, orig, dest, {\n      ctrlKey: state.stats.ctrlKey,\n    });\n    unselect(state);\n    return true;\n  }\n  unselect(state);\n  return false;\n}\n\nexport function dropNewPiece(state: HeadlessState, orig: cg.Key, dest: cg.Key, force?: boolean): void {\n  const piece = state.pieces.get(orig);\n  if (piece && (canDrop(state, orig, dest) || force)) {\n    state.pieces.delete(orig);\n    baseNewPiece(state, piece, dest, force);\n    callUserFunction(state.movable.events.afterNewPiece, piece.role, dest, {\n      premove: false,\n      predrop: false,\n    });\n  } else if (piece && canPredrop(state, orig, dest)) {\n    setPredrop(state, piece.role, dest);\n  } else {\n    unsetPremove(state);\n    unsetPredrop(state);\n  }\n  state.pieces.delete(orig);\n  unselect(state);\n}\n\nexport function selectSquare(state: HeadlessState, key: cg.Key, force?: boolean): void {\n  callUserFunction(state.events.select, key);\n  if (state.selected) {\n    if (state.selected === key && !state.draggable.enabled) {\n      unselect(state);\n      state.hold.cancel();\n      return;\n    } else if ((state.selectable.enabled || force) && state.selected !== key) {\n      if (userMove(state, state.selected, key)) {\n        state.stats.dragged = false;\n        return;\n      }\n    }\n  }\n  if (\n    (state.selectable.enabled || state.draggable.enabled) &&\n    (isMovable(state, key) || isPremovable(state, key))\n  ) {\n    setSelected(state, key);\n    state.hold.start();\n  }\n}\n\nexport function setSelected(state: HeadlessState, key: cg.Key): void {\n  state.selected = key;\n  if (isPremovable(state, key)) {\n    // calculate chess premoves if custom premoves are not passed\n    if (!state.premovable.customDests) {\n      state.premovable.dests = premove(state.pieces, key, state.premovable.castle);\n    }\n  } else state.premovable.dests = undefined;\n}\n\nexport function unselect(state: HeadlessState): void {\n  state.selected = undefined;\n  state.premovable.dests = undefined;\n  state.hold.cancel();\n}\n\nfunction isMovable(state: HeadlessState, orig: cg.Key): boolean {\n  const piece = state.pieces.get(orig);\n  return (\n    !!piece &&\n    (state.movable.color === 'both' ||\n      (state.movable.color === piece.color && state.turnColor === piece.color))\n  );\n}\n\nexport const canMove = (state: HeadlessState, orig: cg.Key, dest: cg.Key): boolean =>\n  orig !== dest &&\n  isMovable(state, orig) &&\n  (state.movable.free || !!state.movable.dests?.get(orig)?.includes(dest));\n\nfunction canDrop(state: HeadlessState, orig: cg.Key, dest: cg.Key): boolean {\n  const piece = state.pieces.get(orig);\n  return (\n    !!piece &&\n    (orig === dest || !state.pieces.has(dest)) &&\n    (state.movable.color === 'both' ||\n      (state.movable.color === piece.color && state.turnColor === piece.color))\n  );\n}\n\nfunction isPremovable(state: HeadlessState, orig: cg.Key): boolean {\n  const piece = state.pieces.get(orig);\n  return (\n    !!piece &&\n    state.premovable.enabled &&\n    state.movable.color === piece.color &&\n    state.turnColor !== piece.color\n  );\n}\n\nfunction canPremove(state: HeadlessState, orig: cg.Key, dest: cg.Key): boolean {\n  const validPremoves: cg.Key[] =\n    state.premovable.customDests?.get(orig) ?? premove(state.pieces, orig, state.premovable.castle);\n  return orig !== dest && isPremovable(state, orig) && validPremoves.includes(dest);\n}\n\nfunction canPredrop(state: HeadlessState, orig: cg.Key, dest: cg.Key): boolean {\n  const piece = state.pieces.get(orig);\n  const destPiece = state.pieces.get(dest);\n  return (\n    !!piece &&\n    (!destPiece || destPiece.color !== state.movable.color) &&\n    state.predroppable.enabled &&\n    (piece.role !== 'pawn' || (dest[1] !== '1' && dest[1] !== '8')) &&\n    state.movable.color === piece.color &&\n    state.turnColor !== piece.color\n  );\n}\n\nexport function isDraggable(state: HeadlessState, orig: cg.Key): boolean {\n  const piece = state.pieces.get(orig);\n  return (\n    !!piece &&\n    state.draggable.enabled &&\n    (state.movable.color === 'both' ||\n      (state.movable.color === piece.color && (state.turnColor === piece.color || state.premovable.enabled)))\n  );\n}\n\nexport function playPremove(state: HeadlessState): boolean {\n  const move = state.premovable.current;\n  if (!move) return false;\n  const orig = move[0],\n    dest = move[1];\n  let success = false;\n  if (canMove(state, orig, dest)) {\n    const result = baseUserMove(state, orig, dest);\n    if (result) {\n      const metadata: cg.MoveMetadata = { premove: true };\n      if (result !== true) metadata.captured = result;\n      callUserFunction(state.movable.events.after, orig, dest, metadata);\n      success = true;\n    }\n  }\n  unsetPremove(state);\n  return success;\n}\n\nexport function playPredrop(state: HeadlessState, validate: (drop: cg.Drop) => boolean): boolean {\n  const drop = state.predroppable.current;\n  let success = false;\n  if (!drop) return false;\n  if (validate(drop)) {\n    const piece = {\n      role: drop.role,\n      color: state.movable.color,\n    } as cg.Piece;\n    if (baseNewPiece(state, piece, drop.key)) {\n      callUserFunction(state.movable.events.afterNewPiece, drop.role, drop.key, {\n        premove: false,\n        predrop: true,\n      });\n      success = true;\n    }\n  }\n  unsetPredrop(state);\n  return success;\n}\n\nexport function cancelMove(state: HeadlessState): void {\n  unsetPremove(state);\n  unsetPredrop(state);\n  unselect(state);\n}\n\nexport function stop(state: HeadlessState): void {\n  state.movable.color = state.movable.dests = state.animation.current = undefined;\n  cancelMove(state);\n}\n\nexport function getKeyAtDomPos(\n  pos: cg.NumberPair,\n  asWhite: boolean,\n  bounds: DOMRectReadOnly,\n): cg.Key | undefined {\n  let file = Math.floor((8 * (pos[0] - bounds.left)) / bounds.width);\n  if (!asWhite) file = 7 - file;\n  let rank = 7 - Math.floor((8 * (pos[1] - bounds.top)) / bounds.height);\n  if (!asWhite) rank = 7 - rank;\n  return file >= 0 && file < 8 && rank >= 0 && rank < 8 ? pos2key([file, rank]) : undefined;\n}\n\nexport function getSnappedKeyAtDomPos(\n  orig: cg.Key,\n  pos: cg.NumberPair,\n  asWhite: boolean,\n  bounds: DOMRectReadOnly,\n): cg.Key | undefined {\n  const origPos = key2pos(orig);\n  const validSnapPos = allPos.filter(\n    pos2 =>\n      queen(origPos[0], origPos[1], pos2[0], pos2[1]) || knight(origPos[0], origPos[1], pos2[0], pos2[1]),\n  );\n  const validSnapCenters = validSnapPos.map(pos2 => computeSquareCenter(pos2key(pos2), asWhite, bounds));\n  const validSnapDistances = validSnapCenters.map(pos2 => distanceSq(pos, pos2));\n  const [, closestSnapIndex] = validSnapDistances.reduce(\n    (a, b, index) => (a[0] < b ? a : [b, index]),\n    [validSnapDistances[0], 0],\n  );\n  return pos2key(validSnapPos[closestSnapIndex]);\n}\n\nexport const whitePov = (s: HeadlessState): boolean => s.orientation === 'white';\n","import * as cg from './types.js';\nexport const invRanks = [...cg.ranks].reverse();\nexport const allKeys = Array.prototype.concat(...cg.files.map(c => cg.ranks.map(r => c + r)));\nexport const pos2key = (pos) => allKeys[8 * pos[0] + pos[1]];\nexport const key2pos = (k) => [k.charCodeAt(0) - 97, k.charCodeAt(1) - 49];\nexport const uciToMove = (uci) => {\n    if (!uci)\n        return undefined;\n    if (uci[1] === '@')\n        return [uci.slice(2, 4)];\n    return [uci.slice(0, 2), uci.slice(2, 4)];\n};\nexport const allPos = allKeys.map(key2pos);\nexport function memo(f) {\n    let v;\n    const ret = () => {\n        if (v === undefined)\n            v = f();\n        return v;\n    };\n    ret.clear = () => {\n        v = undefined;\n    };\n    return ret;\n}\nexport const timer = () => {\n    let startAt;\n    return {\n        start() {\n            startAt = performance.now();\n        },\n        cancel() {\n            startAt = undefined;\n        },\n        stop() {\n            if (!startAt)\n                return 0;\n            const time = performance.now() - startAt;\n            startAt = undefined;\n            return time;\n        },\n    };\n};\nexport const opposite = (c) => (c === 'white' ? 'black' : 'white');\nexport const distanceSq = (pos1, pos2) => {\n    const dx = pos1[0] - pos2[0], dy = pos1[1] - pos2[1];\n    return dx * dx + dy * dy;\n};\nexport const samePiece = (p1, p2) => p1.role === p2.role && p1.color === p2.color;\nexport const posToTranslate = (bounds) => (pos, asWhite) => [\n    ((asWhite ? pos[0] : 7 - pos[0]) * bounds.width) / 8,\n    ((asWhite ? 7 - pos[1] : pos[1]) * bounds.height) / 8,\n];\nexport const translate = (el, pos) => {\n    el.style.transform = `translate(${pos[0]}px,${pos[1]}px)`;\n};\nexport const translateAndScale = (el, pos, scale = 1) => {\n    el.style.transform = `translate(${pos[0]}px,${pos[1]}px) scale(${scale})`;\n};\nexport const setVisible = (el, v) => {\n    el.style.visibility = v ? 'visible' : 'hidden';\n};\nexport const eventPosition = (e) => {\n    var _a;\n    if (e.clientX || e.clientX === 0)\n        return [e.clientX, e.clientY];\n    if ((_a = e.targetTouches) === null || _a === void 0 ? void 0 : _a[0])\n        return [e.targetTouches[0].clientX, e.targetTouches[0].clientY];\n    return; // touchend has no position!\n};\nexport const isRightButton = (e) => e.buttons === 2 || e.button === 2;\nexport const createEl = (tagName, className) => {\n    const el = document.createElement(tagName);\n    if (className)\n        el.className = className;\n    return el;\n};\nexport function computeSquareCenter(key, asWhite, bounds) {\n    const pos = key2pos(key);\n    if (!asWhite) {\n        pos[0] = 7 - pos[0];\n        pos[1] = 7 - pos[1];\n    }\n    return [\n        bounds.left + (bounds.width * pos[0]) / 8 + bounds.width / 16,\n        bounds.top + (bounds.height * (7 - pos[1])) / 8 + bounds.height / 16,\n    ];\n}\n//# sourceMappingURL=util.js.map","import * as cg from './types.js';\n\nexport const invRanks: readonly cg.Rank[] = [...cg.ranks].reverse();\n\nexport const allKeys: readonly cg.Key[] = Array.prototype.concat(\n  ...cg.files.map(c => cg.ranks.map(r => c + r)),\n);\n\nexport const pos2key = (pos: cg.Pos): cg.Key => allKeys[8 * pos[0] + pos[1]];\n\nexport const key2pos = (k: cg.Key): cg.Pos => [k.charCodeAt(0) - 97, k.charCodeAt(1) - 49];\n\nexport const uciToMove = (uci: string | undefined): cg.Key[] | undefined => {\n  if (!uci) return undefined;\n  if (uci[1] === '@') return [uci.slice(2, 4) as cg.Key];\n  return [uci.slice(0, 2), uci.slice(2, 4)] as cg.Key[];\n};\n\nexport const allPos: readonly cg.Pos[] = allKeys.map(key2pos);\n\nexport function memo<A>(f: () => A): cg.Memo<A> {\n  let v: A | undefined;\n  const ret = (): A => {\n    if (v === undefined) v = f();\n    return v;\n  };\n  ret.clear = () => {\n    v = undefined;\n  };\n  return ret;\n}\n\nexport const timer = (): cg.Timer => {\n  let startAt: number | undefined;\n  return {\n    start() {\n      startAt = performance.now();\n    },\n    cancel() {\n      startAt = undefined;\n    },\n    stop() {\n      if (!startAt) return 0;\n      const time = performance.now() - startAt;\n      startAt = undefined;\n      return time;\n    },\n  };\n};\n\nexport const opposite = (c: cg.Color): cg.Color => (c === 'white' ? 'black' : 'white');\n\nexport const distanceSq = (pos1: cg.Pos, pos2: cg.Pos): number => {\n  const dx = pos1[0] - pos2[0],\n    dy = pos1[1] - pos2[1];\n  return dx * dx + dy * dy;\n};\n\nexport const samePiece = (p1: cg.Piece, p2: cg.Piece): boolean =>\n  p1.role === p2.role && p1.color === p2.color;\n\nexport const posToTranslate =\n  (bounds: DOMRectReadOnly): ((pos: cg.Pos, asWhite: boolean) => cg.NumberPair) =>\n  (pos, asWhite) => [\n    ((asWhite ? pos[0] : 7 - pos[0]) * bounds.width) / 8,\n    ((asWhite ? 7 - pos[1] : pos[1]) * bounds.height) / 8,\n  ];\n\nexport const translate = (el: HTMLElement, pos: cg.NumberPair): void => {\n  el.style.transform = `translate(${pos[0]}px,${pos[1]}px)`;\n};\n\nexport const translateAndScale = (el: HTMLElement, pos: cg.NumberPair, scale = 1): void => {\n  el.style.transform = `translate(${pos[0]}px,${pos[1]}px) scale(${scale})`;\n};\n\nexport const setVisible = (el: HTMLElement, v: boolean): void => {\n  el.style.visibility = v ? 'visible' : 'hidden';\n};\n\nexport const eventPosition = (e: cg.MouchEvent): cg.NumberPair | undefined => {\n  if (e.clientX || e.clientX === 0) return [e.clientX, e.clientY!];\n  if (e.targetTouches?.[0]) return [e.targetTouches[0].clientX, e.targetTouches[0].clientY];\n  return; // touchend has no position!\n};\n\nexport const isRightButton = (e: cg.MouchEvent): boolean => e.buttons === 2 || e.button === 2;\n\nexport const createEl = (tagName: string, className?: string): HTMLElement => {\n  const el = document.createElement(tagName);\n  if (className) el.className = className;\n  return el;\n};\n\nexport function computeSquareCenter(key: cg.Key, asWhite: boolean, bounds: DOMRectReadOnly): cg.NumberPair {\n  const pos = key2pos(key);\n  if (!asWhite) {\n    pos[0] = 7 - pos[0];\n    pos[1] = 7 - pos[1];\n  }\n  return [\n    bounds.left + (bounds.width * pos[0]) / 8 + bounds.width / 16,\n    bounds.top + (bounds.height * (7 - pos[1])) / 8 + bounds.height / 16,\n  ];\n}\n","export const colors = ['white', 'black'];\nexport const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'];\n//# sourceMappingURL=types.js.map","export type Color = (typeof colors)[number];\nexport type Role = 'king' | 'queen' | 'rook' | 'bishop' | 'knight' | 'pawn';\nexport type File = (typeof files)[number];\nexport type Rank = (typeof ranks)[number];\nexport type Key = 'a0' | `${File}${Rank}`;\nexport type FEN = string;\nexport type Pos = [number, number];\nexport interface Piece {\n  role: Role;\n  color: Color;\n  promoted?: boolean;\n}\nexport interface Drop {\n  role: Role;\n  key: Key;\n}\nexport type Pieces = Map<Key, Piece>;\nexport type PiecesDiff = Map<Key, Piece | undefined>;\n\nexport type KeyPair = [Key, Key];\n\nexport type NumberPair = [number, number];\n\nexport type NumberQuad = [number, number, number, number];\n\nexport interface Rect {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport type Dests = Map<Key, Key[]>;\n\nexport interface Elements {\n  board: HTMLElement;\n  wrap: HTMLElement;\n  container: HTMLElement;\n  ghost?: HTMLElement;\n  svg?: SVGElement;\n  customSvg?: SVGElement;\n  autoPieces?: HTMLElement;\n}\nexport interface Dom {\n  elements: Elements;\n  bounds: Memo<DOMRectReadOnly>;\n  redraw: () => void;\n  redrawNow: (skipSvg?: boolean) => void;\n  unbind?: Unbind;\n  destroyed?: boolean;\n}\nexport interface Exploding {\n  stage: number;\n  keys: readonly Key[];\n}\n\nexport interface MoveMetadata {\n  premove: boolean;\n  ctrlKey?: boolean;\n  holdTime?: number;\n  captured?: Piece;\n  predrop?: boolean;\n}\nexport interface SetPremoveMetadata {\n  ctrlKey?: boolean;\n}\n\nexport type MouchEvent = Event & Partial<MouseEvent & TouchEvent>;\n\nexport interface KeyedNode extends HTMLElement {\n  cgKey: Key;\n}\nexport interface PieceNode extends KeyedNode {\n  tagName: 'PIECE';\n  cgPiece: string;\n  cgAnimating?: boolean;\n  cgFading?: boolean;\n  cgDragging?: boolean;\n  cgScale?: number;\n}\nexport interface SquareNode extends KeyedNode {\n  tagName: 'SQUARE';\n}\n\nexport interface Memo<A> {\n  (): A;\n  clear: () => void;\n}\n\nexport interface Timer {\n  start: () => void;\n  cancel: () => void;\n  stop: () => number;\n}\n\nexport type Redraw = () => void;\nexport type Unbind = () => void;\nexport type Milliseconds = number;\nexport type KHz = number;\n\nexport const colors = ['white', 'black'] as const;\nexport const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'] as const;\nexport const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'] as const;\n\nexport type RanksPosition = 'left' | 'right';\n\nexport type BrushColor = 'green' | 'red' | 'blue' | 'yellow';\n\nexport type SquareClasses = Map<Key, string>;\n","import * as util from './util.js';\nconst diff = (a, b) => Math.abs(a - b);\nconst pawn = (color) => (x1, y1, x2, y2) => diff(x1, x2) < 2 &&\n    (color === 'white'\n        ? // allow 2 squares from first two ranks, for horde\n            y2 === y1 + 1 || (y1 <= 1 && y2 === y1 + 2 && x1 === x2)\n        : y2 === y1 - 1 || (y1 >= 6 && y2 === y1 - 2 && x1 === x2));\nexport const knight = (x1, y1, x2, y2) => {\n    const xd = diff(x1, x2);\n    const yd = diff(y1, y2);\n    return (xd === 1 && yd === 2) || (xd === 2 && yd === 1);\n};\nconst bishop = (x1, y1, x2, y2) => {\n    return diff(x1, x2) === diff(y1, y2);\n};\nconst rook = (x1, y1, x2, y2) => {\n    return x1 === x2 || y1 === y2;\n};\nexport const queen = (x1, y1, x2, y2) => {\n    return bishop(x1, y1, x2, y2) || rook(x1, y1, x2, y2);\n};\nconst king = (color, rookFiles, canCastle) => (x1, y1, x2, y2) => (diff(x1, x2) < 2 && diff(y1, y2) < 2) ||\n    (canCastle &&\n        y1 === y2 &&\n        y1 === (color === 'white' ? 0 : 7) &&\n        ((x1 === 4 && ((x2 === 2 && rookFiles.includes(0)) || (x2 === 6 && rookFiles.includes(7)))) ||\n            rookFiles.includes(x2)));\nfunction rookFilesOf(pieces, color) {\n    const backrank = color === 'white' ? '1' : '8';\n    const files = [];\n    for (const [key, piece] of pieces) {\n        if (key[1] === backrank && piece.color === color && piece.role === 'rook') {\n            files.push(util.key2pos(key)[0]);\n        }\n    }\n    return files;\n}\nexport function premove(pieces, key, canCastle) {\n    const piece = pieces.get(key);\n    if (!piece)\n        return [];\n    const pos = util.key2pos(key), r = piece.role, mobility = r === 'pawn'\n        ? pawn(piece.color)\n        : r === 'knight'\n            ? knight\n            : r === 'bishop'\n                ? bishop\n                : r === 'rook'\n                    ? rook\n                    : r === 'queen'\n                        ? queen\n                        : king(piece.color, rookFilesOf(pieces, piece.color), canCastle);\n    return util.allPos\n        .filter(pos2 => (pos[0] !== pos2[0] || pos[1] !== pos2[1]) && mobility(pos[0], pos[1], pos2[0], pos2[1]))\n        .map(util.pos2key);\n}\n//# sourceMappingURL=premove.js.map","import * as util from './util.js';\nimport * as cg from './types.js';\n\ntype Mobility = (x1: number, y1: number, x2: number, y2: number) => boolean;\n\nconst diff = (a: number, b: number): number => Math.abs(a - b);\n\nconst pawn =\n  (color: cg.Color): Mobility =>\n  (x1, y1, x2, y2) =>\n    diff(x1, x2) < 2 &&\n    (color === 'white'\n      ? // allow 2 squares from first two ranks, for horde\n        y2 === y1 + 1 || (y1 <= 1 && y2 === y1 + 2 && x1 === x2)\n      : y2 === y1 - 1 || (y1 >= 6 && y2 === y1 - 2 && x1 === x2));\n\nexport const knight: Mobility = (x1, y1, x2, y2) => {\n  const xd = diff(x1, x2);\n  const yd = diff(y1, y2);\n  return (xd === 1 && yd === 2) || (xd === 2 && yd === 1);\n};\n\nconst bishop: Mobility = (x1, y1, x2, y2) => {\n  return diff(x1, x2) === diff(y1, y2);\n};\n\nconst rook: Mobility = (x1, y1, x2, y2) => {\n  return x1 === x2 || y1 === y2;\n};\n\nexport const queen: Mobility = (x1, y1, x2, y2) => {\n  return bishop(x1, y1, x2, y2) || rook(x1, y1, x2, y2);\n};\n\nconst king =\n  (color: cg.Color, rookFiles: number[], canCastle: boolean): Mobility =>\n  (x1, y1, x2, y2) =>\n    (diff(x1, x2) < 2 && diff(y1, y2) < 2) ||\n    (canCastle &&\n      y1 === y2 &&\n      y1 === (color === 'white' ? 0 : 7) &&\n      ((x1 === 4 && ((x2 === 2 && rookFiles.includes(0)) || (x2 === 6 && rookFiles.includes(7)))) ||\n        rookFiles.includes(x2)));\n\nfunction rookFilesOf(pieces: cg.Pieces, color: cg.Color) {\n  const backrank = color === 'white' ? '1' : '8';\n  const files = [];\n  for (const [key, piece] of pieces) {\n    if (key[1] === backrank && piece.color === color && piece.role === 'rook') {\n      files.push(util.key2pos(key)[0]);\n    }\n  }\n  return files;\n}\n\nexport function premove(pieces: cg.Pieces, key: cg.Key, canCastle: boolean): cg.Key[] {\n  const piece = pieces.get(key);\n  if (!piece) return [];\n  const pos = util.key2pos(key),\n    r = piece.role,\n    mobility: Mobility =\n      r === 'pawn'\n        ? pawn(piece.color)\n        : r === 'knight'\n        ? knight\n        : r === 'bishop'\n        ? bishop\n        : r === 'rook'\n        ? rook\n        : r === 'queen'\n        ? queen\n        : king(piece.color, rookFilesOf(pieces, piece.color), canCastle);\n  return util.allPos\n    .filter(pos2 => (pos[0] !== pos2[0] || pos[1] !== pos2[1]) && mobility(pos[0], pos[1], pos2[0], pos2[1]))\n    .map(util.pos2key);\n}\n","import { pos2key, invRanks } from './util.js';\nimport * as cg from './types.js';\nexport const initial = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\nconst roles = {\n    p: 'pawn',\n    r: 'rook',\n    n: 'knight',\n    b: 'bishop',\n    q: 'queen',\n    k: 'king',\n};\nconst letters = {\n    pawn: 'p',\n    rook: 'r',\n    knight: 'n',\n    bishop: 'b',\n    queen: 'q',\n    king: 'k',\n};\nexport function read(fen) {\n    if (fen === 'start')\n        fen = initial;\n    const pieces = new Map();\n    let row = 7, col = 0;\n    for (const c of fen) {\n        switch (c) {\n            case ' ':\n            case '[':\n                return pieces;\n            case '/':\n                --row;\n                if (row < 0)\n                    return pieces;\n                col = 0;\n                break;\n            case '~': {\n                const piece = pieces.get(pos2key([col - 1, row]));\n                if (piece)\n                    piece.promoted = true;\n                break;\n            }\n            default: {\n                const nb = c.charCodeAt(0);\n                if (nb < 57)\n                    col += nb - 48;\n                else {\n                    const role = c.toLowerCase();\n                    pieces.set(pos2key([col, row]), {\n                        role: roles[role],\n                        color: c === role ? 'black' : 'white',\n                    });\n                    ++col;\n                }\n            }\n        }\n    }\n    return pieces;\n}\nexport function write(pieces) {\n    return invRanks\n        .map(y => cg.files\n        .map(x => {\n        const piece = pieces.get((x + y));\n        if (piece) {\n            let p = letters[piece.role];\n            if (piece.color === 'white')\n                p = p.toUpperCase();\n            if (piece.promoted)\n                p += '~';\n            return p;\n        }\n        else\n            return '1';\n    })\n        .join(''))\n        .join('/')\n        .replace(/1{2,}/g, s => s.length.toString());\n}\n//# sourceMappingURL=fen.js.map","import { pos2key, invRanks } from './util.js';\nimport * as cg from './types.js';\n\nexport const initial: cg.FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\n\nconst roles: { [letter: string]: cg.Role } = {\n  p: 'pawn',\n  r: 'rook',\n  n: 'knight',\n  b: 'bishop',\n  q: 'queen',\n  k: 'king',\n};\n\nconst letters = {\n  pawn: 'p',\n  rook: 'r',\n  knight: 'n',\n  bishop: 'b',\n  queen: 'q',\n  king: 'k',\n};\n\nexport function read(fen: cg.FEN): cg.Pieces {\n  if (fen === 'start') fen = initial;\n  const pieces: cg.Pieces = new Map();\n  let row = 7,\n    col = 0;\n  for (const c of fen) {\n    switch (c) {\n      case ' ':\n      case '[':\n        return pieces;\n      case '/':\n        --row;\n        if (row < 0) return pieces;\n        col = 0;\n        break;\n      case '~': {\n        const piece = pieces.get(pos2key([col - 1, row]));\n        if (piece) piece.promoted = true;\n        break;\n      }\n      default: {\n        const nb = c.charCodeAt(0);\n        if (nb < 57) col += nb - 48;\n        else {\n          const role = c.toLowerCase();\n          pieces.set(pos2key([col, row]), {\n            role: roles[role],\n            color: c === role ? 'black' : 'white',\n          });\n          ++col;\n        }\n      }\n    }\n  }\n  return pieces;\n}\n\nexport function write(pieces: cg.Pieces): cg.FEN {\n  return invRanks\n    .map(y =>\n      cg.files\n        .map(x => {\n          const piece = pieces.get((x + y) as cg.Key);\n          if (piece) {\n            let p = letters[piece.role];\n            if (piece.color === 'white') p = p.toUpperCase();\n            if (piece.promoted) p += '~';\n            return p;\n          } else return '1';\n        })\n        .join(''),\n    )\n    .join('/')\n    .replace(/1{2,}/g, s => s.length.toString());\n}\n","import { setCheck, setSelected } from './board.js';\nimport { read as fenRead } from './fen.js';\nexport function applyAnimation(state, config) {\n    if (config.animation) {\n        deepMerge(state.animation, config.animation);\n        // no need for such short animations\n        if ((state.animation.duration || 0) < 70)\n            state.animation.enabled = false;\n    }\n}\nexport function configure(state, config) {\n    var _a, _b, _c;\n    // don't merge destinations and autoShapes. Just override.\n    if ((_a = config.movable) === null || _a === void 0 ? void 0 : _a.dests)\n        state.movable.dests = undefined;\n    if ((_b = config.drawable) === null || _b === void 0 ? void 0 : _b.autoShapes)\n        state.drawable.autoShapes = [];\n    deepMerge(state, config);\n    // if a fen was provided, replace the pieces\n    if (config.fen) {\n        state.pieces = fenRead(config.fen);\n        state.drawable.shapes = ((_c = config.drawable) === null || _c === void 0 ? void 0 : _c.shapes) || [];\n    }\n    // apply config values that could be undefined yet meaningful\n    if ('check' in config)\n        setCheck(state, config.check || false);\n    if ('lastMove' in config && !config.lastMove)\n        state.lastMove = undefined;\n    // in case of ZH drop last move, there's a single square.\n    // if the previous last move had two squares,\n    // the merge algorithm will incorrectly keep the second square.\n    else if (config.lastMove)\n        state.lastMove = config.lastMove;\n    // fix move/premove dests\n    if (state.selected)\n        setSelected(state, state.selected);\n    applyAnimation(state, config);\n    if (!state.movable.rookCastle && state.movable.dests) {\n        const rank = state.movable.color === 'white' ? '1' : '8', kingStartPos = ('e' + rank), dests = state.movable.dests.get(kingStartPos), king = state.pieces.get(kingStartPos);\n        if (!dests || !king || king.role !== 'king')\n            return;\n        state.movable.dests.set(kingStartPos, dests.filter(d => !(d === 'a' + rank && dests.includes(('c' + rank))) &&\n            !(d === 'h' + rank && dests.includes(('g' + rank)))));\n    }\n}\nfunction deepMerge(base, extend) {\n    for (const key in extend) {\n        if (Object.prototype.hasOwnProperty.call(extend, key)) {\n            if (Object.prototype.hasOwnProperty.call(base, key) &&\n                isPlainObject(base[key]) &&\n                isPlainObject(extend[key]))\n                deepMerge(base[key], extend[key]);\n            else\n                base[key] = extend[key];\n        }\n    }\n}\nfunction isPlainObject(o) {\n    if (typeof o !== 'object' || o === null)\n        return false;\n    const proto = Object.getPrototypeOf(o);\n    return proto === Object.prototype || proto === null;\n}\n//# sourceMappingURL=config.js.map","import { HeadlessState } from './state.js';\nimport { setCheck, setSelected } from './board.js';\nimport { read as fenRead } from './fen.js';\nimport { DrawShape, DrawBrushes } from './draw.js';\nimport * as cg from './types.js';\n\nexport interface Config {\n  fen?: cg.FEN; // chess position in Forsyth notation\n  orientation?: cg.Color; // board orientation. white | black\n  turnColor?: cg.Color; // turn to play. white | black\n  check?: cg.Color | boolean; // true for current color, false to unset\n  lastMove?: cg.Key[]; // squares part of the last move [\"c3\", \"c4\"]\n  selected?: cg.Key; // square currently selected \"a1\"\n  coordinates?: boolean; // include coords attributes\n  autoCastle?: boolean; // immediately complete the castle by moving the rook after king move\n  viewOnly?: boolean; // don't bind events: the user will never be able to move pieces around\n  disableContextMenu?: boolean; // because who needs a context menu on a chessboard\n  addPieceZIndex?: boolean; // adds z-index values to pieces (for 3D)\n  addDimensionsCssVarsTo?: HTMLElement; // add --cg-width and --cg-height CSS vars containing the board's dimensions to this element\n  blockTouchScroll?: boolean; // block scrolling via touch dragging on the board, e.g. for coordinate training\n  // pieceKey: boolean; // add a data-key attribute to piece elements\n  trustAllEvents?: boolean; // disable checking for human only input (e.isTrusted)\n  highlight?: {\n    lastMove?: boolean; // add last-move class to squares\n    check?: boolean; // add check class to squares\n    custom?: cg.SquareClasses; // add custom classes to custom squares\n  };\n  animation?: {\n    enabled?: boolean;\n    duration?: number;\n  };\n  movable?: {\n    free?: boolean; // all moves are valid - board editor\n    color?: cg.Color | 'both'; // color that can move. white | black | both | undefined\n    dests?: cg.Dests; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n    showDests?: boolean; // whether to add the move-dest class on squares\n    events?: {\n      after?: (orig: cg.Key, dest: cg.Key, metadata: cg.MoveMetadata) => void; // called after the move has been played\n      afterNewPiece?: (role: cg.Role, key: cg.Key, metadata: cg.MoveMetadata) => void; // called after a new piece is dropped on the board\n    };\n    rookCastle?: boolean; // castle by moving the king to the rook\n  };\n  premovable?: {\n    enabled?: boolean; // allow premoves for color that can not move\n    showDests?: boolean; // whether to add the premove-dest class on squares\n    castle?: boolean; // whether to allow king castle premoves\n    dests?: cg.Key[]; // premove destinations for the current selection\n    customDests?: cg.Dests; // use custom valid premoves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n    events?: {\n      set?: (orig: cg.Key, dest: cg.Key, metadata?: cg.SetPremoveMetadata) => void; // called after the premove has been set\n      unset?: () => void; // called after the premove has been unset\n    };\n  };\n  predroppable?: {\n    enabled?: boolean; // allow predrops for color that can not move\n    events?: {\n      set?: (role: cg.Role, key: cg.Key) => void; // called after the predrop has been set\n      unset?: () => void; // called after the predrop has been unset\n    };\n  };\n  draggable?: {\n    enabled?: boolean; // allow moves & premoves to use drag'n drop\n    distance?: number; // minimum distance to initiate a drag; in pixels\n    autoDistance?: boolean; // lets chessground set distance to zero when user drags pieces\n    showGhost?: boolean; // show ghost of piece being dragged\n    deleteOnDropOff?: boolean; // delete a piece when it is dropped off the board\n  };\n  selectable?: {\n    // disable to enforce dragging over click-click move\n    enabled?: boolean;\n  };\n  events?: {\n    change?: () => void; // called after the situation changes on the board\n    // called after a piece has been moved.\n    // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n    move?: (orig: cg.Key, dest: cg.Key, capturedPiece?: cg.Piece) => void;\n    dropNewPiece?: (piece: cg.Piece, key: cg.Key) => void;\n    select?: (key: cg.Key) => void; // called when a square is selected\n    insert?: (elements: cg.Elements) => void; // when the board DOM has been (re)inserted\n  };\n  drawable?: {\n    enabled?: boolean; // can draw\n    visible?: boolean; // can view\n    defaultSnapToValidMove?: boolean;\n    // false to keep the drawing if a movable piece is clicked.\n    // Clicking an empty square or immovable piece will clear the drawing regardless.\n    eraseOnClick?: boolean;\n    shapes?: DrawShape[];\n    autoShapes?: DrawShape[];\n    brushes?: DrawBrushes;\n    onChange?: (shapes: DrawShape[]) => void; // called after drawable shapes change\n  };\n}\n\nexport function applyAnimation(state: HeadlessState, config: Config): void {\n  if (config.animation) {\n    deepMerge(state.animation, config.animation);\n    // no need for such short animations\n    if ((state.animation.duration || 0) < 70) state.animation.enabled = false;\n  }\n}\n\nexport function configure(state: HeadlessState, config: Config): void {\n  // don't merge destinations and autoShapes. Just override.\n  if (config.movable?.dests) state.movable.dests = undefined;\n  if (config.drawable?.autoShapes) state.drawable.autoShapes = [];\n\n  deepMerge(state, config);\n\n  // if a fen was provided, replace the pieces\n  if (config.fen) {\n    state.pieces = fenRead(config.fen);\n    state.drawable.shapes = config.drawable?.shapes || [];\n  }\n\n  // apply config values that could be undefined yet meaningful\n  if ('check' in config) setCheck(state, config.check || false);\n  if ('lastMove' in config && !config.lastMove) state.lastMove = undefined;\n  // in case of ZH drop last move, there's a single square.\n  // if the previous last move had two squares,\n  // the merge algorithm will incorrectly keep the second square.\n  else if (config.lastMove) state.lastMove = config.lastMove;\n\n  // fix move/premove dests\n  if (state.selected) setSelected(state, state.selected);\n\n  applyAnimation(state, config);\n\n  if (!state.movable.rookCastle && state.movable.dests) {\n    const rank = state.movable.color === 'white' ? '1' : '8',\n      kingStartPos = ('e' + rank) as cg.Key,\n      dests = state.movable.dests.get(kingStartPos),\n      king = state.pieces.get(kingStartPos);\n    if (!dests || !king || king.role !== 'king') return;\n    state.movable.dests.set(\n      kingStartPos,\n      dests.filter(\n        d =>\n          !(d === 'a' + rank && dests.includes(('c' + rank) as cg.Key)) &&\n          !(d === 'h' + rank && dests.includes(('g' + rank) as cg.Key)),\n      ),\n    );\n  }\n}\n\nfunction deepMerge(base: any, extend: any): void {\n  for (const key in extend) {\n    if (Object.prototype.hasOwnProperty.call(extend, key)) {\n      if (\n        Object.prototype.hasOwnProperty.call(base, key) &&\n        isPlainObject(base[key]) &&\n        isPlainObject(extend[key])\n      )\n        deepMerge(base[key], extend[key]);\n      else base[key] = extend[key];\n    }\n  }\n}\n\nfunction isPlainObject(o: unknown): boolean {\n  if (typeof o !== 'object' || o === null) return false;\n  const proto = Object.getPrototypeOf(o);\n  return proto === Object.prototype || proto === null;\n}\n","import * as util from './util.js';\nexport const anim = (mutation, state) => state.animation.enabled ? animate(mutation, state) : render(mutation, state);\nexport function render(mutation, state) {\n    const result = mutation(state);\n    state.dom.redraw();\n    return result;\n}\nconst makePiece = (key, piece) => ({\n    key: key,\n    pos: util.key2pos(key),\n    piece: piece,\n});\nconst closer = (piece, pieces) => pieces.sort((p1, p2) => util.distanceSq(piece.pos, p1.pos) - util.distanceSq(piece.pos, p2.pos))[0];\nfunction computePlan(prevPieces, current) {\n    const anims = new Map(), animedOrigs = [], fadings = new Map(), missings = [], news = [], prePieces = new Map();\n    let curP, preP, vector;\n    for (const [k, p] of prevPieces) {\n        prePieces.set(k, makePiece(k, p));\n    }\n    for (const key of util.allKeys) {\n        curP = current.pieces.get(key);\n        preP = prePieces.get(key);\n        if (curP) {\n            if (preP) {\n                if (!util.samePiece(curP, preP.piece)) {\n                    missings.push(preP);\n                    news.push(makePiece(key, curP));\n                }\n            }\n            else\n                news.push(makePiece(key, curP));\n        }\n        else if (preP)\n            missings.push(preP);\n    }\n    for (const newP of news) {\n        preP = closer(newP, missings.filter(p => util.samePiece(newP.piece, p.piece)));\n        if (preP) {\n            vector = [preP.pos[0] - newP.pos[0], preP.pos[1] - newP.pos[1]];\n            anims.set(newP.key, vector.concat(vector));\n            animedOrigs.push(preP.key);\n        }\n    }\n    for (const p of missings) {\n        if (!animedOrigs.includes(p.key))\n            fadings.set(p.key, p.piece);\n    }\n    return {\n        anims: anims,\n        fadings: fadings,\n    };\n}\nfunction step(state, now) {\n    const cur = state.animation.current;\n    if (cur === undefined) {\n        // animation was canceled :(\n        if (!state.dom.destroyed)\n            state.dom.redrawNow();\n        return;\n    }\n    const rest = 1 - (now - cur.start) * cur.frequency;\n    if (rest <= 0) {\n        state.animation.current = undefined;\n        state.dom.redrawNow();\n    }\n    else {\n        const ease = easing(rest);\n        for (const cfg of cur.plan.anims.values()) {\n            cfg[2] = cfg[0] * ease;\n            cfg[3] = cfg[1] * ease;\n        }\n        state.dom.redrawNow(true); // optimisation: don't render SVG changes during animations\n        requestAnimationFrame((now = performance.now()) => step(state, now));\n    }\n}\nfunction animate(mutation, state) {\n    // clone state before mutating it\n    const prevPieces = new Map(state.pieces);\n    const result = mutation(state);\n    const plan = computePlan(prevPieces, state);\n    if (plan.anims.size || plan.fadings.size) {\n        const alreadyRunning = state.animation.current && state.animation.current.start;\n        state.animation.current = {\n            start: performance.now(),\n            frequency: 1 / state.animation.duration,\n            plan: plan,\n        };\n        if (!alreadyRunning)\n            step(state, performance.now());\n    }\n    else {\n        // don't animate, just render right away\n        state.dom.redraw();\n    }\n    return result;\n}\n// https://gist.github.com/gre/1650294\nconst easing = (t) => (t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1);\n//# sourceMappingURL=anim.js.map","import { State } from './state.js';\nimport * as util from './util.js';\nimport * as cg from './types.js';\n\nexport type Mutation<A> = (state: State) => A;\n\n// 0,1 animation goal\n// 2,3 animation current status\nexport type AnimVector = cg.NumberQuad;\n\nexport type AnimVectors = Map<cg.Key, AnimVector>;\n\nexport type AnimFadings = Map<cg.Key, cg.Piece>;\n\nexport interface AnimPlan {\n  anims: AnimVectors;\n  fadings: AnimFadings;\n}\n\nexport interface AnimCurrent {\n  start: DOMHighResTimeStamp;\n  frequency: cg.KHz;\n  plan: AnimPlan;\n}\n\nexport const anim = <A>(mutation: Mutation<A>, state: State): A =>\n  state.animation.enabled ? animate(mutation, state) : render(mutation, state);\n\nexport function render<A>(mutation: Mutation<A>, state: State): A {\n  const result = mutation(state);\n  state.dom.redraw();\n  return result;\n}\n\ninterface AnimPiece {\n  key: cg.Key;\n  pos: cg.Pos;\n  piece: cg.Piece;\n}\ntype AnimPieces = Map<cg.Key, AnimPiece>;\n\nconst makePiece = (key: cg.Key, piece: cg.Piece): AnimPiece => ({\n  key: key,\n  pos: util.key2pos(key),\n  piece: piece,\n});\n\nconst closer = (piece: AnimPiece, pieces: AnimPiece[]): AnimPiece | undefined =>\n  pieces.sort((p1, p2) => util.distanceSq(piece.pos, p1.pos) - util.distanceSq(piece.pos, p2.pos))[0];\n\nfunction computePlan(prevPieces: cg.Pieces, current: State): AnimPlan {\n  const anims: AnimVectors = new Map(),\n    animedOrigs: cg.Key[] = [],\n    fadings: AnimFadings = new Map(),\n    missings: AnimPiece[] = [],\n    news: AnimPiece[] = [],\n    prePieces: AnimPieces = new Map();\n  let curP: cg.Piece | undefined, preP: AnimPiece | undefined, vector: cg.NumberPair;\n  for (const [k, p] of prevPieces) {\n    prePieces.set(k, makePiece(k, p));\n  }\n  for (const key of util.allKeys) {\n    curP = current.pieces.get(key);\n    preP = prePieces.get(key);\n    if (curP) {\n      if (preP) {\n        if (!util.samePiece(curP, preP.piece)) {\n          missings.push(preP);\n          news.push(makePiece(key, curP));\n        }\n      } else news.push(makePiece(key, curP));\n    } else if (preP) missings.push(preP);\n  }\n  for (const newP of news) {\n    preP = closer(\n      newP,\n      missings.filter(p => util.samePiece(newP.piece, p.piece)),\n    );\n    if (preP) {\n      vector = [preP.pos[0] - newP.pos[0], preP.pos[1] - newP.pos[1]];\n      anims.set(newP.key, vector.concat(vector) as AnimVector);\n      animedOrigs.push(preP.key);\n    }\n  }\n  for (const p of missings) {\n    if (!animedOrigs.includes(p.key)) fadings.set(p.key, p.piece);\n  }\n\n  return {\n    anims: anims,\n    fadings: fadings,\n  };\n}\n\nfunction step(state: State, now: DOMHighResTimeStamp): void {\n  const cur = state.animation.current;\n  if (cur === undefined) {\n    // animation was canceled :(\n    if (!state.dom.destroyed) state.dom.redrawNow();\n    return;\n  }\n  const rest = 1 - (now - cur.start) * cur.frequency;\n  if (rest <= 0) {\n    state.animation.current = undefined;\n    state.dom.redrawNow();\n  } else {\n    const ease = easing(rest);\n    for (const cfg of cur.plan.anims.values()) {\n      cfg[2] = cfg[0] * ease;\n      cfg[3] = cfg[1] * ease;\n    }\n    state.dom.redrawNow(true); // optimisation: don't render SVG changes during animations\n    requestAnimationFrame((now = performance.now()) => step(state, now));\n  }\n}\n\nfunction animate<A>(mutation: Mutation<A>, state: State): A {\n  // clone state before mutating it\n  const prevPieces: cg.Pieces = new Map(state.pieces);\n\n  const result = mutation(state);\n  const plan = computePlan(prevPieces, state);\n  if (plan.anims.size || plan.fadings.size) {\n    const alreadyRunning = state.animation.current && state.animation.current.start;\n    state.animation.current = {\n      start: performance.now(),\n      frequency: 1 / state.animation.duration,\n      plan: plan,\n    };\n    if (!alreadyRunning) step(state, performance.now());\n  } else {\n    // don't animate, just render right away\n    state.dom.redraw();\n  }\n  return result;\n}\n\n// https://gist.github.com/gre/1650294\nconst easing = (t: number): number => (t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1);\n","import * as board from './board.js';\nimport * as util from './util.js';\nimport { clear as drawClear } from './draw.js';\nimport { anim } from './anim.js';\nexport function start(s, e) {\n    if (!(s.trustAllEvents || e.isTrusted))\n        return; // only trust when trustAllEvents is enabled\n    if (e.button !== undefined && e.button !== 0)\n        return; // only touch or left click\n    if (e.touches && e.touches.length > 1)\n        return; // support one finger touch only\n    const bounds = s.dom.bounds(), position = util.eventPosition(e), orig = board.getKeyAtDomPos(position, board.whitePov(s), bounds);\n    if (!orig)\n        return;\n    const piece = s.pieces.get(orig);\n    const previouslySelected = s.selected;\n    if (!previouslySelected &&\n        s.drawable.enabled &&\n        (s.drawable.eraseOnClick || !piece || piece.color !== s.turnColor))\n        drawClear(s);\n    // Prevent touch scroll and create no corresponding mouse event, if there\n    // is an intent to interact with the board.\n    if (e.cancelable !== false &&\n        (!e.touches || s.blockTouchScroll || piece || previouslySelected || pieceCloseTo(s, position)))\n        e.preventDefault();\n    else if (e.touches)\n        return; // Handle only corresponding mouse event https://github.com/lichess-org/chessground/pull/268\n    const hadPremove = !!s.premovable.current;\n    const hadPredrop = !!s.predroppable.current;\n    s.stats.ctrlKey = e.ctrlKey;\n    if (s.selected && board.canMove(s, s.selected, orig)) {\n        anim(state => board.selectSquare(state, orig), s);\n    }\n    else {\n        board.selectSquare(s, orig);\n    }\n    const stillSelected = s.selected === orig;\n    const element = pieceElementByKey(s, orig);\n    if (piece && element && stillSelected && board.isDraggable(s, orig)) {\n        s.draggable.current = {\n            orig,\n            piece,\n            origPos: position,\n            pos: position,\n            started: s.draggable.autoDistance && s.stats.dragged,\n            element,\n            previouslySelected,\n            originTarget: e.target,\n            keyHasChanged: false,\n        };\n        element.cgDragging = true;\n        element.classList.add('dragging');\n        // place ghost\n        const ghost = s.dom.elements.ghost;\n        if (ghost) {\n            ghost.className = `ghost ${piece.color} ${piece.role}`;\n            util.translate(ghost, util.posToTranslate(bounds)(util.key2pos(orig), board.whitePov(s)));\n            util.setVisible(ghost, true);\n        }\n        processDrag(s);\n    }\n    else {\n        if (hadPremove)\n            board.unsetPremove(s);\n        if (hadPredrop)\n            board.unsetPredrop(s);\n    }\n    s.dom.redraw();\n}\nfunction pieceCloseTo(s, pos) {\n    const asWhite = board.whitePov(s), bounds = s.dom.bounds(), radiusSq = Math.pow(bounds.width / 8, 2);\n    for (const key of s.pieces.keys()) {\n        const center = util.computeSquareCenter(key, asWhite, bounds);\n        if (util.distanceSq(center, pos) <= radiusSq)\n            return true;\n    }\n    return false;\n}\nexport function dragNewPiece(s, piece, e, force) {\n    const key = 'a0';\n    s.pieces.set(key, piece);\n    s.dom.redraw();\n    const position = util.eventPosition(e);\n    s.draggable.current = {\n        orig: key,\n        piece,\n        origPos: position,\n        pos: position,\n        started: true,\n        element: () => pieceElementByKey(s, key),\n        originTarget: e.target,\n        newPiece: true,\n        force: !!force,\n        keyHasChanged: false,\n    };\n    processDrag(s);\n}\nfunction processDrag(s) {\n    requestAnimationFrame(() => {\n        var _a;\n        const cur = s.draggable.current;\n        if (!cur)\n            return;\n        // cancel animations while dragging\n        if ((_a = s.animation.current) === null || _a === void 0 ? void 0 : _a.plan.anims.has(cur.orig))\n            s.animation.current = undefined;\n        // if moving piece is gone, cancel\n        const origPiece = s.pieces.get(cur.orig);\n        if (!origPiece || !util.samePiece(origPiece, cur.piece))\n            cancel(s);\n        else {\n            if (!cur.started && util.distanceSq(cur.pos, cur.origPos) >= Math.pow(s.draggable.distance, 2))\n                cur.started = true;\n            if (cur.started) {\n                // support lazy elements\n                if (typeof cur.element === 'function') {\n                    const found = cur.element();\n                    if (!found)\n                        return;\n                    found.cgDragging = true;\n                    found.classList.add('dragging');\n                    cur.element = found;\n                }\n                const bounds = s.dom.bounds();\n                util.translate(cur.element, [\n                    cur.pos[0] - bounds.left - bounds.width / 16,\n                    cur.pos[1] - bounds.top - bounds.height / 16,\n                ]);\n                cur.keyHasChanged || (cur.keyHasChanged = cur.orig !== board.getKeyAtDomPos(cur.pos, board.whitePov(s), bounds));\n            }\n        }\n        processDrag(s);\n    });\n}\nexport function move(s, e) {\n    // support one finger touch only\n    if (s.draggable.current && (!e.touches || e.touches.length < 2)) {\n        s.draggable.current.pos = util.eventPosition(e);\n    }\n}\nexport function end(s, e) {\n    const cur = s.draggable.current;\n    if (!cur)\n        return;\n    // create no corresponding mouse event\n    if (e.type === 'touchend' && e.cancelable !== false)\n        e.preventDefault();\n    // comparing with the origin target is an easy way to test that the end event\n    // has the same touch origin\n    if (e.type === 'touchend' && cur.originTarget !== e.target && !cur.newPiece) {\n        s.draggable.current = undefined;\n        return;\n    }\n    board.unsetPremove(s);\n    board.unsetPredrop(s);\n    // touchend has no position; so use the last touchmove position instead\n    const eventPos = util.eventPosition(e) || cur.pos;\n    const dest = board.getKeyAtDomPos(eventPos, board.whitePov(s), s.dom.bounds());\n    if (dest && cur.started && cur.orig !== dest) {\n        if (cur.newPiece)\n            board.dropNewPiece(s, cur.orig, dest, cur.force);\n        else {\n            s.stats.ctrlKey = e.ctrlKey;\n            if (board.userMove(s, cur.orig, dest))\n                s.stats.dragged = true;\n        }\n    }\n    else if (cur.newPiece) {\n        s.pieces.delete(cur.orig);\n    }\n    else if (s.draggable.deleteOnDropOff && !dest) {\n        s.pieces.delete(cur.orig);\n        board.callUserFunction(s.events.change);\n    }\n    if ((cur.orig === cur.previouslySelected || cur.keyHasChanged) && (cur.orig === dest || !dest))\n        board.unselect(s);\n    else if (!s.selectable.enabled)\n        board.unselect(s);\n    removeDragElements(s);\n    s.draggable.current = undefined;\n    s.dom.redraw();\n}\nexport function cancel(s) {\n    const cur = s.draggable.current;\n    if (cur) {\n        if (cur.newPiece)\n            s.pieces.delete(cur.orig);\n        s.draggable.current = undefined;\n        board.unselect(s);\n        removeDragElements(s);\n        s.dom.redraw();\n    }\n}\nfunction removeDragElements(s) {\n    const e = s.dom.elements;\n    if (e.ghost)\n        util.setVisible(e.ghost, false);\n}\nfunction pieceElementByKey(s, key) {\n    let el = s.dom.elements.board.firstChild;\n    while (el) {\n        if (el.cgKey === key && el.tagName === 'PIECE')\n            return el;\n        el = el.nextSibling;\n    }\n    return;\n}\n//# sourceMappingURL=drag.js.map","import { State } from './state.js';\nimport * as board from './board.js';\nimport * as util from './util.js';\nimport { clear as drawClear } from './draw.js';\nimport * as cg from './types.js';\nimport { anim } from './anim.js';\n\nexport interface DragCurrent {\n  orig: cg.Key; // orig key of dragging piece\n  piece: cg.Piece;\n  origPos: cg.NumberPair; // first event position\n  pos: cg.NumberPair; // latest event position\n  started: boolean; // whether the drag has started; as per the distance setting\n  element: cg.PieceNode | (() => cg.PieceNode | undefined);\n  newPiece?: boolean; // it it a new piece from outside the board\n  force?: boolean; // can the new piece replace an existing one (editor)\n  previouslySelected?: cg.Key;\n  originTarget: EventTarget | null;\n  keyHasChanged: boolean; // whether the drag has left the orig key\n}\n\nexport function start(s: State, e: cg.MouchEvent): void {\n  if (!(s.trustAllEvents || e.isTrusted)) return; // only trust when trustAllEvents is enabled\n  if (e.button !== undefined && e.button !== 0) return; // only touch or left click\n  if (e.touches && e.touches.length > 1) return; // support one finger touch only\n  const bounds = s.dom.bounds(),\n    position = util.eventPosition(e)!,\n    orig = board.getKeyAtDomPos(position, board.whitePov(s), bounds);\n  if (!orig) return;\n  const piece = s.pieces.get(orig);\n  const previouslySelected = s.selected;\n  if (\n    !previouslySelected &&\n    s.drawable.enabled &&\n    (s.drawable.eraseOnClick || !piece || piece.color !== s.turnColor)\n  )\n    drawClear(s);\n  // Prevent touch scroll and create no corresponding mouse event, if there\n  // is an intent to interact with the board.\n  if (\n    e.cancelable !== false &&\n    (!e.touches || s.blockTouchScroll || piece || previouslySelected || pieceCloseTo(s, position))\n  )\n    e.preventDefault();\n  else if (e.touches) return; // Handle only corresponding mouse event https://github.com/lichess-org/chessground/pull/268\n\n  const hadPremove = !!s.premovable.current;\n  const hadPredrop = !!s.predroppable.current;\n  s.stats.ctrlKey = e.ctrlKey;\n  if (s.selected && board.canMove(s, s.selected, orig)) {\n    anim(state => board.selectSquare(state, orig), s);\n  } else {\n    board.selectSquare(s, orig);\n  }\n  const stillSelected = s.selected === orig;\n  const element = pieceElementByKey(s, orig);\n  if (piece && element && stillSelected && board.isDraggable(s, orig)) {\n    s.draggable.current = {\n      orig,\n      piece,\n      origPos: position,\n      pos: position,\n      started: s.draggable.autoDistance && s.stats.dragged,\n      element,\n      previouslySelected,\n      originTarget: e.target,\n      keyHasChanged: false,\n    };\n    element.cgDragging = true;\n    element.classList.add('dragging');\n    // place ghost\n    const ghost = s.dom.elements.ghost;\n    if (ghost) {\n      ghost.className = `ghost ${piece.color} ${piece.role}`;\n      util.translate(ghost, util.posToTranslate(bounds)(util.key2pos(orig), board.whitePov(s)));\n      util.setVisible(ghost, true);\n    }\n    processDrag(s);\n  } else {\n    if (hadPremove) board.unsetPremove(s);\n    if (hadPredrop) board.unsetPredrop(s);\n  }\n  s.dom.redraw();\n}\n\nfunction pieceCloseTo(s: State, pos: cg.NumberPair): boolean {\n  const asWhite = board.whitePov(s),\n    bounds = s.dom.bounds(),\n    radiusSq = Math.pow(bounds.width / 8, 2);\n  for (const key of s.pieces.keys()) {\n    const center = util.computeSquareCenter(key, asWhite, bounds);\n    if (util.distanceSq(center, pos) <= radiusSq) return true;\n  }\n  return false;\n}\n\nexport function dragNewPiece(s: State, piece: cg.Piece, e: cg.MouchEvent, force?: boolean): void {\n  const key: cg.Key = 'a0';\n  s.pieces.set(key, piece);\n  s.dom.redraw();\n\n  const position = util.eventPosition(e)!;\n\n  s.draggable.current = {\n    orig: key,\n    piece,\n    origPos: position,\n    pos: position,\n    started: true,\n    element: () => pieceElementByKey(s, key),\n    originTarget: e.target,\n    newPiece: true,\n    force: !!force,\n    keyHasChanged: false,\n  };\n  processDrag(s);\n}\n\nfunction processDrag(s: State): void {\n  requestAnimationFrame(() => {\n    const cur = s.draggable.current;\n    if (!cur) return;\n    // cancel animations while dragging\n    if (s.animation.current?.plan.anims.has(cur.orig)) s.animation.current = undefined;\n    // if moving piece is gone, cancel\n    const origPiece = s.pieces.get(cur.orig);\n    if (!origPiece || !util.samePiece(origPiece, cur.piece)) cancel(s);\n    else {\n      if (!cur.started && util.distanceSq(cur.pos, cur.origPos) >= Math.pow(s.draggable.distance, 2))\n        cur.started = true;\n      if (cur.started) {\n        // support lazy elements\n        if (typeof cur.element === 'function') {\n          const found = cur.element();\n          if (!found) return;\n          found.cgDragging = true;\n          found.classList.add('dragging');\n          cur.element = found;\n        }\n\n        const bounds = s.dom.bounds();\n        util.translate(cur.element, [\n          cur.pos[0] - bounds.left - bounds.width / 16,\n          cur.pos[1] - bounds.top - bounds.height / 16,\n        ]);\n\n        cur.keyHasChanged ||= cur.orig !== board.getKeyAtDomPos(cur.pos, board.whitePov(s), bounds);\n      }\n    }\n    processDrag(s);\n  });\n}\n\nexport function move(s: State, e: cg.MouchEvent): void {\n  // support one finger touch only\n  if (s.draggable.current && (!e.touches || e.touches.length < 2)) {\n    s.draggable.current.pos = util.eventPosition(e)!;\n  }\n}\n\nexport function end(s: State, e: cg.MouchEvent): void {\n  const cur = s.draggable.current;\n  if (!cur) return;\n  // create no corresponding mouse event\n  if (e.type === 'touchend' && e.cancelable !== false) e.preventDefault();\n  // comparing with the origin target is an easy way to test that the end event\n  // has the same touch origin\n  if (e.type === 'touchend' && cur.originTarget !== e.target && !cur.newPiece) {\n    s.draggable.current = undefined;\n    return;\n  }\n  board.unsetPremove(s);\n  board.unsetPredrop(s);\n  // touchend has no position; so use the last touchmove position instead\n  const eventPos = util.eventPosition(e) || cur.pos;\n  const dest = board.getKeyAtDomPos(eventPos, board.whitePov(s), s.dom.bounds());\n  if (dest && cur.started && cur.orig !== dest) {\n    if (cur.newPiece) board.dropNewPiece(s, cur.orig, dest, cur.force);\n    else {\n      s.stats.ctrlKey = e.ctrlKey;\n      if (board.userMove(s, cur.orig, dest)) s.stats.dragged = true;\n    }\n  } else if (cur.newPiece) {\n    s.pieces.delete(cur.orig);\n  } else if (s.draggable.deleteOnDropOff && !dest) {\n    s.pieces.delete(cur.orig);\n    board.callUserFunction(s.events.change);\n  }\n  if ((cur.orig === cur.previouslySelected || cur.keyHasChanged) && (cur.orig === dest || !dest))\n    board.unselect(s);\n  else if (!s.selectable.enabled) board.unselect(s);\n\n  removeDragElements(s);\n\n  s.draggable.current = undefined;\n  s.dom.redraw();\n}\n\nexport function cancel(s: State): void {\n  const cur = s.draggable.current;\n  if (cur) {\n    if (cur.newPiece) s.pieces.delete(cur.orig);\n    s.draggable.current = undefined;\n    board.unselect(s);\n    removeDragElements(s);\n    s.dom.redraw();\n  }\n}\n\nfunction removeDragElements(s: State): void {\n  const e = s.dom.elements;\n  if (e.ghost) util.setVisible(e.ghost, false);\n}\n\nfunction pieceElementByKey(s: State, key: cg.Key): cg.PieceNode | undefined {\n  let el = s.dom.elements.board.firstChild;\n  while (el) {\n    if ((el as cg.KeyedNode).cgKey === key && (el as cg.KeyedNode).tagName === 'PIECE')\n      return el as cg.PieceNode;\n    el = el.nextSibling;\n  }\n  return;\n}\n","import { unselect, cancelMove, getKeyAtDomPos, getSnappedKeyAtDomPos, whitePov } from './board.js';\nimport { eventPosition, isRightButton } from './util.js';\nconst brushes = ['green', 'red', 'blue', 'yellow'];\nexport function start(state, e) {\n    // support one finger touch only\n    if (e.touches && e.touches.length > 1)\n        return;\n    e.stopPropagation();\n    e.preventDefault();\n    e.ctrlKey ? unselect(state) : cancelMove(state);\n    const pos = eventPosition(e), orig = getKeyAtDomPos(pos, whitePov(state), state.dom.bounds());\n    if (!orig)\n        return;\n    state.drawable.current = {\n        orig,\n        pos,\n        brush: eventBrush(e),\n        snapToValidMove: state.drawable.defaultSnapToValidMove,\n    };\n    processDraw(state);\n}\nexport function processDraw(state) {\n    requestAnimationFrame(() => {\n        const cur = state.drawable.current;\n        if (cur) {\n            const keyAtDomPos = getKeyAtDomPos(cur.pos, whitePov(state), state.dom.bounds());\n            if (!keyAtDomPos) {\n                cur.snapToValidMove = false;\n            }\n            const mouseSq = cur.snapToValidMove\n                ? getSnappedKeyAtDomPos(cur.orig, cur.pos, whitePov(state), state.dom.bounds())\n                : keyAtDomPos;\n            if (mouseSq !== cur.mouseSq) {\n                cur.mouseSq = mouseSq;\n                cur.dest = mouseSq !== cur.orig ? mouseSq : undefined;\n                state.dom.redrawNow();\n            }\n            processDraw(state);\n        }\n    });\n}\nexport function move(state, e) {\n    if (state.drawable.current)\n        state.drawable.current.pos = eventPosition(e);\n}\nexport function end(state) {\n    const cur = state.drawable.current;\n    if (cur) {\n        if (cur.mouseSq)\n            addShape(state.drawable, cur);\n        cancel(state);\n    }\n}\nexport function cancel(state) {\n    if (state.drawable.current) {\n        state.drawable.current = undefined;\n        state.dom.redraw();\n    }\n}\nexport function clear(state) {\n    if (state.drawable.shapes.length) {\n        state.drawable.shapes = [];\n        state.dom.redraw();\n        onChange(state.drawable);\n    }\n}\nfunction eventBrush(e) {\n    var _a;\n    const modA = (e.shiftKey || e.ctrlKey) && isRightButton(e);\n    const modB = e.altKey || e.metaKey || ((_a = e.getModifierState) === null || _a === void 0 ? void 0 : _a.call(e, 'AltGraph'));\n    return brushes[(modA ? 1 : 0) + (modB ? 2 : 0)];\n}\nfunction addShape(drawable, cur) {\n    const sameShape = (s) => s.orig === cur.orig && s.dest === cur.dest;\n    const similar = drawable.shapes.find(sameShape);\n    if (similar)\n        drawable.shapes = drawable.shapes.filter(s => !sameShape(s));\n    if (!similar || similar.brush !== cur.brush)\n        drawable.shapes.push({\n            orig: cur.orig,\n            dest: cur.dest,\n            brush: cur.brush,\n        });\n    onChange(drawable);\n}\nfunction onChange(drawable) {\n    if (drawable.onChange)\n        drawable.onChange(drawable.shapes);\n}\n//# sourceMappingURL=draw.js.map","import { State } from './state.js';\nimport { unselect, cancelMove, getKeyAtDomPos, getSnappedKeyAtDomPos, whitePov } from './board.js';\nimport { eventPosition, isRightButton } from './util.js';\nimport * as cg from './types.js';\n\nexport interface DrawShape {\n  orig: cg.Key;\n  dest?: cg.Key;\n  brush?: string; // if no brush, no shape. label moved to top right of square\n  modifiers?: DrawModifiers;\n  piece?: DrawShapePiece;\n  customSvg?: { html: string; center?: 'orig' | 'dest' | 'label' }; // 100 x 100 viewbox cenetered at [50,50]\n  label?: { text: string; fill?: string }; // fill is in '#rrggbb' format\n}\n\nexport interface DrawModifiers {\n  lineWidth?: number;\n  hilite?: boolean;\n}\n\nexport interface DrawShapePiece {\n  role: cg.Role;\n  color: cg.Color;\n  scale?: number;\n}\n\nexport interface DrawBrush {\n  key: string;\n  color: string;\n  opacity: number;\n  lineWidth: number;\n}\n\nexport interface DrawBrushes {\n  green: DrawBrush;\n  red: DrawBrush;\n  blue: DrawBrush;\n  yellow: DrawBrush;\n  [color: string]: DrawBrush;\n}\n\nexport interface Drawable {\n  enabled: boolean; // can draw\n  visible: boolean; // can view\n  defaultSnapToValidMove: boolean;\n  eraseOnClick: boolean;\n  onChange?: (shapes: DrawShape[]) => void;\n  shapes: DrawShape[]; // user shapes\n  autoShapes: DrawShape[]; // computer shapes\n  current?: DrawCurrent;\n  brushes: DrawBrushes;\n  prevSvgHash: string;\n}\n\nexport interface DrawCurrent {\n  orig: cg.Key; // orig key of drawing\n  dest?: cg.Key; // shape dest, or undefined for circle\n  mouseSq?: cg.Key; // square being moused over\n  pos: cg.NumberPair; // relative current position\n  brush: cg.BrushColor; // brush name for shape\n  snapToValidMove: boolean; // whether to snap to valid piece moves\n}\n\nconst brushes: cg.BrushColor[] = ['green', 'red', 'blue', 'yellow'];\n\nexport function start(state: State, e: cg.MouchEvent): void {\n  // support one finger touch only\n  if (e.touches && e.touches.length > 1) return;\n  e.stopPropagation();\n  e.preventDefault();\n  e.ctrlKey ? unselect(state) : cancelMove(state);\n  const pos = eventPosition(e)!,\n    orig = getKeyAtDomPos(pos, whitePov(state), state.dom.bounds());\n  if (!orig) return;\n  state.drawable.current = {\n    orig,\n    pos,\n    brush: eventBrush(e),\n    snapToValidMove: state.drawable.defaultSnapToValidMove,\n  };\n\n  processDraw(state);\n}\n\nexport function processDraw(state: State): void {\n  requestAnimationFrame(() => {\n    const cur = state.drawable.current;\n    if (cur) {\n      const keyAtDomPos = getKeyAtDomPos(cur.pos, whitePov(state), state.dom.bounds());\n      if (!keyAtDomPos) {\n        cur.snapToValidMove = false;\n      }\n      const mouseSq = cur.snapToValidMove\n        ? getSnappedKeyAtDomPos(cur.orig, cur.pos, whitePov(state), state.dom.bounds())\n        : keyAtDomPos;\n      if (mouseSq !== cur.mouseSq) {\n        cur.mouseSq = mouseSq;\n        cur.dest = mouseSq !== cur.orig ? mouseSq : undefined;\n        state.dom.redrawNow();\n      }\n      processDraw(state);\n    }\n  });\n}\n\nexport function move(state: State, e: cg.MouchEvent): void {\n  if (state.drawable.current) state.drawable.current.pos = eventPosition(e)!;\n}\n\nexport function end(state: State): void {\n  const cur = state.drawable.current;\n  if (cur) {\n    if (cur.mouseSq) addShape(state.drawable, cur);\n    cancel(state);\n  }\n}\n\nexport function cancel(state: State): void {\n  if (state.drawable.current) {\n    state.drawable.current = undefined;\n    state.dom.redraw();\n  }\n}\n\nexport function clear(state: State): void {\n  if (state.drawable.shapes.length) {\n    state.drawable.shapes = [];\n    state.dom.redraw();\n    onChange(state.drawable);\n  }\n}\n\nfunction eventBrush(e: cg.MouchEvent): cg.BrushColor {\n  const modA = (e.shiftKey || e.ctrlKey) && isRightButton(e);\n  const modB = e.altKey || e.metaKey || e.getModifierState?.('AltGraph');\n  return brushes[(modA ? 1 : 0) + (modB ? 2 : 0)];\n}\n\nfunction addShape(drawable: Drawable, cur: DrawCurrent): void {\n  const sameShape = (s: DrawShape) => s.orig === cur.orig && s.dest === cur.dest;\n  const similar = drawable.shapes.find(sameShape);\n  if (similar) drawable.shapes = drawable.shapes.filter(s => !sameShape(s));\n  if (!similar || similar.brush !== cur.brush)\n    drawable.shapes.push({\n      orig: cur.orig,\n      dest: cur.dest,\n      brush: cur.brush,\n    });\n  onChange(drawable);\n}\n\nfunction onChange(drawable: Drawable): void {\n  if (drawable.onChange) drawable.onChange(drawable.shapes);\n}\n","export function explosion(state, keys) {\n    state.exploding = { stage: 1, keys };\n    state.dom.redraw();\n    setTimeout(() => {\n        setStage(state, 2);\n        setTimeout(() => setStage(state, undefined), 120);\n    }, 120);\n}\nfunction setStage(state, stage) {\n    if (state.exploding) {\n        if (stage)\n            state.exploding.stage = stage;\n        else\n            state.exploding = undefined;\n        state.dom.redraw();\n    }\n}\n//# sourceMappingURL=explosion.js.map","import { State } from './state.js';\nimport { Key } from './types.js';\n\nexport function explosion(state: State, keys: Key[]): void {\n  state.exploding = { stage: 1, keys };\n  state.dom.redraw();\n  setTimeout(() => {\n    setStage(state, 2);\n    setTimeout(() => setStage(state, undefined), 120);\n  }, 120);\n}\n\nfunction setStage(state: State, stage: number | undefined): void {\n  if (state.exploding) {\n    if (stage) state.exploding.stage = stage;\n    else state.exploding = undefined;\n    state.dom.redraw();\n  }\n}\n","import * as fen from './fen.js';\nimport { timer } from './util.js';\nexport function defaults() {\n    return {\n        pieces: fen.read(fen.initial),\n        orientation: 'white',\n        turnColor: 'white',\n        coordinates: true,\n        ranksPosition: 'right',\n        autoCastle: true,\n        viewOnly: false,\n        disableContextMenu: false,\n        addPieceZIndex: false,\n        blockTouchScroll: false,\n        pieceKey: false,\n        trustAllEvents: false,\n        highlight: {\n            lastMove: true,\n            check: true,\n        },\n        animation: {\n            enabled: true,\n            duration: 200,\n        },\n        movable: {\n            free: true,\n            color: 'both',\n            showDests: true,\n            events: {},\n            rookCastle: true,\n        },\n        premovable: {\n            enabled: true,\n            showDests: true,\n            castle: true,\n            events: {},\n        },\n        predroppable: {\n            enabled: false,\n            events: {},\n        },\n        draggable: {\n            enabled: true,\n            distance: 3,\n            autoDistance: true,\n            showGhost: true,\n            deleteOnDropOff: false,\n        },\n        dropmode: {\n            active: false,\n        },\n        selectable: {\n            enabled: true,\n        },\n        stats: {\n            // on touchscreen, default to \"tap-tap\" moves\n            // instead of drag\n            dragged: !('ontouchstart' in window),\n        },\n        events: {},\n        drawable: {\n            enabled: true,\n            visible: true,\n            defaultSnapToValidMove: true,\n            eraseOnClick: true,\n            shapes: [],\n            autoShapes: [],\n            brushes: {\n                green: { key: 'g', color: '#15781B', opacity: 1, lineWidth: 10 },\n                red: { key: 'r', color: '#882020', opacity: 1, lineWidth: 10 },\n                blue: { key: 'b', color: '#003088', opacity: 1, lineWidth: 10 },\n                yellow: { key: 'y', color: '#e68f00', opacity: 1, lineWidth: 10 },\n                paleBlue: { key: 'pb', color: '#003088', opacity: 0.4, lineWidth: 15 },\n                paleGreen: { key: 'pg', color: '#15781B', opacity: 0.4, lineWidth: 15 },\n                paleRed: { key: 'pr', color: '#882020', opacity: 0.4, lineWidth: 15 },\n                paleGrey: {\n                    key: 'pgr',\n                    color: '#4a4a4a',\n                    opacity: 0.35,\n                    lineWidth: 15,\n                },\n                purple: { key: 'purp', color: '#68217a', opacity: 0.65, lineWidth: 10 },\n                pink: { key: 'pink', color: '#ee2080', opacity: 0.5, lineWidth: 10 },\n                hilite: { key: 'hilite', color: '#fff', opacity: 1, lineWidth: 1 },\n            },\n            prevSvgHash: '',\n        },\n        hold: timer(),\n    };\n}\n//# sourceMappingURL=state.js.map","import * as fen from './fen.js';\nimport { AnimCurrent } from './anim.js';\nimport { DragCurrent } from './drag.js';\nimport { Drawable } from './draw.js';\nimport { timer } from './util.js';\nimport * as cg from './types.js';\n\nexport interface HeadlessState {\n  pieces: cg.Pieces;\n  orientation: cg.Color; // board orientation. white | black\n  turnColor: cg.Color; // turn to play. white | black\n  check?: cg.Key; // square currently in check \"a2\"\n  lastMove?: cg.Key[]; // squares part of the last move [\"c3\"; \"c4\"]\n  selected?: cg.Key; // square currently selected \"a1\"\n  coordinates: boolean; // include coords attributes\n  ranksPosition: cg.RanksPosition; // position ranks on either side. left | right\n  autoCastle: boolean; // immediately complete the castle by moving the rook after king move\n  viewOnly: boolean; // don't bind events: the user will never be able to move pieces around\n  disableContextMenu: boolean; // because who needs a context menu on a chessboard\n  addPieceZIndex: boolean; // adds z-index values to pieces (for 3D)\n  addDimensionsCssVarsTo?: HTMLElement; // add --cg-width and --cg-height CSS vars containing the board's dimensions to this element\n  blockTouchScroll: boolean; // block scrolling via touch dragging on the board, e.g. for coordinate training\n  pieceKey: boolean; // add a data-key attribute to piece elements\n  trustAllEvents?: boolean; // disable checking for human only input (e.isTrusted)\n  highlight: {\n    lastMove: boolean; // add last-move class to squares\n    check: boolean; // add check class to squares\n    custom?: cg.SquareClasses; // add custom classes to custom squares\n  };\n  animation: {\n    enabled: boolean;\n    duration: number;\n    current?: AnimCurrent;\n  };\n  movable: {\n    free: boolean; // all moves are valid - board editor\n    color?: cg.Color | 'both'; // color that can move. white | black | both\n    dests?: cg.Dests; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n    showDests: boolean; // whether to add the move-dest class on squares\n    events: {\n      after?: (orig: cg.Key, dest: cg.Key, metadata: cg.MoveMetadata) => void; // called after the move has been played\n      afterNewPiece?: (role: cg.Role, key: cg.Key, metadata: cg.MoveMetadata) => void; // called after a new piece is dropped on the board\n    };\n    rookCastle: boolean; // castle by moving the king to the rook\n  };\n  premovable: {\n    enabled: boolean; // allow premoves for color that can not move\n    showDests: boolean; // whether to add the premove-dest class on squares\n    castle: boolean; // whether to allow king castle premoves\n    dests?: cg.Key[]; // premove destinations for the current selection\n    customDests?: cg.Dests; // use custom valid premoves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n    current?: cg.KeyPair; // keys of the current saved premove [\"e2\" \"e4\"]\n    events: {\n      set?: (orig: cg.Key, dest: cg.Key, metadata?: cg.SetPremoveMetadata) => void; // called after the premove has been set\n      unset?: () => void; // called after the premove has been unset\n    };\n  };\n  predroppable: {\n    enabled: boolean; // allow predrops for color that can not move\n    current?: {\n      // current saved predrop {role: 'knight'; key: 'e4'}\n      role: cg.Role;\n      key: cg.Key;\n    };\n    events: {\n      set?: (role: cg.Role, key: cg.Key) => void; // called after the predrop has been set\n      unset?: () => void; // called after the predrop has been unset\n    };\n  };\n  draggable: {\n    enabled: boolean; // allow moves & premoves to use drag'n drop\n    distance: number; // minimum distance to initiate a drag; in pixels\n    autoDistance: boolean; // lets chessground set distance to zero when user drags pieces\n    showGhost: boolean; // show ghost of piece being dragged\n    deleteOnDropOff: boolean; // delete a piece when it is dropped off the board\n    current?: DragCurrent;\n  };\n  dropmode: {\n    active: boolean;\n    piece?: cg.Piece;\n  };\n  selectable: {\n    // disable to enforce dragging over click-click move\n    enabled: boolean;\n  };\n  stats: {\n    // was last piece dragged or clicked?\n    // needs default to false for touch\n    dragged: boolean;\n    ctrlKey?: boolean;\n  };\n  events: {\n    change?: () => void; // called after the situation changes on the board\n    // called after a piece has been moved.\n    // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n    move?: (orig: cg.Key, dest: cg.Key, capturedPiece?: cg.Piece) => void;\n    dropNewPiece?: (piece: cg.Piece, key: cg.Key) => void;\n    select?: (key: cg.Key) => void; // called when a square is selected\n    insert?: (elements: cg.Elements) => void; // when the board DOM has been (re)inserted\n  };\n  drawable: Drawable;\n  exploding?: cg.Exploding;\n  hold: cg.Timer;\n}\n\nexport interface State extends HeadlessState {\n  dom: cg.Dom;\n}\n\nexport function defaults(): HeadlessState {\n  return {\n    pieces: fen.read(fen.initial),\n    orientation: 'white',\n    turnColor: 'white',\n    coordinates: true,\n    ranksPosition: 'right',\n    autoCastle: true,\n    viewOnly: false,\n    disableContextMenu: false,\n    addPieceZIndex: false,\n    blockTouchScroll: false,\n    pieceKey: false,\n    trustAllEvents: false,\n    highlight: {\n      lastMove: true,\n      check: true,\n    },\n    animation: {\n      enabled: true,\n      duration: 200,\n    },\n    movable: {\n      free: true,\n      color: 'both',\n      showDests: true,\n      events: {},\n      rookCastle: true,\n    },\n    premovable: {\n      enabled: true,\n      showDests: true,\n      castle: true,\n      events: {},\n    },\n    predroppable: {\n      enabled: false,\n      events: {},\n    },\n    draggable: {\n      enabled: true,\n      distance: 3,\n      autoDistance: true,\n      showGhost: true,\n      deleteOnDropOff: false,\n    },\n    dropmode: {\n      active: false,\n    },\n    selectable: {\n      enabled: true,\n    },\n    stats: {\n      // on touchscreen, default to \"tap-tap\" moves\n      // instead of drag\n      dragged: !('ontouchstart' in window),\n    },\n    events: {},\n    drawable: {\n      enabled: true, // can draw\n      visible: true, // can view\n      defaultSnapToValidMove: true,\n      eraseOnClick: true,\n      shapes: [],\n      autoShapes: [],\n      brushes: {\n        green: { key: 'g', color: '#15781B', opacity: 1, lineWidth: 10 },\n        red: { key: 'r', color: '#882020', opacity: 1, lineWidth: 10 },\n        blue: { key: 'b', color: '#003088', opacity: 1, lineWidth: 10 },\n        yellow: { key: 'y', color: '#e68f00', opacity: 1, lineWidth: 10 },\n        paleBlue: { key: 'pb', color: '#003088', opacity: 0.4, lineWidth: 15 },\n        paleGreen: { key: 'pg', color: '#15781B', opacity: 0.4, lineWidth: 15 },\n        paleRed: { key: 'pr', color: '#882020', opacity: 0.4, lineWidth: 15 },\n        paleGrey: {\n          key: 'pgr',\n          color: '#4a4a4a',\n          opacity: 0.35,\n          lineWidth: 15,\n        },\n        purple: { key: 'purp', color: '#68217a', opacity: 0.65, lineWidth: 10 },\n        pink: { key: 'pink', color: '#ee2080', opacity: 0.5, lineWidth: 10 },\n        hilite: { key: 'hilite', color: '#fff', opacity: 1, lineWidth: 1 },\n      },\n      prevSvgHash: '',\n    },\n    hold: timer(),\n  };\n}\n","import { setVisible, createEl } from './util.js';\nimport { colors, files, ranks } from './types.js';\nimport { createElement as createSVG, setAttributes, createDefs } from './svg.js';\nexport function renderWrap(element, s) {\n    // .cg-wrap (element passed to Chessground)\n    //   cg-container\n    //     cg-board\n    //     svg.cg-shapes\n    //       defs\n    //       g\n    //     svg.cg-custom-svgs\n    //       g\n    //     cg-auto-pieces\n    //     coords.ranks\n    //     coords.files\n    //     piece.ghost\n    element.innerHTML = '';\n    // ensure the cg-wrap class is set\n    // so bounds calculation can use the CSS width/height values\n    // add that class yourself to the element before calling chessground\n    // for a slight performance improvement! (avoids recomputing style)\n    element.classList.add('cg-wrap');\n    for (const c of colors)\n        element.classList.toggle('orientation-' + c, s.orientation === c);\n    element.classList.toggle('manipulable', !s.viewOnly);\n    const container = createEl('cg-container');\n    element.appendChild(container);\n    const board = createEl('cg-board');\n    container.appendChild(board);\n    let svg;\n    let customSvg;\n    let autoPieces;\n    if (s.drawable.visible) {\n        svg = setAttributes(createSVG('svg'), {\n            class: 'cg-shapes',\n            viewBox: '-4 -4 8 8',\n            preserveAspectRatio: 'xMidYMid slice',\n        });\n        svg.appendChild(createDefs());\n        svg.appendChild(createSVG('g'));\n        customSvg = setAttributes(createSVG('svg'), {\n            class: 'cg-custom-svgs',\n            viewBox: '-3.5 -3.5 8 8',\n            preserveAspectRatio: 'xMidYMid slice',\n        });\n        customSvg.appendChild(createSVG('g'));\n        autoPieces = createEl('cg-auto-pieces');\n        container.appendChild(svg);\n        container.appendChild(customSvg);\n        container.appendChild(autoPieces);\n    }\n    if (s.coordinates) {\n        const orientClass = s.orientation === 'black' ? ' black' : '';\n        const ranksPositionClass = s.ranksPosition === 'left' ? ' left' : '';\n        container.appendChild(renderCoords(ranks, 'ranks' + orientClass + ranksPositionClass));\n        container.appendChild(renderCoords(files, 'files' + orientClass));\n    }\n    let ghost;\n    if (s.draggable.enabled && s.draggable.showGhost) {\n        ghost = createEl('piece', 'ghost');\n        setVisible(ghost, false);\n        container.appendChild(ghost);\n    }\n    return {\n        board,\n        container,\n        wrap: element,\n        ghost,\n        svg,\n        customSvg,\n        autoPieces,\n    };\n}\nfunction renderCoords(elems, className) {\n    const el = createEl('coords', className);\n    let f;\n    for (const elem of elems) {\n        f = createEl('coord');\n        f.textContent = elem;\n        el.appendChild(f);\n    }\n    return el;\n}\n//# sourceMappingURL=wrap.js.map","import { HeadlessState } from './state.js';\nimport { setVisible, createEl } from './util.js';\nimport { colors, files, ranks, Elements } from './types.js';\nimport { createElement as createSVG, setAttributes, createDefs } from './svg.js';\n\nexport function renderWrap(element: HTMLElement, s: HeadlessState): Elements {\n  // .cg-wrap (element passed to Chessground)\n  //   cg-container\n  //     cg-board\n  //     svg.cg-shapes\n  //       defs\n  //       g\n  //     svg.cg-custom-svgs\n  //       g\n  //     cg-auto-pieces\n  //     coords.ranks\n  //     coords.files\n  //     piece.ghost\n\n  element.innerHTML = '';\n\n  // ensure the cg-wrap class is set\n  // so bounds calculation can use the CSS width/height values\n  // add that class yourself to the element before calling chessground\n  // for a slight performance improvement! (avoids recomputing style)\n  element.classList.add('cg-wrap');\n\n  for (const c of colors) element.classList.toggle('orientation-' + c, s.orientation === c);\n  element.classList.toggle('manipulable', !s.viewOnly);\n\n  const container = createEl('cg-container');\n  element.appendChild(container);\n\n  const board = createEl('cg-board');\n  container.appendChild(board);\n\n  let svg: SVGElement | undefined;\n  let customSvg: SVGElement | undefined;\n  let autoPieces: HTMLElement | undefined;\n\n  if (s.drawable.visible) {\n    svg = setAttributes(createSVG('svg'), {\n      class: 'cg-shapes',\n      viewBox: '-4 -4 8 8',\n      preserveAspectRatio: 'xMidYMid slice',\n    });\n    svg.appendChild(createDefs());\n    svg.appendChild(createSVG('g'));\n\n    customSvg = setAttributes(createSVG('svg'), {\n      class: 'cg-custom-svgs',\n      viewBox: '-3.5 -3.5 8 8',\n      preserveAspectRatio: 'xMidYMid slice',\n    });\n    customSvg.appendChild(createSVG('g'));\n\n    autoPieces = createEl('cg-auto-pieces');\n\n    container.appendChild(svg);\n    container.appendChild(customSvg);\n    container.appendChild(autoPieces);\n  }\n\n  if (s.coordinates) {\n    const orientClass = s.orientation === 'black' ? ' black' : '';\n    const ranksPositionClass = s.ranksPosition === 'left' ? ' left' : '';\n    container.appendChild(renderCoords(ranks, 'ranks' + orientClass + ranksPositionClass));\n    container.appendChild(renderCoords(files, 'files' + orientClass));\n  }\n\n  let ghost: HTMLElement | undefined;\n  if (s.draggable.enabled && s.draggable.showGhost) {\n    ghost = createEl('piece', 'ghost');\n    setVisible(ghost, false);\n    container.appendChild(ghost);\n  }\n\n  return {\n    board,\n    container,\n    wrap: element,\n    ghost,\n    svg,\n    customSvg,\n    autoPieces,\n  };\n}\n\nfunction renderCoords(elems: readonly string[], className: string): HTMLElement {\n  const el = createEl('coords', className);\n  let f: HTMLElement;\n  for (const elem of elems) {\n    f = createEl('coord');\n    f.textContent = elem;\n    el.appendChild(f);\n  }\n  return el;\n}\n","import { key2pos } from './util.js';\nexport { createElement, setAttributes };\nexport function createDefs() {\n    const defs = createElement('defs');\n    const filter = setAttributes(createElement('filter'), { id: 'cg-filter-blur' });\n    filter.appendChild(setAttributes(createElement('feGaussianBlur'), { stdDeviation: '0.022' }));\n    defs.appendChild(filter);\n    return defs;\n}\nexport function renderSvg(state, shapesEl, customsEl) {\n    var _a;\n    const d = state.drawable, curD = d.current, cur = curD && curD.mouseSq ? curD : undefined, dests = new Map(), bounds = state.dom.bounds(), nonPieceAutoShapes = d.autoShapes.filter(autoShape => !autoShape.piece);\n    for (const s of d.shapes.concat(nonPieceAutoShapes).concat(cur ? [cur] : [])) {\n        if (!s.dest)\n            continue;\n        const sources = (_a = dests.get(s.dest)) !== null && _a !== void 0 ? _a : new Set(), from = pos2user(orient(key2pos(s.orig), state.orientation), bounds), to = pos2user(orient(key2pos(s.dest), state.orientation), bounds);\n        sources.add(moveAngle(from, to));\n        dests.set(s.dest, sources);\n    }\n    const shapes = d.shapes.concat(nonPieceAutoShapes).map((s) => {\n        return {\n            shape: s,\n            current: false,\n            hash: shapeHash(s, isShort(s.dest, dests), false, bounds),\n        };\n    });\n    if (cur)\n        shapes.push({\n            shape: cur,\n            current: true,\n            hash: shapeHash(cur, isShort(cur.dest, dests), true, bounds),\n        });\n    const fullHash = shapes.map(sc => sc.hash).join(';');\n    if (fullHash === state.drawable.prevSvgHash)\n        return;\n    state.drawable.prevSvgHash = fullHash;\n    /*\n      -- DOM hierarchy --\n      <svg class=\"cg-shapes\">      (<= svg)\n        <defs>\n          ...(for brushes)...\n        </defs>\n        <g>\n          ...(for arrows and circles)...\n        </g>\n      </svg>\n      <svg class=\"cg-custom-svgs\"> (<= customSvg)\n        <g>\n          ...(for custom svgs)...\n        </g>\n      </svg>\n    */\n    const defsEl = shapesEl.querySelector('defs');\n    syncDefs(d, shapes, defsEl);\n    syncShapes(shapes, shapesEl.querySelector('g'), customsEl.querySelector('g'), s => renderShape(state, s, d.brushes, dests, bounds));\n}\n// append only. Don't try to update/remove.\nfunction syncDefs(d, shapes, defsEl) {\n    var _a;\n    const brushes = new Map();\n    let brush;\n    for (const s of shapes.filter(s => s.shape.dest && s.shape.brush)) {\n        brush = makeCustomBrush(d.brushes[s.shape.brush], s.shape.modifiers);\n        if ((_a = s.shape.modifiers) === null || _a === void 0 ? void 0 : _a.hilite)\n            brushes.set('hilite', d.brushes['hilite']);\n        brushes.set(brush.key, brush);\n    }\n    const keysInDom = new Set();\n    let el = defsEl.firstElementChild;\n    while (el) {\n        keysInDom.add(el.getAttribute('cgKey'));\n        el = el.nextElementSibling;\n    }\n    for (const [key, brush] of brushes.entries()) {\n        if (!keysInDom.has(key))\n            defsEl.appendChild(renderMarker(brush));\n    }\n}\nfunction syncShapes(syncables, shapes, customs, renderShape) {\n    const hashesInDom = new Map();\n    for (const sc of syncables)\n        hashesInDom.set(sc.hash, false);\n    for (const root of [shapes, customs]) {\n        const toRemove = [];\n        let el = root.firstElementChild, elHash;\n        while (el) {\n            elHash = el.getAttribute('cgHash');\n            if (hashesInDom.has(elHash))\n                hashesInDom.set(elHash, true);\n            else\n                toRemove.push(el);\n            el = el.nextElementSibling;\n        }\n        for (const el of toRemove)\n            root.removeChild(el);\n    }\n    // insert shapes that are not yet in dom\n    for (const sc of syncables.filter(s => !hashesInDom.get(s.hash))) {\n        for (const svg of renderShape(sc)) {\n            if (svg.isCustom)\n                customs.appendChild(svg.el);\n            else\n                shapes.appendChild(svg.el);\n        }\n    }\n}\nfunction shapeHash({ orig, dest, brush, piece, modifiers, customSvg, label }, shorten, current, bounds) {\n    var _a, _b;\n    // a shape and an overlay svg share a lifetime and have the same cgHash attribute\n    return [\n        bounds.width,\n        bounds.height,\n        current,\n        orig,\n        dest,\n        brush,\n        shorten && '-',\n        piece && pieceHash(piece),\n        modifiers && modifiersHash(modifiers),\n        customSvg && `custom-${textHash(customSvg.html)},${(_b = (_a = customSvg.center) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : 'o'}`,\n        label && `label-${textHash(label.text)}`,\n    ]\n        .filter(x => x)\n        .join(',');\n}\nfunction pieceHash(piece) {\n    return [piece.color, piece.role, piece.scale].filter(x => x).join(',');\n}\nfunction modifiersHash(m) {\n    return [m.lineWidth, m.hilite && '*'].filter(x => x).join(',');\n}\nfunction textHash(s) {\n    // Rolling hash with base 31 (cf. https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\n    let h = 0;\n    for (let i = 0; i < s.length; i++) {\n        h = ((h << 5) - h + s.charCodeAt(i)) >>> 0;\n    }\n    return h.toString();\n}\nfunction renderShape(state, { shape, current, hash }, brushes, dests, bounds) {\n    var _a, _b;\n    const from = pos2user(orient(key2pos(shape.orig), state.orientation), bounds), to = shape.dest ? pos2user(orient(key2pos(shape.dest), state.orientation), bounds) : from, brush = shape.brush && makeCustomBrush(brushes[shape.brush], shape.modifiers), slots = dests.get(shape.dest), svgs = [];\n    if (brush) {\n        const el = setAttributes(createElement('g'), { cgHash: hash });\n        svgs.push({ el });\n        if (from[0] !== to[0] || from[1] !== to[1])\n            el.appendChild(renderArrow(shape, brush, from, to, current, isShort(shape.dest, dests)));\n        else\n            el.appendChild(renderCircle(brushes[shape.brush], from, current, bounds));\n    }\n    if (shape.label) {\n        const label = shape.label;\n        (_a = label.fill) !== null && _a !== void 0 ? _a : (label.fill = shape.brush && brushes[shape.brush].color);\n        const corner = shape.brush ? undefined : 'tr';\n        svgs.push({ el: renderLabel(label, hash, from, to, slots, corner), isCustom: true });\n    }\n    if (shape.customSvg) {\n        const on = (_b = shape.customSvg.center) !== null && _b !== void 0 ? _b : 'orig';\n        const [x, y] = on === 'label' ? labelCoords(from, to, slots).map(c => c - 0.5) : on === 'dest' ? to : from;\n        const el = setAttributes(createElement('g'), { transform: `translate(${x},${y})`, cgHash: hash });\n        el.innerHTML = `<svg width=\"1\" height=\"1\" viewBox=\"0 0 100 100\">${shape.customSvg.html}</svg>`;\n        svgs.push({ el, isCustom: true });\n    }\n    return svgs;\n}\nfunction renderCircle(brush, at, current, bounds) {\n    const widths = circleWidth(), radius = (bounds.width + bounds.height) / (4 * Math.max(bounds.width, bounds.height));\n    return setAttributes(createElement('circle'), {\n        stroke: brush.color,\n        'stroke-width': widths[current ? 0 : 1],\n        fill: 'none',\n        opacity: opacity(brush, current),\n        cx: at[0],\n        cy: at[1],\n        r: radius - widths[1] / 2,\n    });\n}\nfunction renderArrow(s, brush, from, to, current, shorten) {\n    var _a;\n    function renderLine(isHilite) {\n        var _a;\n        const m = arrowMargin(shorten && !current), dx = to[0] - from[0], dy = to[1] - from[1], angle = Math.atan2(dy, dx), xo = Math.cos(angle) * m, yo = Math.sin(angle) * m;\n        return setAttributes(createElement('line'), {\n            stroke: isHilite ? 'white' : brush.color,\n            'stroke-width': lineWidth(brush, current) + (isHilite ? 0.04 : 0),\n            'stroke-linecap': 'round',\n            'marker-end': `url(#arrowhead-${isHilite ? 'hilite' : brush.key})`,\n            opacity: ((_a = s.modifiers) === null || _a === void 0 ? void 0 : _a.hilite) ? 1 : opacity(brush, current),\n            x1: from[0],\n            y1: from[1],\n            x2: to[0] - xo,\n            y2: to[1] - yo,\n        });\n    }\n    if (!((_a = s.modifiers) === null || _a === void 0 ? void 0 : _a.hilite))\n        return renderLine(false);\n    const g = createElement('g');\n    const blurred = setAttributes(createElement('g'), { filter: 'url(#cg-filter-blur)' });\n    blurred.appendChild(filterBox(from, to));\n    blurred.appendChild(renderLine(true));\n    g.appendChild(blurred);\n    g.appendChild(renderLine(false));\n    return g;\n}\nfunction renderMarker(brush) {\n    const marker = setAttributes(createElement('marker'), {\n        id: 'arrowhead-' + brush.key,\n        orient: 'auto',\n        overflow: 'visible',\n        markerWidth: 4,\n        markerHeight: 4,\n        refX: brush.key === 'hilite' ? 1.86 : 2.05,\n        refY: 2,\n    });\n    marker.appendChild(setAttributes(createElement('path'), {\n        d: 'M0,0 V4 L3,2 Z',\n        fill: brush.color,\n    }));\n    marker.setAttribute('cgKey', brush.key);\n    return marker;\n}\nfunction renderLabel(label, hash, from, to, slots, corner) {\n    var _a;\n    const labelSize = 0.4, fontSize = labelSize * 0.75 ** label.text.length, at = labelCoords(from, to, slots), cornerOff = corner === 'tr' ? 0.4 : 0, g = setAttributes(createElement('g'), {\n        transform: `translate(${at[0] + cornerOff},${at[1] - cornerOff})`,\n        cgHash: hash,\n    });\n    g.appendChild(setAttributes(createElement('circle'), {\n        r: labelSize / 2,\n        'fill-opacity': corner ? 1.0 : 0.8,\n        'stroke-opacity': corner ? 1.0 : 0.7,\n        'stroke-width': 0.03,\n        fill: (_a = label.fill) !== null && _a !== void 0 ? _a : '#666',\n        stroke: 'white',\n    }));\n    const labelEl = setAttributes(createElement('text'), {\n        'font-size': fontSize,\n        'font-family': 'Noto Sans',\n        'text-anchor': 'middle',\n        fill: 'white',\n        y: 0.13 * 0.75 ** label.text.length,\n    });\n    labelEl.innerHTML = label.text;\n    g.appendChild(labelEl);\n    return g;\n}\nfunction orient(pos, color) {\n    return color === 'white' ? pos : [7 - pos[0], 7 - pos[1]];\n}\nfunction isShort(dest, dests) {\n    return true === (dest && dests.has(dest) && dests.get(dest).size > 1);\n}\nfunction createElement(tagName) {\n    return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n}\nfunction setAttributes(el, attrs) {\n    for (const key in attrs) {\n        if (Object.prototype.hasOwnProperty.call(attrs, key))\n            el.setAttribute(key, attrs[key]);\n    }\n    return el;\n}\nfunction makeCustomBrush(base, modifiers) {\n    return !modifiers\n        ? base\n        : {\n            color: base.color,\n            opacity: Math.round(base.opacity * 10) / 10,\n            lineWidth: Math.round(modifiers.lineWidth || base.lineWidth),\n            key: [base.key, modifiers.lineWidth].filter(x => x).join(''),\n        };\n}\nfunction circleWidth() {\n    return [3 / 64, 4 / 64];\n}\nfunction lineWidth(brush, current) {\n    return ((brush.lineWidth || 10) * (current ? 0.85 : 1)) / 64;\n}\nfunction opacity(brush, current) {\n    return (brush.opacity || 1) * (current ? 0.9 : 1);\n}\nfunction arrowMargin(shorten) {\n    return (shorten ? 20 : 10) / 64;\n}\nfunction pos2user(pos, bounds) {\n    const xScale = Math.min(1, bounds.width / bounds.height);\n    const yScale = Math.min(1, bounds.height / bounds.width);\n    return [(pos[0] - 3.5) * xScale, (3.5 - pos[1]) * yScale];\n}\nfunction filterBox(from, to) {\n    // lines/arrows are considered to be one dimensional for the purposes of SVG filters,\n    // so we add a transparent bounding box to ensure they apply to the 2nd dimension\n    const box = {\n        from: [Math.floor(Math.min(from[0], to[0])), Math.floor(Math.min(from[1], to[1]))],\n        to: [Math.ceil(Math.max(from[0], to[0])), Math.ceil(Math.max(from[1], to[1]))],\n    };\n    return setAttributes(createElement('rect'), {\n        x: box.from[0],\n        y: box.from[1],\n        width: box.to[0] - box.from[0],\n        height: box.to[1] - box.from[1],\n        fill: 'none',\n        stroke: 'none',\n    });\n}\nfunction moveAngle(from, to, asSlot = true) {\n    const angle = Math.atan2(to[1] - from[1], to[0] - from[0]) + Math.PI;\n    return asSlot ? (Math.round((angle * 8) / Math.PI) + 16) % 16 : angle;\n}\nfunction dist(from, to) {\n    return Math.sqrt([from[0] - to[0], from[1] - to[1]].reduce((acc, x) => acc + x * x, 0));\n}\n/*\n try to place label at the junction of the destination shaft and arrowhead. if there's more than\n 1 arrow pointing to a square, the arrow shortens by 10 / 64 units so the label must move as well.\n \n if the angle between two incoming arrows is pi / 8, such as when an adjacent knight and bishop\n attack the same square, the knight's label is slid further down the shaft by an amount equal to\n our label size to avoid collision\n*/\nfunction labelCoords(from, to, slots) {\n    let mag = dist(from, to);\n    //if (mag === 0) return [from[0], from[1]];\n    const angle = moveAngle(from, to, false);\n    if (slots) {\n        mag -= 33 / 64; // reduce by arrowhead length\n        if (slots.size > 1) {\n            mag -= 10 / 64; // reduce by shortening factor\n            const slot = moveAngle(from, to);\n            if (slots.has((slot + 1) % 16) || slots.has((slot + 15) % 16)) {\n                if (slot & 1)\n                    mag -= 0.4;\n                // and by label size for the knight if another arrow is within pi / 8.\n            }\n        }\n    }\n    return [from[0] - Math.cos(angle) * mag, from[1] - Math.sin(angle) * mag].map(c => c + 0.5);\n}\n//# sourceMappingURL=svg.js.map","import { State } from './state.js';\nimport { key2pos } from './util.js';\nimport { Drawable, DrawShape, DrawShapePiece, DrawBrush, DrawBrushes, DrawModifiers } from './draw.js';\nimport { SyncableShape, Hash } from './sync.js';\nimport * as cg from './types.js';\n\ntype CustomBrushes = Map<string, DrawBrush>; // by hash\ntype Svg = { el: SVGElement; isCustom?: boolean };\ntype AngleSlots = Set<number>; // arrow angle slots for label positioning\ntype ArrowDests = Map<cg.Key | undefined, AngleSlots>; // angle slots per dest\n\nexport { createElement, setAttributes };\n\nexport function createDefs(): Element {\n  const defs = createElement('defs');\n  const filter = setAttributes(createElement('filter'), { id: 'cg-filter-blur' });\n  filter.appendChild(setAttributes(createElement('feGaussianBlur'), { stdDeviation: '0.022' }));\n  defs.appendChild(filter);\n  return defs;\n}\n\nexport function renderSvg(state: State, shapesEl: SVGElement, customsEl: SVGElement): void {\n  const d = state.drawable,\n    curD = d.current,\n    cur = curD && curD.mouseSq ? (curD as DrawShape) : undefined,\n    dests: ArrowDests = new Map(),\n    bounds = state.dom.bounds(),\n    nonPieceAutoShapes = d.autoShapes.filter(autoShape => !autoShape.piece);\n\n  for (const s of d.shapes.concat(nonPieceAutoShapes).concat(cur ? [cur] : [])) {\n    if (!s.dest) continue;\n    const sources = dests.get(s.dest) ?? new Set(),\n      from = pos2user(orient(key2pos(s.orig), state.orientation), bounds),\n      to = pos2user(orient(key2pos(s.dest), state.orientation), bounds);\n    sources.add(moveAngle(from, to));\n    dests.set(s.dest, sources);\n  }\n  const shapes: SyncableShape[] = d.shapes.concat(nonPieceAutoShapes).map((s: DrawShape) => {\n    return {\n      shape: s,\n      current: false,\n      hash: shapeHash(s, isShort(s.dest, dests), false, bounds),\n    };\n  });\n  if (cur)\n    shapes.push({\n      shape: cur,\n      current: true,\n      hash: shapeHash(cur, isShort(cur.dest, dests), true, bounds),\n    });\n\n  const fullHash = shapes.map(sc => sc.hash).join(';');\n  if (fullHash === state.drawable.prevSvgHash) return;\n  state.drawable.prevSvgHash = fullHash;\n\n  /*\n    -- DOM hierarchy --\n    <svg class=\"cg-shapes\">      (<= svg)\n      <defs>\n        ...(for brushes)...\n      </defs>\n      <g>\n        ...(for arrows and circles)...\n      </g>\n    </svg>\n    <svg class=\"cg-custom-svgs\"> (<= customSvg)\n      <g>\n        ...(for custom svgs)...\n      </g>\n    </svg>\n  */\n\n  const defsEl = shapesEl.querySelector('defs') as SVGElement;\n\n  syncDefs(d, shapes, defsEl);\n  syncShapes(shapes, shapesEl.querySelector('g')!, customsEl.querySelector('g')!, s =>\n    renderShape(state, s, d.brushes, dests, bounds),\n  );\n}\n\n// append only. Don't try to update/remove.\nfunction syncDefs(d: Drawable, shapes: SyncableShape[], defsEl: SVGElement) {\n  const brushes: CustomBrushes = new Map();\n  let brush: DrawBrush;\n  for (const s of shapes.filter(s => s.shape.dest && s.shape.brush)) {\n    brush = makeCustomBrush(d.brushes[s.shape.brush!], s.shape.modifiers);\n    if (s.shape.modifiers?.hilite) brushes.set('hilite', d.brushes['hilite']);\n    brushes.set(brush.key, brush);\n  }\n  const keysInDom = new Set();\n  let el: SVGElement | undefined = defsEl.firstElementChild as SVGElement;\n  while (el) {\n    keysInDom.add(el.getAttribute('cgKey'));\n    el = el.nextElementSibling as SVGElement | undefined;\n  }\n  for (const [key, brush] of brushes.entries()) {\n    if (!keysInDom.has(key)) defsEl.appendChild(renderMarker(brush));\n  }\n}\n\nfunction syncShapes(\n  syncables: SyncableShape[],\n  shapes: Element,\n  customs: Element,\n  renderShape: (shape: SyncableShape) => Svg[],\n): void {\n  const hashesInDom = new Map();\n\n  for (const sc of syncables) hashesInDom.set(sc.hash, false);\n  for (const root of [shapes, customs]) {\n    const toRemove: SVGElement[] = [];\n    let el: SVGElement | undefined = root.firstElementChild as SVGElement,\n      elHash: Hash | null;\n    while (el) {\n      elHash = el.getAttribute('cgHash') as Hash;\n      if (hashesInDom.has(elHash)) hashesInDom.set(elHash, true);\n      else toRemove.push(el);\n      el = el.nextElementSibling as SVGElement | undefined;\n    }\n    for (const el of toRemove) root.removeChild(el);\n  }\n  // insert shapes that are not yet in dom\n  for (const sc of syncables.filter(s => !hashesInDom.get(s.hash))) {\n    for (const svg of renderShape(sc)) {\n      if (svg.isCustom) customs.appendChild(svg.el);\n      else shapes.appendChild(svg.el);\n    }\n  }\n}\n\nfunction shapeHash(\n  { orig, dest, brush, piece, modifiers, customSvg, label }: DrawShape,\n  shorten: boolean,\n  current: boolean,\n  bounds: DOMRectReadOnly,\n): Hash {\n  // a shape and an overlay svg share a lifetime and have the same cgHash attribute\n  return [\n    bounds.width,\n    bounds.height,\n    current,\n    orig,\n    dest,\n    brush,\n    shorten && '-',\n    piece && pieceHash(piece),\n    modifiers && modifiersHash(modifiers),\n    customSvg && `custom-${textHash(customSvg.html)},${customSvg.center?.[0] ?? 'o'}`,\n    label && `label-${textHash(label.text)}`,\n  ]\n    .filter(x => x)\n    .join(',');\n}\n\nfunction pieceHash(piece: DrawShapePiece): Hash {\n  return [piece.color, piece.role, piece.scale].filter(x => x).join(',');\n}\n\nfunction modifiersHash(m: DrawModifiers): Hash {\n  return [m.lineWidth, m.hilite && '*'].filter(x => x).join(',');\n}\n\nfunction textHash(s: string): Hash {\n  // Rolling hash with base 31 (cf. https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\n  let h = 0;\n  for (let i = 0; i < s.length; i++) {\n    h = ((h << 5) - h + s.charCodeAt(i)) >>> 0;\n  }\n  return h.toString();\n}\n\nfunction renderShape(\n  state: State,\n  { shape, current, hash }: SyncableShape,\n  brushes: DrawBrushes,\n  dests: ArrowDests,\n  bounds: DOMRectReadOnly,\n): Svg[] {\n  const from = pos2user(orient(key2pos(shape.orig), state.orientation), bounds),\n    to = shape.dest ? pos2user(orient(key2pos(shape.dest), state.orientation), bounds) : from,\n    brush = shape.brush && makeCustomBrush(brushes[shape.brush], shape.modifiers),\n    slots = dests.get(shape.dest),\n    svgs: Svg[] = [];\n\n  if (brush) {\n    const el = setAttributes(createElement('g'), { cgHash: hash });\n    svgs.push({ el });\n\n    if (from[0] !== to[0] || from[1] !== to[1])\n      el.appendChild(renderArrow(shape, brush, from, to, current, isShort(shape.dest, dests)));\n    else el.appendChild(renderCircle(brushes[shape.brush!], from, current, bounds));\n  }\n  if (shape.label) {\n    const label = shape.label;\n    label.fill ??= shape.brush && brushes[shape.brush].color;\n    const corner = shape.brush ? undefined : 'tr';\n    svgs.push({ el: renderLabel(label, hash, from, to, slots, corner), isCustom: true });\n  }\n  if (shape.customSvg) {\n    const on = shape.customSvg.center ?? 'orig';\n    const [x, y] =\n      on === 'label' ? labelCoords(from, to, slots).map(c => c - 0.5) : on === 'dest' ? to : from;\n    const el = setAttributes(createElement('g'), { transform: `translate(${x},${y})`, cgHash: hash });\n    el.innerHTML = `<svg width=\"1\" height=\"1\" viewBox=\"0 0 100 100\">${shape.customSvg.html}</svg>`;\n    svgs.push({ el, isCustom: true });\n  }\n  return svgs;\n}\n\nfunction renderCircle(\n  brush: DrawBrush,\n  at: cg.NumberPair,\n  current: boolean,\n  bounds: DOMRectReadOnly,\n): SVGElement {\n  const widths = circleWidth(),\n    radius = (bounds.width + bounds.height) / (4 * Math.max(bounds.width, bounds.height));\n  return setAttributes(createElement('circle'), {\n    stroke: brush.color,\n    'stroke-width': widths[current ? 0 : 1],\n    fill: 'none',\n    opacity: opacity(brush, current),\n    cx: at[0],\n    cy: at[1],\n    r: radius - widths[1] / 2,\n  });\n}\n\nfunction renderArrow(\n  s: DrawShape,\n  brush: DrawBrush,\n  from: cg.NumberPair,\n  to: cg.NumberPair,\n  current: boolean,\n  shorten: boolean,\n): SVGElement {\n  function renderLine(isHilite: boolean) {\n    const m = arrowMargin(shorten && !current),\n      dx = to[0] - from[0],\n      dy = to[1] - from[1],\n      angle = Math.atan2(dy, dx),\n      xo = Math.cos(angle) * m,\n      yo = Math.sin(angle) * m;\n    return setAttributes(createElement('line'), {\n      stroke: isHilite ? 'white' : brush.color,\n      'stroke-width': lineWidth(brush, current) + (isHilite ? 0.04 : 0),\n      'stroke-linecap': 'round',\n      'marker-end': `url(#arrowhead-${isHilite ? 'hilite' : brush.key})`,\n      opacity: s.modifiers?.hilite ? 1 : opacity(brush, current),\n      x1: from[0],\n      y1: from[1],\n      x2: to[0] - xo,\n      y2: to[1] - yo,\n    });\n  }\n  if (!s.modifiers?.hilite) return renderLine(false);\n\n  const g = createElement('g');\n  const blurred = setAttributes(createElement('g'), { filter: 'url(#cg-filter-blur)' });\n  blurred.appendChild(filterBox(from, to));\n  blurred.appendChild(renderLine(true));\n  g.appendChild(blurred);\n  g.appendChild(renderLine(false));\n  return g;\n}\n\nfunction renderMarker(brush: DrawBrush): SVGElement {\n  const marker = setAttributes(createElement('marker'), {\n    id: 'arrowhead-' + brush.key,\n    orient: 'auto',\n    overflow: 'visible',\n    markerWidth: 4,\n    markerHeight: 4,\n    refX: brush.key === 'hilite' ? 1.86 : 2.05,\n    refY: 2,\n  });\n  marker.appendChild(\n    setAttributes(createElement('path'), {\n      d: 'M0,0 V4 L3,2 Z',\n      fill: brush.color,\n    }),\n  );\n  marker.setAttribute('cgKey', brush.key);\n  return marker;\n}\n\nfunction renderLabel(\n  label: { text: string; fill?: string },\n  hash: string,\n  from: cg.NumberPair,\n  to: cg.NumberPair,\n  slots?: AngleSlots,\n  corner?: 'tr',\n): SVGElement {\n  const labelSize = 0.4,\n    fontSize = labelSize * 0.75 ** label.text.length,\n    at = labelCoords(from, to, slots),\n    cornerOff = corner === 'tr' ? 0.4 : 0,\n    g = setAttributes(createElement('g'), {\n      transform: `translate(${at[0] + cornerOff},${at[1] - cornerOff})`,\n      cgHash: hash,\n    });\n  g.appendChild(\n    setAttributes(createElement('circle'), {\n      r: labelSize / 2,\n      'fill-opacity': corner ? 1.0 : 0.8,\n      'stroke-opacity': corner ? 1.0 : 0.7,\n      'stroke-width': 0.03,\n      fill: label.fill ?? '#666',\n      stroke: 'white',\n    }),\n  );\n  const labelEl = setAttributes(createElement('text'), {\n    'font-size': fontSize,\n    'font-family': 'Noto Sans',\n    'text-anchor': 'middle',\n    fill: 'white',\n    y: 0.13 * 0.75 ** label.text.length,\n  });\n  labelEl.innerHTML = label.text;\n  g.appendChild(labelEl);\n  return g;\n}\n\nfunction orient(pos: cg.Pos, color: cg.Color): cg.Pos {\n  return color === 'white' ? pos : [7 - pos[0], 7 - pos[1]];\n}\n\nfunction isShort(dest: cg.Key | undefined, dests: ArrowDests) {\n  return true === (dest && dests.has(dest) && dests.get(dest)!.size > 1);\n}\n\nfunction createElement(tagName: string): SVGElement {\n  return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n}\n\nfunction setAttributes(el: SVGElement, attrs: { [key: string]: any }): SVGElement {\n  for (const key in attrs) {\n    if (Object.prototype.hasOwnProperty.call(attrs, key)) el.setAttribute(key, attrs[key]);\n  }\n  return el;\n}\n\nfunction makeCustomBrush(base: DrawBrush, modifiers: DrawModifiers | undefined): DrawBrush {\n  return !modifiers\n    ? base\n    : {\n        color: base.color,\n        opacity: Math.round(base.opacity * 10) / 10,\n        lineWidth: Math.round(modifiers.lineWidth || base.lineWidth),\n        key: [base.key, modifiers.lineWidth].filter(x => x).join(''),\n      };\n}\n\nfunction circleWidth(): [number, number] {\n  return [3 / 64, 4 / 64];\n}\n\nfunction lineWidth(brush: DrawBrush, current: boolean): number {\n  return ((brush.lineWidth || 10) * (current ? 0.85 : 1)) / 64;\n}\n\nfunction opacity(brush: DrawBrush, current: boolean): number {\n  return (brush.opacity || 1) * (current ? 0.9 : 1);\n}\n\nfunction arrowMargin(shorten: boolean): number {\n  return (shorten ? 20 : 10) / 64;\n}\n\nfunction pos2user(pos: cg.Pos, bounds: DOMRectReadOnly): cg.NumberPair {\n  const xScale = Math.min(1, bounds.width / bounds.height);\n  const yScale = Math.min(1, bounds.height / bounds.width);\n  return [(pos[0] - 3.5) * xScale, (3.5 - pos[1]) * yScale];\n}\n\nfunction filterBox(from: cg.NumberPair, to: cg.NumberPair): SVGElement {\n  // lines/arrows are considered to be one dimensional for the purposes of SVG filters,\n  // so we add a transparent bounding box to ensure they apply to the 2nd dimension\n  const box = {\n    from: [Math.floor(Math.min(from[0], to[0])), Math.floor(Math.min(from[1], to[1]))],\n    to: [Math.ceil(Math.max(from[0], to[0])), Math.ceil(Math.max(from[1], to[1]))],\n  };\n  return setAttributes(createElement('rect'), {\n    x: box.from[0],\n    y: box.from[1],\n    width: box.to[0] - box.from[0],\n    height: box.to[1] - box.from[1],\n    fill: 'none',\n    stroke: 'none',\n  });\n}\n\nfunction moveAngle(from: cg.NumberPair, to: cg.NumberPair, asSlot = true) {\n  const angle = Math.atan2(to[1] - from[1], to[0] - from[0]) + Math.PI;\n  return asSlot ? (Math.round((angle * 8) / Math.PI) + 16) % 16 : angle;\n}\n\nfunction dist(from: cg.NumberPair, to: cg.NumberPair): number {\n  return Math.sqrt([from[0] - to[0], from[1] - to[1]].reduce((acc, x) => acc + x * x, 0));\n}\n\n/*\n try to place label at the junction of the destination shaft and arrowhead. if there's more than\n 1 arrow pointing to a square, the arrow shortens by 10 / 64 units so the label must move as well. \n \n if the angle between two incoming arrows is pi / 8, such as when an adjacent knight and bishop\n attack the same square, the knight's label is slid further down the shaft by an amount equal to\n our label size to avoid collision\n*/\n\nfunction labelCoords(from: cg.NumberPair, to: cg.NumberPair, slots?: AngleSlots): cg.NumberPair {\n  let mag = dist(from, to);\n  //if (mag === 0) return [from[0], from[1]];\n  const angle = moveAngle(from, to, false);\n  if (slots) {\n    mag -= 33 / 64; // reduce by arrowhead length\n    if (slots.size > 1) {\n      mag -= 10 / 64; // reduce by shortening factor\n      const slot = moveAngle(from, to);\n      if (slots.has((slot + 1) % 16) || slots.has((slot + 15) % 16)) {\n        if (slot & 1) mag -= 0.4;\n        // and by label size for the knight if another arrow is within pi / 8.\n      }\n    }\n  }\n  return [from[0] - Math.cos(angle) * mag, from[1] - Math.sin(angle) * mag].map(\n    c => c + 0.5,\n  ) as cg.NumberPair;\n}\n","import * as drag from './drag.js';\nimport * as draw from './draw.js';\nimport { drop } from './drop.js';\nimport { isRightButton } from './util.js';\nexport function bindBoard(s, onResize) {\n    const boardEl = s.dom.elements.board;\n    if ('ResizeObserver' in window)\n        new ResizeObserver(onResize).observe(s.dom.elements.wrap);\n    if (s.disableContextMenu || s.drawable.enabled) {\n        boardEl.addEventListener('contextmenu', e => e.preventDefault());\n    }\n    if (s.viewOnly)\n        return;\n    // Cannot be passive, because we prevent touch scrolling and dragging of\n    // selected elements.\n    const onStart = startDragOrDraw(s);\n    boardEl.addEventListener('touchstart', onStart, {\n        passive: false,\n    });\n    boardEl.addEventListener('mousedown', onStart, {\n        passive: false,\n    });\n}\n// returns the unbind function\nexport function bindDocument(s, onResize) {\n    const unbinds = [];\n    // Old versions of Edge and Safari do not support ResizeObserver. Send\n    // chessground.resize if a user action has changed the bounds of the board.\n    if (!('ResizeObserver' in window))\n        unbinds.push(unbindable(document.body, 'chessground.resize', onResize));\n    if (!s.viewOnly) {\n        const onmove = dragOrDraw(s, drag.move, draw.move);\n        const onend = dragOrDraw(s, drag.end, draw.end);\n        for (const ev of ['touchmove', 'mousemove'])\n            unbinds.push(unbindable(document, ev, onmove));\n        for (const ev of ['touchend', 'mouseup'])\n            unbinds.push(unbindable(document, ev, onend));\n        const onScroll = () => s.dom.bounds.clear();\n        unbinds.push(unbindable(document, 'scroll', onScroll, { capture: true, passive: true }));\n        unbinds.push(unbindable(window, 'resize', onScroll, { passive: true }));\n    }\n    return () => unbinds.forEach(f => f());\n}\nfunction unbindable(el, eventName, callback, options) {\n    el.addEventListener(eventName, callback, options);\n    return () => el.removeEventListener(eventName, callback, options);\n}\nconst startDragOrDraw = (s) => e => {\n    if (s.draggable.current)\n        drag.cancel(s);\n    else if (s.drawable.current)\n        draw.cancel(s);\n    else if (e.shiftKey || isRightButton(e)) {\n        if (s.drawable.enabled)\n            draw.start(s, e);\n    }\n    else if (!s.viewOnly) {\n        if (s.dropmode.active)\n            drop(s, e);\n        else\n            drag.start(s, e);\n    }\n};\nconst dragOrDraw = (s, withDrag, withDraw) => e => {\n    if (s.drawable.current) {\n        if (s.drawable.enabled)\n            withDraw(s, e);\n    }\n    else if (!s.viewOnly)\n        withDrag(s, e);\n};\n//# sourceMappingURL=events.js.map","import { State } from './state.js';\nimport * as drag from './drag.js';\nimport * as draw from './draw.js';\nimport { drop } from './drop.js';\nimport { isRightButton } from './util.js';\nimport * as cg from './types.js';\n\ntype MouchBind = (e: cg.MouchEvent) => void;\ntype StateMouchBind = (d: State, e: cg.MouchEvent) => void;\n\nexport function bindBoard(s: State, onResize: () => void): void {\n  const boardEl = s.dom.elements.board;\n\n  if ('ResizeObserver' in window) new ResizeObserver(onResize).observe(s.dom.elements.wrap);\n\n  if (s.disableContextMenu || s.drawable.enabled) {\n    boardEl.addEventListener('contextmenu', e => e.preventDefault());\n  }\n\n  if (s.viewOnly) return;\n\n  // Cannot be passive, because we prevent touch scrolling and dragging of\n  // selected elements.\n  const onStart = startDragOrDraw(s);\n  boardEl.addEventListener('touchstart', onStart as EventListener, {\n    passive: false,\n  });\n  boardEl.addEventListener('mousedown', onStart as EventListener, {\n    passive: false,\n  });\n}\n\n// returns the unbind function\nexport function bindDocument(s: State, onResize: () => void): cg.Unbind {\n  const unbinds: cg.Unbind[] = [];\n\n  // Old versions of Edge and Safari do not support ResizeObserver. Send\n  // chessground.resize if a user action has changed the bounds of the board.\n  if (!('ResizeObserver' in window)) unbinds.push(unbindable(document.body, 'chessground.resize', onResize));\n\n  if (!s.viewOnly) {\n    const onmove = dragOrDraw(s, drag.move, draw.move);\n    const onend = dragOrDraw(s, drag.end, draw.end);\n\n    for (const ev of ['touchmove', 'mousemove'])\n      unbinds.push(unbindable(document, ev, onmove as EventListener));\n    for (const ev of ['touchend', 'mouseup']) unbinds.push(unbindable(document, ev, onend as EventListener));\n\n    const onScroll = () => s.dom.bounds.clear();\n    unbinds.push(unbindable(document, 'scroll', onScroll, { capture: true, passive: true }));\n    unbinds.push(unbindable(window, 'resize', onScroll, { passive: true }));\n  }\n\n  return () => unbinds.forEach(f => f());\n}\n\nfunction unbindable(\n  el: EventTarget,\n  eventName: string,\n  callback: EventListener,\n  options?: AddEventListenerOptions,\n): cg.Unbind {\n  el.addEventListener(eventName, callback, options);\n  return () => el.removeEventListener(eventName, callback, options);\n}\n\nconst startDragOrDraw =\n  (s: State): MouchBind =>\n  e => {\n    if (s.draggable.current) drag.cancel(s);\n    else if (s.drawable.current) draw.cancel(s);\n    else if (e.shiftKey || isRightButton(e)) {\n      if (s.drawable.enabled) draw.start(s, e);\n    } else if (!s.viewOnly) {\n      if (s.dropmode.active) drop(s, e);\n      else drag.start(s, e);\n    }\n  };\n\nconst dragOrDraw =\n  (s: State, withDrag: StateMouchBind, withDraw: StateMouchBind): MouchBind =>\n  e => {\n    if (s.drawable.current) {\n      if (s.drawable.enabled) withDraw(s, e);\n    } else if (!s.viewOnly) withDrag(s, e);\n  };\n","import * as board from './board.js';\nimport * as util from './util.js';\nimport { cancel as dragCancel } from './drag.js';\nexport function setDropMode(s, piece) {\n    s.dropmode = {\n        active: true,\n        piece,\n    };\n    dragCancel(s);\n}\nexport function cancelDropMode(s) {\n    s.dropmode = {\n        active: false,\n    };\n}\nexport function drop(s, e) {\n    if (!s.dropmode.active)\n        return;\n    board.unsetPremove(s);\n    board.unsetPredrop(s);\n    const piece = s.dropmode.piece;\n    if (piece) {\n        s.pieces.set('a0', piece);\n        const position = util.eventPosition(e);\n        const dest = position && board.getKeyAtDomPos(position, board.whitePov(s), s.dom.bounds());\n        if (dest)\n            board.dropNewPiece(s, 'a0', dest);\n    }\n    s.dom.redraw();\n}\n//# sourceMappingURL=drop.js.map","import { State } from './state.js';\nimport * as cg from './types.js';\nimport * as board from './board.js';\nimport * as util from './util.js';\nimport { cancel as dragCancel } from './drag.js';\n\nexport function setDropMode(s: State, piece?: cg.Piece): void {\n  s.dropmode = {\n    active: true,\n    piece,\n  };\n  dragCancel(s);\n}\n\nexport function cancelDropMode(s: State): void {\n  s.dropmode = {\n    active: false,\n  };\n}\n\nexport function drop(s: State, e: cg.MouchEvent): void {\n  if (!s.dropmode.active) return;\n\n  board.unsetPremove(s);\n  board.unsetPredrop(s);\n\n  const piece = s.dropmode.piece;\n\n  if (piece) {\n    s.pieces.set('a0', piece);\n    const position = util.eventPosition(e);\n    const dest = position && board.getKeyAtDomPos(position, board.whitePov(s), s.dom.bounds());\n    if (dest) board.dropNewPiece(s, 'a0', dest);\n  }\n  s.dom.redraw();\n}\n","import { key2pos, createEl, posToTranslate as posToTranslateFromBounds, translate } from './util.js';\nimport { whitePov } from './board.js';\n// ported from https://github.com/lichess-org/lichobile/blob/master/src/chessground/render.ts\n// in case of bugs, blame @veloce\nexport function render(s) {\n    const asWhite = whitePov(s), posToTranslate = posToTranslateFromBounds(s.dom.bounds()), boardEl = s.dom.elements.board, pieces = s.pieces, curAnim = s.animation.current, anims = curAnim ? curAnim.plan.anims : new Map(), fadings = curAnim ? curAnim.plan.fadings : new Map(), curDrag = s.draggable.current, squares = computeSquareClasses(s), samePieces = new Set(), sameSquares = new Set(), movedPieces = new Map(), movedSquares = new Map(); // by class name\n    let k, el, pieceAtKey, elPieceName, anim, fading, pMvdset, pMvd, sMvdset, sMvd;\n    // walk over all board dom elements, apply animations and flag moved pieces\n    el = boardEl.firstChild;\n    while (el) {\n        k = el.cgKey;\n        if (isPieceNode(el)) {\n            pieceAtKey = pieces.get(k);\n            anim = anims.get(k);\n            fading = fadings.get(k);\n            elPieceName = el.cgPiece;\n            // if piece not being dragged anymore, remove dragging style\n            if (el.cgDragging && (!curDrag || curDrag.orig !== k)) {\n                el.classList.remove('dragging');\n                translate(el, posToTranslate(key2pos(k), asWhite));\n                el.cgDragging = false;\n            }\n            // remove fading class if it still remains\n            if (!fading && el.cgFading) {\n                el.cgFading = false;\n                el.classList.remove('fading');\n            }\n            // there is now a piece at this dom key\n            if (pieceAtKey) {\n                // continue animation if already animating and same piece\n                // (otherwise it could animate a captured piece)\n                if (anim && el.cgAnimating && elPieceName === pieceNameOf(pieceAtKey)) {\n                    const pos = key2pos(k);\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                    el.classList.add('anim');\n                    translate(el, posToTranslate(pos, asWhite));\n                }\n                else if (el.cgAnimating) {\n                    el.cgAnimating = false;\n                    el.classList.remove('anim');\n                    translate(el, posToTranslate(key2pos(k), asWhite));\n                    if (s.addPieceZIndex)\n                        el.style.zIndex = posZIndex(key2pos(k), asWhite);\n                }\n                // same piece: flag as same\n                if (elPieceName === pieceNameOf(pieceAtKey) && (!fading || !el.cgFading)) {\n                    samePieces.add(k);\n                }\n                // different piece: flag as moved unless it is a fading piece\n                else {\n                    if (fading && elPieceName === pieceNameOf(fading)) {\n                        el.classList.add('fading');\n                        el.cgFading = true;\n                    }\n                    else {\n                        appendValue(movedPieces, elPieceName, el);\n                    }\n                }\n            }\n            // no piece: flag as moved\n            else {\n                appendValue(movedPieces, elPieceName, el);\n            }\n        }\n        else if (isSquareNode(el)) {\n            const cn = el.className;\n            if (squares.get(k) === cn)\n                sameSquares.add(k);\n            else\n                appendValue(movedSquares, cn, el);\n        }\n        el = el.nextSibling;\n    }\n    // walk over all squares in current set, apply dom changes to moved squares\n    // or append new squares\n    for (const [sk, className] of squares) {\n        if (!sameSquares.has(sk)) {\n            sMvdset = movedSquares.get(className);\n            sMvd = sMvdset && sMvdset.pop();\n            const translation = posToTranslate(key2pos(sk), asWhite);\n            if (sMvd) {\n                sMvd.cgKey = sk;\n                translate(sMvd, translation);\n            }\n            else {\n                const squareNode = createEl('square', className);\n                squareNode.cgKey = sk;\n                translate(squareNode, translation);\n                boardEl.insertBefore(squareNode, boardEl.firstChild);\n            }\n        }\n    }\n    // walk over all pieces in current set, apply dom changes to moved pieces\n    // or append new pieces\n    for (const [k, p] of pieces) {\n        anim = anims.get(k);\n        if (!samePieces.has(k)) {\n            pMvdset = movedPieces.get(pieceNameOf(p));\n            pMvd = pMvdset && pMvdset.pop();\n            // a same piece was moved\n            if (pMvd) {\n                // apply dom changes\n                pMvd.cgKey = k;\n                if (pMvd.cgFading) {\n                    pMvd.classList.remove('fading');\n                    pMvd.cgFading = false;\n                }\n                const pos = key2pos(k);\n                if (s.addPieceZIndex)\n                    pMvd.style.zIndex = posZIndex(pos, asWhite);\n                if (anim) {\n                    pMvd.cgAnimating = true;\n                    pMvd.classList.add('anim');\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                }\n                translate(pMvd, posToTranslate(pos, asWhite));\n            }\n            // no piece in moved obj: insert the new piece\n            // assumes the new piece is not being dragged\n            else {\n                const pieceName = pieceNameOf(p), pieceNode = createEl('piece', pieceName), pos = key2pos(k);\n                pieceNode.cgPiece = pieceName;\n                pieceNode.cgKey = k;\n                if (anim) {\n                    pieceNode.cgAnimating = true;\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                }\n                translate(pieceNode, posToTranslate(pos, asWhite));\n                if (s.addPieceZIndex)\n                    pieceNode.style.zIndex = posZIndex(pos, asWhite);\n                boardEl.appendChild(pieceNode);\n            }\n        }\n    }\n    // remove any element that remains in the moved sets\n    for (const nodes of movedPieces.values())\n        removeNodes(s, nodes);\n    for (const nodes of movedSquares.values())\n        removeNodes(s, nodes);\n}\nexport function renderResized(s) {\n    const asWhite = whitePov(s), posToTranslate = posToTranslateFromBounds(s.dom.bounds());\n    let el = s.dom.elements.board.firstChild;\n    while (el) {\n        if ((isPieceNode(el) && !el.cgAnimating) || isSquareNode(el)) {\n            translate(el, posToTranslate(key2pos(el.cgKey), asWhite));\n        }\n        el = el.nextSibling;\n    }\n}\nexport function updateBounds(s) {\n    var _a, _b;\n    const bounds = s.dom.elements.wrap.getBoundingClientRect();\n    const container = s.dom.elements.container;\n    const ratio = bounds.height / bounds.width;\n    const width = (Math.floor((bounds.width * window.devicePixelRatio) / 8) * 8) / window.devicePixelRatio;\n    const height = width * ratio;\n    container.style.width = width + 'px';\n    container.style.height = height + 'px';\n    s.dom.bounds.clear();\n    (_a = s.addDimensionsCssVarsTo) === null || _a === void 0 ? void 0 : _a.style.setProperty('--cg-width', width + 'px');\n    (_b = s.addDimensionsCssVarsTo) === null || _b === void 0 ? void 0 : _b.style.setProperty('--cg-height', height + 'px');\n}\nconst isPieceNode = (el) => el.tagName === 'PIECE';\nconst isSquareNode = (el) => el.tagName === 'SQUARE';\nfunction removeNodes(s, nodes) {\n    for (const node of nodes)\n        s.dom.elements.board.removeChild(node);\n}\nfunction posZIndex(pos, asWhite) {\n    const minZ = 3;\n    const rank = pos[1];\n    const z = asWhite ? minZ + 7 - rank : minZ + rank;\n    return `${z}`;\n}\nconst pieceNameOf = (piece) => `${piece.color} ${piece.role}`;\nfunction computeSquareClasses(s) {\n    var _a, _b, _c;\n    const squares = new Map();\n    if (s.lastMove && s.highlight.lastMove)\n        for (const k of s.lastMove) {\n            addSquare(squares, k, 'last-move');\n        }\n    if (s.check && s.highlight.check)\n        addSquare(squares, s.check, 'check');\n    if (s.selected) {\n        addSquare(squares, s.selected, 'selected');\n        if (s.movable.showDests) {\n            const dests = (_a = s.movable.dests) === null || _a === void 0 ? void 0 : _a.get(s.selected);\n            if (dests)\n                for (const k of dests) {\n                    addSquare(squares, k, 'move-dest' + (s.pieces.has(k) ? ' oc' : ''));\n                }\n            const pDests = (_c = (_b = s.premovable.customDests) === null || _b === void 0 ? void 0 : _b.get(s.selected)) !== null && _c !== void 0 ? _c : s.premovable.dests;\n            if (pDests)\n                for (const k of pDests) {\n                    addSquare(squares, k, 'premove-dest' + (s.pieces.has(k) ? ' oc' : ''));\n                }\n        }\n    }\n    const premove = s.premovable.current;\n    if (premove)\n        for (const k of premove)\n            addSquare(squares, k, 'current-premove');\n    else if (s.predroppable.current)\n        addSquare(squares, s.predroppable.current.key, 'current-premove');\n    const o = s.exploding;\n    if (o)\n        for (const k of o.keys)\n            addSquare(squares, k, 'exploding' + o.stage);\n    if (s.highlight.custom) {\n        s.highlight.custom.forEach((v, k) => {\n            addSquare(squares, k, v);\n        });\n    }\n    return squares;\n}\nfunction addSquare(squares, key, klass) {\n    const classes = squares.get(key);\n    if (classes)\n        squares.set(key, `${classes} ${klass}`);\n    else\n        squares.set(key, klass);\n}\nfunction appendValue(map, key, value) {\n    const arr = map.get(key);\n    if (arr)\n        arr.push(value);\n    else\n        map.set(key, [value]);\n}\n//# sourceMappingURL=render.js.map","import { State } from './state.js';\nimport { key2pos, createEl, posToTranslate as posToTranslateFromBounds, translate } from './util.js';\nimport { whitePov } from './board.js';\nimport { AnimCurrent, AnimVectors, AnimVector, AnimFadings } from './anim.js';\nimport { DragCurrent } from './drag.js';\nimport * as cg from './types.js';\n\ntype PieceName = string; // `$color $role`\n\n// ported from https://github.com/lichess-org/lichobile/blob/master/src/chessground/render.ts\n// in case of bugs, blame @veloce\nexport function render(s: State): void {\n  const asWhite: boolean = whitePov(s),\n    posToTranslate = posToTranslateFromBounds(s.dom.bounds()),\n    boardEl: HTMLElement = s.dom.elements.board,\n    pieces: cg.Pieces = s.pieces,\n    curAnim: AnimCurrent | undefined = s.animation.current,\n    anims: AnimVectors = curAnim ? curAnim.plan.anims : new Map(),\n    fadings: AnimFadings = curAnim ? curAnim.plan.fadings : new Map(),\n    curDrag: DragCurrent | undefined = s.draggable.current,\n    squares: cg.SquareClasses = computeSquareClasses(s),\n    samePieces: Set<cg.Key> = new Set(),\n    sameSquares: Set<cg.Key> = new Set(),\n    movedPieces: Map<PieceName, cg.PieceNode[]> = new Map(),\n    movedSquares: Map<string, cg.SquareNode[]> = new Map(); // by class name\n  let k: cg.Key,\n    el: cg.PieceNode | cg.SquareNode | undefined,\n    pieceAtKey: cg.Piece | undefined,\n    elPieceName: PieceName,\n    anim: AnimVector | undefined,\n    fading: cg.Piece | undefined,\n    pMvdset: cg.PieceNode[] | undefined,\n    pMvd: cg.PieceNode | undefined,\n    sMvdset: cg.SquareNode[] | undefined,\n    sMvd: cg.SquareNode | undefined;\n\n  // walk over all board dom elements, apply animations and flag moved pieces\n  el = boardEl.firstChild as cg.PieceNode | cg.SquareNode | undefined;\n  while (el) {\n    k = el.cgKey;\n    if (isPieceNode(el)) {\n      pieceAtKey = pieces.get(k);\n      anim = anims.get(k);\n      fading = fadings.get(k);\n      elPieceName = el.cgPiece;\n      // if piece not being dragged anymore, remove dragging style\n      if (el.cgDragging && (!curDrag || curDrag.orig !== k)) {\n        el.classList.remove('dragging');\n        translate(el, posToTranslate(key2pos(k), asWhite));\n        el.cgDragging = false;\n      }\n      // remove fading class if it still remains\n      if (!fading && el.cgFading) {\n        el.cgFading = false;\n        el.classList.remove('fading');\n      }\n      // there is now a piece at this dom key\n      if (pieceAtKey) {\n        // continue animation if already animating and same piece\n        // (otherwise it could animate a captured piece)\n        if (anim && el.cgAnimating && elPieceName === pieceNameOf(pieceAtKey)) {\n          const pos = key2pos(k);\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n          el.classList.add('anim');\n          translate(el, posToTranslate(pos, asWhite));\n        } else if (el.cgAnimating) {\n          el.cgAnimating = false;\n          el.classList.remove('anim');\n          translate(el, posToTranslate(key2pos(k), asWhite));\n          if (s.addPieceZIndex) el.style.zIndex = posZIndex(key2pos(k), asWhite);\n        }\n        // same piece: flag as same\n        if (elPieceName === pieceNameOf(pieceAtKey) && (!fading || !el.cgFading)) {\n          samePieces.add(k);\n        }\n        // different piece: flag as moved unless it is a fading piece\n        else {\n          if (fading && elPieceName === pieceNameOf(fading)) {\n            el.classList.add('fading');\n            el.cgFading = true;\n          } else {\n            appendValue(movedPieces, elPieceName, el);\n          }\n        }\n      }\n      // no piece: flag as moved\n      else {\n        appendValue(movedPieces, elPieceName, el);\n      }\n    } else if (isSquareNode(el)) {\n      const cn = el.className;\n      if (squares.get(k) === cn) sameSquares.add(k);\n      else appendValue(movedSquares, cn, el);\n    }\n    el = el.nextSibling as cg.PieceNode | cg.SquareNode | undefined;\n  }\n\n  // walk over all squares in current set, apply dom changes to moved squares\n  // or append new squares\n  for (const [sk, className] of squares) {\n    if (!sameSquares.has(sk)) {\n      sMvdset = movedSquares.get(className);\n      sMvd = sMvdset && sMvdset.pop();\n      const translation = posToTranslate(key2pos(sk), asWhite);\n      if (sMvd) {\n        sMvd.cgKey = sk;\n        translate(sMvd, translation);\n      } else {\n        const squareNode = createEl('square', className) as cg.SquareNode;\n        squareNode.cgKey = sk;\n        translate(squareNode, translation);\n        boardEl.insertBefore(squareNode, boardEl.firstChild);\n      }\n    }\n  }\n\n  // walk over all pieces in current set, apply dom changes to moved pieces\n  // or append new pieces\n  for (const [k, p] of pieces) {\n    anim = anims.get(k);\n    if (!samePieces.has(k)) {\n      pMvdset = movedPieces.get(pieceNameOf(p));\n      pMvd = pMvdset && pMvdset.pop();\n      // a same piece was moved\n      if (pMvd) {\n        // apply dom changes\n        pMvd.cgKey = k;\n        if (pMvd.cgFading) {\n          pMvd.classList.remove('fading');\n          pMvd.cgFading = false;\n        }\n        const pos = key2pos(k);\n        if (s.addPieceZIndex) pMvd.style.zIndex = posZIndex(pos, asWhite);\n        if (anim) {\n          pMvd.cgAnimating = true;\n          pMvd.classList.add('anim');\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n        }\n        translate(pMvd, posToTranslate(pos, asWhite));\n      }\n      // no piece in moved obj: insert the new piece\n      // assumes the new piece is not being dragged\n      else {\n        const pieceName = pieceNameOf(p),\n          pieceNode = createEl('piece', pieceName) as cg.PieceNode,\n          pos = key2pos(k);\n\n        pieceNode.cgPiece = pieceName;\n        pieceNode.cgKey = k;\n        if (anim) {\n          pieceNode.cgAnimating = true;\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n        }\n        translate(pieceNode, posToTranslate(pos, asWhite));\n\n        if (s.addPieceZIndex) pieceNode.style.zIndex = posZIndex(pos, asWhite);\n\n        boardEl.appendChild(pieceNode);\n      }\n    }\n  }\n\n  // remove any element that remains in the moved sets\n  for (const nodes of movedPieces.values()) removeNodes(s, nodes);\n  for (const nodes of movedSquares.values()) removeNodes(s, nodes);\n}\n\nexport function renderResized(s: State): void {\n  const asWhite: boolean = whitePov(s),\n    posToTranslate = posToTranslateFromBounds(s.dom.bounds());\n  let el = s.dom.elements.board.firstChild as cg.PieceNode | cg.SquareNode | undefined;\n  while (el) {\n    if ((isPieceNode(el) && !el.cgAnimating) || isSquareNode(el)) {\n      translate(el, posToTranslate(key2pos(el.cgKey), asWhite));\n    }\n    el = el.nextSibling as cg.PieceNode | cg.SquareNode | undefined;\n  }\n}\n\nexport function updateBounds(s: State): void {\n  const bounds = s.dom.elements.wrap.getBoundingClientRect();\n  const container = s.dom.elements.container;\n  const ratio = bounds.height / bounds.width;\n  const width = (Math.floor((bounds.width * window.devicePixelRatio) / 8) * 8) / window.devicePixelRatio;\n  const height = width * ratio;\n  container.style.width = width + 'px';\n  container.style.height = height + 'px';\n  s.dom.bounds.clear();\n\n  s.addDimensionsCssVarsTo?.style.setProperty('--cg-width', width + 'px');\n  s.addDimensionsCssVarsTo?.style.setProperty('--cg-height', height + 'px');\n}\n\nconst isPieceNode = (el: cg.PieceNode | cg.SquareNode): el is cg.PieceNode => el.tagName === 'PIECE';\nconst isSquareNode = (el: cg.PieceNode | cg.SquareNode): el is cg.SquareNode => el.tagName === 'SQUARE';\n\nfunction removeNodes(s: State, nodes: HTMLElement[]): void {\n  for (const node of nodes) s.dom.elements.board.removeChild(node);\n}\n\nfunction posZIndex(pos: cg.Pos, asWhite: boolean): string {\n  const minZ = 3;\n  const rank = pos[1];\n  const z = asWhite ? minZ + 7 - rank : minZ + rank;\n\n  return `${z}`;\n}\n\nconst pieceNameOf = (piece: cg.Piece): string => `${piece.color} ${piece.role}`;\n\nfunction computeSquareClasses(s: State): cg.SquareClasses {\n  const squares: cg.SquareClasses = new Map();\n  if (s.lastMove && s.highlight.lastMove)\n    for (const k of s.lastMove) {\n      addSquare(squares, k, 'last-move');\n    }\n  if (s.check && s.highlight.check) addSquare(squares, s.check, 'check');\n  if (s.selected) {\n    addSquare(squares, s.selected, 'selected');\n    if (s.movable.showDests) {\n      const dests = s.movable.dests?.get(s.selected);\n      if (dests)\n        for (const k of dests) {\n          addSquare(squares, k, 'move-dest' + (s.pieces.has(k) ? ' oc' : ''));\n        }\n      const pDests = s.premovable.customDests?.get(s.selected) ?? s.premovable.dests;\n      if (pDests)\n        for (const k of pDests) {\n          addSquare(squares, k, 'premove-dest' + (s.pieces.has(k) ? ' oc' : ''));\n        }\n    }\n  }\n  const premove = s.premovable.current;\n  if (premove) for (const k of premove) addSquare(squares, k, 'current-premove');\n  else if (s.predroppable.current) addSquare(squares, s.predroppable.current.key, 'current-premove');\n\n  const o = s.exploding;\n  if (o) for (const k of o.keys) addSquare(squares, k, 'exploding' + o.stage);\n\n  if (s.highlight.custom) {\n    s.highlight.custom.forEach((v: string, k: cg.Key) => {\n      addSquare(squares, k, v);\n    });\n  }\n\n  return squares;\n}\n\nfunction addSquare(squares: cg.SquareClasses, key: cg.Key, klass: string): void {\n  const classes = squares.get(key);\n  if (classes) squares.set(key, `${classes} ${klass}`);\n  else squares.set(key, klass);\n}\n\nfunction appendValue<K, V>(map: Map<K, V[]>, key: K, value: V): void {\n  const arr = map.get(key);\n  if (arr) arr.push(value);\n  else map.set(key, [value]);\n}\n","import { key2pos, createEl, posToTranslate as posToTranslateFromBounds, translateAndScale } from './util.js';\nimport { whitePov } from './board.js';\nimport { syncShapes } from './sync.js';\nexport function render(state, autoPieceEl) {\n    const autoPieces = state.drawable.autoShapes.filter(autoShape => autoShape.piece);\n    const autoPieceShapes = autoPieces.map((s) => {\n        return {\n            shape: s,\n            hash: hash(s),\n            current: false,\n        };\n    });\n    syncShapes(autoPieceShapes, autoPieceEl, shape => renderShape(state, shape, state.dom.bounds()));\n}\nexport function renderResized(state) {\n    var _a;\n    const asWhite = whitePov(state), posToTranslate = posToTranslateFromBounds(state.dom.bounds());\n    let el = (_a = state.dom.elements.autoPieces) === null || _a === void 0 ? void 0 : _a.firstChild;\n    while (el) {\n        translateAndScale(el, posToTranslate(key2pos(el.cgKey), asWhite), el.cgScale);\n        el = el.nextSibling;\n    }\n}\nfunction renderShape(state, { shape, hash }, bounds) {\n    var _a, _b, _c;\n    const orig = shape.orig;\n    const role = (_a = shape.piece) === null || _a === void 0 ? void 0 : _a.role;\n    const color = (_b = shape.piece) === null || _b === void 0 ? void 0 : _b.color;\n    const scale = (_c = shape.piece) === null || _c === void 0 ? void 0 : _c.scale;\n    const pieceEl = createEl('piece', `${role} ${color}`);\n    pieceEl.setAttribute('cgHash', hash);\n    pieceEl.cgKey = orig;\n    pieceEl.cgScale = scale;\n    translateAndScale(pieceEl, posToTranslateFromBounds(bounds)(key2pos(orig), whitePov(state)), scale);\n    return pieceEl;\n}\nconst hash = (autoPiece) => { var _a, _b, _c; return [autoPiece.orig, (_a = autoPiece.piece) === null || _a === void 0 ? void 0 : _a.role, (_b = autoPiece.piece) === null || _b === void 0 ? void 0 : _b.color, (_c = autoPiece.piece) === null || _c === void 0 ? void 0 : _c.scale].join(','); };\n//# sourceMappingURL=autoPieces.js.map","import { State } from './state.js';\nimport { key2pos, createEl, posToTranslate as posToTranslateFromBounds, translateAndScale } from './util.js';\nimport { whitePov } from './board.js';\nimport * as cg from './types.js';\nimport { DrawShape } from './draw.js';\nimport { SyncableShape, Hash, syncShapes } from './sync.js';\n\nexport function render(state: State, autoPieceEl: HTMLElement): void {\n  const autoPieces = state.drawable.autoShapes.filter(autoShape => autoShape.piece);\n  const autoPieceShapes: SyncableShape[] = autoPieces.map((s: DrawShape) => {\n    return {\n      shape: s,\n      hash: hash(s),\n      current: false,\n    };\n  });\n\n  syncShapes(autoPieceShapes, autoPieceEl, shape => renderShape(state, shape, state.dom.bounds()));\n}\n\nexport function renderResized(state: State): void {\n  const asWhite: boolean = whitePov(state),\n    posToTranslate = posToTranslateFromBounds(state.dom.bounds());\n  let el = state.dom.elements.autoPieces?.firstChild as cg.PieceNode | undefined;\n  while (el) {\n    translateAndScale(el, posToTranslate(key2pos(el.cgKey), asWhite), el.cgScale);\n    el = el.nextSibling as cg.PieceNode | undefined;\n  }\n}\n\nfunction renderShape(state: State, { shape, hash }: SyncableShape, bounds: DOMRectReadOnly): cg.PieceNode {\n  const orig = shape.orig;\n  const role = shape.piece?.role;\n  const color = shape.piece?.color;\n  const scale = shape.piece?.scale;\n\n  const pieceEl = createEl('piece', `${role} ${color}`) as cg.PieceNode;\n  pieceEl.setAttribute('cgHash', hash);\n  pieceEl.cgKey = orig;\n  pieceEl.cgScale = scale;\n  translateAndScale(pieceEl, posToTranslateFromBounds(bounds)(key2pos(orig), whitePov(state)), scale);\n\n  return pieceEl;\n}\n\nconst hash = (autoPiece: DrawShape): Hash =>\n  [autoPiece.orig, autoPiece.piece?.role, autoPiece.piece?.color, autoPiece.piece?.scale].join(',');\n","// append and remove only. No updates.\nexport function syncShapes(shapes, root, renderShape) {\n    const hashesInDom = new Map(), // by hash\n    toRemove = [];\n    for (const sc of shapes)\n        hashesInDom.set(sc.hash, false);\n    let el = root.firstElementChild, elHash;\n    while (el) {\n        elHash = el.getAttribute('cgHash');\n        // found a shape element that's here to stay\n        if (hashesInDom.has(elHash))\n            hashesInDom.set(elHash, true);\n        // or remove it\n        else\n            toRemove.push(el);\n        el = el.nextElementSibling;\n    }\n    // remove old shapes\n    for (const el of toRemove)\n        root.removeChild(el);\n    // insert shapes that are not yet in dom\n    for (const sc of shapes) {\n        if (!hashesInDom.get(sc.hash))\n            root.appendChild(renderShape(sc));\n    }\n}\n//# sourceMappingURL=sync.js.map","import { DrawShape } from './draw';\n\nexport interface SyncableShape {\n  shape: DrawShape;\n  current: boolean;\n  hash: Hash;\n}\n\nexport type Hash = string;\n\n// append and remove only. No updates.\nexport function syncShapes(\n  shapes: SyncableShape[],\n  root: HTMLElement | SVGElement,\n  renderShape: (shape: SyncableShape) => HTMLElement | SVGElement,\n): void {\n  const hashesInDom = new Map(), // by hash\n    toRemove: SVGElement[] = [];\n  for (const sc of shapes) hashesInDom.set(sc.hash, false);\n  let el: SVGElement | undefined = root.firstElementChild as SVGElement,\n    elHash: Hash | null;\n  while (el) {\n    elHash = el.getAttribute('cgHash') as Hash;\n    // found a shape element that's here to stay\n    if (hashesInDom.has(elHash)) hashesInDom.set(elHash, true);\n    // or remove it\n    else toRemove.push(el);\n    el = el.nextElementSibling as SVGElement | undefined;\n  }\n  // remove old shapes\n  for (const el of toRemove) root.removeChild(el);\n  // insert shapes that are not yet in dom\n  for (const sc of shapes) {\n    if (!hashesInDom.get(sc.hash)) root.appendChild(renderShape(sc));\n  }\n}\n","import m from 'mithril'\nimport { Chessground } from 'chessground'\nimport '../node_modules/chessground/assets/chessground.base.css'\nimport '../node_modules/chessground/assets/chessground.brown.css'\nimport '../node_modules/chessground/assets/chessground.cburnett.css'\nimport './board.css'\n\nexport const Board = (state, actions) => ({\n  oncreate: vnode => {\n    state.ground = new Chessground(vnode.dom, vnode.attrs.config)\n  },\n  view: vnode =>\n    m('.board', { class: vnode.attrs.class, onclick: vnode.attrs.onclick }),\n})\n","import m from 'mithril'\nimport { defaults, confirm, message } from 'alertifyjs'\nimport '../node_modules/alertifyjs/build/css/alertify.min.css'\nimport '../node_modules/alertifyjs/build/css/themes/semantic.css'\nimport './forms.css'\n\ndefaults.glossary.title = 'LaunchChess'\ndefaults.transition = 'zoom'\ndefaults.theme.ok = 'ui positive button'\ndefaults.theme.cancel = 'ui black button'\ndefaults.notifier.delay = 10\n\nexport function ProfilePage(state, actions) {\n  return {\n    view: vnode => {\n      return [\n        m(Profile, {}, state.user.profile),\n        m(\n          'i',\n          {\n            onclick: e => {\n              confirm(\n                'Are you sure you want to deauthorize this device?',\n                affirm => {\n                  actions.logout()\n                  m.route.set('/')\n                  message('logged out', 3)\n                },\n                deny => {\n                  console.log('That was a close one!')\n                }\n              )\n            },\n          },\n          'deauthorize this device'\n        ),\n      ]\n    },\n  }\n}\n\nexport function Profile() {\n  return {\n    view: vnode => {\n      return m(\n        'table.profile',\n        vnode.attrs,\n        Object.keys(vnode.children[0]).map((k, i) => {\n          // console.log(k, i)\n          return m('tr.entry', {}, [\n            m('td.key', {}, k),\n            // m('td.seperator', {}, ' - '),\n            m('td.value', {}, JSON.stringify(vnode.children[0][k])),\n          ])\n        })\n      )\n    },\n  }\n}\n","import m from 'mithril'\nimport { WebMidi } from 'webmidi'\nimport { StatusIcon, ConnectToggle } from './Toolbar'\nimport { Button } from 'construct-ui'\nimport { Launchpads, NOVATION, HEADERS, NAMES } from './Launchpad'\nimport { onlineActions } from './index'\nimport { ColorSelector } from './Color'\nimport '../node_modules/material-design-icons-iconfont/dist/material-design-icons.css'\n\nconst equals = (a, b) => a.length === b.length && a.every((v, i) => v === b[i])\n\nexport const Connector = (state, actions) => ({\n  connect: name => {\n    // search on device name only\n    name = name.replace(' Out', '')\n    if (state.connected) {\n      actions.disconnect()\n    }\n    state.output = WebMidi.getOutputByName(name || state.inputName)\n    state.outputName = state.output.name\n    state.input = WebMidi.getInputByName(name || state.outputName)\n    state.inputName = state.input.name\n    console.log('connected', state.input)\n    if (state.input) {\n      // send sysex to see if device is a launchpad\n      state.connected = true\n      state.deviceName = name\n      actions.detectDevice(state.input, state.output)\n    } else {\n      state.connected = false\n    }\n  },\n  connectInput: id => {\n    state.input = WebMidi.getInputById(id)\n    state.inputName = state.input.name\n    console.log('connected', state.input)\n    if (state.input) {\n      state.connected = true\n    } else {\n      state.connected = false\n    }\n  },\n\n  connectOutput: id => {\n    state.output = WebMidi.getOutputById(id)\n    state.outputName = state.output.name\n    console.log('connected', state.output)\n    if (state.output) {\n      // send sysex to see if device is a launchpad\n      state.connected = true\n      let launchpad = NAMES[state.output.name]\n      console.log('assigning ', launchpad)\n      Object.assign(actions, Launchpads[launchpad](state, actions))\n      Object.assign(onlineActions, Launchpads[launchpad](state, actions))\n      actions.toggleLive(state.connected)\n    } else {\n      state.connected = false\n    }\n  },\n  disconnect: () => {\n    if (state.input) {\n      if (state.connected)\n        try {\n          actions.toggleLive(false)\n        } catch (err) {\n          console.log('error disconnecting', err)\n        }\n      state.input.removeListener()\n      state.input = null\n      state.output = null\n    }\n    state.connected = false\n  },\n  reloadInputs: () => {\n    state.inputs(WebMidi.inputs)\n    state.outputs(WebMidi.outputs)\n    if (!state.connected && state.inputs().length == 1) {\n      let name = state.inputs()[0].name\n      console.log('single input: auto connecting', name)\n      let launchpad = NAMES[name]\n      console.log('auto connecting to ', name, launchpad)\n      Object.assign(actions, Launchpads[launchpad](state, actions))\n      Object.assign(onlineActions, Launchpads[launchpad](state, actions))\n      actions.connect(name)\n      actions.toggleLive(state.connected)\n    }\n    m.redraw()\n  },\n  initConnector: () => {\n    try {\n      WebMidi.enable(function (err) {\n        console.debug(WebMidi.inputs)\n        console.debug(WebMidi.outputs)\n        actions.reloadInputs()\n\n        WebMidi.addListener('connected', e => {\n          console.log('device connected')\n          actions.reloadInputs()\n        })\n\n        WebMidi.addListener('disconnected', e => {\n          console.log('device disconnected', e)\n          if (e.port.name == state.deviceName) {\n            console.log('active device disconnected!')\n            state.connected = false\n            m.redraw()\n          }\n          actions.reloadInputs()\n        })\n      }, true)\n      window.onunload = e => {\n        console.log('unloading')\n        actions.disconnect()\n      }\n    } catch (err) {\n      console.log('error setting up WebMidi', err)\n    }\n  },\n  initMidi: (noteCallback, ccCallback, afterInit) => {\n    console.log(WebMidi.inputs)\n    console.log(WebMidi.outputs)\n    if (state.input) {\n      state.input.removeListener()\n      state.input.addListener('noteon', 'all', noteCallback)\n      state.input.addListener('controlchange', 'all', ccCallback)\n      // state.input.addListener('midimessage', m => console.log('MIDI', m))\n    } else {\n      console.log('error, not connected')\n    }\n    afterInit()\n  },\n  detectDevice: (input, output) => {\n    input.addListener('sysex', 'all', sysex => {\n      let data = sysex.data\n      console.log('got sysex message', sysex)\n      if (\n        equals(data.slice(0, 5), [240, 126, 0, 6, 2]) &&\n        equals(data.slice(5, 8), NOVATION)\n      ) {\n        console.log('found Novation product')\n        Object.values(HEADERS).map(value => {\n          output.sendSysex(NOVATION, [...value, 14])\n        })\n      }\n      if (equals(data.slice(0, 4), [240, ...NOVATION]) && data[6] == 14) {\n        let header = data.slice(4, 6)\n        console.log('identified device!', header)\n        state.header = header\n        for (const key in HEADERS) {\n          if (equals(header, HEADERS[key])) {\n            console.log('this is a ', key)\n            state.deviceType = key\n            Object.assign(actions, Launchpads[key](state, actions))\n            Object.assign(onlineActions, Launchpads[key](state, actions))\n            input.removeListener('sysex')\n            actions.toggleLive(true)\n          }\n        }\n      }\n    })\n    output.sendSysex([126, 127, 6], [1])\n  },\n})\n\nexport const MidiInputSelector = (state, actions) =>\n  m(\n    'select',\n    {\n      oninput: e => actions.connectInput(e.target.value),\n    },\n    state.inputs().map(c => {\n      return m(\n        'option',\n        { value: c.id, selected: c.name == state.inputName },\n        c.name\n      )\n    })\n  )\nexport const MidiOutputSelector = (state, actions) =>\n  m(\n    'select',\n    {\n      oninput: e => actions.connectOutput(e.target.value),\n    },\n    state.outputs().map(c => {\n      return m(\n        'option',\n        { value: c.id, selected: c.name == state.outputName },\n        c.name\n      )\n    })\n  )\nexport const LaunchpadSelector = (state, actions) =>\n  m(\n    'select',\n    {\n      value: state.deviceType,\n      oninput: e => {\n        let value = e.target.value\n        console.log('selected', e, value)\n        state.deviceType = value\n        if (state.connected) {\n          Object.assign(actions, Launchpads[value](state, actions))\n          Object.assign(onlineActions, Launchpads[value](state, actions))\n          state.input.removeListener('sysex')\n          actions.toggleLive(true)\n        } else {\n        }\n      },\n    },\n    [m('option'), Object.keys(HEADERS).map(h => m('option', { value: h }, h))]\n  )\n\nexport const LaunchpadButton = (name, state, actions) =>\n  m(\n    Button,\n    {\n      label: name,\n      class: state.connected && state.inputName == name ? 'glow active' : '',\n      onclick: e => {\n        if (state.connected) {\n          actions.disconnect()\n        } else {\n          actions.connect(name)\n        }\n      },\n    },\n    name\n  )\n\nexport const Disconnect = (state, actions) =>\n  m(Button, {\n    onclick: e => {\n      actions.disconnect()\n    },\n    iconLeft: 'zap-off',\n    label: 'disconnect',\n  })\n\nexport const ConnectionPage = (state, actions) => ({\n  view: vnode =>\n    m('.ConnectionPage', {}, [\n      m('h1', 'Connect your Launchpad'),\n      StatusIcon(state),\n      state.inputs().length\n        ? state.inputs().map(i => {\n          if (i.name in NAMES) {\n            let matches = Object.keys(NAMES).filter(n => i.name.includes(n))\n            console.log(`checking ${i.name}`, matches)\n            if (matches.length) {\n              return LaunchpadButton(i.name, state, actions)\n            }\n          }\n        })\n        : 'no Launchpads detected',\n      state.connected ? Disconnect(state, actions) : null,\n      m('h3', {}, 'Input'),\n      MidiInputSelector(state, actions),\n      m('h3', {}, 'Output'),\n      MidiOutputSelector(state, actions),\n      m('h3', {}, 'Type'),\n      LaunchpadSelector(state, actions),\n      // m('br'),\n      // ConnectToggle(state, actions),\n      // ColorSelector(state),\n    ]),\n})\n","import { __assign, __rest } from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport m from 'mithril';\r\nimport { Icon } from '../icon';\r\nimport { Spinner } from '../spinner';\r\nimport { Classes, isNullOrEmpty } from '../../_shared';\r\nvar Button = /** @class */ (function () {\r\n    function Button() {\r\n    }\r\n    Button.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var _b = attrs.align, align = _b === void 0 ? 'center' : _b, active = attrs.active, basic = attrs.basic, compact = attrs.compact, className = attrs.class, disabled = attrs.disabled, fluid = attrs.fluid, href = attrs.href, iconLeft = attrs.iconLeft, iconLeftAttrs = attrs.iconLeftAttrs, iconRight = attrs.iconRight, iconRightAttrs = attrs.iconRightAttrs, intent = attrs.intent, loading = attrs.loading, label = attrs.label, onclick = attrs.onclick, outlined = attrs.outlined, rounded = attrs.rounded, size = attrs.size, sublabel = attrs.sublabel, htmlAttrs = __rest(attrs, [\"align\", \"active\", \"basic\", \"compact\", \"class\", \"disabled\", \"fluid\", \"href\", \"iconLeft\", \"iconLeftAttrs\", \"iconRight\", \"iconRightAttrs\", \"intent\", \"loading\", \"label\", \"onclick\", \"outlined\", \"rounded\", \"size\", \"sublabel\"]);\r\n        var tag = href ? 'a' : 'button';\r\n        var isAnchor = tag === 'a';\r\n        var classes = classnames(Classes.BUTTON, align && \"\".concat(Classes.ALIGN, \"-\").concat(align), active && Classes.ACTIVE, compact && Classes.COMPACT, disabled && Classes.DISABLED, fluid && Classes.FLUID, loading && Classes.LOADING, size && \"cui-\".concat(size), intent && \"cui-\".concat(intent), rounded && Classes.ROUNDED, basic && Classes.BASIC, outlined && Classes.OUTLINED, isNullOrEmpty(label) && isNullOrEmpty(sublabel) && (!iconLeft || !iconRight) && Classes.BUTTON_ICON, className);\r\n        var content = [\r\n            loading && m(Spinner, { active: true, fill: true }),\r\n            iconLeft && m(Icon, __assign({ name: iconLeft }, iconLeftAttrs)),\r\n            !isNullOrEmpty(sublabel) && m('span', { class: Classes.BUTTON_SUBLABEL }, sublabel),\r\n            !isNullOrEmpty(label) && m('span', { class: Classes.BUTTON_LABEL }, label),\r\n            iconRight && m(Icon, __assign({ name: iconRight }, iconRightAttrs))\r\n        ];\r\n        return m(tag, __assign(__assign({ type: isAnchor ? undefined : 'button', role: isAnchor ? 'button' : undefined }, htmlAttrs), { class: classes, disabled: disabled, \r\n            // Undefined attrs are not removed on redraw. See https://github.com/MithrilJS/mithril.js/pull/1865#issuecomment-382990558'\r\n            href: disabled ? undefined : href, onclick: disabled ? undefined : onclick, tabIndex: disabled ? undefined : htmlAttrs.tabIndex }), content);\r\n    };\r\n    return Button;\r\n}());\r\nexport { Button };\r\n","import { __assign, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes } from '../../_shared';\r\nimport { IconContents } from './generated';\r\nvar Icon = /** @class */ (function () {\r\n    function Icon() {\r\n    }\r\n    Icon.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var className = attrs.class, intent = attrs.intent, name = attrs.name, onclick = attrs.onclick, size = attrs.size, htmlAttrs = __rest(attrs, [\"class\", \"intent\", \"name\", \"onclick\", \"size\"]);\r\n        var classes = classnames(Classes.ICON, \"\".concat(Classes.ICON, \"-\").concat(name), intent && \"cui-\".concat(intent), size && \"cui-\".concat(size), onclick && Classes.ICON_ACTION, className);\r\n        var svg = m.trust(\"<svg viewBox='0 0 24 24'>\".concat(IconContents[name], \"</svg>\"));\r\n        return m('', __assign(__assign({}, htmlAttrs), { class: classes, onclick: onclick }), svg);\r\n    };\r\n    return Icon;\r\n}());\r\nexport { Icon };\r\n","/* tslint:disable */\r\nexport default {\r\n    'activity': '<polyline points=\"22 12 18 12 15 21 9 3 6 12 2 12\"></polyline>',\r\n    'airplay': '<path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon>',\r\n    'alert-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>',\r\n    'alert-octagon': '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>',\r\n    'alert-triangle': '<path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>',\r\n    'align-center': '<line x1=\"18\" y1=\"10\" x2=\"6\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"18\" y1=\"18\" x2=\"6\" y2=\"18\"></line>',\r\n    'align-justify': '<line x1=\"21\" y1=\"10\" x2=\"3\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"21\" y1=\"18\" x2=\"3\" y2=\"18\"></line>',\r\n    'align-left': '<line x1=\"17\" y1=\"10\" x2=\"3\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"17\" y1=\"18\" x2=\"3\" y2=\"18\"></line>',\r\n    'align-right': '<line x1=\"21\" y1=\"10\" x2=\"7\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"21\" y1=\"18\" x2=\"7\" y2=\"18\"></line>',\r\n    'anchor': '<circle cx=\"12\" cy=\"5\" r=\"3\"></circle><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"8\"></line><path d=\"M5 12H2a10 10 0 0 0 20 0h-3\"></path>',\r\n    'aperture': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"14.31\" y1=\"8\" x2=\"20.05\" y2=\"17.94\"></line><line x1=\"9.69\" y1=\"8\" x2=\"21.17\" y2=\"8\"></line><line x1=\"7.38\" y1=\"12\" x2=\"13.12\" y2=\"2.06\"></line><line x1=\"9.69\" y1=\"16\" x2=\"3.95\" y2=\"6.06\"></line><line x1=\"14.31\" y1=\"16\" x2=\"2.83\" y2=\"16\"></line><line x1=\"16.62\" y1=\"12\" x2=\"10.88\" y2=\"21.94\"></line>',\r\n    'archive': '<polyline points=\"21 8 21 21 3 21 3 8\"></polyline><rect x=\"1\" y=\"3\" width=\"22\" height=\"5\"></rect><line x1=\"10\" y1=\"12\" x2=\"14\" y2=\"12\"></line>',\r\n    'arrow-down-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"8 12 12 16 16 12\"></polyline><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>',\r\n    'arrow-down-left': '<line x1=\"17\" y1=\"7\" x2=\"7\" y2=\"17\"></line><polyline points=\"17 17 7 17 7 7\"></polyline>',\r\n    'arrow-down-right': '<line x1=\"7\" y1=\"7\" x2=\"17\" y2=\"17\"></line><polyline points=\"17 7 17 17 7 17\"></polyline>',\r\n    'arrow-down': '<line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><polyline points=\"19 12 12 19 5 12\"></polyline>',\r\n    'arrow-left-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 8 8 12 12 16\"></polyline><line x1=\"16\" y1=\"12\" x2=\"8\" y2=\"12\"></line>',\r\n    'arrow-left': '<line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line><polyline points=\"12 19 5 12 12 5\"></polyline>',\r\n    'arrow-right-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 16 16 12 12 8\"></polyline><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'arrow-right': '<line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline>',\r\n    'arrow-up-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"16 12 12 8 8 12\"></polyline><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"8\"></line>',\r\n    'arrow-up-left': '<line x1=\"17\" y1=\"17\" x2=\"7\" y2=\"7\"></line><polyline points=\"7 17 7 7 17 7\"></polyline>',\r\n    'arrow-up-right': '<line x1=\"7\" y1=\"17\" x2=\"17\" y2=\"7\"></line><polyline points=\"7 7 17 7 17 17\"></polyline>',\r\n    'arrow-up': '<line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\"></line><polyline points=\"5 12 12 5 19 12\"></polyline>',\r\n    'at-sign': '<circle cx=\"12\" cy=\"12\" r=\"4\"></circle><path d=\"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94\"></path>',\r\n    'award': '<circle cx=\"12\" cy=\"8\" r=\"7\"></circle><polyline points=\"8.21 13.89 7 23 12 20 17 23 15.79 13.88\"></polyline>',\r\n    'bar-chart-2': '<line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line>',\r\n    'bar-chart': '<line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"10\"></line><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"16\"></line>',\r\n    'battery-charging': '<path d=\"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19\"></path><line x1=\"23\" y1=\"13\" x2=\"23\" y2=\"11\"></line><polyline points=\"11 6 7 12 13 12 9 18\"></polyline>',\r\n    'battery': '<rect x=\"1\" y=\"6\" width=\"18\" height=\"12\" rx=\"2\" ry=\"2\"></rect><line x1=\"23\" y1=\"13\" x2=\"23\" y2=\"11\"></line>',\r\n    'bell-off': '<path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path><path d=\"M18.63 13A17.89 17.89 0 0 1 18 8\"></path><path d=\"M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14\"></path><path d=\"M18 8a6 6 0 0 0-9.33-5\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'bell': '<path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path><path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>',\r\n    'bluetooth': '<polyline points=\"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5\"></polyline>',\r\n    'bold': '<path d=\"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path><path d=\"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path>',\r\n    'book-open': '<path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path><path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>',\r\n    'book': '<path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"></path><path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"></path>',\r\n    'bookmark': '<path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"></path>',\r\n    'box': '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\r\n    'briefcase': '<rect x=\"2\" y=\"7\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect><path d=\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"></path>',\r\n    'calendar': '<rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line><line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line><line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>',\r\n    'camera-off': '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56\"></path>',\r\n    'camera': '<path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path><circle cx=\"12\" cy=\"13\" r=\"4\"></circle>',\r\n    'cast': '<path d=\"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6\"></path><line x1=\"2\" y1=\"20\" x2=\"2.01\" y2=\"20\"></line>',\r\n    'check-circle': '<path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline>',\r\n    'check-square': '<polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>',\r\n    'check': '<polyline points=\"20 6 9 17 4 12\"></polyline>',\r\n    'chevron-down': '<polyline points=\"6 9 12 15 18 9\"></polyline>',\r\n    'chevron-left': '<polyline points=\"15 18 9 12 15 6\"></polyline>',\r\n    'chevron-right': '<polyline points=\"9 18 15 12 9 6\"></polyline>',\r\n    'chevron-up': '<polyline points=\"18 15 12 9 6 15\"></polyline>',\r\n    'chevrons-down': '<polyline points=\"7 13 12 18 17 13\"></polyline><polyline points=\"7 6 12 11 17 6\"></polyline>',\r\n    'chevrons-left': '<polyline points=\"11 17 6 12 11 7\"></polyline><polyline points=\"18 17 13 12 18 7\"></polyline>',\r\n    'chevrons-right': '<polyline points=\"13 17 18 12 13 7\"></polyline><polyline points=\"6 17 11 12 6 7\"></polyline>',\r\n    'chevrons-up': '<polyline points=\"17 11 12 6 7 11\"></polyline><polyline points=\"17 18 12 13 7 18\"></polyline>',\r\n    'chrome': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"21.17\" y1=\"8\" x2=\"12\" y2=\"8\"></line><line x1=\"3.95\" y1=\"6.06\" x2=\"8.54\" y2=\"14\"></line><line x1=\"10.88\" y1=\"21.94\" x2=\"15.46\" y2=\"14\"></line>',\r\n    'circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle>',\r\n    'clipboard': '<path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect>',\r\n    'clock': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline>',\r\n    'cloud-drizzle': '<line x1=\"8\" y1=\"19\" x2=\"8\" y2=\"21\"></line><line x1=\"8\" y1=\"13\" x2=\"8\" y2=\"15\"></line><line x1=\"16\" y1=\"19\" x2=\"16\" y2=\"21\"></line><line x1=\"16\" y1=\"13\" x2=\"16\" y2=\"15\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"17\"></line><path d=\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"></path>',\r\n    'cloud-lightning': '<path d=\"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9\"></path><polyline points=\"13 11 9 17 15 17 11 23\"></polyline>',\r\n    'cloud-off': '<path d=\"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'cloud-rain': '<line x1=\"16\" y1=\"13\" x2=\"16\" y2=\"21\"></line><line x1=\"8\" y1=\"13\" x2=\"8\" y2=\"21\"></line><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"23\"></line><path d=\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"></path>',\r\n    'cloud-snow': '<path d=\"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25\"></path><line x1=\"8\" y1=\"16\" x2=\"8.01\" y2=\"16\"></line><line x1=\"8\" y1=\"20\" x2=\"8.01\" y2=\"20\"></line><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line><line x1=\"12\" y1=\"22\" x2=\"12.01\" y2=\"22\"></line><line x1=\"16\" y1=\"16\" x2=\"16.01\" y2=\"16\"></line><line x1=\"16\" y1=\"20\" x2=\"16.01\" y2=\"20\"></line>',\r\n    'cloud': '<path d=\"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z\"></path>',\r\n    'code': '<polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline>',\r\n    'codepen': '<polygon points=\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"></polygon><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"15.5\"></line><polyline points=\"22 8.5 12 15.5 2 8.5\"></polyline><polyline points=\"2 15.5 12 8.5 22 15.5\"></polyline><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"8.5\"></line>',\r\n    'codesandbox': '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"7.5 4.21 12 6.81 16.5 4.21\"></polyline><polyline points=\"7.5 19.79 7.5 14.6 3 12\"></polyline><polyline points=\"21 12 16.5 14.6 16.5 19.79\"></polyline><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\r\n    'coffee': '<path d=\"M18 8h1a4 4 0 0 1 0 8h-1\"></path><path d=\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\"></path><line x1=\"6\" y1=\"1\" x2=\"6\" y2=\"4\"></line><line x1=\"10\" y1=\"1\" x2=\"10\" y2=\"4\"></line><line x1=\"14\" y1=\"1\" x2=\"14\" y2=\"4\"></line>',\r\n    'columns': '<path d=\"M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18\"></path>',\r\n    'command': '<path d=\"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z\"></path>',\r\n    'compass': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polygon points=\"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"></polygon>',\r\n    'copy': '<rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>',\r\n    'corner-down-left': '<polyline points=\"9 10 4 15 9 20\"></polyline><path d=\"M20 4v7a4 4 0 0 1-4 4H4\"></path>',\r\n    'corner-down-right': '<polyline points=\"15 10 20 15 15 20\"></polyline><path d=\"M4 4v7a4 4 0 0 0 4 4h12\"></path>',\r\n    'corner-left-down': '<polyline points=\"14 15 9 20 4 15\"></polyline><path d=\"M20 4h-7a4 4 0 0 0-4 4v12\"></path>',\r\n    'corner-left-up': '<polyline points=\"14 9 9 4 4 9\"></polyline><path d=\"M20 20h-7a4 4 0 0 1-4-4V4\"></path>',\r\n    'corner-right-down': '<polyline points=\"10 15 15 20 20 15\"></polyline><path d=\"M4 4h7a4 4 0 0 1 4 4v12\"></path>',\r\n    'corner-right-up': '<polyline points=\"10 9 15 4 20 9\"></polyline><path d=\"M4 20h7a4 4 0 0 0 4-4V4\"></path>',\r\n    'corner-up-left': '<polyline points=\"9 14 4 9 9 4\"></polyline><path d=\"M20 20v-7a4 4 0 0 0-4-4H4\"></path>',\r\n    'corner-up-right': '<polyline points=\"15 14 20 9 15 4\"></polyline><path d=\"M4 20v-7a4 4 0 0 1 4-4h12\"></path>',\r\n    'cpu': '<rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\" ry=\"2\"></rect><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\"></rect><line x1=\"9\" y1=\"1\" x2=\"9\" y2=\"4\"></line><line x1=\"15\" y1=\"1\" x2=\"15\" y2=\"4\"></line><line x1=\"9\" y1=\"20\" x2=\"9\" y2=\"23\"></line><line x1=\"15\" y1=\"20\" x2=\"15\" y2=\"23\"></line><line x1=\"20\" y1=\"9\" x2=\"23\" y2=\"9\"></line><line x1=\"20\" y1=\"14\" x2=\"23\" y2=\"14\"></line><line x1=\"1\" y1=\"9\" x2=\"4\" y2=\"9\"></line><line x1=\"1\" y1=\"14\" x2=\"4\" y2=\"14\"></line>',\r\n    'credit-card': '<rect x=\"1\" y=\"4\" width=\"22\" height=\"16\" rx=\"2\" ry=\"2\"></rect><line x1=\"1\" y1=\"10\" x2=\"23\" y2=\"10\"></line>',\r\n    'crop': '<path d=\"M6.13 1L6 16a2 2 0 0 0 2 2h15\"></path><path d=\"M1 6.13L16 6a2 2 0 0 1 2 2v15\"></path>',\r\n    'crosshair': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"22\" y1=\"12\" x2=\"18\" y2=\"12\"></line><line x1=\"6\" y1=\"12\" x2=\"2\" y2=\"12\"></line><line x1=\"12\" y1=\"6\" x2=\"12\" y2=\"2\"></line><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\"></line>',\r\n    'database': '<ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"></ellipse><path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"></path><path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"></path>',\r\n    'delete': '<path d=\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"></path><line x1=\"18\" y1=\"9\" x2=\"12\" y2=\"15\"></line><line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>',\r\n    'disc': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"3\"></circle>',\r\n    'divide-circle': '<line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"8\"></line><circle cx=\"12\" cy=\"12\" r=\"10\"></circle>',\r\n    'divide-square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"8\"></line>',\r\n    'divide': '<circle cx=\"12\" cy=\"6\" r=\"2\"></circle><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><circle cx=\"12\" cy=\"18\" r=\"2\"></circle>',\r\n    'dollar-sign': '<line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path>',\r\n    'download-cloud': '<polyline points=\"8 17 12 21 16 17\"></polyline><line x1=\"12\" y1=\"12\" x2=\"12\" y2=\"21\"></line><path d=\"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29\"></path>',\r\n    'download': '<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"7 10 12 15 17 10\"></polyline><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>',\r\n    'dribbble': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M8.56 2.75c4.37 6.03 6.02 9.42 8.03 17.72m2.54-15.38c-3.72 4.35-8.94 5.66-16.88 5.85m19.5 1.9c-3.5-.93-6.63-.82-8.94 0-2.58.92-5.01 2.86-7.44 6.32\"></path>',\r\n    'droplet': '<path d=\"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\"></path>',\r\n    'edit-2': '<path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>',\r\n    'edit-3': '<path d=\"M12 20h9\"></path><path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"></path>',\r\n    'edit': '<path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>',\r\n    'external-link': '<path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>',\r\n    'eye-off': '<path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'eye': '<path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle>',\r\n    'facebook': '<path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path>',\r\n    'fast-forward': '<polygon points=\"13 19 22 12 13 5 13 19\"></polygon><polygon points=\"2 19 11 12 2 5 2 19\"></polygon>',\r\n    'feather': '<path d=\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\"></path><line x1=\"16\" y1=\"8\" x2=\"2\" y2=\"22\"></line><line x1=\"17.5\" y1=\"15\" x2=\"9\" y2=\"15\"></line>',\r\n    'figma': '<path d=\"M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z\"></path><path d=\"M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z\"></path><path d=\"M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z\"></path><path d=\"M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z\"></path><path d=\"M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z\"></path>',\r\n    'file-minus': '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>',\r\n    'file-plus': '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"12\"></line><line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>',\r\n    'file-text': '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line><line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line><polyline points=\"10 9 9 9 8 9\"></polyline>',\r\n    'file': '<path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline>',\r\n    'film': '<rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"2.18\" ry=\"2.18\"></rect><line x1=\"7\" y1=\"2\" x2=\"7\" y2=\"22\"></line><line x1=\"17\" y1=\"2\" x2=\"17\" y2=\"22\"></line><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"2\" y1=\"7\" x2=\"7\" y2=\"7\"></line><line x1=\"2\" y1=\"17\" x2=\"7\" y2=\"17\"></line><line x1=\"17\" y1=\"17\" x2=\"22\" y2=\"17\"></line><line x1=\"17\" y1=\"7\" x2=\"22\" y2=\"7\"></line>',\r\n    'filter': '<polygon points=\"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\"></polygon>',\r\n    'flag': '<path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line>',\r\n    'folder-minus': '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path><line x1=\"9\" y1=\"14\" x2=\"15\" y2=\"14\"></line>',\r\n    'folder-plus': '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path><line x1=\"12\" y1=\"11\" x2=\"12\" y2=\"17\"></line><line x1=\"9\" y1=\"14\" x2=\"15\" y2=\"14\"></line>',\r\n    'folder': '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path>',\r\n    'framer': '<path d=\"M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7\"></path>',\r\n    'frown': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M16 16s-1.5-2-4-2-4 2-4 2\"></path><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\r\n    'gift': '<polyline points=\"20 12 20 22 4 22 4 12\"></polyline><rect x=\"2\" y=\"7\" width=\"20\" height=\"5\"></rect><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"7\"></line><path d=\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"></path><path d=\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"></path>',\r\n    'git-branch': '<line x1=\"6\" y1=\"3\" x2=\"6\" y2=\"15\"></line><circle cx=\"18\" cy=\"6\" r=\"3\"></circle><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><path d=\"M18 9a9 9 0 0 1-9 9\"></path>',\r\n    'git-commit': '<circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"1.05\" y1=\"12\" x2=\"7\" y2=\"12\"></line><line x1=\"17.01\" y1=\"12\" x2=\"22.96\" y2=\"12\"></line>',\r\n    'git-merge': '<circle cx=\"18\" cy=\"18\" r=\"3\"></circle><circle cx=\"6\" cy=\"6\" r=\"3\"></circle><path d=\"M6 21V9a9 9 0 0 0 9 9\"></path>',\r\n    'git-pull-request': '<circle cx=\"18\" cy=\"18\" r=\"3\"></circle><circle cx=\"6\" cy=\"6\" r=\"3\"></circle><path d=\"M13 6h3a2 2 0 0 1 2 2v7\"></path><line x1=\"6\" y1=\"9\" x2=\"6\" y2=\"21\"></line>',\r\n    'github': '<path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>',\r\n    'gitlab': '<path d=\"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z\"></path>',\r\n    'globe': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path>',\r\n    'grid': '<rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect><rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect>',\r\n    'hard-drive': '<line x1=\"22\" y1=\"12\" x2=\"2\" y2=\"12\"></line><path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"></path><line x1=\"6\" y1=\"16\" x2=\"6.01\" y2=\"16\"></line><line x1=\"10\" y1=\"16\" x2=\"10.01\" y2=\"16\"></line>',\r\n    'hash': '<line x1=\"4\" y1=\"9\" x2=\"20\" y2=\"9\"></line><line x1=\"4\" y1=\"15\" x2=\"20\" y2=\"15\"></line><line x1=\"10\" y1=\"3\" x2=\"8\" y2=\"21\"></line><line x1=\"16\" y1=\"3\" x2=\"14\" y2=\"21\"></line>',\r\n    'headphones': '<path d=\"M3 18v-6a9 9 0 0 1 18 0v6\"></path><path d=\"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z\"></path>',\r\n    'heart': '<path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>',\r\n    'help-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>',\r\n    'hexagon': '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>',\r\n    'home': '<path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline>',\r\n    'image': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"></circle><polyline points=\"21 15 16 10 5 21\"></polyline>',\r\n    'inbox': '<polyline points=\"22 12 16 12 14 15 10 15 8 12 2 12\"></polyline><path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"></path>',\r\n    'info': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>',\r\n    'instagram': '<rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect><path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path><line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line>',\r\n    'italic': '<line x1=\"19\" y1=\"4\" x2=\"10\" y2=\"4\"></line><line x1=\"14\" y1=\"20\" x2=\"5\" y2=\"20\"></line><line x1=\"15\" y1=\"4\" x2=\"9\" y2=\"20\"></line>',\r\n    'key': '<path d=\"M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4\"></path>',\r\n    'layers': '<polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon><polyline points=\"2 17 12 22 22 17\"></polyline><polyline points=\"2 12 12 17 22 12\"></polyline>',\r\n    'layout': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"3\" y1=\"9\" x2=\"21\" y2=\"9\"></line><line x1=\"9\" y1=\"21\" x2=\"9\" y2=\"9\"></line>',\r\n    'life-buoy': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"4.93\" y1=\"4.93\" x2=\"9.17\" y2=\"9.17\"></line><line x1=\"14.83\" y1=\"14.83\" x2=\"19.07\" y2=\"19.07\"></line><line x1=\"14.83\" y1=\"9.17\" x2=\"19.07\" y2=\"4.93\"></line><line x1=\"14.83\" y1=\"9.17\" x2=\"18.36\" y2=\"5.64\"></line><line x1=\"4.93\" y1=\"19.07\" x2=\"9.17\" y2=\"14.83\"></line>',\r\n    'link-2': '<path d=\"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3\"></path><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'link': '<path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>',\r\n    'linkedin': '<path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"></path><rect x=\"2\" y=\"9\" width=\"4\" height=\"12\"></rect><circle cx=\"4\" cy=\"4\" r=\"2\"></circle>',\r\n    'list': '<line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line>',\r\n    'loader': '<line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\"></line><line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\"></line><line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\"></line><line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\"></line><line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\"></line><line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\"></line><line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\"></line>',\r\n    'lock': '<rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect><path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>',\r\n    'log-in': '<path d=\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\"></path><polyline points=\"10 17 15 12 10 7\"></polyline><line x1=\"15\" y1=\"12\" x2=\"3\" y2=\"12\"></line>',\r\n    'log-out': '<path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"16 17 21 12 16 7\"></polyline><line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>',\r\n    'mail': '<path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path><polyline points=\"22,6 12,13 2,6\"></polyline>',\r\n    'map-pin': '<path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path><circle cx=\"12\" cy=\"10\" r=\"3\"></circle>',\r\n    'map': '<polygon points=\"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6\"></polygon><line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"18\"></line><line x1=\"16\" y1=\"6\" x2=\"16\" y2=\"22\"></line>',\r\n    'maximize-2': '<polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\"></line><line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\"></line>',\r\n    'maximize': '<path d=\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\"></path>',\r\n    'meh': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"8\" y1=\"15\" x2=\"16\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\r\n    'menu': '<line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line>',\r\n    'message-circle': '<path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>',\r\n    'message-square': '<path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>',\r\n    'mic-off': '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path><path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path><line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line><line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>',\r\n    'mic': '<path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path><path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path><line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line><line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>',\r\n    'minimize-2': '<polyline points=\"4 14 10 14 10 20\"></polyline><polyline points=\"20 10 14 10 14 4\"></polyline><line x1=\"14\" y1=\"10\" x2=\"21\" y2=\"3\"></line><line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\"></line>',\r\n    'minimize': '<path d=\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"></path>',\r\n    'minus-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'minus-square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'minus': '<line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>',\r\n    'monitor': '<rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"></line><line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"></line>',\r\n    'moon': '<path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>',\r\n    'more-horizontal': '<circle cx=\"12\" cy=\"12\" r=\"1\"></circle><circle cx=\"19\" cy=\"12\" r=\"1\"></circle><circle cx=\"5\" cy=\"12\" r=\"1\"></circle>',\r\n    'more-vertical': '<circle cx=\"12\" cy=\"12\" r=\"1\"></circle><circle cx=\"12\" cy=\"5\" r=\"1\"></circle><circle cx=\"12\" cy=\"19\" r=\"1\"></circle>',\r\n    'mouse-pointer': '<path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"></path><path d=\"M13 13l6 6\"></path>',\r\n    'move': '<polyline points=\"5 9 2 12 5 15\"></polyline><polyline points=\"9 5 12 2 15 5\"></polyline><polyline points=\"15 19 12 22 9 19\"></polyline><polyline points=\"19 9 22 12 19 15\"></polyline><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"22\"></line>',\r\n    'music': '<path d=\"M9 18V5l12-2v13\"></path><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><circle cx=\"18\" cy=\"16\" r=\"3\"></circle>',\r\n    'navigation-2': '<polygon points=\"12 2 19 21 12 17 5 21 12 2\"></polygon>',\r\n    'navigation': '<polygon points=\"3 11 22 2 13 21 11 13 3 11\"></polygon>',\r\n    'octagon': '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon>',\r\n    'package': '<line x1=\"16.5\" y1=\"9.4\" x2=\"7.5\" y2=\"4.21\"></line><path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\r\n    'paperclip': '<path d=\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48\"></path>',\r\n    'pause-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"10\" y1=\"15\" x2=\"10\" y2=\"9\"></line><line x1=\"14\" y1=\"15\" x2=\"14\" y2=\"9\"></line>',\r\n    'pause': '<rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"></rect><rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"></rect>',\r\n    'pen-tool': '<path d=\"M12 19l7-7 3 3-7 7-3-3z\"></path><path d=\"M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z\"></path><path d=\"M2 2l7.586 7.586\"></path><circle cx=\"11\" cy=\"11\" r=\"2\"></circle>',\r\n    'percent': '<line x1=\"19\" y1=\"5\" x2=\"5\" y2=\"19\"></line><circle cx=\"6.5\" cy=\"6.5\" r=\"2.5\"></circle><circle cx=\"17.5\" cy=\"17.5\" r=\"2.5\"></circle>',\r\n    'phone-call': '<path d=\"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone-forwarded': '<polyline points=\"19 1 23 5 19 9\"></polyline><line x1=\"15\" y1=\"5\" x2=\"23\" y2=\"5\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone-incoming': '<polyline points=\"16 2 16 8 22 8\"></polyline><line x1=\"23\" y1=\"1\" x2=\"16\" y2=\"8\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone-missed': '<line x1=\"23\" y1=\"1\" x2=\"17\" y2=\"7\"></line><line x1=\"17\" y1=\"1\" x2=\"23\" y2=\"7\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone-off': '<path d=\"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91\"></path><line x1=\"23\" y1=\"1\" x2=\"1\" y2=\"23\"></line>',\r\n    'phone-outgoing': '<polyline points=\"23 7 23 1 17 1\"></polyline><line x1=\"16\" y1=\"8\" x2=\"23\" y2=\"1\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone': '<path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'pie-chart': '<path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"></path><path d=\"M22 12A10 10 0 0 0 12 2v10z\"></path>',\r\n    'play-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polygon points=\"10 8 16 12 10 16 10 8\"></polygon>',\r\n    'play': '<polygon points=\"5 3 19 12 5 21 5 3\"></polygon>',\r\n    'plus-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'plus-square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'plus': '<line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>',\r\n    'pocket': '<path d=\"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z\"></path><polyline points=\"8 10 12 14 16 10\"></polyline>',\r\n    'power': '<path d=\"M18.36 6.64a9 9 0 1 1-12.73 0\"></path><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"12\"></line>',\r\n    'printer': '<polyline points=\"6 9 6 2 18 2 18 9\"></polyline><path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"></path><rect x=\"6\" y=\"14\" width=\"12\" height=\"8\"></rect>',\r\n    'radio': '<circle cx=\"12\" cy=\"12\" r=\"2\"></circle><path d=\"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14\"></path>',\r\n    'refresh-ccw': '<polyline points=\"1 4 1 10 7 10\"></polyline><polyline points=\"23 20 23 14 17 14\"></polyline><path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"></path>',\r\n    'refresh-cw': '<polyline points=\"23 4 23 10 17 10\"></polyline><polyline points=\"1 20 1 14 7 14\"></polyline><path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\"></path>',\r\n    'repeat': '<polyline points=\"17 1 21 5 17 9\"></polyline><path d=\"M3 11V9a4 4 0 0 1 4-4h14\"></path><polyline points=\"7 23 3 19 7 15\"></polyline><path d=\"M21 13v2a4 4 0 0 1-4 4H3\"></path>',\r\n    'rewind': '<polygon points=\"11 19 2 12 11 5 11 19\"></polygon><polygon points=\"22 19 13 12 22 5 22 19\"></polygon>',\r\n    'rotate-ccw': '<polyline points=\"1 4 1 10 7 10\"></polyline><path d=\"M3.51 15a9 9 0 1 0 2.13-9.36L1 10\"></path>',\r\n    'rotate-cw': '<polyline points=\"23 4 23 10 17 10\"></polyline><path d=\"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"></path>',\r\n    'rss': '<path d=\"M4 11a9 9 0 0 1 9 9\"></path><path d=\"M4 4a16 16 0 0 1 16 16\"></path><circle cx=\"5\" cy=\"19\" r=\"1\"></circle>',\r\n    'save': '<path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path><polyline points=\"17 21 17 13 7 13 7 21\"></polyline><polyline points=\"7 3 7 8 15 8\"></polyline>',\r\n    'scissors': '<circle cx=\"6\" cy=\"6\" r=\"3\"></circle><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\"></line><line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\"></line><line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\"></line>',\r\n    'search': '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>',\r\n    'send': '<line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>',\r\n    'server': '<rect x=\"2\" y=\"2\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect><rect x=\"2\" y=\"14\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect><line x1=\"6\" y1=\"6\" x2=\"6.01\" y2=\"6\"></line><line x1=\"6\" y1=\"18\" x2=\"6.01\" y2=\"18\"></line>',\r\n    'settings': '<circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>',\r\n    'share-2': '<circle cx=\"18\" cy=\"5\" r=\"3\"></circle><circle cx=\"6\" cy=\"12\" r=\"3\"></circle><circle cx=\"18\" cy=\"19\" r=\"3\"></circle><line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"></line><line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"></line>',\r\n    'share': '<path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"></line>',\r\n    'shield-off': '<path d=\"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18\"></path><path d=\"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'shield': '<path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>',\r\n    'shopping-bag': '<path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><path d=\"M16 10a4 4 0 0 1-8 0\"></path>',\r\n    'shopping-cart': '<circle cx=\"9\" cy=\"21\" r=\"1\"></circle><circle cx=\"20\" cy=\"21\" r=\"1\"></circle><path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>',\r\n    'shuffle': '<polyline points=\"16 3 21 3 21 8\"></polyline><line x1=\"4\" y1=\"20\" x2=\"21\" y2=\"3\"></line><polyline points=\"21 16 21 21 16 21\"></polyline><line x1=\"15\" y1=\"15\" x2=\"21\" y2=\"21\"></line><line x1=\"4\" y1=\"4\" x2=\"9\" y2=\"9\"></line>',\r\n    'sidebar': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"9\" y1=\"3\" x2=\"9\" y2=\"21\"></line>',\r\n    'skip-back': '<polygon points=\"19 20 9 12 19 4 19 20\"></polygon><line x1=\"5\" y1=\"19\" x2=\"5\" y2=\"5\"></line>',\r\n    'skip-forward': '<polygon points=\"5 4 15 12 5 20 5 4\"></polygon><line x1=\"19\" y1=\"5\" x2=\"19\" y2=\"19\"></line>',\r\n    'slack': '<path d=\"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z\"></path><path d=\"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"></path><path d=\"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z\"></path><path d=\"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z\"></path><path d=\"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z\"></path><path d=\"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"></path><path d=\"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z\"></path><path d=\"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z\"></path>',\r\n    'slash': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"4.93\" y1=\"4.93\" x2=\"19.07\" y2=\"19.07\"></line>',\r\n    'sliders': '<line x1=\"4\" y1=\"21\" x2=\"4\" y2=\"14\"></line><line x1=\"4\" y1=\"10\" x2=\"4\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"3\"></line><line x1=\"20\" y1=\"21\" x2=\"20\" y2=\"16\"></line><line x1=\"20\" y1=\"12\" x2=\"20\" y2=\"3\"></line><line x1=\"1\" y1=\"14\" x2=\"7\" y2=\"14\"></line><line x1=\"9\" y1=\"8\" x2=\"15\" y2=\"8\"></line><line x1=\"17\" y1=\"16\" x2=\"23\" y2=\"16\"></line>',\r\n    'smartphone': '<rect x=\"5\" y=\"2\" width=\"14\" height=\"20\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line>',\r\n    'smile': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M8 14s1.5 2 4 2 4-2 4-2\"></path><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\r\n    'speaker': '<rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\" ry=\"2\"></rect><circle cx=\"12\" cy=\"14\" r=\"4\"></circle><line x1=\"12\" y1=\"6\" x2=\"12.01\" y2=\"6\"></line>',\r\n    'square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>',\r\n    'star': '<polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>',\r\n    'stop-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\"></rect>',\r\n    'sun': '<circle cx=\"12\" cy=\"12\" r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line><line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>',\r\n    'sunrise': '<path d=\"M17 18a5 5 0 0 0-10 0\"></path><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"9\"></line><line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\"></line><line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\"></line><line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\"></line><line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\"></line><line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line><polyline points=\"8 6 12 2 16 6\"></polyline>',\r\n    'sunset': '<path d=\"M17 18a5 5 0 0 0-10 0\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"2\"></line><line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\"></line><line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\"></line><line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\"></line><line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\"></line><line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line><polyline points=\"16 5 12 9 8 5\"></polyline>',\r\n    'table': '<path d=\"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"></path>',\r\n    'tablet': '<rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line>',\r\n    'tag': '<path d=\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\"></path><line x1=\"7\" y1=\"7\" x2=\"7.01\" y2=\"7\"></line>',\r\n    'target': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"6\"></circle><circle cx=\"12\" cy=\"12\" r=\"2\"></circle>',\r\n    'terminal': '<polyline points=\"4 17 10 11 4 5\"></polyline><line x1=\"12\" y1=\"19\" x2=\"20\" y2=\"19\"></line>',\r\n    'thermometer': '<path d=\"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z\"></path>',\r\n    'thumbs-down': '<path d=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"></path>',\r\n    'thumbs-up': '<path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>',\r\n    'toggle-left': '<rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect><circle cx=\"8\" cy=\"12\" r=\"3\"></circle>',\r\n    'toggle-right': '<rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect><circle cx=\"16\" cy=\"12\" r=\"3\"></circle>',\r\n    'tool': '<path d=\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"></path>',\r\n    'trash-2': '<polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>',\r\n    'trash': '<polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>',\r\n    'trello': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><rect x=\"7\" y=\"7\" width=\"3\" height=\"9\"></rect><rect x=\"14\" y=\"7\" width=\"3\" height=\"5\"></rect>',\r\n    'trending-down': '<polyline points=\"23 18 13.5 8.5 8.5 13.5 1 6\"></polyline><polyline points=\"17 18 23 18 23 12\"></polyline>',\r\n    'trending-up': '<polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline><polyline points=\"17 6 23 6 23 12\"></polyline>',\r\n    'triangle': '<path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path>',\r\n    'truck': '<rect x=\"1\" y=\"3\" width=\"15\" height=\"13\"></rect><polygon points=\"16 8 20 8 23 11 23 16 16 16 16 8\"></polygon><circle cx=\"5.5\" cy=\"18.5\" r=\"2.5\"></circle><circle cx=\"18.5\" cy=\"18.5\" r=\"2.5\"></circle>',\r\n    'tv': '<rect x=\"2\" y=\"7\" width=\"20\" height=\"15\" rx=\"2\" ry=\"2\"></rect><polyline points=\"17 2 12 7 7 2\"></polyline>',\r\n    'twitch': '<path d=\"M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7\"></path>',\r\n    'twitter': '<path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path>',\r\n    'type': '<polyline points=\"4 7 4 4 20 4 20 7\"></polyline><line x1=\"9\" y1=\"20\" x2=\"15\" y2=\"20\"></line><line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"20\"></line>',\r\n    'umbrella': '<path d=\"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7\"></path>',\r\n    'underline': '<path d=\"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3\"></path><line x1=\"4\" y1=\"21\" x2=\"20\" y2=\"21\"></line>',\r\n    'unlock': '<rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect><path d=\"M7 11V7a5 5 0 0 1 9.9-1\"></path>',\r\n    'upload-cloud': '<polyline points=\"16 16 12 12 8 16\"></polyline><line x1=\"12\" y1=\"12\" x2=\"12\" y2=\"21\"></line><path d=\"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3\"></path><polyline points=\"16 16 12 12 8 16\"></polyline>',\r\n    'upload': '<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"17 8 12 3 7 8\"></polyline><line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>',\r\n    'user-check': '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><polyline points=\"17 11 19 13 23 9\"></polyline>',\r\n    'user-minus': '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>',\r\n    'user-plus': '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>',\r\n    'user-x': '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"18\" y1=\"8\" x2=\"23\" y2=\"13\"></line><line x1=\"23\" y1=\"8\" x2=\"18\" y2=\"13\"></line>',\r\n    'user': '<path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle>',\r\n    'users': '<path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"9\" cy=\"7\" r=\"4\"></circle><path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path><path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>',\r\n    'video-off': '<path d=\"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'video': '<polygon points=\"23 7 16 12 23 17 23 7\"></polygon><rect x=\"1\" y=\"5\" width=\"15\" height=\"14\" rx=\"2\" ry=\"2\"></rect>',\r\n    'voicemail': '<circle cx=\"5.5\" cy=\"11.5\" r=\"4.5\"></circle><circle cx=\"18.5\" cy=\"11.5\" r=\"4.5\"></circle><line x1=\"5.5\" y1=\"16\" x2=\"18.5\" y2=\"16\"></line>',\r\n    'volume-1': '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><path d=\"M15.54 8.46a5 5 0 0 1 0 7.07\"></path>',\r\n    'volume-2': '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><path d=\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"></path>',\r\n    'volume-x': '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><line x1=\"23\" y1=\"9\" x2=\"17\" y2=\"15\"></line><line x1=\"17\" y1=\"9\" x2=\"23\" y2=\"15\"></line>',\r\n    'volume': '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>',\r\n    'watch': '<circle cx=\"12\" cy=\"12\" r=\"7\"></circle><polyline points=\"12 9 12 12 13.5 13.5\"></polyline><path d=\"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83\"></path>',\r\n    'wifi-off': '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M16.72 11.06A10.94 10.94 0 0 1 19 12.55\"></path><path d=\"M5 12.55a10.94 10.94 0 0 1 5.17-2.39\"></path><path d=\"M10.71 5.05A16 16 0 0 1 22.58 9\"></path><path d=\"M1.42 9a15.91 15.91 0 0 1 4.7-2.88\"></path><path d=\"M8.53 16.11a6 6 0 0 1 6.95 0\"></path><line x1=\"12\" y1=\"20\" x2=\"12.01\" y2=\"20\"></line>',\r\n    'wifi': '<path d=\"M5 12.55a11 11 0 0 1 14.08 0\"></path><path d=\"M1.42 9a16 16 0 0 1 21.16 0\"></path><path d=\"M8.53 16.11a6 6 0 0 1 6.95 0\"></path><line x1=\"12\" y1=\"20\" x2=\"12.01\" y2=\"20\"></line>',\r\n    'wind': '<path d=\"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2\"></path>',\r\n    'x-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>',\r\n    'x-octagon': '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>',\r\n    'x-square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>',\r\n    'x': '<line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>',\r\n    'youtube': '<path d=\"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z\"></path><polygon points=\"9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02\"></polygon>',\r\n    'zap-off': '<polyline points=\"12.41 6.75 13 2 10.57 4.92\"></polyline><polyline points=\"18.57 12.91 21 10 15.66 10\"></polyline><polyline points=\"8 8 3 14 12 14 11 22 16 16\"></polyline><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'zap': '<polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"></polygon>',\r\n    'zoom-in': '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line><line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\"></line><line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\"></line>',\r\n    'zoom-out': '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line><line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\"></line>'\r\n};\r\n","import { __assign, __rest } from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport m from 'mithril';\r\nimport { Classes } from '../../_shared';\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner() {\r\n    }\r\n    Spinner.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var active = attrs.active, background = attrs.background, className = attrs.class, fill = attrs.fill, intent = attrs.intent, message = attrs.message, size = attrs.size, otherAttrs = __rest(attrs, [\"active\", \"background\", \"class\", \"fill\", \"intent\", \"message\", \"size\"]);\r\n        var content = [\r\n            m(\".\".concat(Classes.SPINNER_CONTENT), [\r\n                m(\".\".concat(Classes.SPINNER_ICON)),\r\n                message && m(\".\".concat(Classes.SPINNER_MESSAGE), message)\r\n            ])\r\n        ];\r\n        return m('', __assign(__assign({}, otherAttrs), { class: classnames(Classes.SPINNER, active && Classes.SPINNER_ACTIVE, background && Classes.SPINNER_BG, fill && Classes.SPINNER_FILL, intent && \"cui-\".concat(attrs.intent), size && \"cui-\".concat(attrs.size), className) }), content);\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n","import { Classes } from '.';\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\nexport function safeCall(func) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    if (isFunction(func)) {\r\n        return func.apply(void 0, args);\r\n    }\r\n}\r\nexport function getClosest(el, selector) {\r\n    if (el.matches(selector))\r\n        return el;\r\n    if (!Element.prototype.matches) {\r\n        Element.prototype.matches =\r\n            Element.prototype.msMatchesSelector ||\r\n                Element.prototype.webkitMatchesSelector ||\r\n                function (s) {\r\n                    var matches = (this.document || this.ownerDocument).querySelectorAll(s);\r\n                    var i = matches.length;\r\n                    while (--i >= 0 && matches.item(i) !== this) { }\r\n                    return i > -1;\r\n                };\r\n    }\r\n    for (; el && el !== document; el = el.parentNode) {\r\n        if (el.matches(selector))\r\n            return el;\r\n    }\r\n    return null;\r\n}\r\nexport function getScrollbarWidth() {\r\n    var el = document.createElement('div');\r\n    el.style.width = '100px';\r\n    el.style.height = '100px';\r\n    el.style.overflow = 'scroll';\r\n    el.style.position = 'absolute';\r\n    el.style.top = '-9999px';\r\n    document.body.appendChild(el);\r\n    var scrollbarWidth = el.offsetWidth - el.clientWidth;\r\n    document.body.removeChild(el);\r\n    return scrollbarWidth;\r\n}\r\nexport function hasScrollbar(el) {\r\n    return el.scrollHeight > window.innerHeight;\r\n}\r\nexport function elementIsOrContains(element, testElement) {\r\n    return element === testElement || element.contains(testElement);\r\n}\r\nexport function normalizeStyle(style) {\r\n    if (typeof style === 'string') {\r\n        var result = {};\r\n        var attributes = style.replace(/\\s/g, '').split(';');\r\n        for (var i = 0; i < attributes.length; i++) {\r\n            var entry = attributes[i].split(':');\r\n            result[entry.splice(0, 1)[0]] = entry.join(':');\r\n        }\r\n        return result;\r\n    }\r\n    else\r\n        return style;\r\n}\r\nexport function updateElementGroupPadding(containerEl, contentLeft, contentRight) {\r\n    if (!containerEl)\r\n        return;\r\n    var containerPadding = Math.floor(containerEl.clientHeight / 1.6);\r\n    if (contentLeft) {\r\n        var contentLeftEl = contentLeft.dom;\r\n        containerEl.style.paddingLeft = shouldAddPadding(contentLeftEl)\r\n            ? \"\".concat(contentLeftEl.clientWidth + containerPadding, \"px\")\r\n            : '';\r\n    }\r\n    else\r\n        containerEl.style.paddingLeft = '';\r\n    if (contentRight) {\r\n        var contentRightEl = contentRight.dom;\r\n        containerEl.style.paddingRight = shouldAddPadding(contentRightEl)\r\n            ? \"\".concat(contentRightEl.clientWidth + containerPadding, \"px\")\r\n            : '';\r\n    }\r\n    else\r\n        containerEl.style.paddingRight = '';\r\n}\r\nfunction shouldAddPadding(element) {\r\n    return element &&\r\n        !element.classList.contains(Classes.ICON) &&\r\n        !element.classList.contains(Classes.SPINNER) &&\r\n        !element.classList.contains(Classes.BUTTON_ICON);\r\n}\r\nexport function isNullOrEmpty(item) {\r\n    return item == null || item === '' || item === false;\r\n}\r\n","import m from 'mithril'\nimport './color.css'\n\nexport const Color = color =>\n  m('input[type=color]', {\n    value: LAUNCHPAD_COLORS[color],\n  })\n\nexport const ColorSelector = state =>\n  m('.colors', {}, [\n    Object.keys(state.colors).map((k, n) =>\n      m('span.color', {}, [m('p.type', {}, k), Color(state.colors[k])])\n    ),\n  ])\n\nexport const LAUNCHPAD_COLORS = [\n  '#000000',\n  '#b3b3b3',\n  '#dddddd',\n  '#ffffff',\n  '#ffb3b3 ',\n  '#ff6161',\n  '#dd6161',\n  '#b36161',\n  '#fff3d5',\n  '#ffb361',\n  '#dd8c61',\n  '#b37661',\n  '#ffeea1',\n  '#ffff61',\n  '#dddd61',\n  '#b3b361',\n  '#ddffa1',\n  '#c2ff61',\n  '#a1dd61',\n  '#81b361',\n  '#c2ffb3',\n  '#61ff61',\n  '#61dd61',\n  '#61b361',\n  '#c2ffc2',\n  '#61ff8c',\n  '#61dd76',\n  '#61b36b',\n  '#c2ffcc',\n  '#61ffcc',\n  '#61dda1',\n  '#61b381',\n  '#c2fff3',\n  '#61ffe9',\n  '#61ddc2',\n  '#61b396',\n  '#c2f3ff',\n  '#61eeff',\n  '#61c7dd',\n  '#61a1b3',\n  '#c2ddff',\n  '#61c7ff',\n  '#61a1dd',\n  '#6181b3',\n  '#a18cff',\n  '#6161ff',\n  '#6161dd',\n  '#6161b3',\n  '#ccb3ff',\n  '#a161ff',\n  '#8161dd',\n  '#7761B2',\n  '#FFB2FE',\n  '#FF60FE',\n  '#DD60DC',\n  '#B360B2',\n  '#FEB2D5',\n  '#FF60C3',\n  '#DD60A0',\n  '#B3608D',\n  '#FF7760',\n  '#E8B360',\n  '#DDC360',\n  '#A1A161',\n  '#60B261',\n  '#61B28D',\n  '#608CD4',\n  '#6060FF',\n  '#60B2B3',\n  '#8C60F2',\n  '#CDB3C3',\n  '#8C7780',\n  '#FF6060',\n  '#F2FFA0',\n  '#EEFD60',\n  '#CCFE60',\n  '#77DC61',\n  '#60FFCD',\n  '#61E8FE',\n  '#61A0FE',\n  '#8D61FE',\n  '#CD61FD',\n  '#EF8CDC',\n  '#A17760',\n  '#FEA160',\n  '#DCF861',\n  '#D5FF8C',\n  '#60FF60',\n  '#B3FEA0',\n  '#CDFDD5',\n  '#B3FFF6',\n  '#CDE4FE',\n  '#A1C2F6',\n  '#D4C2F8',\n  '#F88DFF',\n  '#FE61CD',\n  '#FEC361',\n  '#F3EF60',\n  '#E5FE61',\n  '#DDCD60',\n  '#B2A061',\n  '#61BA76',\n  '#77C38C',\n  '#8080A1',\n  '#808CCD',\n  '#CCAA81',\n  '#DD6161',\n  '#F8B3A0',\n  '#F8BA77',\n  '#FEF28C',\n  '#E8F9A0',\n  '#D4EF76',\n  '#8080A1',\n  '#F8F9D4',\n  '#DCFDE4',\n  '#E9E8FE',\n  '#E5D4FF',\n  '#B3B3B3',\n  '#D5D5D5',\n  '#F9FFFF',\n  '#E86160',\n  '#AA6060',\n  '#81F760',\n  '#60B261',\n  '#F3EF60',\n  '#B2A061',\n  '#EEC360',\n  '#C37761',\n]\n","import m from 'mithril'\nimport { Connector, ConnectionPage } from './Connector'\nimport { Button } from 'construct-ui'\n\nexport const Home = (state, actions) => ({\n  view: () =>\n    m('#home', {}, [\n      m('h1#home', {}, 'LaunchChess.com'),\n      m('h4#home', {}, [\n        'Play chess on your ',\n        m(\n          'a',\n          { href: 'https://novationmusic.com/en/launch/' },\n          'Novation Launchpad'\n        ),\n      ]),\n      m('br'),\n      m('', {}, [\n        'More details at the project homepage: ',\n        m(\n          'a',\n          { href: 'https://quaternion.media/launchchess' },\n          'quaternion.media/launchchess'\n        ),\n      ]),\n      m('br'),\n      m(ConnectionPage(state, actions)),\n      m('br'),\n      state.connected\n        ? [\n            'Connected!',\n            m('br'),\n            m(Button, {\n              label: 'play over the board',\n              onclick: e => m.route.set('/otb'),\n            }),\n            m(Button, {\n              label: 'play over the internet',\n              onclick: e => m.route.set('/games'),\n            }),\n          ]\n        : null,\n    ]),\n})\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$interopDefault","a","__esModule","default","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$65c99708a69e8e0e$var$Vnode","tag","key","attrs","children","text","dom","domSize","undefined","state","events","instance","normalize","node","Array","isArray","normalizeChildren","String","input","length","isKeyed","i","TypeError","$8JOml","html","$jPPUy","vnode","apply","arguments","start","push","$8be4e955ae324471$var$PromisePolyfill","executor","resolvers","rejectors","resolveCurrent","handler","rejectCurrent","_instance","callAsync","setImmediate","setTimeout","list","shouldAbsorb","execute","value","then","executeOnce","bind","console","error","retry","e","runs","run","fn","onerror","prototype","onFulfilled","onRejection","resolveNext","rejectNext","handle","callback","next","promise","resolve","reject","catch","finally","reason","all","total","count","values","consume","race","$window","currentRedraw","currentDOM","$doc","document","nameSpace","svg","math","getNameSpace","xmlns","checkState","original","callHook","activeElement","createNodes","parent","vnodes","end","hooks","nextSibling","ns","createNode","initLifecycle","createText","createHTML","createFragment","createElement","createComponent","createTextNode","insertNode","possibleParents","caption","thead","tbody","tfoot","tr","th","td","colgroup","col","child","match","temp","innerHTML","firstChild","childNodes","fragment","createDocumentFragment","appendChild","is","element","createElementNS","setAttrs","maybeSetContentEditable","setLateSelectAttrs","initComponent","sentinel","view","Object","create","$$reentrantLock$$","updateNodes","old","removeNodes","isOldKeyed","oldStart","map","o","v","oe","ve","topSibling","oldEnd","updateNode","getNextSibling","moveNodes","lisIndices","originalNextSibling","vnodesLength","oldIndices","li","pos","matched","getKeyMap","oldIndex","makeLisIndices","commonLength","removeNode","oldTag","shouldNotUpdate","updateLifecycle","updateText","updateHTML","updateFragment","updateElement","updateComponent","toString","nodeValue","removeHTML","updateAttrs","lisTemp","result","u","il","j","c","frag","moveChildToFrag","parentNode","insertBefore","contenteditable","contentEditable","content","stateResult","attrsResult","mask","onbeforeremove","reallyRemove","onremove","removeChild","type","setAttribute","isFileInput","setAttr","isLifecycleMethod","isFormAttribute","updateEvent","slice","setAttributeNS","updateStyle","hasPropertyKey","removeAttribute","removeAttr","selectedIndex","nsLastIndex","indexOf","normalized","warn","val","attr","uppercaseRegex","toLowerCase","capital","normalizeKey","replace","style","cssText","setProperty","removeProperty","EventDict","_","addEventListener","removeEventListener","source","oninit","oncreate","onupdate","onbeforeupdate","force","handleEvent","ev","currentTarget","redraw","preventDefault","stopPropagation","contains","prevRedraw","prevDOM","active","namespace","namespaceURI","textContent","focus","render","schedule","subscriptions","pending","offset","sync","mount","root","component","index","splice","$dVi4w","$iMmVV","Promise","oncompletion","callbackCount","PromiseProxy","makeRequest","factory","url","args","params","data","background","complete","wrap","constructor","hasHeader","name","headers","__proto__","request","replacedAbort","method","toUpperCase","body","assumeJSON","serialize","JSON","FormData","URLSearchParams","responseType","extract","xhr","XMLHttpRequest","aborted","isTimeout","abort","open","async","user","password","setRequestHeader","deserialize","withCredentials","timeout","onreadystatechange","target","readyState","message","success","status","test","response","parse","responseText","completeErrorResponse","ontimeout","config","send","stringify","jsonp","callbackName","Math","round","random","script","src","encodeURIComponent","callbackKey","documentElement","$4TqxV","$h7Myx","template","SyntaxError","queryIndex","hashIndex","queryEnd","pathEnd","path","query","resolved","m","variadic","newQueryIndex","newHashIndex","newQueryEnd","newPathEnd","querystring","object","destructure","join","assign","hasOwnProperty","$gA8yJ","$03gNt","requestAnimationFrame","$fMiaA","$9JY0H","$rLlma","$7QD8F","$g0xgq","$acbf8b64f436baf6$var$sentinel","$acbf8b64f436baf6$var$decodeURIComponentSave","decodeURIComponent","mountRedraw","compiled","fallbackRoute","currentPath","lastUpdate","p","scheduled","ready","currentResolver","RouterRoot","fireAsync","resolveRoute","SKIP","route","prefix","location","hash","search","pathname","concat","setPath","loop","check","payload","matchedRoute","localComp","update","comp","onmatch","history","options","title","replaceState","pushState","href","defaultRoute","routes","keys","defaultData","some","ReferenceError","set","get","Link","onclick","selector","disabled","Boolean","defaultPrevented","button","which","ctrlKey","metaKey","shiftKey","altKey","param","$b7c96ede0f95238b$var$selectorParser","$b7c96ede0f95238b$var$selectorCache","$b7c96ede0f95238b$var$isEmpty","$b7c96ede0f95238b$var$compileSelector","classes","exec","attrValue","className","$b7c96ede0f95238b$var$execSelector","hasClass","class","newAttrs","$b7c96ede0f95238b$var$hyperscript","$c0EvV","$kRquH","$f2fd4f186228b319$var$decodeURIComponentSave","str","string","charAt","entries","split","counters","entry","levels","cursor","pop","level","nextLevel","isNumber","isNaN","parseInt","desc","getOwnPropertyDescriptor","templateData","templateKeys","regexp","RegExp","extra","k","r","$ba7672f68f21621e$var$magic","extras","Stream","lift","scan","merge","combine","scanMerge","warnedHalt","dependentStreams","dependentFns","stream","_changing","_state","forEach","s","createEnd","_parents","_unregisterChild","_map","ignoreInitial","toJSON","x","s1","s2","childIndex","defineProperty","streams","every","changed","mappers","endStream","mapper","acc","origin","tuples","seed","tuple","log","$17tgv","EventEmitter","eventMap","eventsSuspended","addListener","t","n","ANY_EVENT","Listener","prepend","unshift","addOneTimeListener","remaining","Symbol","for","hasListener","filter","eventNames","getListeners","suspendEvent","suspended","unsuspendEvent","getListenerCount","emit","context","remove","removeListener","waitFor","duration","clearTimeout","eventCount","event","Enumerations","MIDI_CHANNEL_MESSAGES","validation","CHANNEL_MESSAGES","noteoff","noteon","keyaftertouch","controlchange","programchange","channelaftertouch","pitchbend","CHANNEL_NUMBERS","MIDI_CHANNEL_NUMBERS","CHANNEL_MODE_MESSAGES","allsoundoff","resetallcontrollers","localcontrol","allnotesoff","omnimodeoff","omnimodeon","monomodeon","polymodeon","MIDI_CHANNEL_MODE_MESSAGES","MIDI_CONTROL_CHANGE_MESSAGES","bankselectcoarse","modulationwheelcoarse","breathcontrollercoarse","controller3","footcontrollercoarse","portamentotimecoarse","dataentrycoarse","volumecoarse","balancecoarse","controller9","pancoarse","expressioncoarse","effectcontrol1coarse","effectcontrol2coarse","controller14","controller15","generalpurposeslider1","generalpurposeslider2","generalpurposeslider3","generalpurposeslider4","controller20","controller21","controller22","controller23","controller24","controller25","controller26","controller27","controller28","controller29","controller30","controller31","bankselectfine","modulationwheelfine","breathcontrollerfine","controller35","footcontrollerfine","portamentotimefine","dataentryfine","volumefine","balancefine","controller41","panfine","expressionfine","effectcontrol1fine","effectcontrol2fine","controller46","controller47","controller48","controller49","controller50","controller51","controller52","controller53","controller54","controller55","controller56","controller57","controller58","controller59","controller60","controller61","controller62","controller63","holdpedal","portamento","sustenutopedal","softpedal","legatopedal","hold2pedal","soundvariation","resonance","soundreleasetime","soundattacktime","brightness","soundcontrol6","soundcontrol7","soundcontrol8","soundcontrol9","soundcontrol10","generalpurposebutton1","generalpurposebutton2","generalpurposebutton3","generalpurposebutton4","controller84","controller85","controller86","controller87","controller88","controller89","controller90","reverblevel","tremololevel","choruslevel","celestelevel","phaserlevel","databuttonincrement","databuttondecrement","nonregisteredparametercoarse","nonregisteredparameterfine","registeredparametercoarse","registeredparameterfine","controller102","controller103","controller104","controller105","controller106","controller107","controller108","controller109","controller110","controller111","controller112","controller113","controller114","controller115","controller116","controller117","controller118","controller119","CONTROL_CHANGE_MESSAGES","number","description","position","REGISTERED_PARAMETERS","pitchbendrange","channelfinetuning","channelcoarsetuning","tuningprogram","tuningbank","modulationrange","azimuthangle","elevationangle","gain","distanceratio","maximumdistance","maximumdistancegain","referencedistanceratio","panspreadangle","rollangle","MIDI_REGISTERED_PARAMETERS","SYSTEM_MESSAGES","sysex","timecode","songposition","songselect","tunerequest","tuningrequest","sysexend","clock","continue","stop","activesensing","reset","midimessage","unknownsystemmessage","MIDI_SYSTEM_MESSAGES","CHANNEL_EVENTS","Note","wm","defaults","note","attack","release","rawAttack","Utilities","from7bitToFloat","rawRelease","Number","isInteger","identifier","toNoteIdentifier","_name","_accidental","_octave","getNoteDetails","accidental","octave","includes","_duration","parseFloat","RangeError","_attack","_release","fromFloatTo7Bit","toNoteNumber","getOffsetNumber","min","max","C","D","E","F","G","A","B","startsWith","sanitizeChannels","toTimestamp","substring","time","guessNoteNumber","trim","floor","buildNote","octaveOffset","buildNoteArray","fromMsbLsbToFloat","fromFloatToMsbLsb","msb","lsb","offsetNumber","getPropertyByValue","find","getCcNameByNumber","getCcNumberByName","getChannelModeByNumber","isNode","versions","isBrowser","OutputChannel","_output","_number","_octaveOffset","destroy","output","sendKeyAftertouch","useRawValue","rawValue","sendControlChange","_selectNonRegisteredParameter","_deselectRegisteredParameter","_deselectNonRegisteredParameter","_selectRegisteredParameter","_setCurrentParameter","sendRpnDecrement","getOwnPropertyNames","sendRpnIncrement","playNote","sendNoteOn","sendNoteOff","rawVelocity","velocity","stopNote","sendChannelMode","sendOmniMode","sendChannelAftertouch","sendMasterTuning","sendRpnValue","sendModulationRange","sendNrpnValue","sendPitchBend","sendPitchBendRange","sendProgramChange","sendTuningBank","sendTuningProgram","sendLocalControl","sendAllNotesOff","sendAllSoundOff","sendResetAllControllers","sendPolyphonicMode","Output","_midiOutput","channels","onstatechange","_onStateChange","close","timestamp","port","connection","manufacturer","Message","rawData","Uint8Array","from","sendSysex","clear","sendTimecodeQuarterFrame","sendSongPosition","sendSongSelect","sendTuneRequest","sendClock","sendStart","sendContinue","sendStop","sendActiveSensing","sendReset","sendTuningRequest","setPitchBendRange","setRegisteredParameter","setModulationRange","setMasterTuning","setTuningProgram","setTuningBank","setNonRegisteredParameter","incrementRegisteredParameter","decrementRegisteredParameter","Forwarder","destinations","types","forward","channel","InputChannel","_input","_nrpnBuffer","_rpnBuffer","parameterNumberEventsEnabled","notesState","fill","_processMidiMessageEvent","_parseEventForStandardMessages","dataBytes","rawKey","controller","subtype","_parseChannelModeMessage","_isRpnOrNrpnController","_parseEventForParameterNumber","_dispatchParameterNumberEvent","parameterMsb","parameterLsb","parameter","getNoteState","nrpnEventsEnabled","statusByte","rawDataBytes","isChannelMessage","isSystemMessage","command","manufacturerId","Input","_midiInput","_forwarders","onmidimessage","_onMidiMessage","timeStamp","_parseEvent","song","on","addForwarder","removeForwarder","hasForwarder","navigator","jzz","eval","performance","performance1","WebMidi","interface","_inputs","_disconnectedInputs","_outputs","_disconnectedOutputs","_stateChangeQueue","enable","enabled","requestMIDIAccessFunction","software","requestMIDIAccess","_onInterfaceStateChange","_updateInputsAndOutputs","disable","_destroyInputsAndOutputs","getInputById","disconnected","inputs","getInputByName","getOutputByName","outputs","getOutputById","noteNameToNumber","getOctave","toMIDIChannels","getValidNoteArray","convertToTimestamp","_updateInputs","_updateOutputs","supported","sysexEnabled","now","version","flavour","MIDI_REGISTERED_PARAMETER","NOTES","$0d0d255e14f785b6$var$cachedSetTimeout","$0d0d255e14f785b6$var$cachedClearTimeout","$0d0d255e14f785b6$var$currentQueue","$0d0d255e14f785b6$var$process","$0d0d255e14f785b6$var$defaultSetTimout","$0d0d255e14f785b6$var$defaultClearTimeout","$0d0d255e14f785b6$var$runTimeout","fun","$0d0d255e14f785b6$var$runClearTimeout","marker","$0d0d255e14f785b6$var$queue","$0d0d255e14f785b6$var$draining","$0d0d255e14f785b6$var$queueIndex","$0d0d255e14f785b6$var$cleanUpNextTick","$0d0d255e14f785b6$var$drainQueue","len","$0d0d255e14f785b6$var$Item","array","$0d0d255e14f785b6$var$noop","nextTick","browser","env","argv","once","off","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$231519b62b676521$exports","$a520a033728d73e4$exports","trust","$de539031959a0ca1$exports","$231519b62b676521$var$m","Fragment","parseQueryString","buildQueryString","parsePathname","buildPathname","PromisePolyfill","censor","$3895aa91744b6895$exports","window1","NOT_DISABLED_NOT_RESET","ENTER","ESC","F1","F12","LEFT","RIGHT","TAB","autoReset","basic","closable","closableByDimmer","invokeOnCloseOff","frameless","defaultFocusOff","maintainFocus","maximizable","modal","movable","moveBounded","overflow","padding","pinnable","pinned","preventBodyShift","resizable","startMaximized","transition","transitionOff","tabbable","notifier","delay","closeButton","base","top","right","bottom","left","center","visible","hidden","glossary","ok","cancel","acccpt","deny","confirm","decline","maximize","restore","theme","preinit","postinit","openDialogs","addClass","classNames","removeClass","toBeRemoved","isRightToLeft","getComputedStyle","direction","getScrollTop","scrollTop","getScrollLeft","scrollLeft","clearContents","lastChild","copy","cpy","Date","getTime","ignoreCase","multiline","lastIndex","prop","destruct","initialize","elements","settings","__settings","__init","__internal","IsPassiveSupported","el","useCapture","passive","capture","transitions","delegate","createCloseEvent","dispatchEvent","eventType","dialog","scrollX","scrollY","usedKeys","reflow","tabindex","isSafari","userAgent","templates","dimmer","commands","header","footer","buttons","primary","auxiliary","resizeHandle","animationIn","animationOut","fixed","maximized","modeless","noSelection","noOverflow","noPadding","shake","unpinned","noTransition","alertify","setup","select","buttonsDefinition","b","ref","internal","isOpen","timerIn","timerOut","onshow","onclosing","onclose","onfocus","onmove","onmoved","onresize","onresized","onmaximize","onmaximized","onrestore","onrestored","resetHandler","beginMoveHandler","beginResizeHandler","bringToFrontHandler","modalClickHandler","buttonsClickHandler","commandsClickHandler","transitionInHandler","transitionOutHandler","display","container","pin","buttonTemplate","cloneNode","scope","opKey","onReset","beginMove","beginResize","bringToFront","handleTransitionInEvent","handleTransitionOutEvent","build","saveScrollPosition","restoreScrollPosition","scrollTo","ensureNoOverflow","requiresNoOverflow","isModal","isMaximized","topScroll","add","scrollHeight","clientHeight","updateTransition","oldValue","offsetWidth","updateTransitionOff","updateDisplayMode","unbindModelessEvents","updateAbsPositionFix","bindModelessEvents","updateBasicMode","updateFramelessMode","setFocus","optionUpdated","option","newValue","setHeader","updatePinned","updateClosable","updateMaximizable","updatePinnable","updateMovable","updateResizable","obj","op","items","found","triggerClose","triggerCallback","invokeOnClose","srcElement","isPinned","unpin","addAbsPositionFix","marginTop","marginLeft","marginRight","removeAbsPositionFix","bindClosableEvents","unbindClosableEvents","cancelClick","modalClickHandlerTS","callbackTS","cancelKeyup","idx","closeEvent","keyupHandler","keyCode","keydownHandler","resetTarget","querySelector","firstReset","lastReset","lastFocusedElement","relatedTarget","within","findTabbable","last","tabbables","querySelectorAll","reverse","offsetParent","offsetHeight","getClientRects","recycleTab","resetMove","resetResize","offsetX","offsetY","xProp","yProp","bounds","refreshTop","moveDelegate","moveElement","moveElementBounded","maxLeft","minLeft","maxTop","minTop","eventSrc","targetTouches","current","offsetLeft","offsetTop","move","endMove","bindMovableEvents","unbindMovableEvents","startingLeft","Nan","startingWidth","minWidth","handleOffset","resizeElement","pageRelative","X","Y","pageX","pageY","clientX","clientY","isRTL","height","width","diff","abs","minHeight","maxWidth","resize","endResize","bindResizableEvents","unbindResizableEvents","windowResize","bindEvents","unbindEvents","moveTo","y","resizeTo","w","h","regex","clientWidth","setting","settingUpdated","item","HTMLElement","setContent","showModal","show","hasAttribute","prepare","closeOthers","closeAll","openInstances","baseClass","updatePosition","pushInstance","pushed","popInstance","div","clickDelegate","getAttribute","dismiss","transitionDone","clearTimers","timer","transitionTimeout","clickHandler","transitionEndHandler","_content","_wait","wait","ondismiss","clicked","dismissOthers","dismissAll","except","clone","dialogs","extend","sub","get_dialog","Factory","transient","definition","notify","warning","main","_title","_message","_onok","onok","setMessage","label","returnValue","autoConfirm","task","clearAutoConfirm","clearInterval","startAutoConfirm","setInterval","_oncancel","oncancel","labels","defaultFocus","reverseButtons","autoOk","autoCancel","_value","define","amd","$ef84d931ff2e086e$export$b131c49b26d3f427","connected","$ef84d931ff2e086e$export$f4a3eee8e2b83eb0","chess","turn","$ef84d931ff2e086e$export$d9c8f749b6c1c3da","actions","flipBoard","$ef84d931ff2e086e$export$1c2b660b9d689dfc","influence","toggleInfluence","$ef84d931ff2e086e$export$2bbe6b4c555f9803","takeback","$ef84d931ff2e086e$export$a083a1058128fafe","$ef84d931ff2e086e$export$324fa128a6a8d5eb","grid","lightBoard","$ef84d931ff2e086e$export$72b8a1821a6af290","pieces","togglePieces","$ef84d931ff2e086e$export$46e774049323b8a5","incrementHistory","$ef84d931ff2e086e$export$99e4fe05899c2070","decrementHistory","$ef84d931ff2e086e$export$390d11d353c16e49","$ef84d931ff2e086e$export$4c260019440d418f","$ef84d931ff2e086e$export$69d4e78a69e95731","$17f1b9f8ce16014e$var$extendStatics","d","setPrototypeOf","$17f1b9f8ce16014e$export$18ce0697a983be9b","$17f1b9f8ce16014e$export$3c9a16f847548506","getOwnPropertySymbols","propertyIsEnumerable","SuppressedError","$e4aeb149e284da0d$export$4dbe3495bda74f11","ACTIVE","DISABLED","LOADING","BASIC","OUTLINED","ROUNDED","ALIGN","FLUID","COMPACT","BUTTON","BUTTON_LABEL","BUTTON_SUBLABEL","BUTTON_ICON","CONTROL","CONTROL_INDICATOR","ICON","ICON_ACTION","SPINNER","SPINNER_CONTENT","SPINNER_ICON","SPINNER_MESSAGE","SPINNER_FILL","SPINNER_ACTIVE","SPINNER_BG","SWITCH","$fcc1f848a67e05c0$exports","hasOwn","arg","argType","inner","$efcb3a78c45dc171$export$ef524c8d8e02fd08","BaseControl","_a","_b","containerAttrs","intent","size","typeClass","htmlAttrs","readonly","$1c56324fc02e153f$export$b5d5cf8927ab7262","Switch","$09c7c301f2267c48$exports","URL","$3f934752a4447ac8$export$a6c7ac8248d6e38a","$3f934752a4447ac8$export$b2e089eb3692b073","checked","username","$3f934752a4447ac8$export$d9b273488cd8ce6f","$3f934752a4447ac8$export$c84671f46d6a1ca","$6eb582f9081eb7e5$export$29814851e0aa981f","$6eb582f9081eb7e5$export$7a91b0fde7ec420f","$6eb582f9081eb7e5$export$4c32fd1f222ff2b0","$6eb582f9081eb7e5$export$ce32bc8c2a29bae6","$6eb582f9081eb7e5$export$54a167f801c5dba3","$6eb582f9081eb7e5$export$68d4c913908dc245","$6eb582f9081eb7e5$export$36a8946792f13ec9","$6eb582f9081eb7e5$export$42387107bb0d6206","$6eb582f9081eb7e5$export$1264a6620073cfaa","$6eb582f9081eb7e5$var$EMPTY","$6eb582f9081eb7e5$var$FLAGS","NORMAL","CAPTURE","BIG_PAWN","EP_CAPTURE","PROMOTION","KSIDE_CASTLE","QSIDE_CASTLE","$6eb582f9081eb7e5$var$BITS","$6eb582f9081eb7e5$var$Ox88","a8","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","h1","$6eb582f9081eb7e5$var$PAWN_OFFSETS","$6eb582f9081eb7e5$var$PIECE_OFFSETS","q","$6eb582f9081eb7e5$var$ATTACKS","$6eb582f9081eb7e5$var$RAYS","$6eb582f9081eb7e5$var$PIECE_MASKS","$6eb582f9081eb7e5$var$SYMBOLS","$6eb582f9081eb7e5$var$PROMOTIONS","$6eb582f9081eb7e5$var$RANK_1","$6eb582f9081eb7e5$var$RANK_2","$6eb582f9081eb7e5$var$RANK_7","$6eb582f9081eb7e5$var$RANK_8","$6eb582f9081eb7e5$var$SIDES","$6eb582f9081eb7e5$var$ROOKS","square","flag","$6eb582f9081eb7e5$var$SECOND_RANK","$6eb582f9081eb7e5$var$TERMINATION_MARKERS","$6eb582f9081eb7e5$var$rank","$6eb582f9081eb7e5$var$file","$6eb582f9081eb7e5$var$isDigit","$6eb582f9081eb7e5$var$algebraic","f","$6eb582f9081eb7e5$var$swapColor","color","$6eb582f9081eb7e5$export$d9e02ca3a6185312","fen","tokens","moveNumber","halfMoves","rows","sumFields","previousWasNumber","kings","$6eb582f9081eb7e5$var$getDisambiguator","moves","to","piece","ambiguities","sameRank","sameFile","ambigFrom","ambigTo","ambigPiece","$6eb582f9081eb7e5$var$addMove","captured","flags","promotion","$6eb582f9081eb7e5$var$inferPieceType","san","pieceType","matches","$6eb582f9081eb7e5$var$strippedSan","$6eb582f9081eb7e5$export$a4d6ea685c300d39","_board","_turn","_header","_kings","_epSquare","_halfMoves","_moveNumber","_history","_comments","_castling","load","keepHeaders","_updateSetup","removeHeader","adjustments","put","empty","castling","epSquare","bigPawnSquare","squares","_makeMove","isLegal","_isKingAttacked","_undoMove","sq","_updateCastlingRights","_updateEnPassantSquare","whiteKingInPlace","blackKingInPlace","startSquare","currentSquare","attackers","canCapture","_attacked","difference","blocked","isAttacked","attackedBy","isCheck","inCheck","isCheckmate","_moves","isStalemate","isInsufficientMaterial","bishops","numPieces","squareColor","sum","isThreefoldRepetition","positions","repetition","isDraw","isGameOver","verbose","_makePretty","_moveToSan","legal","forSquare","forPiece","us","them","firstSquare","lastSquare","singleSquare","castlingFrom","castlingTo","legalMoves","strict","moveObj","_moveFromSan","prettyMove","_push","undo","pgn","newline","headerExists","appendComment","moveString","comment","delimiter","reversedHistory","Result","strip","wrapComment","token","currentWidth","loadPgn","newlineChar","parsePgnHeader","headerObj","headerRegex","headerRegexResults","headerString","toHex","charCodeAt","fromHex","encodeComment","decodeComment","endsWith","ms","_match","bracket","semicolon","ravRegex","halfMove","disambiguator","cleanMove","overlyDisambiguated","ascii","symbol","perft","depth","nodes","uglyMove","prettyFlags","fromAlgebraic","toAlgebraic","lan","before","after","board","row","moveHistory","_pruneComments","currentComments","copyComment","getComment","setComment","deleteComment","getComments","deleteComments","setCastlingRights","rights","side","getCastlingRights","$236ba31c448bdb87$export$45f641c0a85ed846","$236ba31c448bdb87$var$squares","$236ba31c448bdb87$var$files","$236ba31c448bdb87$export$5fc67852ab417150","$236ba31c448bdb87$export$ef42e39072fd379","uci","$236ba31c448bdb87$export$a23e9f71e3b927c7","defenders","$236ba31c448bdb87$export$def19b3072191111","$236ba31c448bdb87$export$f784c029d2bce31b","res","rank","$b058e0cf7a9c3e39$exports","$d5ffb40ab7d69c90$export$7dc676b6dd72d281","dests","Map","$d5ffb40ab7d69c90$export$4282caeda4cf6c97","$d5ffb40ab7d69c90$export$5b50b356a8724b72","ground","orig","dest","$d5ffb40ab7d69c90$export$8aee836dd884f091","turnColor","hist","lastMove","$d5ffb40ab7d69c90$export$dfb56f6b9abe10bc","graph","Graph","diagonal","astar","heuristic","heuristics","pathTo","curr","getHeap","BinaryHeap","cleanDirty","manhattan","closest","openHeap","closestNode","currentNode","closed","neighbors","neighbor","isWall","gScore","g","getCost","beenVisited","visited","markDirty","rescoreElement","pos0","pos1","D2","sqrt","cleanNode","gridIn","GridNode","weight","scoreFunction","dirtyNodes","ret","rowDebug","l","graphString","fromNeighbor","sinkDown","bubbleUp","parentN","elemScore","child1Score","child2N","child1N","swap","child1","child2","$61fb775615801b9d$exports","$61fb775615801b9d$var$__extends","__extends","extendStatics","__","$61fb775615801b9d$var$__assign","__assign","$61fb775615801b9d$var$__awaiter","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","rejected","done","$61fb775615801b9d$var$__generator","__generator","sent","trys","ops","verb","iterator","$61fb775615801b9d$var$__spreadArrays","__spreadArrays","jl","$61fb775615801b9d$var$ErrorOAuth2","ErrorOAuth2","$61fb775615801b9d$var$ErrorUnknown","_super","ErrorUnknown","$61fb775615801b9d$var$ErrorNoAuthCode","ErrorNoAuthCode","$61fb775615801b9d$var$ErrorInvalidReturnedStateParam","ErrorInvalidReturnedStateParam","$61fb775615801b9d$var$ErrorInvalidJson","ErrorInvalidJson","$61fb775615801b9d$var$ErrorInvalidScope","ErrorInvalidScope","$61fb775615801b9d$var$ErrorInvalidRequest","ErrorInvalidRequest","$61fb775615801b9d$var$ErrorInvalidToken","ErrorInvalidToken","$61fb775615801b9d$var$ErrorAuthenticationGrant","ErrorAuthenticationGrant","$61fb775615801b9d$var$ErrorUnauthorizedClient","ErrorUnauthorizedClient","$61fb775615801b9d$var$ErrorAccessDenied","ErrorAccessDenied","$61fb775615801b9d$var$ErrorUnsupportedResponseType","ErrorUnsupportedResponseType","$61fb775615801b9d$var$ErrorServerError","ErrorServerError","$61fb775615801b9d$var$ErrorTemporarilyUnavailable","ErrorTemporarilyUnavailable","$61fb775615801b9d$var$ErrorAccessTokenResponse","ErrorAccessTokenResponse","$61fb775615801b9d$var$ErrorInvalidClient","ErrorInvalidClient","$61fb775615801b9d$var$ErrorInvalidGrant","ErrorInvalidGrant","$61fb775615801b9d$var$ErrorUnsupportedGrantType","ErrorUnsupportedGrantType","$61fb775615801b9d$var$ErrorWWWAuthenticate","realm","$61fb775615801b9d$var$toErrorClass","rawError","RawErrorToErrorClassMap","$61fb775615801b9d$var$fromWWWAuthenticateHeaderStringToObject","reduce","ErrorWWWAuthenticate","invalid_request","invalid_grant","unauthorized_client","access_denied","unsupported_response_type","invalid_scope","server_error","temporarily_unavailable","invalid_client","unsupported_grant_type","invalid_json","invalid_token","toErrorClass","fromWWWAuthenticateHeaderStringToObject","$61fb775615801b9d$var$HEADER_AUTHORIZATION","$61fb775615801b9d$var$HEADER_WWW_AUTHENTICATE","LOCALSTORAGE_ID","LOCALSTORAGE_STATE","RECOMMENDED_CODE_VERIFIER_LENGTH","RECOMMENDED_STATE_LENGTH","$61fb775615801b9d$var$PKCE_CHARSET","$61fb775615801b9d$var$OAuth2AuthCodePKCE","OAuth2AuthCodePKCE","recoverState","decorateFetchHTTPClient","fetch1","_this","rest","_i","isHTTPDecoratorActive","getAccessToken","configNew","has","onAccessTokenExpiry","exchangeRefreshTokenForAccessToken","isReturningFromAuthServer","extractParamFromUrl","localStorage","getItem","stateQueryParam","authorizationCode","hasAuthCodeBeenExchangedForAccessToken","setItem","setState","fetchAuthorizationCode","oneTimeParams","clientId","extraAuthorizationParams","redirectUrl","scopes","codeChallenge","codeVerifier","extraParameters","_c","assertStateAndConfigArePresent","generatePKCECodes","generateRandomState","authorizationUrl","objectToQueryString","accessToken","explicitlyExposedTokens","refreshToken","authCodeForAccessTokenRequest","isAuthorized","isAccessTokenExpired","exchangeAuthCodeForAccessToken","extraRefreshParams","tokenUrl","fetch","json","access_token","expires_in","refresh_token","tokensToExpose","expiry","refreshToken_1","fromEntries","tokenName","tokenValue","accessContext","onInvalidGrant","getGrantedScopes","isActive","codeOverride","_d","jsonPromise","base64urlEncode","base64","btoa","queryString","parts","paramIdx","dict","Uint32Array","crypto","getRandomValues","num","subtle","digest","TextEncoder","encode","buffer","binary","hashLength","byteLength","fromCharCode","lengthOfState","$c18e048c96a42e94$export$e45226161c660403","getReader","matcher","decoder","TextDecoder","buf","process","msg","read","chunk","decode","closePromise","$c88ba0be6ebdc294$export$f478a3382b69e867","$c88ba0be6ebdc294$export$54a06e3f4a159ad8","$c88ba0be6ebdc294$export$e80e8b1bea817f73","$c88ba0be6ebdc294$export$e360011a2b524b1a","protocol","host","$c88ba0be6ebdc294$export$334c29725a78c21d","oauth","refreshAccessToken","auth","authenticate","loggedIn","hasAuthCode","login","logout","httpClient","profile","me","getGames","openStream","fetchResponse","fetchBody","statusText","alert","$22788da0e2196326$export$2fb70d5e506c6bc2","removeItem","initAuth","$c6ddc35a8c0d5f38$exports","$a01e4d144b50218c$export$d02631cccf789723","$a01e4d144b50218c$export$7254cc27399e90bd","inputName","outputName","deviceId","deviceName","deviceType","layout","changeLayout","game","games","opponent","selectedSquare","selectedPiece","invert","animationDuration","animations","colors","$9066c94fd6c8e22f$export$56d196d2844d1ca1","$a01e4d144b50218c$export$b52183d5cfb26dc9","debug","lightMatrix","lightGame","clearAnimations","highlightAvailableMoves","$a01e4d144b50218c$export$81ce9b7e86ec18db","move_uci","$9066c94fd6c8e22f$export$9dae6f82820323cf","$9066c94fd6c8e22f$export$d265beb1ee5d4530","$9066c94fd6c8e22f$export$c6f17c29808f1b66","$9066c94fd6c8e22f$export$4b04cd3b2feae9ab","LaunchpadX","LaunchpadMk2","LaunchpadPro","LaunchpadMini","LaunchpadMiniMk3","LaunchpadS","$9066c94fd6c8e22f$export$776a922db93662cb","white","dim_white","black","moved","brown","$9066c94fd6c8e22f$export$a17043daf8ba543f","nToLaunch","launchToN","squareToN","nToSquare","toggleLive","mode","animate","highlightMove","from_square","to_square","animatePath","highlightCheck","highlightCheckmate","piece_moves","$9066c94fd6c8e22f$export$726be47e50c912d1","$9066c94fd6c8e22f$export$fef6b4cfd4f0cac0","$9066c94fd6c8e22f$export$e078d1c822b6d179","$9066c94fd6c8e22f$export$cb572084ac15dab5","$9066c94fd6c8e22f$export$ceb4afcefeff8d","$9066c94fd6c8e22f$export$20e6038b255aa41","$9066c94fd6c8e22f$export$4586496351d727fb","Launchpad","$6ff984c8b6ecdbd9$exports","$1e857081292cf176$exports","$6ff984c8b6ecdbd9$var$ndjsonStream","is_reader","cancellationRequest","ReadableStream","reader","data_buf","processResult","data_l","enqueue","lines","data_line","ndjsonStream","$134912d8b38e370d$exports","$134912d8b38e370d$var$runtime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","enumerable","configurable","writable","innerFn","outerFn","tryLocsList","protoGenerator","Generator","makeInvokeMethod","Context","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","invoke","record","__await","unwrapped","callInvokeWithMethodAndArg","doneResult","delegateResult","maybeInvokeDelegate","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","iter","skipTempReset","prev","rootRecord","rootEntry","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","$cae4a8b830b22bcf$export$74a0f09caf74d623","$cae4a8b830b22bcf$export$683788d28fb74d54","showInfluence","drawable","toggleOrientation","heatMap","colorMap","newGame","onInput","legal_moves","selectSquare","legal_move","makeMove","onCC","streamGame","sloppy","afterInit","initMidi","$bb75f90500322e40$export$21a94553ffa41578","$f00dad157732f88c$export$8f45430ccf837300","$f00dad157732f88c$export$3a444357c5f65f65","$f00dad157732f88c$export$d8e4e3952f325c95","$dbbfaf35dad95b1f$export$978f7ef4c67d166e","$dbbfaf35dad95b1f$export$ade7a30951d0bc54","$dbbfaf35dad95b1f$export$fe9f8b727818c0ae","$dbbfaf35dad95b1f$export$e2878eba51f22d11","$dbbfaf35dad95b1f$export$26773b74d67e09c2","$dbbfaf35dad95b1f$export$7c73462e0d25e514","$dbbfaf35dad95b1f$export$9dc4ecf953986f04","startAt","$dbbfaf35dad95b1f$export$a27c3a1c44ba515b","$dbbfaf35dad95b1f$export$e4884e1734dcd545","pos2","dx","dy","$dbbfaf35dad95b1f$export$e329b1a538c004fa","p1","p2","role","$dbbfaf35dad95b1f$export$2135ad75550a2ff4","asWhite","$dbbfaf35dad95b1f$export$d73ee8ef04f5226a","transform","$dbbfaf35dad95b1f$export$f8afaca97e230dc6","scale","$dbbfaf35dad95b1f$export$8cb512849e51eaf5","visibility","$dbbfaf35dad95b1f$export$33052595192f7117","$dbbfaf35dad95b1f$export$947a472b5b3020ba","$dbbfaf35dad95b1f$export$3d7cd8ed57263b30","tagName","$dbbfaf35dad95b1f$export$1c17f680299a31f7","$9edb68138fa5ce8d$var$diff","$9edb68138fa5ce8d$var$pawn","x1","y1","x2","y2","$9edb68138fa5ce8d$export$5584fb45fd3a6d08","xd","yd","$9edb68138fa5ce8d$var$bishop","$9edb68138fa5ce8d$var$rook","$9edb68138fa5ce8d$export$b9d1aa6d9cf991c6","$9edb68138fa5ce8d$var$king","rookFiles","canCastle","$9edb68138fa5ce8d$var$rookFilesOf","backrank","files","$9edb68138fa5ce8d$export$99ff1a176ab1ff90","mobility","$80f8b45278b0164a$export$6511920ae9f0cd34","$80f8b45278b0164a$export$e798007c48b456cd","orientation","animation","draggable","selected","$80f8b45278b0164a$export$20a063d1402ff7ff","delete","$80f8b45278b0164a$export$6503933b06013bb6","$80f8b45278b0164a$var$setPremove","meta","$80f8b45278b0164a$export$9e6f418e5ea6b92c","premovable","$80f8b45278b0164a$export$f92a111f74a3f7c7","unset","$80f8b45278b0164a$var$setPredrop","predroppable","pd","$80f8b45278b0164a$var$tryAutoCastle","autoCastle","king","origPos","destPos","rook","$80f8b45278b0164a$export$13f6ca6271343510","origPiece","destPiece","$80f8b45278b0164a$export$fe412c270a34f415","change","$80f8b45278b0164a$export$13886f9573facc29","dropNewPiece","$80f8b45278b0164a$var$baseUserMove","$80f8b45278b0164a$export$843c446e2e718822","$80f8b45278b0164a$export$a4ef2b0c3fa55ad2","holdTime","hold","metadata","premove","stats","$80f8b45278b0164a$var$canPremove","$80f8b45278b0164a$export$b2b9f46b948033b0","$80f8b45278b0164a$var$canDrop","afterNewPiece","predrop","$80f8b45278b0164a$var$canPredrop","$80f8b45278b0164a$export$6073914ea697a63e","selectable","dragged","$80f8b45278b0164a$var$isMovable","$80f8b45278b0164a$var$isPremovable","$80f8b45278b0164a$export$5a4818cec1656a71","customDests","castle","free","validPremoves","$80f8b45278b0164a$export$fe8f97248bbe2d04","$80f8b45278b0164a$export$d04320a93cdae73d","$80f8b45278b0164a$export$8efa9460c0cedd9e","validate","drop","$80f8b45278b0164a$export$e47a3d6268102bb5","$80f8b45278b0164a$export$fa6813432f753b0d","$80f8b45278b0164a$export$102bdd581884418b","file","$80f8b45278b0164a$export$6ee499125a88eb43","validSnapPos","validSnapCenters","validSnapDistances","closestSnapIndex","$80f8b45278b0164a$export$970133fdf67d86cb","$f37f4d2e14067e5f$export$59ff82fc918bd7e3","$f37f4d2e14067e5f$var$roles","$f37f4d2e14067e5f$var$letters","pawn","knight","bishop","queen","$f37f4d2e14067e5f$export$aafa59e2e03f2942","promoted","nb","$f37f4d2e14067e5f$export$68d8715fc104d294","$fe7eac34876cd925$export$d771543c4ed87064","$fe7eac34876cd925$var$deepMerge","$fe7eac34876cd925$export$8d21e34596265fa2","autoShapes","shapes","rookCastle","kingStartPos","$fe7eac34876cd925$var$isPlainObject","proto","$b81ba4ea6c3c4676$export$bd46b8ab3689edc4","mutation","$b81ba4ea6c3c4676$var$animate","$b81ba4ea6c3c4676$export$b3890eb0ae9dca99","$b81ba4ea6c3c4676$var$makePiece","$b81ba4ea6c3c4676$var$closer","sort","$b81ba4ea6c3c4676$var$computePlan","prevPieces","curP","preP","vector","anims","animedOrigs","fadings","missings","news","prePieces","newP","$b81ba4ea6c3c4676$var$step","cur","destroyed","redrawNow","frequency","ease","$b81ba4ea6c3c4676$var$easing","cfg","plan","alreadyRunning","$7a42cea72ae7e4e6$var$brushes","$7a42cea72ae7e4e6$export$b3571188c770cc5a","touches","brush","$7a42cea72ae7e4e6$var$eventBrush","snapToValidMove","defaultSnapToValidMove","$7a42cea72ae7e4e6$export$816e7b21815d9cf9","keyAtDomPos","mouseSq","$7a42cea72ae7e4e6$export$d947e5f4f4c48d48","$7a42cea72ae7e4e6$export$bd5df0f255a350f8","$7a42cea72ae7e4e6$var$addShape","$7a42cea72ae7e4e6$export$70b61ad426ddbe54","$7a42cea72ae7e4e6$export$42ffd38884aecdac","$7a42cea72ae7e4e6$var$onChange","modA","modB","getModifierState","sameShape","similar","onChange","$84ee20f15ef980fb$export$b3571188c770cc5a","trustAllEvents","isTrusted","previouslySelected","eraseOnClick","cancelable","blockTouchScroll","$84ee20f15ef980fb$var$pieceCloseTo","hadPremove","hadPredrop","stillSelected","$84ee20f15ef980fb$var$pieceElementByKey","started","autoDistance","originTarget","keyHasChanged","cgDragging","classList","ghost","$84ee20f15ef980fb$var$processDrag","radiusSq","pow","$84ee20f15ef980fb$export$65771a6862d302e4","newPiece","distance","$84ee20f15ef980fb$export$70b61ad426ddbe54","$84ee20f15ef980fb$export$d947e5f4f4c48d48","$84ee20f15ef980fb$export$bd5df0f255a350f8","eventPos","deleteOnDropOff","$84ee20f15ef980fb$var$removeDragElements","cgKey","$edda395882a62460$export$4971bcc2704b21ab","exploding","stage","$edda395882a62460$var$setStage","$77723e179126bec6$export$b3571188c770cc5a","redrawAll","getFen","setPieces","playPremove","playPredrop","cancelPremove","cancelPredrop","cancelMove","explode","setAutoShapes","setShapes","getKeyAtDomPos","dragNewPiece","unbind","$7b1d28100d027626$export$ebe90cb607ad99e","coordinates","ranksPosition","viewOnly","disableContextMenu","addPieceZIndex","pieceKey","highlight","showDests","showGhost","dropmode","brushes","green","opacity","lineWidth","red","blue","yellow","paleBlue","paleGreen","paleRed","paleGrey","purple","pink","hilite","prevSvgHash","$3eabe156c0ff4c04$export$a529cedf94de8dc","defs","$3eabe156c0ff4c04$export$c8a8987d4410bf2d","$3eabe156c0ff4c04$export$74da2cba014bdc09","stdDeviation","$3eabe156c0ff4c04$export$fb80b1b7d7777ee5","shapesEl","customsEl","curD","nonPieceAutoShapes","autoShape","sources","Set","$3eabe156c0ff4c04$var$pos2user","$3eabe156c0ff4c04$var$orient","$3eabe156c0ff4c04$var$moveAngle","shape","$3eabe156c0ff4c04$var$shapeHash","$3eabe156c0ff4c04$var$isShort","fullHash","sc","defsEl","$3eabe156c0ff4c04$var$syncDefs","$3eabe156c0ff4c04$var$syncShapes","$3eabe156c0ff4c04$var$renderShape","$3eabe156c0ff4c04$var$makeCustomBrush","modifiers","keysInDom","firstElementChild","nextElementSibling","$3eabe156c0ff4c04$var$renderMarker","syncables","customs","renderShape","hashesInDom","toRemove","elHash","isCustom","customSvg","shorten","$3eabe156c0ff4c04$var$pieceHash","$3eabe156c0ff4c04$var$modifiersHash","$3eabe156c0ff4c04$var$textHash","slots","svgs","cgHash","$3eabe156c0ff4c04$var$renderArrow","$3eabe156c0ff4c04$var$renderCircle","corner","$3eabe156c0ff4c04$var$renderLabel","$3eabe156c0ff4c04$var$labelCoords","at","widths","$3eabe156c0ff4c04$var$circleWidth","radius","stroke","$3eabe156c0ff4c04$var$opacity","cx","cy","renderLine","isHilite","$3eabe156c0ff4c04$var$arrowMargin","angle","atan2","xo","cos","yo","sin","$3eabe156c0ff4c04$var$lineWidth","blurred","$3eabe156c0ff4c04$var$filterBox","orient","markerWidth","markerHeight","refX","refY","labelSize","fontSize","cornerOff","labelEl","xScale","yScale","box","ceil","asSlot","PI","$3eabe156c0ff4c04$var$dist","mag","slot","$0a27377e74afbcfd$export$79188534738a92bf","autoPieces","toggle","viewBox","preserveAspectRatio","orientClass","ranksPositionClass","$0a27377e74afbcfd$var$renderCoords","elems","elem","$de1bc8749e875bbb$export$663103110d94aac9","$2d15ce003fd0519b$export$fc48d2ed06541843","onResize","boardEl","ResizeObserver","observe","onStart","$2d15ce003fd0519b$var$startDragOrDraw","$2d15ce003fd0519b$export$fdc77453278b0fa9","unbinds","$2d15ce003fd0519b$var$unbindable","$2d15ce003fd0519b$var$dragOrDraw","onend","onScroll","eventName","withDrag","withDraw","$c28505726f0fb896$export$b3890eb0ae9dca99","pieceAtKey","elPieceName","anim","fading","pMvdset","pMvd","sMvdset","sMvd","posToTranslate","curAnim","curDrag","$c28505726f0fb896$var$computeSquareClasses","samePieces","sameSquares","movedPieces","movedSquares","$c28505726f0fb896$var$isPieceNode","cgPiece","cgFading","cgAnimating","$c28505726f0fb896$var$pieceNameOf","zIndex","$c28505726f0fb896$var$posZIndex","$c28505726f0fb896$var$appendValue","$c28505726f0fb896$var$isSquareNode","cn","sk","translation","squareNode","pieceName","pieceNode","$c28505726f0fb896$var$removeNodes","$c28505726f0fb896$export$d62f185fd39aa98c","$c28505726f0fb896$export$f4467a4f41373bc7","getBoundingClientRect","ratio","devicePixelRatio","addDimensionsCssVarsTo","minZ","z","$c28505726f0fb896$var$addSquare","pDests","custom","klass","arr","$f6a46b1a152048c7$export$eb48cb918245ce33","$df86554080128aa6$export$b3890eb0ae9dca99","autoPieceEl","autoPieceShapes","$df86554080128aa6$var$hash","$df86554080128aa6$var$renderShape","$df86554080128aa6$export$d62f185fd39aa98c","cgScale","pieceEl","autoPiece","$ea2d34c1974d7d8b$export$6aaf0e4db08ad996","maybeState","prevUnbind","skipSvg","$ea2d34c1974d7d8b$var$debounceRedraw","insert","redrawing","$497352f3986651c5$export$dc537a3a3893548e","$6ed1fb4f245a8c05$export$d0d76c231f6d55bd","gameId","$6ed1fb4f245a8c05$export$e5446db5f37b1855","isMyTurn","$6ed1fb4f245a8c05$export$93fd0e768dbd3f80","listener","$6ed1fb4f245a8c05$var$config","$6ed1fb4f245a8c05$export$985739bfa5723e08","$6ed1fb4f245a8c05$export$6996ecd26284460f","$6ed1fb4f245a8c05$export$2616165974278734","$6ed1fb4f245a8c05$export$414a9ba52728302b","$6ed1fb4f245a8c05$export$a22305df274c15ec","$325b867be1548751$export$120c0e7b1bef3ec7","$325b867be1548751$export$5120f2d0b8d4cab8","affirm","$kWuxe","$48fb4da1ea4addfd$export$2e2bcd8739ae039","$8b880b011fadfe36$export$f04a61298a47a40f","Icon","$d8e6351f6bd19e38$export$7f7cbe89f1eacd2","Spinner","otherAttrs","$0e6f230737bfa6ad$export$c8733ae29fb53302","$5b35d122dacb9815$export$353f5b6fc5456de1","Button","align","compact","fluid","iconLeft","iconLeftAttrs","iconRight","iconRightAttrs","loading","outlined","rounded","sublabel","isAnchor","tabIndex","$ac5b3dd658baca4b$var$equals","$ac5b3dd658baca4b$export$b2278035370d6017","connect","disconnect","detectDevice","connectInput","connectOutput","launchpad","$b7ac0cf7b7632c81$export$83b795a96c5728f1","reloadInputs","initConnector","onunload","noteCallback","ccCallback","$ac5b3dd658baca4b$export$b042cfedf6ae225e","oninput","$ac5b3dd658baca4b$export$65f11d6055431773","$ac5b3dd658baca4b$export$4a18af0255371fd1","$ac5b3dd658baca4b$export$32b0ea48e47b356c","$ac5b3dd658baca4b$export$9e282393ab352bcd","$ac5b3dd658baca4b$export$f0de1ba241e121fd","$bd2f53e1120bdd66$export$b94310965bed44e6","$b7ac0cf7b7632c81$var$state","$b7ac0cf7b7632c81$export$e324594224ef24da","$b7ac0cf7b7632c81$var$main","getElementById","this","Infinity","semitoneOffset","ch","parsed","multiplied","pressure","noteOffOptions","fine","semitones","cents","nrpn","program","rpn","merged","data1","data2","numberedEvent","namedEvent","paramMsb","paramLsb","errorEvent","promises","portsChangedEvent"],"version":3,"file":"index.509fcfc2.js.map"}